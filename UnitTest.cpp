#include "pch.h"
#include "CppUnitTest.h"
#include "SDK.h"

using namespace Microsoft::VisualStudio::CppUnitTestFramework;

#define CHEAT_GEAR_CHECK_OFFSET(targetClass, varName, expectedOffset) \
	Assert::AreEqual(uint32_t(expectedOffset), uint32_t(offsetof(targetClass, varName)), L#targetClass" -> "#varName".")

#define CHEAT_GEAR_CHECK_SIZE(targetClass, expectedSize) \
	Assert::AreEqual(uint32_t(expectedSize), uint32_t(sizeof(targetClass)), L#targetClass" Has a wrong size.")

namespace CheatGearCppUnitTests
{
	TEST_CLASS(CheatGear)
	{
	public:

		// class UIpConnection : public UNetConnection
		TEST_METHOD(Class__OnlineSubsystemUtils__IpConnection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UIpConnection, UnknownData_OMIR, 0x1918);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UIpConnection, 0x1978);
		}

		// class UIpNetDriver : public UNetDriver
		TEST_METHOD(Class__OnlineSubsystemUtils__IpNetDriver)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UIpNetDriver, UnknownData_2IGK, 0x0699);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIpNetDriver, MaxPortCountToTry, 0x069C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIpNetDriver, UnknownData_QTX8, 0x06A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIpNetDriver, ServerDesiredSocketReceiveBufferBytes, 0x06B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIpNetDriver, ServerDesiredSocketSendBufferBytes, 0x06BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIpNetDriver, ClientDesiredSocketReceiveBufferBytes, 0x06C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIpNetDriver, ClientDesiredSocketSendBufferBytes, 0x06C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIpNetDriver, UnknownData_Z37V, 0x06C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UIpNetDriver, 0x06D8);
		}

		// class UAchievementBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__OnlineSubsystemUtils__AchievementBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAchievementBlueprintLibrary, 0x0028);
		}

		// class UAchievementQueryCallbackProxy : public UOnlineBlueprintCallProxyBase
		TEST_METHOD(Class__OnlineSubsystemUtils__AchievementQueryCallbackProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAchievementQueryCallbackProxy, OnSuccess, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAchievementQueryCallbackProxy, OnFailure, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAchievementQueryCallbackProxy, UnknownData_U8E0, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAchievementQueryCallbackProxy, 0x0060);
		}

		// class UAchievementWriteCallbackProxy : public UOnlineBlueprintCallProxyBase
		TEST_METHOD(Class__OnlineSubsystemUtils__AchievementWriteCallbackProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAchievementWriteCallbackProxy, OnSuccess, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAchievementWriteCallbackProxy, OnFailure, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAchievementWriteCallbackProxy, UnknownData_DR7F, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAchievementWriteCallbackProxy, 0x0078);
		}

		// class UConnectionCallbackProxy : public UOnlineBlueprintCallProxyBase
		TEST_METHOD(Class__OnlineSubsystemUtils__ConnectionCallbackProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UConnectionCallbackProxy, OnSuccess, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UConnectionCallbackProxy, OnFailure, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UConnectionCallbackProxy, UnknownData_8DTF, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UConnectionCallbackProxy, 0x0070);
		}

		// class UCreateSessionCallbackProxy : public UOnlineBlueprintCallProxyBase
		TEST_METHOD(Class__OnlineSubsystemUtils__CreateSessionCallbackProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCreateSessionCallbackProxy, OnSuccess, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCreateSessionCallbackProxy, OnFailure, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCreateSessionCallbackProxy, UnknownData_A213, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCreateSessionCallbackProxy, 0x0090);
		}

		// class UDestroySessionCallbackProxy : public UOnlineBlueprintCallProxyBase
		TEST_METHOD(Class__OnlineSubsystemUtils__DestroySessionCallbackProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDestroySessionCallbackProxy, OnSuccess, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDestroySessionCallbackProxy, OnFailure, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDestroySessionCallbackProxy, UnknownData_WDB5, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDestroySessionCallbackProxy, 0x0070);
		}

		// class UEndMatchCallbackProxy : public UOnlineBlueprintCallProxyBase
		TEST_METHOD(Class__OnlineSubsystemUtils__EndMatchCallbackProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEndMatchCallbackProxy, OnSuccess, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEndMatchCallbackProxy, OnFailure, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEndMatchCallbackProxy, UnknownData_O68K, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEndMatchCallbackProxy, 0x0078);
		}

		// class UEndTurnCallbackProxy : public UOnlineBlueprintCallProxyBase
		TEST_METHOD(Class__OnlineSubsystemUtils__EndTurnCallbackProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEndTurnCallbackProxy, OnSuccess, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEndTurnCallbackProxy, OnFailure, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEndTurnCallbackProxy, UnknownData_F9QK, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEndTurnCallbackProxy, 0x0070);
		}

		// class UFindSessionsCallbackProxy : public UOnlineBlueprintCallProxyBase
		TEST_METHOD(Class__OnlineSubsystemUtils__FindSessionsCallbackProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UFindSessionsCallbackProxy, OnSuccess, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFindSessionsCallbackProxy, OnFailure, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFindSessionsCallbackProxy, UnknownData_HEKA, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFindSessionsCallbackProxy, 0x0088);
		}

		// class UFindTurnBasedMatchCallbackProxy : public UOnlineBlueprintCallProxyBase
		TEST_METHOD(Class__OnlineSubsystemUtils__FindTurnBasedMatchCallbackProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UFindTurnBasedMatchCallbackProxy, OnSuccess, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFindTurnBasedMatchCallbackProxy, OnFailure, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFindTurnBasedMatchCallbackProxy, UnknownData_AHWO, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFindTurnBasedMatchCallbackProxy, 0x0080);
		}

		// class UInAppPurchaseCallbackProxy : public UObject
		TEST_METHOD(Class__OnlineSubsystemUtils__InAppPurchaseCallbackProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInAppPurchaseCallbackProxy, OnSuccess, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInAppPurchaseCallbackProxy, OnFailure, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInAppPurchaseCallbackProxy, UnknownData_FPQO, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInAppPurchaseCallbackProxy, 0x0080);
		}

		// class UInAppPurchaseQueryCallbackProxy : public UObject
		TEST_METHOD(Class__OnlineSubsystemUtils__InAppPurchaseQueryCallbackProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInAppPurchaseQueryCallbackProxy, OnSuccess, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInAppPurchaseQueryCallbackProxy, OnFailure, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInAppPurchaseQueryCallbackProxy, UnknownData_7J9H, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInAppPurchaseQueryCallbackProxy, 0x0090);
		}

		// class UInAppPurchaseRestoreCallbackProxy : public UObject
		TEST_METHOD(Class__OnlineSubsystemUtils__InAppPurchaseRestoreCallbackProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInAppPurchaseRestoreCallbackProxy, OnSuccess, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInAppPurchaseRestoreCallbackProxy, OnFailure, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInAppPurchaseRestoreCallbackProxy, UnknownData_0HQW, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInAppPurchaseRestoreCallbackProxy, 0x0090);
		}

		// class UJoinSessionCallbackProxy : public UOnlineBlueprintCallProxyBase
		TEST_METHOD(Class__OnlineSubsystemUtils__JoinSessionCallbackProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UJoinSessionCallbackProxy, OnSuccess, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UJoinSessionCallbackProxy, OnFailure, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UJoinSessionCallbackProxy, UnknownData_MGTQ, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UJoinSessionCallbackProxy, 0x0128);
		}

		// class ULeaderboardBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__OnlineSubsystemUtils__LeaderboardBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULeaderboardBlueprintLibrary, 0x0028);
		}

		// class ULeaderboardFlushCallbackProxy : public UObject
		TEST_METHOD(Class__OnlineSubsystemUtils__LeaderboardFlushCallbackProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULeaderboardFlushCallbackProxy, OnSuccess, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULeaderboardFlushCallbackProxy, OnFailure, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULeaderboardFlushCallbackProxy, UnknownData_FPSH, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULeaderboardFlushCallbackProxy, 0x0068);
		}

		// class ULeaderboardQueryCallbackProxy : public UObject
		TEST_METHOD(Class__OnlineSubsystemUtils__LeaderboardQueryCallbackProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULeaderboardQueryCallbackProxy, OnSuccess, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULeaderboardQueryCallbackProxy, OnFailure, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULeaderboardQueryCallbackProxy, UnknownData_XGUA, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULeaderboardQueryCallbackProxy, 0x0098);
		}

		// class ULogoutCallbackProxy : public UBlueprintAsyncActionBase
		TEST_METHOD(Class__OnlineSubsystemUtils__LogoutCallbackProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULogoutCallbackProxy, OnSuccess, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULogoutCallbackProxy, OnFailure, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULogoutCallbackProxy, UnknownData_7G8Y, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULogoutCallbackProxy, 0x0068);
		}

		// class AOnlineBeacon : public AActor
		TEST_METHOD(Class__OnlineSubsystemUtils__OnlineBeacon)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AOnlineBeacon, UnknownData_ACVW, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AOnlineBeacon, BeaconConnectionInitialTimeout, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AOnlineBeacon, BeaconConnectionTimeout, 0x0344);
			CHEAT_GEAR_CHECK_OFFSET(CG::AOnlineBeacon, NetDriver, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::AOnlineBeacon, UnknownData_75HY, 0x0350);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AOnlineBeacon, 0x0360);
		}

		// class AOnlineBeaconClient : public AOnlineBeacon
		TEST_METHOD(Class__OnlineSubsystemUtils__OnlineBeaconClient)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AOnlineBeaconClient, BeaconOwner, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::AOnlineBeaconClient, BeaconConnection, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::AOnlineBeaconClient, ConnectionState, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::AOnlineBeaconClient, UnknownData_5SKH, 0x0371);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AOnlineBeaconClient, 0x03B0);
		}

		// class AOnlineBeaconHost : public AOnlineBeacon
		TEST_METHOD(Class__OnlineSubsystemUtils__OnlineBeaconHost)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AOnlineBeaconHost, ListenPort, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::AOnlineBeaconHost, UnknownData_LL99, 0x0364);
			CHEAT_GEAR_CHECK_OFFSET(CG::AOnlineBeaconHost, ClientActors, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::AOnlineBeaconHost, UnknownData_TPO9, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AOnlineBeaconHost, 0x0418);
		}

		// class AOnlineBeaconHostObject : public AActor
		TEST_METHOD(Class__OnlineSubsystemUtils__OnlineBeaconHostObject)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AOnlineBeaconHostObject, BeaconTypeName, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AOnlineBeaconHostObject, ClientBeaconActorClass, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::AOnlineBeaconHostObject, ClientActors, 0x0350);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AOnlineBeaconHostObject, 0x0360);
		}

		// class UOnlineEngineInterfaceImpl : public UOnlineEngineInterface
		TEST_METHOD(Class__OnlineSubsystemUtils__OnlineEngineInterfaceImpl)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UOnlineEngineInterfaceImpl, VoiceSubsystemNameOverride, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UOnlineEngineInterfaceImpl, UnknownData_5SA4, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UOnlineEngineInterfaceImpl, 0x0128);
		}

		// class UOnlinePIESettings : public UDeveloperSettings
		TEST_METHOD(Class__OnlineSubsystemUtils__OnlinePIESettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UOnlinePIESettings, bOnlinePIEEnabled, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UOnlinePIESettings, UnknownData_HPZY, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::UOnlinePIESettings, Logins, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UOnlinePIESettings, 0x0050);
		}

		// class UOnlineSessionClient : public UOnlineSession
		TEST_METHOD(Class__OnlineSubsystemUtils__OnlineSessionClient)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UOnlineSessionClient, UnknownData_IADM, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UOnlineSessionClient, bIsFromInvite, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UOnlineSessionClient, bHandlingDisconnect, 0x0189);
			CHEAT_GEAR_CHECK_OFFSET(CG::UOnlineSessionClient, UnknownData_2YIN, 0x018A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UOnlineSessionClient, 0x0190);
		}

		// class APartyBeaconClient : public AOnlineBeaconClient
		TEST_METHOD(Class__OnlineSubsystemUtils__PartyBeaconClient)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::APartyBeaconClient, UnknownData_KY4T, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::APartyBeaconClient, DestSessionId, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::APartyBeaconClient, PendingReservation, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::APartyBeaconClient, RequestType, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::APartyBeaconClient, bPendingReservationSent, 0x0431);
			CHEAT_GEAR_CHECK_OFFSET(CG::APartyBeaconClient, bCancelReservation, 0x0432);
			CHEAT_GEAR_CHECK_OFFSET(CG::APartyBeaconClient, UnknownData_PVVB, 0x0433);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APartyBeaconClient, 0x0460);
		}

		// class APartyBeaconHost : public AOnlineBeaconHostObject
		TEST_METHOD(Class__OnlineSubsystemUtils__PartyBeaconHost)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::APartyBeaconHost, State, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::APartyBeaconHost, UnknownData_7B29, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::APartyBeaconHost, bLogoutOnSessionTimeout, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::APartyBeaconHost, UnknownData_N9JQ, 0x03B9);
			CHEAT_GEAR_CHECK_OFFSET(CG::APartyBeaconHost, SessionTimeoutSecs, 0x03BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::APartyBeaconHost, TravelSessionTimeoutSecs, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::APartyBeaconHost, UnknownData_SP37, 0x03C4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APartyBeaconHost, 0x03C8);
		}

		// class UPartyBeaconState : public UObject
		TEST_METHOD(Class__OnlineSubsystemUtils__PartyBeaconState)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPartyBeaconState, SessionName, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPartyBeaconState, NumConsumedReservations, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPartyBeaconState, MaxReservations, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPartyBeaconState, NumTeams, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPartyBeaconState, NumPlayersPerTeam, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPartyBeaconState, TeamAssignmentMethod, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPartyBeaconState, ReservedHostTeamNum, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPartyBeaconState, ForceTeamNum, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPartyBeaconState, bRestrictCrossConsole, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPartyBeaconState, UnknownData_VA8A, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPartyBeaconState, Reservations, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPartyBeaconState, UnknownData_S3EV, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPartyBeaconState, 0x0078);
		}

		// class UQuitMatchCallbackProxy : public UOnlineBlueprintCallProxyBase
		TEST_METHOD(Class__OnlineSubsystemUtils__QuitMatchCallbackProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuitMatchCallbackProxy, OnSuccess, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuitMatchCallbackProxy, OnFailure, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuitMatchCallbackProxy, UnknownData_JLML, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuitMatchCallbackProxy, 0x0070);
		}

		// class UShowLoginUICallbackProxy : public UBlueprintAsyncActionBase
		TEST_METHOD(Class__OnlineSubsystemUtils__ShowLoginUICallbackProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UShowLoginUICallbackProxy, OnSuccess, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShowLoginUICallbackProxy, OnFailure, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShowLoginUICallbackProxy, UnknownData_3WXS, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UShowLoginUICallbackProxy, 0x0060);
		}

		// class ATestBeaconClient : public AOnlineBeaconClient
		TEST_METHOD(Class__OnlineSubsystemUtils__TestBeaconClient)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATestBeaconClient, 0x03B0);
		}

		// class ATestBeaconHost : public AOnlineBeaconHostObject
		TEST_METHOD(Class__OnlineSubsystemUtils__TestBeaconHost)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATestBeaconHost, 0x0360);
		}

		// class UTurnBasedBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__OnlineSubsystemUtils__TurnBasedBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTurnBasedBlueprintLibrary, 0x0028);
		}

		// class UVoipListenerSynthComponent : public USynthComponent
		TEST_METHOD(Class__OnlineSubsystemUtils__VoipListenerSynthComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UVoipListenerSynthComponent, UnknownData_UDMX, 0x05D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVoipListenerSynthComponent, 0x05E0);
		}

		// class UPlayer : public UObject
		TEST_METHOD(Class__Engine__Player)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlayer, UnknownData_QCYO, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlayer, PlayerController, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlayer, CurrentNetSpeed, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlayer, ConfiguredInternetSpeed, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlayer, ConfiguredLanSpeed, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlayer, UnknownData_MC1D, 0x0044);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlayer, 0x0048);
		}

		// class UNetConnection : public UPlayer
		TEST_METHOD(Class__Engine__NetConnection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetConnection, Children, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetConnection, Driver, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetConnection, PackageMapClass, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetConnection, PackageMap, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetConnection, OpenChannels, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetConnection, SentTemporaries, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetConnection, ViewTarget, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetConnection, OwningActor, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetConnection, MaxPacket, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetConnection, UnknownData_B10N, 0x00A5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetConnection, PlayerId, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetConnection, UnknownData_0C2I, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetConnection, LastReceiveTime, 0x01E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetConnection, UnknownData_2QED, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetConnection, ChannelsToTick, 0x17C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetConnection, UnknownData_DH9W, 0x17D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNetConnection, 0x1918);
		}

		// class UNetDriver : public UObject
		TEST_METHOD(Class__Engine__NetDriver)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, UnknownData_5M8M, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, NetConnectionClassName, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, ReplicationDriverClassName, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, MaxDownloadSize, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, UnknownData_8OTP, 0x0055);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, NetServerMaxTickRate, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, MaxInternetClientRate, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, MaxClientRate, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, ServerTravelPause, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, SpawnPrioritySeconds, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, RelevantTimeout, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, KeepAliveTime, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, InitialConnectTimeout, 0x0074);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, ConnectionTimeout, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, TimeoutMultiplierForUnoptimizedBuilds, 0x007C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, bNoTimeouts, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, UnknownData_G90N, 0x0081);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, ServerConnection, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, ClientConnections, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, UnknownData_Q0SP, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, World, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, WorldPackage, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, UnknownData_HMK9, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, NetConnectionClass, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, ReplicationDriverClass, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, RoleProperty, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, RemoteRoleProperty, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, NetDriverName, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, UnknownData_7JEF, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, ActorChannelPool, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, UnknownData_IUO9, 0x01D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, Time, 0x01D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, UnknownData_UR5J, 0x01DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, ReplicationDriver, 0x0670);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetDriver, UnknownData_GALA, 0x0678);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNetDriver, 0x0698);
		}

		// class UBlueprintFunctionLibrary : public UObject
		TEST_METHOD(Class__Engine__BlueprintFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlueprintFunctionLibrary, 0x0028);
		}

		// class UOnlineBlueprintCallProxyBase : public UObject
		TEST_METHOD(Class__Engine__OnlineBlueprintCallProxyBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UOnlineBlueprintCallProxyBase, 0x0028);
		}

		// class UBlueprintAsyncActionBase : public UObject
		TEST_METHOD(Class__Engine__BlueprintAsyncActionBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprintAsyncActionBase, UnknownData_MP1C, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlueprintAsyncActionBase, 0x0030);
		}

		// class AActor : public UObject
		TEST_METHOD(Class__Engine__Actor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, UnknownData_XA1Z, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, PrimaryActorTick, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, RemoteRole, 0x0095);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, UnknownData_VIM7, 0x0096);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, ReplicatedMovement, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, InitialLifeSpan, 0x00CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, CustomTimeDilation, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, UnknownData_D74A, 0x00D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, AttachmentReplication, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, Owner, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, NetDriverName, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, Role, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, NetDormancy, 0x0129);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, SpawnCollisionHandlingMethod, 0x012A);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, AutoReceiveInput, 0x012B);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, InputPriority, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, InputComponent, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, NetCullDistanceSquared, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, NetTag, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, NetUpdateFrequency, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, MinNetUpdateFrequency, 0x0144);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, NetPriority, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, UnknownData_M34C, 0x014C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, Instigator, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, Children, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, RootComponent, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, ControllingMatineeActors, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, UnknownData_WTCA, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, Layers, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, ParentComponent, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, Tags, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, OnTakeAnyDamage, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, OnTakePointDamage, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, OnTakeRadialDamage, 0x01D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, OnActorBeginOverlap, 0x01E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, OnActorEndOverlap, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, OnBeginCursorOver, 0x0200);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, OnEndCursorOver, 0x0210);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, OnClicked, 0x0220);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, OnReleased, 0x0230);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, OnInputTouchBegin, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, OnInputTouchEnd, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, OnInputTouchEnter, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, OnInputTouchLeave, 0x0270);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, OnActorHit, 0x0280);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, OnDestroyed, 0x0290);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, OnEndPlay, 0x02A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, UnknownData_453K, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, InstanceComponents, 0x0310);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, BlueprintCreatedComponents, 0x0320);
			CHEAT_GEAR_CHECK_OFFSET(CG::AActor, UnknownData_VX4O, 0x0330);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AActor, 0x0338);
		}

		// class UOnlineEngineInterface : public UObject
		TEST_METHOD(Class__Engine__OnlineEngineInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UOnlineEngineInterface, 0x0028);
		}

		// class UDeveloperSettings : public UObject
		TEST_METHOD(Class__Engine__DeveloperSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeveloperSettings, UnknownData_4PNI, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDeveloperSettings, 0x0038);
		}

		// class UOnlineSession : public UObject
		TEST_METHOD(Class__Engine__OnlineSession)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UOnlineSession, 0x0028);
		}

		// class UActorComponent : public UObject
		TEST_METHOD(Class__Engine__ActorComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorComponent, UnknownData_8UXI, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorComponent, PrimaryComponentTick, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorComponent, ComponentTags, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorComponent, AssetUserData, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorComponent, UnknownData_NPQZ, 0x00BB);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorComponent, CreationMethod, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorComponent, UnknownData_ZIYX, 0x00BD);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorComponent, UCSModifiedProperties, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorComponent, OnComponentActivated, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorComponent, OnComponentDeactivated, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorComponent, UnknownData_C4QM, 0x00F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UActorComponent, 0x0100);
		}

		// class USceneComponent : public UActorComponent
		TEST_METHOD(Class__Engine__SceneComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneComponent, UnknownData_KCZ4, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneComponent, PhysicsVolume, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneComponent, AttachParent, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneComponent, AttachSocketName, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneComponent, AttachChildren, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneComponent, ClientAttachedChildren, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneComponent, UnknownData_MGBN, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneComponent, RelativeLocation, 0x016C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneComponent, RelativeRotation, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneComponent, RelativeScale3D, 0x0184);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneComponent, UnknownData_CLQ1, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneComponent, ComponentVelocity, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneComponent, Mobility, 0x01CE);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneComponent, DetailMode, 0x01CF);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneComponent, UnknownData_X36V, 0x01D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneComponent, PhysicsVolumeChangedDelegate, 0x0210);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneComponent, UnknownData_GY7T, 0x0220);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USceneComponent, 0x0248);
		}

		// class UPrimitiveComponent : public USceneComponent
		TEST_METHOD(Class__Engine__PrimitiveComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, UnknownData_012Q, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, MinDrawDistance, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, LDMaxDrawDistance, 0x0254);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, CachedMaxDrawDistance, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, DepthPriorityGroup, 0x025C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, ViewOwnerDepthPriorityGroup, 0x025D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, IndirectLightingCacheQuality, 0x025E);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, LightmapType, 0x025F);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, bHasCustomNavigableGeometry, 0x0267);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, UnknownData_ACF0, 0x0268);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, CanCharacterStepUpOn, 0x0269);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, LightingChannels, 0x026A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, CustomDepthStencilWriteMask, 0x026B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, CustomDepthStencilValue, 0x026C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, TranslucencySortPriority, 0x0270);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, VisibilityId, 0x0274);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, UnknownData_N38W, 0x0278);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, LpvBiasMultiplier, 0x027C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, UnknownData_HGNX, 0x0280);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, BoundsScale, 0x0288);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, LastSubmitTime, 0x028C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, LastRenderTime, 0x0290);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, LastRenderTimeOnScreen, 0x0294);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, MoveIgnoreActors, 0x0298);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, MoveIgnoreComponents, 0x02A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, UnknownData_5TK4, 0x02B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, BodyInstance, 0x02C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, OnComponentHit, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, OnComponentBeginOverlap, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, OnComponentEndOverlap, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, OnComponentWake, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, OnComponentSleep, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, UnknownData_5466, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, OnBeginCursorOver, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, OnEndCursorOver, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, OnClicked, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, OnReleased, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, OnInputTouchBegin, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, OnInputTouchEnd, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, OnInputTouchEnter, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, OnInputTouchLeave, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, UnknownData_M61U, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, LODParentPrimitive, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimitiveComponent, PostPhysicsComponentTick, 0x0510);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPrimitiveComponent, 0x0568);
		}

		// class UMeshComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Engine__MeshComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMeshComponent, OverrideMaterials, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMeshComponent, UnknownData_O5PO, 0x0578);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMeshComponent, 0x0590);
		}

		// class USkinnedMeshComponent : public UMeshComponent
		TEST_METHOD(Class__Engine__SkinnedMeshComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USkinnedMeshComponent, SkeletalMesh, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkinnedMeshComponent, MasterPoseComponent, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkinnedMeshComponent, UnknownData_SDXH, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkinnedMeshComponent, PhysicsAssetOverride, 0x0648);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkinnedMeshComponent, ForcedLodModel, 0x0650);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkinnedMeshComponent, MinLodModel, 0x0654);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkinnedMeshComponent, UnknownData_VJBM, 0x0658);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkinnedMeshComponent, StreamingDistanceMultiplier, 0x0664);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkinnedMeshComponent, LODInfo, 0x0668);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkinnedMeshComponent, UnknownData_RLXY, 0x0678);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkinnedMeshComponent, VisibilityBasedAnimTickOption, 0x0688);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkinnedMeshComponent, CapsuleIndirectShadowMinVisibility, 0x068C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkinnedMeshComponent, UnknownData_11H9, 0x0690);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkinnedMeshComponent, CachedLocalBounds, 0x0698);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkinnedMeshComponent, UnknownData_JS4C, 0x06B4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USkinnedMeshComponent, 0x06D0);
		}

		// class USkeletalMesh : public UObject
		TEST_METHOD(Class__Engine__SkeletalMesh)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, UnknownData_238S, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, Skeleton, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, ImportedBounds, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, ExtendedBounds, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, PositiveBoundsExtension, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, NegativeBoundsExtension, 0x0094);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, Materials, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, SkelMirrorTable, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, LODInfo, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, MinLOD, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, SkelMirrorAxis, 0x00D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, SkelMirrorFlipAxis, 0x00D5);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, UnknownData_AX8V, 0x00D7);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, BodySetup, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, PhysicsAsset, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, ShadowPhysicsAsset, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, NodeMappingData, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, MorphTargets, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, UnknownData_CL7S, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, PostProcessAnimBlueprint, 0x0280);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, MeshClothingAssets, 0x0288);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, NuccDynamicsAsset, 0x0298);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, SamplingInfo, 0x02A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, AssetUserData, 0x02D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, Sockets, 0x02E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, UnknownData_2F8O, 0x02F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMesh, UnknownData_8MC8, 0x0301);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USkeletalMesh, 0x0308);
		}

		// class UMaterialExpression : public UObject
		TEST_METHOD(Class__Engine__MaterialExpression)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpression, Material, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpression, Function, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpression, UnknownData_YCTU, 0x0039);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpression, 0x0040);
		}

		// class UMaterialExpressionTextureBase : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionTextureBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureBase, Texture, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureBase, SamplerType, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureBase, UnknownData_2MYZ, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureBase, UnknownData_GMAB, 0x004D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTextureBase, 0x0050);
		}

		// class UMaterialExpressionTextureSample : public UMaterialExpressionTextureBase
		TEST_METHOD(Class__Engine__MaterialExpressionTextureSample)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureSample, Coordinates, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureSample, UnknownData_KSUJ, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureSample, TextureObject, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureSample, UnknownData_HX40, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureSample, MipValue, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureSample, UnknownData_WNWW, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureSample, CoordinatesDX, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureSample, UnknownData_XN1I, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureSample, CoordinatesDY, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureSample, UnknownData_NKAA, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureSample, AutomaticViewMipBiasValue, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureSample, UnknownData_1STA, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureSample, MipValueMode, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureSample, SamplerSource, 0x00E1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureSample, UnknownData_XXTX, 0x00E2);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureSample, ConstCoordinate, 0x00E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureSample, ConstMipValue, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureSample, UnknownData_EJJJ, 0x00ED);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTextureSample, 0x00F8);
		}

		// class UMaterialExpressionTextureSampleParameter : public UMaterialExpressionTextureSample
		TEST_METHOD(Class__Engine__MaterialExpressionTextureSampleParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureSampleParameter, ParameterName, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureSampleParameter, ExpressionGUID, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureSampleParameter, Group, 0x0110);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTextureSampleParameter, 0x0118);
		}

		// class UMaterialExpressionTextureSampleParameter2D : public UMaterialExpressionTextureSampleParameter
		TEST_METHOD(Class__Engine__MaterialExpressionTextureSampleParameter2D)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTextureSampleParameter2D, 0x0118);
		}

		// class APawn : public AActor
		TEST_METHOD(Class__Engine__Pawn)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::APawn, UnknownData_RUS9, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::APawn, UnknownData_YV1T, 0x0341);
			CHEAT_GEAR_CHECK_OFFSET(CG::APawn, BaseEyeHeight, 0x0344);
			CHEAT_GEAR_CHECK_OFFSET(CG::APawn, AutoPossessPlayer, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::APawn, AutoPossessAI, 0x0349);
			CHEAT_GEAR_CHECK_OFFSET(CG::APawn, RemoteViewPitch, 0x034A);
			CHEAT_GEAR_CHECK_OFFSET(CG::APawn, UnknownData_DGWN, 0x034B);
			CHEAT_GEAR_CHECK_OFFSET(CG::APawn, AIControllerClass, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::APawn, PlayerState, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::APawn, UnknownData_DM4I, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::APawn, LastHitBy, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::APawn, Controller, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::APawn, UnknownData_F2R1, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::APawn, ControlInputVector, 0x037C);
			CHEAT_GEAR_CHECK_OFFSET(CG::APawn, LastControlInputVector, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::APawn, UnknownData_QZ3T, 0x0394);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APawn, 0x0398);
		}

		// class ACharacter : public APawn
		TEST_METHOD(Class__Engine__Character)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, Mesh, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, CharacterMovement, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, CapsuleComponent, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, BasedMovement, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, ReplicatedBasedMovement, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, AnimRootMotionTranslationScale, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, BaseTranslationOffset, 0x0414);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, BaseRotationOffset, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, ReplicatedServerLastTransformUpdateTimeStamp, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, ReplayLastTransformUpdateTimeStamp, 0x0434);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, ReplicatedMovementMode, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, bInBaseReplication, 0x0439);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, UnknownData_P3VK, 0x043A);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, CrouchedEyeHeight, 0x043C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, UnknownData_25Z5, 0x0442);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, JumpKeyHoldTime, 0x0444);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, JumpForceTimeRemaining, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, ProxyJumpForceStartedTime, 0x044C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, JumpMaxHoldTime, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, JumpMaxCount, 0x0454);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, JumpCurrentCount, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, UnknownData_A20X, 0x045C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, OnReachedJumpApex, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, UnknownData_5APP, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, MovementModeChangedDelegate, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, OnCharacterMovementUpdated, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, SavedRootMotion, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, UnknownData_X1G6, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, ClientRootMotionParams, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, RootMotionRepMoves, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACharacter, RepRootMotion, 0x05F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACharacter, 0x0748);
		}

		// class UDataAsset : public UObject
		TEST_METHOD(Class__Engine__DataAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDataAsset, NativeClass, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDataAsset, 0x0030);
		}

		// class USplineComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Engine__SplineComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineComponent, SplineCurves, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineComponent, SplineInfo, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineComponent, SplineRotInfo, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineComponent, SplineScaleInfo, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineComponent, SplineReparamTable, 0x0610);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineComponent, bAllowSplineEditingPerInstance, 0x0628);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineComponent, UnknownData_DSB2, 0x0629);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineComponent, ReparamStepsPerSegment, 0x062C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineComponent, Duration, 0x0630);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineComponent, bStationaryEndpoints, 0x0634);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineComponent, bSplineHasBeenEdited, 0x0635);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineComponent, bModifiedByConstructionScript, 0x0636);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineComponent, bInputSplinePointsToConstructionScript, 0x0637);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineComponent, bDrawDebug, 0x0638);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineComponent, bClosedLoop, 0x0639);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineComponent, bLoopPositionOverride, 0x063A);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineComponent, UnknownData_CH0F, 0x063B);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineComponent, LoopPosition, 0x063C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineComponent, DefaultUpVector, 0x0640);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineComponent, UnknownData_8CSL, 0x064C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USplineComponent, 0x0650);
		}

		// class UAudioComponent : public USceneComponent
		TEST_METHOD(Class__Engine__AudioComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, Sound, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, InstanceParameters, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, SoundClassOverride, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, UnknownData_FTR4, 0x026B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, AudioComponentUserID, 0x0270);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, PitchModulationMin, 0x0278);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, PitchModulationMax, 0x027C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, VolumeModulationMin, 0x0280);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, VolumeModulationMax, 0x0284);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, VolumeMultiplier, 0x0288);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, EnvelopeFollowerAttackTime, 0x028C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, EnvelopeFollowerReleaseTime, 0x0290);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, Priority, 0x0294);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, SubtitlePriority, 0x0298);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, PitchMultiplier, 0x029C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, LowPassFilterFrequency, 0x02A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, UnknownData_N3K8, 0x02A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, AttenuationSettings, 0x02A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, AttenuationOverrides, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, ConcurrencySettings, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, UnknownData_REIG, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, AutoAttachLocationRule, 0x0564);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, AutoAttachRotationRule, 0x0565);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, AutoAttachScaleRule, 0x0566);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, UnknownData_D1C4, 0x0567);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, OnAudioFinished, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, UnknownData_EUNE, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, OnAudioPlaybackPercent, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, UnknownData_FFUX, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, OnAudioSingleEnvelopeValue, 0x05B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, UnknownData_9NAB, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, OnAudioMultiEnvelopeValue, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, UnknownData_1VGO, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, OnQueueSubtitles, 0x0608);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, AutoAttachParent, 0x0618);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, AutoAttachSocketName, 0x0620);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioComponent, UnknownData_LY01, 0x0628);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAudioComponent, 0x0660);
		}

		// class UAssetImportData : public UObject
		TEST_METHOD(Class__Engine__AssetImportData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAssetImportData, 0x0028);
		}

		// class UAssetUserData : public UObject
		TEST_METHOD(Class__Engine__AssetUserData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAssetUserData, 0x0028);
		}

		// class UMovementComponent : public UActorComponent
		TEST_METHOD(Class__Engine__MovementComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovementComponent, UpdatedComponent, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovementComponent, UpdatedPrimitive, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovementComponent, UnknownData_DWJE, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovementComponent, Velocity, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovementComponent, PlaneConstraintNormal, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovementComponent, PlaneConstraintOrigin, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovementComponent, UnknownData_FWH8, 0x0139);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovementComponent, PlaneConstraintAxisSetting, 0x013B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovementComponent, UnknownData_9SSP, 0x013C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovementComponent, 0x0140);
		}

		// class UNavMovementComponent : public UMovementComponent
		TEST_METHOD(Class__Engine__NavMovementComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavMovementComponent, NavAgentProps, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavMovementComponent, FixedPathBrakingDistance, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavMovementComponent, MovementState, 0x0175);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavMovementComponent, UnknownData_H4PS, 0x0176);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavMovementComponent, PathFollowingComp, 0x0178);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavMovementComponent, 0x0180);
		}

		// class UPawnMovementComponent : public UNavMovementComponent
		TEST_METHOD(Class__Engine__PawnMovementComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnMovementComponent, PawnOwner, 0x0180);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPawnMovementComponent, 0x0188);
		}

		// class UCharacterMovementComponent : public UPawnMovementComponent
		TEST_METHOD(Class__Engine__CharacterMovementComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, UnknownData_Q7AJ, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, CharacterOwner, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, GravityScale, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, MaxStepHeight, 0x01A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, JumpZVelocity, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, JumpOffJumpZFactor, 0x01AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, WalkableFloorAngle, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, WalkableFloorZ, 0x01B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, MovementMode, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, CustomMovementMode, 0x01B9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, NetworkSmoothingMode, 0x01BA);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, UnknownData_XCKN, 0x01BB);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, GroundFriction, 0x01BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, UnknownData_SYSJ, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, MaxWalkSpeed, 0x01DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, MaxWalkSpeedCrouched, 0x01E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, MaxSwimSpeed, 0x01E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, MaxFlySpeed, 0x01E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, MaxCustomMovementSpeed, 0x01EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, MaxAcceleration, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, MinAnalogWalkSpeed, 0x01F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, BrakingFrictionFactor, 0x01F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, BrakingFriction, 0x01FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, BrakingDecelerationWalking, 0x0200);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, BrakingDecelerationFalling, 0x0204);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, BrakingDecelerationSwimming, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, BrakingDecelerationFlying, 0x020C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, AirControl, 0x0210);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, AirControlBoostMultiplier, 0x0214);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, AirControlBoostVelocityThreshold, 0x0218);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, FallingLateralFriction, 0x021C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, CrouchedHalfHeight, 0x0220);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, Buoyancy, 0x0224);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, PerchRadiusThreshold, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, PerchAdditionalHeight, 0x022C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, RotationRate, 0x0230);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, UnknownData_OM1J, 0x023F);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, DeferredUpdatedMoveComponent, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, MaxOutOfWaterStepHeight, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, OutofWaterZ, 0x024C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, Mass, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, StandingDownwardForceScale, 0x0254);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, InitialPushForceFactor, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, PushForceFactor, 0x025C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, PushForcePointZOffsetFactor, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, TouchForceFactor, 0x0264);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, MinTouchForce, 0x0268);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, MaxTouchForce, 0x026C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, RepulsionForce, 0x0270);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, Acceleration, 0x0274);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, LastUpdateRotation, 0x0280);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, LastUpdateLocation, 0x0290);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, LastUpdateVelocity, 0x029C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, ServerLastTransformUpdateTimeStamp, 0x02A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, ServerLastClientGoodMoveAckTime, 0x02AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, ServerLastClientAdjustmentTime, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, PendingImpulseToApply, 0x02B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, PendingForceToApply, 0x02C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, AnalogInputModifier, 0x02CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, UnknownData_25DK, 0x02D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, MaxSimulationTimeStep, 0x02D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, MaxSimulationIterations, 0x02DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, MaxDepenetrationWithGeometry, 0x02E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, MaxDepenetrationWithGeometryAsProxy, 0x02E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, MaxDepenetrationWithPawn, 0x02E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, MaxDepenetrationWithPawnAsProxy, 0x02EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, NetworkSimulatedSmoothLocationTime, 0x02F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, NetworkSimulatedSmoothRotationTime, 0x02F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, ListenServerNetworkSimulatedSmoothLocationTime, 0x02F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, ListenServerNetworkSimulatedSmoothRotationTime, 0x02FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, NetProxyShrinkRadius, 0x0300);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, NetProxyShrinkHalfHeight, 0x0304);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, NetworkMaxSmoothUpdateDistance, 0x0308);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, NetworkNoSmoothUpdateDistance, 0x030C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, NetworkMinTimeBetweenClientAckGoodMoves, 0x0310);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, NetworkMinTimeBetweenClientAdjustments, 0x0314);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, NetworkMinTimeBetweenClientAdjustmentsLargeCorrection, 0x0318);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, NetworkLargeClientCorrectionDistance, 0x031C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, LedgeCheckThreshold, 0x0320);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, JumpOutOfWaterPitch, 0x0324);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, CurrentFloor, 0x0328);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, DefaultLandMovementMode, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, DefaultWaterMovementMode, 0x03C1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, GroundMovementMode, 0x03C2);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, UnknownData_TEAY, 0x03C7);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, AvoidanceConsiderationRadius, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, RequestedVelocity, 0x03DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, AvoidanceUID, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, AvoidanceGroup, 0x03EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, GroupsToAvoid, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, GroupsToIgnore, 0x03F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, AvoidanceWeight, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, PendingLaunchVelocity, 0x03FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, UnknownData_T470, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, NavMeshProjectionInterval, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, NavMeshProjectionTimer, 0x04AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, NavMeshProjectionInterpSpeed, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, NavMeshProjectionHeightScaleUp, 0x04B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, NavMeshProjectionHeightScaleDown, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, NavWalkingFloorDistTolerance, 0x04BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, PostPhysicsTickFunction, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, UnknownData_I4UM, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, MinTimeBetweenTimeStampResets, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, UnknownData_D0VS, 0x052C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, CurrentRootMotion, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, UnknownData_WLFE, 0x0628);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, RootMotionParams, 0x06C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, AnimRootMotionVelocity, 0x0700);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterMovementComponent, UnknownData_G1R2, 0x070C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacterMovementComponent, 0x0730);
		}

		// class UTexture : public UObject
		TEST_METHOD(Class__Engine__Texture)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTexture, UnknownData_8ASQ, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTexture, LightingGuid, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTexture, LODBias, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTexture, NumCinematicMipLevels, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTexture, CompressionSettings, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTexture, Filter, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTexture, LODGroup, 0x004A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTexture, CachedCombinedLODBias, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTexture, AssetUserData, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTexture, UnknownData_ZL7Q, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTexture, 0x00B0);
		}

		// class UInterpTrack : public UObject
		TEST_METHOD(Class__Engine__InterpTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrack, UnknownData_JY6T, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrack, SubTracks, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrack, TrackInstClass, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrack, ActiveCondition, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrack, UnknownData_OAA7, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrack, TrackTitle, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrack, UnknownData_QQVB, 0x0069);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrack, 0x0070);
		}

		// class UInterpTrackFloatBase : public UInterpTrack
		TEST_METHOD(Class__Engine__InterpTrackFloatBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackFloatBase, FloatTrack, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackFloatBase, CurveTension, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackFloatBase, UnknownData_4PAI, 0x008C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackFloatBase, 0x0090);
		}

		// class UInterpTrackInst : public UObject
		TEST_METHOD(Class__Engine__InterpTrackInst)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInst, 0x0028);
		}

		// class USkeletalMeshComponent : public USkinnedMeshComponent
		TEST_METHOD(Class__Engine__SkeletalMeshComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, UnknownData_J2JP, 0x06D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, AnimBlueprintGeneratedClass, 0x06D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, AnimClass, 0x06E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, AnimScriptInstance, 0x06E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, SubInstances, 0x06F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, PostProcessAnimInstance, 0x0700);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, AnimationData, 0x0708);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, UnknownData_YLSG, 0x0720);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, RootBoneTranslation, 0x0730);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, LineCheckBoundsScale, 0x073C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, UnknownData_681S, 0x0748);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, CachedBoneSpaceTransforms, 0x0768);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, CachedComponentSpaceTransforms, 0x0778);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, UnknownData_7GFB, 0x0788);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, GlobalAnimRateScale, 0x07A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, UseAsyncScene, 0x07AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, KinematicBonesUpdateType, 0x07AD);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, PhysicsTransformUpdateMode, 0x07AE);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, UnknownData_YW1C, 0x07AF);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, AnimationMode, 0x07B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, UnknownData_JPSS, 0x07B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, UnknownData_NZO2, 0x07B5);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, UnknownData_F4K0, 0x07B9);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, UnknownData_LY3J, 0x07BE);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, CachedAnimCurveUidVersion, 0x07C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, UnknownData_Z6BD, 0x07C2);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, ClothBlendWeight, 0x07C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, EdgeStiffness, 0x07C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, BendingStiffness, 0x07CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, AreaStiffness, 0x07D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, VolumeStiffness, 0x07D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, StrainLimitingStiffness, 0x07D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, ShapeTargetStiffness, 0x07DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, DisallowedAnimCurves, 0x07E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, BodySetup, 0x07F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, UnknownData_EFK3, 0x07F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, OnConstraintBroken, 0x0800);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, ClothingSimulationFactory, 0x0810);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, UnknownData_0GGM, 0x0818);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, TeleportDistanceThreshold, 0x0910);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, TeleportRotationThreshold, 0x0914);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, UnknownData_8FFG, 0x0918);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, LastPoseTickFrame, 0x0920);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, UnknownData_ECYT, 0x0924);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, ClothingInteractor, 0x0980);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, UnknownData_U7PW, 0x0988);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, OnAnimInitialized, 0x0A40);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, UnknownData_XVV1, 0x0A50);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, NuccDynamicsEnable, 0x0B48);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, UnknownData_3IKC, 0x0B49);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, CdSpringCtrl, 0x0B50);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, CdSpringCtrlProxy, 0x0B58);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshComponent, UnknownData_D8FM, 0x0B60);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USkeletalMeshComponent, 0x0B80);
		}

		// class UAnimInstance : public UObject
		TEST_METHOD(Class__Engine__AnimInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimInstance, CurrentSkeleton, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimInstance, RootMotionMode, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimInstance, UnknownData_J6QH, 0x0032);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimInstance, OnMontageBlendingOut, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimInstance, OnMontageStarted, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimInstance, OnMontageEnded, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimInstance, OnAllMontageInstancesEnded, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimInstance, UnknownData_YACE, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimInstance, NotifyQueue, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimInstance, ActiveAnimNotifyState, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimInstance, UnknownData_517D, 0x0178);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimInstance, 0x0360);
		}

		// class UShapeComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Engine__ShapeComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UShapeComponent, ShapeBodySetup, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShapeComponent, ShapeColor, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShapeComponent, UnknownData_ZB4P, 0x0575);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShapeComponent, AreaClass, 0x0578);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UShapeComponent, 0x0580);
		}

		// class USphereComponent : public UShapeComponent
		TEST_METHOD(Class__Engine__SphereComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USphereComponent, SphereRadius, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::USphereComponent, UnknownData_KFPY, 0x0584);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USphereComponent, 0x0588);
		}

		// class UAnimNotifyState : public UObject
		TEST_METHOD(Class__Engine__AnimNotifyState)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState, UnknownData_TETY, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState, 0x0030);
		}

		// class AController : public AActor
		TEST_METHOD(Class__Engine__Controller)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AController, UnknownData_RKX4, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AController, PlayerState, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AController, UnknownData_DGRU, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::AController, OnInstigatedAnyDamage, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::AController, StateName, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::AController, Pawn, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::AController, UnknownData_MKP2, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::AController, Character, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::AController, TransformComponent, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::AController, UnknownData_VP5G, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::AController, ControlRotation, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AController, UnknownData_8BBJ, 0x03AD);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AController, 0x03B8);
		}

		// class APlayerController : public AController
		TEST_METHOD(Class__Engine__PlayerController)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, Player, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, AcknowledgedPawn, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, ControllingDirTrackInst, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, MyHUD, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, PlayerCameraManager, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, PlayerCameraManagerClass, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, bAutoManageActiveCameraTarget, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, UnknownData_L5OA, 0x03E9);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, TargetViewRotation, 0x03EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, UnknownData_MTD2, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, SmoothTargetViewRotationSpeed, 0x0404);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, UnknownData_PN4T, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, HiddenActors, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, HiddenPrimitiveComponents, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, UnknownData_TF2E, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, LastSpectatorStateSynchTime, 0x0434);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, LastSpectatorSyncLocation, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, LastSpectatorSyncRotation, 0x0444);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, ClientCap, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, UnknownData_P2SZ, 0x0454);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, CheatManager, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, CheatClass, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, PlayerInput, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, ActiveForceFeedbackEffects, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, UnknownData_COVQ, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, UnknownData_XJP7, 0x04F1);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, NetPlayerIndex, 0x04F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, UnknownData_5G7M, 0x04F5);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, PendingSwapConnection, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, NetConnection, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, UnknownData_G28E, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, InputYawScale, 0x054C);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, InputPitchScale, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, InputRollScale, 0x0554);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, UnknownData_D9PI, 0x0559);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, ForceFeedbackScale, 0x055C);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, ClickEventKeys, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, DefaultMouseCursor, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, CurrentMouseCursor, 0x0571);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, DefaultClickTraceChannel, 0x0572);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, CurrentClickTraceChannel, 0x0573);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, HitResultTraceDistance, 0x0574);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, SeamlessTravelCount, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, LastCompletedSeamlessTravelCount, 0x057A);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, UnknownData_JZZQ, 0x057C);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, InactiveStateInputComponent, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, UnknownData_S276, 0x05F9);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, CurrentTouchInterface, 0x0610);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, UnknownData_K7S5, 0x0618);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, SpectatorPawn, 0x0668);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, UnknownData_D7FF, 0x0670);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, bIsLocalPlayerController, 0x0674);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, UnknownData_86YM, 0x0675);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, SpawnLocation, 0x0678);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerController, UnknownData_HP8X, 0x0684);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APlayerController, 0x0688);
		}

		// class ATargetPoint : public AActor
		TEST_METHOD(Class__Engine__TargetPoint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATargetPoint, 0x0338);
		}

		// class ABrush : public AActor
		TEST_METHOD(Class__Engine__Brush)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABrush, BrushType, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABrush, UnknownData_JDBF, 0x0339);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABrush, BrushColor, 0x033C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABrush, PolyFlags, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABrush, UnknownData_4JKM, 0x0345);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABrush, Brush, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABrush, BrushComponent, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABrush, UnknownData_BMI2, 0x0359);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABrush, SavedSelections, 0x0360);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABrush, 0x0370);
		}

		// class AVolume : public ABrush
		TEST_METHOD(Class__Engine__Volume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVolume, 0x0370);
		}

		// class UAnimNotify : public UObject
		TEST_METHOD(Class__Engine__AnimNotify)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify, UnknownData_R8NE, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify, 0x0038);
		}

		// class AHUD : public AActor
		TEST_METHOD(Class__Engine__HUD)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AHUD, PlayerOwner, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AHUD, UnknownData_LQHZ, 0x0341);
			CHEAT_GEAR_CHECK_OFFSET(CG::AHUD, CurrentTargetIndex, 0x0344);
			CHEAT_GEAR_CHECK_OFFSET(CG::AHUD, UnknownData_0E0Z, 0x0349);
			CHEAT_GEAR_CHECK_OFFSET(CG::AHUD, PostRenderedActors, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::AHUD, UnknownData_5K6O, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::AHUD, DebugDisplay, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::AHUD, ToggledDebugCategories, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::AHUD, Canvas, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::AHUD, DebugCanvas, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AHUD, DebugTextList, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::AHUD, ShowDebugTargetDesiredClass, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AHUD, ShowDebugTargetActor, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AHUD, UnknownData_87E7, 0x03B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AHUD, 0x0428);
		}

		// class ATriggerBase : public AActor
		TEST_METHOD(Class__Engine__TriggerBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ATriggerBase, CollisionComponent, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATriggerBase, 0x0340);
		}

		// class UDamageType : public UObject
		TEST_METHOD(Class__Engine__DamageType)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDamageType, UnknownData_H24G, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDamageType, DamageImpulse, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDamageType, DestructibleImpulse, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDamageType, DestructibleDamageSpreadScale, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDamageType, DamageFalloff, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDamageType, UnknownData_ZZBK, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDamageType, 0x0040);
		}

		// class UDPICustomScalingRule : public UObject
		TEST_METHOD(Class__Engine__DPICustomScalingRule)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDPICustomScalingRule, 0x0028);
		}

		// class UGameInstance : public UObject
		TEST_METHOD(Class__Engine__GameInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameInstance, UnknownData_G22N, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameInstance, LocalPlayers, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameInstance, OnlineSession, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameInstance, ReferencedObjects, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameInstance, UnknownData_MK7R, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameInstance, 0x00A0);
		}

		// class UAnimMetaData : public UObject
		TEST_METHOD(Class__Engine__AnimMetaData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimMetaData, 0x0028);
		}

		// class UProjectileMovementComponent : public UMovementComponent
		TEST_METHOD(Class__Engine__ProjectileMovementComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UProjectileMovementComponent, InitialSpeed, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProjectileMovementComponent, MaxSpeed, 0x0144);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProjectileMovementComponent, UnknownData_8MEX, 0x014A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProjectileMovementComponent, PreviousHitTime, 0x014C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProjectileMovementComponent, PreviousHitNormal, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProjectileMovementComponent, ProjectileGravityScale, 0x015C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProjectileMovementComponent, Buoyancy, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProjectileMovementComponent, Bounciness, 0x0164);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProjectileMovementComponent, Friction, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProjectileMovementComponent, BounceVelocityStopSimulatingThreshold, 0x016C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProjectileMovementComponent, MinFrictionFraction, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProjectileMovementComponent, UnknownData_Y8EJ, 0x0174);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProjectileMovementComponent, OnProjectileBounce, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProjectileMovementComponent, OnProjectileStop, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProjectileMovementComponent, HomingAccelerationMagnitude, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProjectileMovementComponent, HomingTargetComponent, 0x019C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProjectileMovementComponent, MaxSimulationTimeStep, 0x01A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProjectileMovementComponent, MaxSimulationIterations, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProjectileMovementComponent, BounceAdditionalIterations, 0x01AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProjectileMovementComponent, InterpLocationTime, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProjectileMovementComponent, InterpRotationTime, 0x01B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProjectileMovementComponent, InterpLocationMaxLagDistance, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProjectileMovementComponent, InterpLocationSnapToTargetDistance, 0x01BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProjectileMovementComponent, UnknownData_RG07, 0x01C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UProjectileMovementComponent, 0x0200);
		}

		// class UInputComponent : public UActorComponent
		TEST_METHOD(Class__Engine__InputComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputComponent, UnknownData_ZZ0U, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputComponent, CachedKeyToActionInfo, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputComponent, UnknownData_3PNM, 0x0180);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputComponent, 0x0188);
		}

		// class UAnimNotify_PlayParticleEffect : public UAnimNotify
		TEST_METHOD(Class__Engine__AnimNotify_PlayParticleEffect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_PlayParticleEffect, PSTemplate, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_PlayParticleEffect, LocationOffset, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_PlayParticleEffect, RotationOffset, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_PlayParticleEffect, Scale, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_PlayParticleEffect, UnknownData_KP6U, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_PlayParticleEffect, UnknownData_XZIJ, 0x0081);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_PlayParticleEffect, SocketName, 0x0088);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_PlayParticleEffect, 0x0090);
		}

		// class ATriggerSphere : public ATriggerBase
		TEST_METHOD(Class__Engine__TriggerSphere)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATriggerSphere, 0x0340);
		}

		// class AStaticMeshActor : public AActor
		TEST_METHOD(Class__Engine__StaticMeshActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AStaticMeshActor, StaticMeshComponent, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AStaticMeshActor, bStaticMeshReplicateMovement, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AStaticMeshActor, NavigationGeometryGatheringMode, 0x0341);
			CHEAT_GEAR_CHECK_OFFSET(CG::AStaticMeshActor, UnknownData_XVZS, 0x0342);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AStaticMeshActor, 0x0348);
		}

		// class ASkeletalMeshActor : public AActor
		TEST_METHOD(Class__Engine__SkeletalMeshActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASkeletalMeshActor, UnknownData_FV3E, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASkeletalMeshActor, UnknownData_U71J, 0x0341);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASkeletalMeshActor, SkeletalMeshComponent, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASkeletalMeshActor, ReplicatedMesh, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASkeletalMeshActor, ReplicatedPhysAsset, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASkeletalMeshActor, ReplicatedMaterial0, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASkeletalMeshActor, ReplicatedMaterial1, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASkeletalMeshActor, UnknownData_VTWT, 0x0370);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASkeletalMeshActor, 0x03C0);
		}

		// class UCheatManager : public UObject
		TEST_METHOD(Class__Engine__CheatManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheatManager, DebugCameraControllerRef, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheatManager, DebugCameraControllerClass, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheatManager, UnknownData_1DU5, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCheatManager, 0x0078);
		}

		// class ASceneCapture : public AActor
		TEST_METHOD(Class__Engine__SceneCapture)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASceneCapture, MeshComp, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASceneCapture, 0x0340);
		}

		// class ASceneCapture2D : public ASceneCapture
		TEST_METHOD(Class__Engine__SceneCapture2D)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASceneCapture2D, CaptureComponent2D, 0x0340);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASceneCapture2D, 0x0348);
		}

		// class ALight : public AActor
		TEST_METHOD(Class__Engine__Light)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ALight, LightComponent, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALight, UnknownData_WJ2M, 0x0341);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALight, 0x0348);
		}

		// class ADirectionalLight : public ALight
		TEST_METHOD(Class__Engine__DirectionalLight)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ADirectionalLight, UnknownData_YW8D, 0x0348);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADirectionalLight, 0x0350);
		}

		// class ATriggerBox : public ATriggerBase
		TEST_METHOD(Class__Engine__TriggerBox)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATriggerBox, 0x0340);
		}

		// class AInfo : public AActor
		TEST_METHOD(Class__Engine__Info)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInfo, 0x0338);
		}

		// class AGameModeBase : public AInfo
		TEST_METHOD(Class__Engine__GameModeBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameModeBase, OptionsString, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameModeBase, GameSessionClass, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameModeBase, GameStateClass, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameModeBase, PlayerControllerClass, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameModeBase, PlayerStateClass, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameModeBase, HUDClass, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameModeBase, DefaultPawnClass, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameModeBase, SpectatorClass, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameModeBase, ReplaySpectatorPlayerControllerClass, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameModeBase, ServerStatReplicatorClass, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameModeBase, GameSession, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameModeBase, GameState, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameModeBase, ServerStatReplicator, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameModeBase, DefaultPlayerName, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameModeBase, UnknownData_GYV9, 0x03C1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGameModeBase, 0x03D8);
		}

		// class AGameMode : public AGameModeBase
		TEST_METHOD(Class__Engine__GameMode)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameMode, MatchState, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameMode, UnknownData_MV7U, 0x03E1);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameMode, NumSpectators, 0x03E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameMode, NumPlayers, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameMode, NumBots, 0x03EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameMode, MinRespawnDelay, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameMode, NumTravellingPlayers, 0x03F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameMode, EngineMessageClass, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameMode, InactivePlayerArray, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameMode, InactivePlayerStateLifeSpan, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameMode, MaxInactivePlayers, 0x0414);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameMode, bHandleDedicatedServerReplays, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameMode, UnknownData_E3TU, 0x0419);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGameMode, 0x0420);
		}

		// class AGameStateBase : public AInfo
		TEST_METHOD(Class__Engine__GameStateBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameStateBase, GameModeClass, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameStateBase, AuthorityGameMode, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameStateBase, SpectatorClass, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameStateBase, PlayerArray, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameStateBase, bReplicatedHasBegunPlay, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameStateBase, UnknownData_K45E, 0x0361);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameStateBase, ReplicatedWorldTimeSeconds, 0x0364);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameStateBase, ServerWorldTimeSecondsDelta, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameStateBase, ServerWorldTimeSecondsUpdateFrequency, 0x036C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameStateBase, UnknownData_90P7, 0x0370);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGameStateBase, 0x0378);
		}

		// class AGameState : public AGameStateBase
		TEST_METHOD(Class__Engine__GameState)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameState, MatchState, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameState, PreviousMatchState, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameState, ElapsedTime, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameState, UnknownData_T91S, 0x038C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGameState, 0x0398);
		}

		// class ALevelScriptActor : public AActor
		TEST_METHOD(Class__Engine__LevelScriptActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ALevelScriptActor, UnknownData_JRE5, 0x0339);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALevelScriptActor, 0x0340);
		}

		// class APlayerCameraManager : public AActor
		TEST_METHOD(Class__Engine__PlayerCameraManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, PCOwner, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, TransformComponent, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, UnknownData_2VAP, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, DefaultFOV, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, UnknownData_WETQ, 0x0354);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, DefaultOrthoWidth, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, UnknownData_S2M7, 0x035C);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, DefaultAspectRatio, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, UnknownData_4BG7, 0x0364);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, CameraCache, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, LastFrameCameraCache, 0x0A40);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, ViewTarget, 0x10D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, PendingViewTarget, 0x1770);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, UnknownData_ZUMZ, 0x1E10);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, CameraCachePrivate, 0x1E30);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, LastFrameCameraCachePrivate, 0x24C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, ModifierList, 0x2B50);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, DefaultModifiers, 0x2B60);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, FreeCamDistance, 0x2B70);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, FreeCamOffset, 0x2B74);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, ViewTargetOffset, 0x2B80);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, UnknownData_34ML, 0x2B8C);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, CameraLensEffects, 0x2BA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, CachedCameraShakeMod, 0x2BB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, AnimInstPool, 0x2BB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, PostProcessBlendCache, 0x2BF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, UnknownData_43L3, 0x2C08);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, ActiveAnims, 0x2C18);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, FreeAnims, 0x2C28);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, AnimCameraActor, 0x2C38);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, UnknownData_O6AY, 0x2C42);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, ViewPitchMin, 0x2C44);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, ViewPitchMax, 0x2C48);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, ViewYawMin, 0x2C4C);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, ViewYawMax, 0x2C50);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, ViewRollMin, 0x2C54);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, ViewRollMax, 0x2C58);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerCameraManager, UnknownData_B5D1, 0x2C5C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APlayerCameraManager, 0x2C60);
		}

		// class ANavigationObjectBase : public AActor
		TEST_METHOD(Class__Engine__NavigationObjectBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationObjectBase, UnknownData_IZDE, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationObjectBase, CapsuleComponent, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationObjectBase, GoodSprite, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationObjectBase, BadSprite, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationObjectBase, UnknownData_B7VY, 0x0359);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ANavigationObjectBase, 0x0360);
		}

		// class APlayerStart : public ANavigationObjectBase
		TEST_METHOD(Class__Engine__PlayerStart)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerStart, PlayerStartTag, 0x0360);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APlayerStart, 0x0368);
		}

		// class USaveGame : public UObject
		TEST_METHOD(Class__Engine__SaveGame)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USaveGame, 0x0028);
		}

		// class USceneCaptureComponent : public USceneComponent
		TEST_METHOD(Class__Engine__SceneCaptureComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent, UnknownData_UBMQ, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent, HiddenComponents, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent, HiddenActors, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent, ShowOnlyComponents, 0x0270);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent, ShowOnlyActors, 0x0280);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent, bCaptureEveryFrame, 0x0290);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent, bCaptureOnMovement, 0x0291);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent, bAlwaysPersistRenderingState, 0x0292);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent, UnknownData_PKBF, 0x0293);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent, LODDistanceFactor, 0x0294);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent, MaxViewDistanceOverride, 0x0298);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent, CaptureSortPriority, 0x029C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent, ShowFlagSettings, 0x02A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent, UnknownData_GFEE, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent, ProfilingEventName, 0x02C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent, UnknownData_CDFT, 0x02D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USceneCaptureComponent, 0x02E0);
		}

		// class USceneCaptureComponent2D : public USceneCaptureComponent
		TEST_METHOD(Class__Engine__SceneCaptureComponent2D)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent2D, ProjectionType, 0x02E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent2D, UnknownData_KLHS, 0x02E1);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent2D, FOVAngle, 0x02E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent2D, OrthoWidth, 0x02E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent2D, UnknownData_1322, 0x02EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent2D, TextureTarget, 0x02F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent2D, CaptureSource, 0x02F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent2D, CompositeMode, 0x02F9);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent2D, UnknownData_AJGP, 0x02FA);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent2D, PostProcessSettings, 0x0300);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent2D, PostProcessBlendWeight, 0x0930);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent2D, bUseCustomProjectionMatrix, 0x0934);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent2D, UnknownData_NUEU, 0x0935);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent2D, CustomProjectionMatrix, 0x0940);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent2D, bEnableClipPlane, 0x0980);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent2D, UnknownData_OXY1, 0x0981);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent2D, ClipPlaneBase, 0x0984);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent2D, ClipPlaneNormal, 0x0990);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponent2D, UnknownData_OAH6, 0x099D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USceneCaptureComponent2D, 0x09A0);
		}

		// class ACameraActor : public AActor
		TEST_METHOD(Class__Engine__CameraActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraActor, AutoActivateForPlayer, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraActor, UnknownData_WEGT, 0x0339);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraActor, CameraComponent, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraActor, SceneComponent, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraActor, UnknownData_I3XS, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraActor, UnknownData_Q2ZW, 0x0359);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraActor, AspectRatio, 0x035C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraActor, FOVAngle, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraActor, PostProcessBlendWeight, 0x0364);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraActor, UnknownData_SJE6, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraActor, PostProcessSettings, 0x0370);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACameraActor, 0x09A0);
		}

		// class AWorldSettings : public AInfo
		TEST_METHOD(Class__Engine__WorldSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, UnknownData_9W18, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, UnknownData_H2ZV, 0x0341);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, NavigationSystemConfig, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, NavigationSystemConfigOverride, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, KillZ, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, UnknownData_Z8AW, 0x035C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, KillZDamageType, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, WorldGravityZ, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, GlobalGravityZ, 0x036C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, DefaultPhysicsVolumeClass, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, PhysicsCollisionHandlerClass, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, DefaultGameMode, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, GameNetworkManagerClass, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, PackedLightAndShadowMapTextureSize, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, UnknownData_CI4M, 0x0395);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, DefaultColorScale, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, DefaultMaxDistanceFieldOcclusionDistance, 0x03A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, GlobalDistanceFieldViewDistance, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, DynamicIndirectShadowsSelfShadowingIntensity, 0x03AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, UnknownData_RGUL, 0x03B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, VisibilityCellSize, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, VisibilityAggressiveness, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, UnknownData_STVZ, 0x03B9);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, UnknownData_AARG, 0x03BD);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, LightmassSettings, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, UnknownData_SMR6, 0x0414);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, DefaultReverbSettings, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, DefaultAmbientZoneSettings, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, UnknownData_7G6Q, 0x045C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, DefaultBaseSoundMix, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, WorldToMeters, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, MonoCullingDistance, 0x046C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, BookMarks, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, TimeDilation, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, MatineeTimeDilation, 0x04C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, DemoPlayTimeDilation, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, MinGlobalTimeDilation, 0x04CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, MaxGlobalTimeDilation, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, MinUndilatedFrameTime, 0x04D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, MaxUndilatedFrameTime, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, UnknownData_5IME, 0x04DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, Pauser, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, UnknownData_6S6A, 0x04E9);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, ReplicationViewers, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, bOverrideDefaultBroadphaseSettings, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, UnknownData_CWUD, 0x0501);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, BroadphaseSettings, 0x0504);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, AssetUserData, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, MaxNumberOfBookmarks, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, UnknownData_1AJC, 0x053C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, DefaultBookmarkClass, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, BookmarkArray, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWorldSettings, LastBookmarkClass, 0x0558);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWorldSettings, 0x0560);
		}

		// class UStaticMeshComponent : public UMeshComponent
		TEST_METHOD(Class__Engine__StaticMeshComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMeshComponent, ForcedLodModel, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMeshComponent, PreviousLODLevel, 0x0594);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMeshComponent, MinLOD, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMeshComponent, SubDivisionStepSize, 0x059C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMeshComponent, StaticMesh, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMeshComponent, WireframeColorOverride, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMeshComponent, UnknownData_YQP3, 0x05AE);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMeshComponent, OverriddenLightMapRes, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMeshComponent, DistanceFieldIndirectShadowMinVisibility, 0x05B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMeshComponent, DistanceFieldSelfShadowBias, 0x05B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMeshComponent, StreamingDistanceMultiplier, 0x05BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMeshComponent, LODData, 0x05C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMeshComponent, StreamingTextureData, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMeshComponent, LightmassSettings, 0x05E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStaticMeshComponent, 0x05F8);
		}

		// class UInstancedStaticMeshComponent : public UStaticMeshComponent
		TEST_METHOD(Class__Engine__InstancedStaticMeshComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInstancedStaticMeshComponent, PerInstanceSMData, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInstancedStaticMeshComponent, InstancingRandomSeed, 0x0608);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInstancedStaticMeshComponent, InstanceStartCullDistance, 0x060C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInstancedStaticMeshComponent, InstanceEndCullDistance, 0x0610);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInstancedStaticMeshComponent, UnknownData_EVJC, 0x0614);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInstancedStaticMeshComponent, InstanceReorderTable, 0x0618);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInstancedStaticMeshComponent, UnknownData_NNH5, 0x0628);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInstancedStaticMeshComponent, NumPendingLightmaps, 0x0670);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInstancedStaticMeshComponent, UnknownData_8X8Z, 0x0674);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInstancedStaticMeshComponent, CachedMappings, 0x0678);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInstancedStaticMeshComponent, UnknownData_VBUE, 0x0688);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInstancedStaticMeshComponent, 0x0690);
		}

		// class UHierarchicalInstancedStaticMeshComponent : public UInstancedStaticMeshComponent
		TEST_METHOD(Class__Engine__HierarchicalInstancedStaticMeshComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UHierarchicalInstancedStaticMeshComponent, UnknownData_CZP1, 0x0690);
			CHEAT_GEAR_CHECK_OFFSET(CG::UHierarchicalInstancedStaticMeshComponent, SortedInstances, 0x0698);
			CHEAT_GEAR_CHECK_OFFSET(CG::UHierarchicalInstancedStaticMeshComponent, NumBuiltInstances, 0x06A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UHierarchicalInstancedStaticMeshComponent, UnknownData_WA7C, 0x06AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UHierarchicalInstancedStaticMeshComponent, BuiltInstanceBounds, 0x06B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UHierarchicalInstancedStaticMeshComponent, UnbuiltInstanceBounds, 0x06CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UHierarchicalInstancedStaticMeshComponent, UnbuiltInstanceBoundsList, 0x06E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UHierarchicalInstancedStaticMeshComponent, UnknownData_GADF, 0x06F9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UHierarchicalInstancedStaticMeshComponent, OcclusionLayerNumNodes, 0x0700);
			CHEAT_GEAR_CHECK_OFFSET(CG::UHierarchicalInstancedStaticMeshComponent, CacheMeshExtendedBounds, 0x0704);
			CHEAT_GEAR_CHECK_OFFSET(CG::UHierarchicalInstancedStaticMeshComponent, UnknownData_YAOZ, 0x0720);
			CHEAT_GEAR_CHECK_OFFSET(CG::UHierarchicalInstancedStaticMeshComponent, bDisableCollision, 0x0724);
			CHEAT_GEAR_CHECK_OFFSET(CG::UHierarchicalInstancedStaticMeshComponent, UnknownData_N6J3, 0x0725);
			CHEAT_GEAR_CHECK_OFFSET(CG::UHierarchicalInstancedStaticMeshComponent, InstanceCountToRender, 0x0728);
			CHEAT_GEAR_CHECK_OFFSET(CG::UHierarchicalInstancedStaticMeshComponent, UnknownData_U8VK, 0x072C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHierarchicalInstancedStaticMeshComponent, 0x0778);
		}

		// class UParticleSystemComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Engine__ParticleSystemComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, Template, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, EmitterMaterials, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, SkelMeshComponents, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, UnknownData_GPOH, 0x0593);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, LODMethod, 0x0595);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, RequiredSignificance, 0x0596);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, UnknownData_ZURW, 0x0597);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, InstanceParameters, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, OnParticleSpawn, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, OnParticleBurst, 0x05B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, OnParticleDeath, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, OnParticleCollide, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, OldPosition, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, PartSysVelocity, 0x05F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, WarmupTime, 0x0600);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, WarmupTickRate, 0x0604);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, UnknownData_3FJT, 0x0608);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, SecondsBeforeInactive, 0x060C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, UnknownData_Z8BU, 0x0610);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, MaxTimeBeforeForceUpdateTransform, 0x0614);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, UnknownData_V2D6, 0x0618);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, ReplayClips, 0x0638);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, UnknownData_V49D, 0x0648);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, CustomTimeDilation, 0x0650);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, UnknownData_NGRQ, 0x0654);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, AutoAttachParent, 0x06A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, AutoAttachSocketName, 0x06B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, AutoAttachLocationRule, 0x06B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, AutoAttachRotationRule, 0x06B9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, AutoAttachScaleRule, 0x06BA);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, UnknownData_TAH8, 0x06BB);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, OnSystemFinished, 0x06E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemComponent, UnknownData_DJXC, 0x06F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleSystemComponent, 0x07C0);
		}

		// class UBoxComponent : public UShapeComponent
		TEST_METHOD(Class__Engine__BoxComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBoxComponent, BoxExtent, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBoxComponent, LineThickness, 0x058C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBoxComponent, 0x0590);
		}

		// class UCapsuleComponent : public UShapeComponent
		TEST_METHOD(Class__Engine__CapsuleComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCapsuleComponent, CapsuleHalfHeight, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCapsuleComponent, CapsuleRadius, 0x0584);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCapsuleComponent, UnknownData_WYY5, 0x0588);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCapsuleComponent, 0x0590);
		}

		// class USpringArmComponent : public USceneComponent
		TEST_METHOD(Class__Engine__SpringArmComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USpringArmComponent, UnknownData_DJQK, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpringArmComponent, SocketOffset, 0x024C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpringArmComponent, TargetOffset, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpringArmComponent, ProbeSize, 0x0264);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpringArmComponent, ProbeChannel, 0x0268);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpringArmComponent, UnknownData_UNJA, 0x0269);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpringArmComponent, UnknownData_2A22, 0x026E);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpringArmComponent, CameraLagSpeed, 0x0270);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpringArmComponent, CameraRotationLagSpeed, 0x0274);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpringArmComponent, CameraLagMaxTimeStep, 0x0278);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpringArmComponent, CameraLagMaxDistance, 0x027C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpringArmComponent, UnknownData_7LPP, 0x0280);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpringArmComponent, 0x02D0);
		}

		// class UMaterialInterface : public UObject
		TEST_METHOD(Class__Engine__MaterialInterface)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialInterface, UnknownData_CJCZ, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialInterface, SubsurfaceProfile, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialInterface, UnknownData_OHLO, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialInterface, LightmassSettings, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialInterface, UnknownData_V2RL, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialInterface, TextureStreamingData, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialInterface, AssetUserData, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialInterface, UnknownData_J3R0, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialInterface, 0x0088);
		}

		// class UMaterialInstance : public UMaterialInterface
		TEST_METHOD(Class__Engine__MaterialInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialInstance, PhysMaterial, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialInstance, Parent, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialInstance, UnknownData_4N5O, 0x0099);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialInstance, ScalarParameterValues, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialInstance, VectorParameterValues, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialInstance, TextureParameterValues, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialInstance, FontParameterValues, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialInstance, bOverrideBaseProperties, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialInstance, UnknownData_RJPS, 0x00E1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialInstance, BasePropertyOverrides, 0x00E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialInstance, UnknownData_MTEK, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialInstance, PermutationTextureReferences, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialInstance, StaticParameters, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialInstance, UnknownData_MTTR, 0x0170);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialInstance, 0x01E8);
		}

		// class UMaterialInstanceConstant : public UMaterialInstance
		TEST_METHOD(Class__Engine__MaterialInstanceConstant)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialInstanceConstant, 0x01E8);
		}

		// class UMaterialExpressionCustomOutput : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionCustomOutput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionCustomOutput, 0x0040);
		}

		// class UEngineCustomTimeStep : public UObject
		TEST_METHOD(Class__Engine__EngineCustomTimeStep)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEngineCustomTimeStep, 0x0028);
		}

		// class UBlueprintGeneratedClass : public UClass
		TEST_METHOD(Class__Engine__BlueprintGeneratedClass)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprintGeneratedClass, NumReplicatedProperties, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprintGeneratedClass, UnknownData_5K7L, 0x020D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprintGeneratedClass, DynamicBindingObjects, 0x0210);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprintGeneratedClass, ComponentTemplates, 0x0220);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprintGeneratedClass, Timelines, 0x0230);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprintGeneratedClass, SimpleConstructionScript, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprintGeneratedClass, InheritableComponentHandler, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprintGeneratedClass, UberGraphFunction, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprintGeneratedClass, CookedComponentInstancingData, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprintGeneratedClass, UnknownData_4RY5, 0x02A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlueprintGeneratedClass, 0x02E0);
		}

		// class UCameraComponent : public USceneComponent
		TEST_METHOD(Class__Engine__CameraComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraComponent, UnknownData_5INY, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraComponent, OrthoWidth, 0x024C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraComponent, OrthoNearClipPlane, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraComponent, OrthoFarClipPlane, 0x0254);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraComponent, AspectRatio, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraComponent, UnknownData_NQQU, 0x025D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraComponent, UnknownData_AYXI, 0x0261);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraComponent, ProjectionMode, 0x0265);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraComponent, UnknownData_YFR9, 0x0266);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraComponent, PostProcessBlendWeight, 0x02A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraComponent, UnknownData_KWRM, 0x02A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraComponent, PostProcessSettings, 0x02D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraComponent, 0x0900);
		}

		// class USoundEffectPreset : public UObject
		TEST_METHOD(Class__Engine__SoundEffectPreset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundEffectPreset, UnknownData_QLQP, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundEffectPreset, 0x0040);
		}

		// class USoundEffectSubmixPreset : public USoundEffectPreset
		TEST_METHOD(Class__Engine__SoundEffectSubmixPreset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundEffectSubmixPreset, 0x0040);
		}

		// class USoundBase : public UObject
		TEST_METHOD(Class__Engine__SoundBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundBase, SoundClassObject, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundBase, UnknownData_3VM0, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundBase, SoundConcurrencySettings, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundBase, ConcurrencyOverrides, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundBase, Duration, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundBase, MaxDistance, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundBase, TotalSamples, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundBase, Priority, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundBase, AttenuationSettings, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundBase, SoundSubmixObject, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundBase, SoundSubmixSends, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundBase, SourceEffectChain, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundBase, BusSends, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundBase, PreEffectBusSends, 0x0098);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundBase, 0x00A8);
		}

		// class USoundWave : public USoundBase
		TEST_METHOD(Class__Engine__SoundWave)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundWave, CompressionQuality, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundWave, StreamingPriority, 0x00AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundWave, SampleRateQuality, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundWave, UnknownData_LHX0, 0x00B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundWave, SoundGroup, 0x00B2);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundWave, UnknownData_FNKV, 0x00B5);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundWave, SpokenText, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundWave, SubtitlePriority, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundWave, Volume, 0x00DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundWave, Pitch, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundWave, NumChannels, 0x00E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundWave, SampleRate, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundWave, UnknownData_0VGC, 0x00EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundWave, Subtitles, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundWave, LocalizedSubtitles, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundWave, Curves, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundWave, InternalCurves, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundWave, UnknownData_4DW9, 0x0120);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundWave, 0x0208);
		}

		// class USoundWaveProcedural : public USoundWave
		TEST_METHOD(Class__Engine__SoundWaveProcedural)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundWaveProcedural, UnknownData_U0FE, 0x0208);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundWaveProcedural, 0x0260);
		}

		// class UBlueprintCore : public UObject
		TEST_METHOD(Class__Engine__BlueprintCore)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprintCore, SkeletonGeneratedClass, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprintCore, GeneratedClass, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprintCore, bLegacyNeedToPurgeSkelRefs, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprintCore, bLegacyGeneratedClassIsAuthoritative, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprintCore, UnknownData_H3G6, 0x003A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprintCore, BlueprintGuid, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprintCore, UnknownData_7OC7, 0x004C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlueprintCore, 0x0050);
		}

		// class UBlueprint : public UBlueprintCore
		TEST_METHOD(Class__Engine__Blueprint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprint, UnknownData_2MUV, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprint, ParentClass, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprint, PRIVATE_InnermostPreviousCDO, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprint, UnknownData_O4LN, 0x0069);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprint, SimpleConstructionScript, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprint, ComponentTemplates, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprint, Timelines, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprint, InheritableComponentHandler, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprint, BlueprintType, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprint, UnknownData_3LYI, 0x00A1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprint, BlueprintSystemVersion, 0x00A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprint, UnknownData_VYG7, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprint, bNativize, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlueprint, UnknownData_GBU3, 0x00D9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlueprint, 0x00E0);
		}

		// class UModel : public UObject
		TEST_METHOD(Class__Engine__Model)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UModel, UnknownData_JKNZ, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UModel, 0x02C8);
		}

		// class UChannel : public UObject
		TEST_METHOD(Class__Engine__Channel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UChannel, Connection, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChannel, UnknownData_V3O7, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UChannel, 0x0068);
		}

		// class UActorChannel : public UChannel
		TEST_METHOD(Class__Engine__ActorChannel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorChannel, Actor, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorChannel, UnknownData_OKFQ, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorChannel, CreateSubObjects, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorChannel, UnknownData_BZHH, 0x0160);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UActorChannel, 0x0238);
		}

		// class UAnimationAsset : public UObject
		TEST_METHOD(Class__Engine__AnimationAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationAsset, UnknownData_GTZ3, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationAsset, Skeleton, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationAsset, UnknownData_BIYK, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationAsset, MetaData, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationAsset, AssetUserData, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationAsset, NoAnmBones, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationAsset, UseDynamicsType, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationAsset, UnknownData_0T5S, 0x00D1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimationAsset, 0x00F8);
		}

		// class UBlendSpaceBase : public UAnimationAsset
		TEST_METHOD(Class__Engine__BlendSpaceBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlendSpaceBase, UnknownData_FIG6, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlendSpaceBase, bRotationBlendInMeshSpace, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlendSpaceBase, UnknownData_Q81W, 0x0101);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlendSpaceBase, AnimLength, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlendSpaceBase, InterpolationParam, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlendSpaceBase, TargetWeightInterpolationSpeedPerSec, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlendSpaceBase, NotifyTriggerMode, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlendSpaceBase, UnknownData_M11B, 0x0125);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlendSpaceBase, PerBoneBlend, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlendSpaceBase, SampleIndexWithMarkers, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlendSpaceBase, UnknownData_VD9B, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlendSpaceBase, SampleData, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlendSpaceBase, GridSamples, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlendSpaceBase, BlendParameters, 0x0160);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlendSpaceBase, 0x01C0);
		}

		// class UBlendSpace : public UBlendSpaceBase
		TEST_METHOD(Class__Engine__BlendSpace)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlendSpace, AxisToScaleAnimation, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlendSpace, UnknownData_UKX3, 0x01C1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlendSpace, 0x01C8);
		}

		// class UAimOffsetBlendSpace : public UBlendSpace
		TEST_METHOD(Class__Engine__AimOffsetBlendSpace)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAimOffsetBlendSpace, 0x01C8);
		}

		// class UBlendSpace1D : public UBlendSpaceBase
		TEST_METHOD(Class__Engine__BlendSpace1D)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlendSpace1D, bScaleAnimation, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlendSpace1D, UnknownData_BZJL, 0x01C1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlendSpace1D, 0x01C8);
		}

		// class UAimOffsetBlendSpace1D : public UBlendSpace1D
		TEST_METHOD(Class__Engine__AimOffsetBlendSpace1D)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAimOffsetBlendSpace1D, 0x01C8);
		}

		// class UAISystemBase : public UObject
		TEST_METHOD(Class__Engine__AISystemBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISystemBase, AISystemClassName, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISystemBase, AISystemModuleName, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISystemBase, UnknownData_TENX, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISystemBase, bInstantiateAISystemOnClient, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISystemBase, UnknownData_JFFS, 0x0051);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISystemBase, 0x0058);
		}

		// class AAmbientSound : public AActor
		TEST_METHOD(Class__Engine__AmbientSound)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAmbientSound, AudioComponent, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAmbientSound, 0x0340);
		}

		// class UAnimationSettings : public UDeveloperSettings
		TEST_METHOD(Class__Engine__AnimationSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationSettings, CompressCommandletVersion, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationSettings, UnknownData_SDTC, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationSettings, KeyEndEffectorsMatchNameArray, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationSettings, DefaultCompressionAlgorithm, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationSettings, RotationCompressionFormat, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationSettings, TranslationCompressionFormat, 0x0059);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationSettings, UnknownData_QW65, 0x005A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationSettings, MaxCurveError, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationSettings, AlternativeCompressionThreshold, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationSettings, ForceRecompression, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationSettings, bOnlyCheckForMissingSkeletalMeshes, 0x0065);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationSettings, bForceBelowThreshold, 0x0066);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationSettings, bFirstRecompressUsingCurrentOrDefault, 0x0067);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationSettings, bRaiseMaxErrorToExisting, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationSettings, bTryExhaustiveSearch, 0x0069);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationSettings, bEnableSegmenting, 0x006A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationSettings, bEnablePerformanceLog, 0x006B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationSettings, bStripAnimationDataOnDedicatedServer, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationSettings, bTickAnimationOnSkeletalMeshInit, 0x006D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimationSettings, UnknownData_58YU, 0x006E);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimationSettings, 0x0070);
		}

		// class UAnimBlueprint : public UBlueprint
		TEST_METHOD(Class__Engine__AnimBlueprint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimBlueprint, UnknownData_OE1Q, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimBlueprint, TargetSkeleton, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimBlueprint, Groups, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimBlueprint, bUseMultiThreadedAnimationUpdate, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimBlueprint, bWarnAboutBlueprintUsage, 0x0101);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimBlueprint, UnknownData_7RY7, 0x0102);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimBlueprint, 0x0108);
		}

		// class UAnimBlueprintGeneratedClass : public UBlueprintGeneratedClass
		TEST_METHOD(Class__Engine__AnimBlueprintGeneratedClass)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimBlueprintGeneratedClass, UnknownData_ALXM, 0x02E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimBlueprintGeneratedClass, BakedStateMachines, 0x02E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimBlueprintGeneratedClass, TargetSkeleton, 0x02F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimBlueprintGeneratedClass, AnimNotifies, 0x0300);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimBlueprintGeneratedClass, UnknownData_5Q8O, 0x0310);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimBlueprintGeneratedClass, OrderedSavedPoseIndices, 0x0318);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimBlueprintGeneratedClass, UnknownData_J01V, 0x0328);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimBlueprintGeneratedClass, SyncGroupNames, 0x0340);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimBlueprintGeneratedClass, 0x0350);
		}

		// class UAnimClassData : public UObject
		TEST_METHOD(Class__Engine__AnimClassData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimClassData, UnknownData_GSCA, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimClassData, BakedStateMachines, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimClassData, TargetSkeleton, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimClassData, AnimNotifies, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimClassData, RootAnimNodeIndex, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimClassData, UnknownData_BP8L, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimClassData, OrderedSavedPoseIndices, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimClassData, RootAnimNodeProperty, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimClassData, AnimNodeProperties, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimClassData, SyncGroupNames, 0x0088);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimClassData, 0x0098);
		}

		// class UAnimClassInterface : public UInterface
		TEST_METHOD(Class__Engine__AnimClassInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimClassInterface, 0x0028);
		}

		// class UAnimSequenceBase : public UAnimationAsset
		TEST_METHOD(Class__Engine__AnimSequenceBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequenceBase, Notifies, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequenceBase, SequenceLength, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequenceBase, RateScale, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequenceBase, RawCurveData, 0x0110);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimSequenceBase, 0x0120);
		}

		// class UAnimCompositeBase : public UAnimSequenceBase
		TEST_METHOD(Class__Engine__AnimCompositeBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCompositeBase, 0x0120);
		}

		// class UAnimComposite : public UAnimCompositeBase
		TEST_METHOD(Class__Engine__AnimComposite)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimComposite, AnimationTrack, 0x0120);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimComposite, 0x0130);
		}

		// class UAnimCompress : public UObject
		TEST_METHOD(Class__Engine__AnimCompress)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress, Description, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress, UnknownData_7ATL, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress, IdealNumFramesPerSegment, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress, MaxNumFramesPerSegment, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress, TranslationCompressionFormat, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress, RotationCompressionFormat, 0x0045);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress, ScaleCompressionFormat, 0x0046);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress, UnknownData_OALZ, 0x0047);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress, MaxCurveError, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress, UnknownData_C6JX, 0x004C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCompress, 0x0050);
		}

		// class UAnimCompress_Automatic : public UAnimCompress
		TEST_METHOD(Class__Engine__AnimCompress_Automatic)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_Automatic, MaxEndEffectorError, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_Automatic, UnknownData_I68Z, 0x0055);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCompress_Automatic, 0x0058);
		}

		// class UAnimCompress_BitwiseCompressOnly : public UAnimCompress
		TEST_METHOD(Class__Engine__AnimCompress_BitwiseCompressOnly)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCompress_BitwiseCompressOnly, 0x0050);
		}

		// class UAnimCompress_LeastDestructive : public UAnimCompress
		TEST_METHOD(Class__Engine__AnimCompress_LeastDestructive)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCompress_LeastDestructive, 0x0050);
		}

		// class UAnimCompress_RemoveLinearKeys : public UAnimCompress
		TEST_METHOD(Class__Engine__AnimCompress_RemoveLinearKeys)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_RemoveLinearKeys, MaxPosDiff, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_RemoveLinearKeys, MaxAngleDiff, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_RemoveLinearKeys, MaxScaleDiff, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_RemoveLinearKeys, MaxEffectorDiff, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_RemoveLinearKeys, MinEffectorDiff, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_RemoveLinearKeys, EffectorDiffSocket, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_RemoveLinearKeys, ParentKeyScale, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_RemoveLinearKeys, UnknownData_UCZU, 0x006D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCompress_RemoveLinearKeys, 0x0070);
		}

		// class UAnimCompress_PerTrackCompression : public UAnimCompress_RemoveLinearKeys
		TEST_METHOD(Class__Engine__AnimCompress_PerTrackCompression)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_PerTrackCompression, MaxZeroingThreshold, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_PerTrackCompression, MaxPosDiffBitwise, 0x0074);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_PerTrackCompression, MaxAngleDiffBitwise, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_PerTrackCompression, MaxScaleDiffBitwise, 0x007C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_PerTrackCompression, AllowedRotationFormats, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_PerTrackCompression, AllowedTranslationFormats, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_PerTrackCompression, AllowedScaleFormats, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_PerTrackCompression, UnknownData_5W6A, 0x00B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_PerTrackCompression, ResampledFramerate, 0x00B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_PerTrackCompression, MinKeysForResampling, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_PerTrackCompression, UnknownData_GBSZ, 0x00BD);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_PerTrackCompression, TrackHeightBias, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_PerTrackCompression, ParentingDivisor, 0x00C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_PerTrackCompression, ParentingDivisorExponent, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_PerTrackCompression, UnknownData_AXOW, 0x00CD);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_PerTrackCompression, RotationErrorSourceRatio, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_PerTrackCompression, TranslationErrorSourceRatio, 0x00D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_PerTrackCompression, ScaleErrorSourceRatio, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_PerTrackCompression, MaxErrorPerTrackRatio, 0x00DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_PerTrackCompression, PerturbationProbeSize, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_PerTrackCompression, UnknownData_ZDF4, 0x00E4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCompress_PerTrackCompression, 0x00F0);
		}

		// class UAnimCompress_RemoveEverySecondKey : public UAnimCompress
		TEST_METHOD(Class__Engine__AnimCompress_RemoveEverySecondKey)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_RemoveEverySecondKey, MinKeys, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_RemoveEverySecondKey, UnknownData_T854, 0x0055);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCompress_RemoveEverySecondKey, 0x0058);
		}

		// class UAnimCompress_RemoveTrivialKeys : public UAnimCompress
		TEST_METHOD(Class__Engine__AnimCompress_RemoveTrivialKeys)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_RemoveTrivialKeys, MaxPosDiff, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_RemoveTrivialKeys, MaxAngleDiff, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_RemoveTrivialKeys, MaxScaleDiff, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimCompress_RemoveTrivialKeys, UnknownData_K9FD, 0x005C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCompress_RemoveTrivialKeys, 0x0060);
		}

		// class UAnimMontage : public UAnimCompositeBase
		TEST_METHOD(Class__Engine__AnimMontage)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimMontage, BlendIn, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimMontage, BlendInTime, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimMontage, UnknownData_KPCR, 0x015C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimMontage, BlendOut, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimMontage, BlendOutTime, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimMontage, BlendOutTriggerTime, 0x019C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimMontage, bMeshSpaceRootMotion, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimMontage, bEnableDynamicsType, 0x01A1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimMontage, UnknownData_WMKL, 0x01A2);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimMontage, SyncGroup, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimMontage, SyncSlotIndex, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimMontage, UnknownData_QWG7, 0x01B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimMontage, MarkerData, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimMontage, CompositeSections, 0x01D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimMontage, SlotAnimTracks, 0x01E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimMontage, BranchingPoints, 0x01F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimMontage, bEnableRootMotionTranslation, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimMontage, bEnableRootMotionRotation, 0x0209);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimMontage, bEnableAutoBlendOut, 0x020A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimMontage, RootMotionRootLock, 0x020B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimMontage, UnknownData_WS3V, 0x020C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimMontage, BranchingPointMarkers, 0x0210);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimMontage, BranchingPointStateNotifyIndices, 0x0220);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimMontage, TimeStretchCurve, 0x0230);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimMontage, TimeStretchCurveName, 0x0258);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimMontage, 0x0260);
		}

		// class UAnimNotify_PauseClothingSimulation : public UAnimNotify
		TEST_METHOD(Class__Engine__AnimNotify_PauseClothingSimulation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_PauseClothingSimulation, 0x0038);
		}

		// class UAnimNotify_PlaySound : public UAnimNotify
		TEST_METHOD(Class__Engine__AnimNotify_PlaySound)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_PlaySound, Sound, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_PlaySound, VolumeMultiplier, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_PlaySound, PitchMultiplier, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_PlaySound, UnknownData_I7I8, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_PlaySound, AttachName, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_PlaySound, 0x0058);
		}

		// class UAnimNotify_ResetClothingSimulation : public UAnimNotify
		TEST_METHOD(Class__Engine__AnimNotify_ResetClothingSimulation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_ResetClothingSimulation, 0x0038);
		}

		// class UAnimNotify_ResetDynamics : public UAnimNotify
		TEST_METHOD(Class__Engine__AnimNotify_ResetDynamics)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_ResetDynamics, 0x0038);
		}

		// class UAnimNotify_ResumeClothingSimulation : public UAnimNotify
		TEST_METHOD(Class__Engine__AnimNotify_ResumeClothingSimulation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_ResumeClothingSimulation, 0x0038);
		}

		// class UAnimNotifyState_DisableRootMotion : public UAnimNotifyState
		TEST_METHOD(Class__Engine__AnimNotifyState_DisableRootMotion)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_DisableRootMotion, 0x0030);
		}

		// class UAnimNotifyState_TimedParticleEffect : public UAnimNotifyState
		TEST_METHOD(Class__Engine__AnimNotifyState_TimedParticleEffect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_TimedParticleEffect, PSTemplate, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_TimedParticleEffect, SocketName, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_TimedParticleEffect, LocationOffset, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_TimedParticleEffect, RotationOffset, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_TimedParticleEffect, bDestroyAtEnd, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_TimedParticleEffect, UnknownData_FGRD, 0x0059);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_TimedParticleEffect, 0x0060);
		}

		// class UAnimNotifyState_Trail : public UAnimNotifyState
		TEST_METHOD(Class__Engine__AnimNotifyState_Trail)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Trail, PSTemplate, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Trail, FirstSocketName, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Trail, SecondSocketName, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Trail, WidthScaleMode, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Trail, UnknownData_EURO, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Trail, WidthScaleCurve, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Trail, UnknownData_8OP5, 0x0059);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_Trail, 0x0060);
		}

		// class UAnimSequence : public UAnimSequenceBase
		TEST_METHOD(Class__Engine__AnimSequence)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequence, NumFrames, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequence, UnknownData_X6VN, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequence, TrackToSkeletonMapTable, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequence, UnknownData_9G0T, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequence, AnimationTrackNamesIndexMap, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequence, UnknownData_AHTN, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequence, AdditiveAnimType, 0x022C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequence, RefPoseType, 0x022D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequence, UnknownData_HEK0, 0x022E);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequence, RefPoseSeq, 0x0230);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequence, RefFrameIndex, 0x0238);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequence, EncodingPkgVersion, 0x023C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequence, RetargetSource, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequence, Interpolation, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequence, bEnableRootMotion, 0x0249);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequence, RootMotionRootLock, 0x024A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequence, bForceRootLock, 0x024B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequence, bUseNormalizedRootMotionScale, 0x024C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequence, bRootMotionSettingsCopiedFromMontage, 0x024D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequence, UnknownData_EPFJ, 0x024E);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequence, AuthoredSyncMarkers, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequence, UnknownData_ECS0, 0x0260);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimSequence, 0x0278);
		}

		// class UAnimSet : public UObject
		TEST_METHOD(Class__Engine__AnimSet)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSet, UnknownData_MCTB, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSet, TrackBoneNames, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSet, LinkupCache, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSet, BoneUseAnimTranslation, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSet, ForceUseMeshTranslation, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSet, UseTranslationBoneNames, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSet, ForceMeshTranslationBoneNames, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSet, PreviewSkelMeshName, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSet, BestRatioSkelMeshName, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSet, UnknownData_BOW4, 0x00A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimSet, 0x00F0);
		}

		// class UAnimSingleNodeInstance : public UAnimInstance
		TEST_METHOD(Class__Engine__AnimSingleNodeInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSingleNodeInstance, CurrentAsset, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSingleNodeInstance, PostEvaluateAnimEvent, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSingleNodeInstance, UnknownData_K448, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimSingleNodeInstance, 0x0380);
		}

		// class UAnimStateMachineTypes : public UObject
		TEST_METHOD(Class__Engine__AnimStateMachineTypes)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimStateMachineTypes, 0x0028);
		}

		// class UApplicationLifecycleComponent : public UActorComponent
		TEST_METHOD(Class__Engine__ApplicationLifecycleComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UApplicationLifecycleComponent, ApplicationWillDeactivateDelegate, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UApplicationLifecycleComponent, ApplicationHasReactivatedDelegate, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UApplicationLifecycleComponent, ApplicationWillEnterBackgroundDelegate, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UApplicationLifecycleComponent, ApplicationHasEnteredForegroundDelegate, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UApplicationLifecycleComponent, ApplicationWillTerminateDelegate, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UApplicationLifecycleComponent, ApplicationShouldUnloadResourcesDelegate, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UApplicationLifecycleComponent, ApplicationReceivedStartupArgumentsDelegate, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UApplicationLifecycleComponent, OnTemperatureChangeDelegate, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UApplicationLifecycleComponent, OnLowPowerModeDelegate, 0x0180);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UApplicationLifecycleComponent, 0x0190);
		}

		// class UArrowComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Engine__ArrowComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UArrowComponent, UnknownData_7I00, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UArrowComponent, ArrowSize, 0x056C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UArrowComponent, bIsScreenSizeScaled, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UArrowComponent, UnknownData_Q8DH, 0x0571);
			CHEAT_GEAR_CHECK_OFFSET(CG::UArrowComponent, ScreenSize, 0x0574);
			CHEAT_GEAR_CHECK_OFFSET(CG::UArrowComponent, UnknownData_UGQ9, 0x0579);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UArrowComponent, 0x0580);
		}

		// class UAssetExportTask : public UObject
		TEST_METHOD(Class__Engine__AssetExportTask)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetExportTask, Object, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetExportTask, Exporter, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetExportTask, Filename, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetExportTask, bSelected, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetExportTask, bReplaceIdentical, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetExportTask, bPrompt, 0x004A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetExportTask, bAutomated, 0x004B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetExportTask, bUseFileArchive, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetExportTask, bWriteEmptyFiles, 0x004D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetExportTask, UnknownData_J0KT, 0x004E);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetExportTask, IgnoreObjectList, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetExportTask, Options, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetExportTask, Errors, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAssetExportTask, 0x0078);
		}

		// class UAssetManager : public UObject
		TEST_METHOD(Class__Engine__AssetManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManager, UnknownData_IF0U, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManager, ObjectReferenceList, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManager, bIsGlobalAsyncScanEnvironment, 0x0270);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManager, bShouldGuessTypeAndName, 0x0271);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManager, bShouldUseSynchronousLoad, 0x0272);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManager, bIsLoadingFromPakFiles, 0x0273);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManager, bShouldAcquireMissingChunksOnLoad, 0x0274);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManager, bOnlyCookProductionAssets, 0x0275);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManager, bIsBulkScanning, 0x0276);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManager, bIsPrimaryAssetDirectoryCurrent, 0x0277);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManager, bIsManagementDatabaseCurrent, 0x0278);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManager, bUpdateManagementDatabaseAfterScan, 0x0279);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManager, bIncludeOnlyOnDiskAssets, 0x027A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManager, UnknownData_3APK, 0x027B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManager, NumberOfSpawnedNotifications, 0x027C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManager, UnknownData_UH3G, 0x0280);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAssetManager, 0x03D8);
		}

		// class UAssetManagerSettings : public UDeveloperSettings
		TEST_METHOD(Class__Engine__AssetManagerSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManagerSettings, PrimaryAssetTypesToScan, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManagerSettings, DirectoriesToExclude, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManagerSettings, PrimaryAssetRules, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManagerSettings, bOnlyCookProductionAssets, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManagerSettings, bShouldManagerDetermineTypeAndName, 0x0069);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManagerSettings, bShouldGuessTypeAndNameInEditor, 0x006A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManagerSettings, bShouldAcquireMissingChunksOnLoad, 0x006B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManagerSettings, UnknownData_LUVB, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManagerSettings, PrimaryAssetIdRedirects, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManagerSettings, PrimaryAssetTypeRedirects, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManagerSettings, AssetPathRedirects, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetManagerSettings, MetaDataTagsForAssetRegistry, 0x00A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAssetManagerSettings, 0x00F0);
		}

		// class UAssetMappingTable : public UObject
		TEST_METHOD(Class__Engine__AssetMappingTable)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetMappingTable, MappedAssets, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAssetMappingTable, 0x0038);
		}

		// class UAsyncActionLoadPrimaryAssetBase : public UBlueprintAsyncActionBase
		TEST_METHOD(Class__Engine__AsyncActionLoadPrimaryAssetBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAsyncActionLoadPrimaryAssetBase, UnknownData_Y5MD, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAsyncActionLoadPrimaryAssetBase, 0x0078);
		}

		// class UAsyncActionLoadPrimaryAsset : public UAsyncActionLoadPrimaryAssetBase
		TEST_METHOD(Class__Engine__AsyncActionLoadPrimaryAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAsyncActionLoadPrimaryAsset, Completed, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAsyncActionLoadPrimaryAsset, 0x0088);
		}

		// class UAsyncActionLoadPrimaryAssetClass : public UAsyncActionLoadPrimaryAssetBase
		TEST_METHOD(Class__Engine__AsyncActionLoadPrimaryAssetClass)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAsyncActionLoadPrimaryAssetClass, Completed, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAsyncActionLoadPrimaryAssetClass, 0x0088);
		}

		// class UAsyncActionLoadPrimaryAssetList : public UAsyncActionLoadPrimaryAssetBase
		TEST_METHOD(Class__Engine__AsyncActionLoadPrimaryAssetList)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAsyncActionLoadPrimaryAssetList, Completed, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAsyncActionLoadPrimaryAssetList, 0x0088);
		}

		// class UAsyncActionLoadPrimaryAssetClassList : public UAsyncActionLoadPrimaryAssetBase
		TEST_METHOD(Class__Engine__AsyncActionLoadPrimaryAssetClassList)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAsyncActionLoadPrimaryAssetClassList, Completed, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAsyncActionLoadPrimaryAssetClassList, 0x0088);
		}

		// class UAsyncActionChangePrimaryAssetBundles : public UAsyncActionLoadPrimaryAssetBase
		TEST_METHOD(Class__Engine__AsyncActionChangePrimaryAssetBundles)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAsyncActionChangePrimaryAssetBundles, Completed, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAsyncActionChangePrimaryAssetBundles, 0x0088);
		}

		// class AAtmosphericFog : public AInfo
		TEST_METHOD(Class__Engine__AtmosphericFog)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAtmosphericFog, AtmosphericFogComponent, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAtmosphericFog, 0x0340);
		}

		// class UAtmosphericFogComponent : public USceneComponent
		TEST_METHOD(Class__Engine__AtmosphericFogComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtmosphericFogComponent, UnknownData_5W6A, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtmosphericFogComponent, FogMultiplier, 0x024C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtmosphericFogComponent, DensityMultiplier, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtmosphericFogComponent, DensityOffset, 0x0254);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtmosphericFogComponent, DistanceScale, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtmosphericFogComponent, AltitudeScale, 0x025C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtmosphericFogComponent, DistanceOffset, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtmosphericFogComponent, GroundOffset, 0x0264);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtmosphericFogComponent, StartDistance, 0x0268);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtmosphericFogComponent, SunDiscScale, 0x026C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtmosphericFogComponent, DefaultBrightness, 0x0270);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtmosphericFogComponent, DefaultLightColor, 0x0274);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtmosphericFogComponent, UnknownData_DUHD, 0x0279);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtmosphericFogComponent, PrecomputeParams, 0x027C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtmosphericFogComponent, TransmittanceTexture, 0x02A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtmosphericFogComponent, IrradianceTexture, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtmosphericFogComponent, UnknownData_C9RX, 0x02B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAtmosphericFogComponent, 0x0430);
		}

		// class UAudioSettings : public UDeveloperSettings
		TEST_METHOD(Class__Engine__AudioSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioSettings, DefaultSoundClassName, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioSettings, DefaultMediaSoundClassName, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioSettings, DefaultSoundConcurrencyName, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioSettings, DefaultBaseSoundMix, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioSettings, VoiPSoundClass, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioSettings, VoiPSampleRate, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioSettings, UnknownData_ZK49, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioSettings, VoipBufferingDelay, 0x00B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioSettings, DefaultReverbSendLevel, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioSettings, MaximumConcurrentStreams, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioSettings, QualityLevels, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioSettings, UnknownData_NT9E, 0x00D1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioSettings, MaxWaveInstances, 0x00D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioSettings, NumStoppingSources, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioSettings, PanningMethod, 0x00DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioSettings, MonoChannelUpmixMethod, 0x00DD);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioSettings, UnknownData_EU9B, 0x00DE);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioSettings, DialogueFilenameFormat, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioSettings, UnknownData_E516, 0x00F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAudioSettings, 0x00F8);
		}

		// class AAudioVolume : public AVolume
		TEST_METHOD(Class__Engine__AudioVolume)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAudioVolume, Priority, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAudioVolume, UnknownData_AD10, 0x0375);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAudioVolume, Settings, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAudioVolume, AmbientZoneSettings, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAudioVolume, UnknownData_OCGL, 0x03BC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAudioVolume, 0x03C0);
		}

		// class UAutomationTestSettings : public UObject
		TEST_METHOD(Class__Engine__AutomationTestSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAutomationTestSettings, EngineTestModules, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAutomationTestSettings, EditorTestModules, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAutomationTestSettings, AutomationTestmap, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAutomationTestSettings, EditorPerformanceTestMaps, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAutomationTestSettings, AssetsToOpen, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAutomationTestSettings, BuildPromotionTest, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAutomationTestSettings, MaterialEditorPromotionTest, 0x0270);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAutomationTestSettings, ParticleEditorPromotionTest, 0x02A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAutomationTestSettings, BlueprintEditorPromotionTest, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAutomationTestSettings, TestLevelFolders, 0x02E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAutomationTestSettings, ExternalTools, 0x02F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAutomationTestSettings, ImportExportTestDefinitions, 0x0300);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAutomationTestSettings, LaunchOnSettings, 0x0310);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAutomationTestSettings, DefaultScreenshotResolution, 0x0320);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAutomationTestSettings, 0x0328);
		}

		// class UAvoidanceManager : public UObject
		TEST_METHOD(Class__Engine__AvoidanceManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAvoidanceManager, UnknownData_0IFI, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAvoidanceManager, DefaultTimeToLive, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAvoidanceManager, LockTimeAfterAvoid, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAvoidanceManager, LockTimeAfterClean, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAvoidanceManager, DeltaTimeToPredict, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAvoidanceManager, ArtificialRadiusExpansion, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAvoidanceManager, TestHeightDifference, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAvoidanceManager, HeightCheckMargin, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAvoidanceManager, UnknownData_D9C8, 0x004C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAvoidanceManager, 0x00E0);
		}

		// class UBillboardComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Engine__BillboardComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBillboardComponent, Sprite, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBillboardComponent, UnknownData_IQBM, 0x0571);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBillboardComponent, ScreenSize, 0x0574);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBillboardComponent, U, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBillboardComponent, UL, 0x057C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBillboardComponent, V, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBillboardComponent, VL, 0x0584);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBillboardComponent, UnknownData_Z047, 0x0588);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBillboardComponent, 0x0590);
		}

		// class UBlendableInterface : public UInterface
		TEST_METHOD(Class__Engine__BlendableInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlendableInterface, 0x0028);
		}

		// class USkeleton : public UObject
		TEST_METHOD(Class__Engine__Skeleton)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeleton, UnknownData_VXW8, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeleton, BoneTree, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeleton, RefLocalPoses, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeleton, UnknownData_Y4J3, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeleton, VirtualBoneGuid, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeleton, VirtualBones, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeleton, Sockets, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeleton, UnknownData_T8PD, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeleton, SmartNames, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeleton, UnknownData_RN6H, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeleton, BlendProfiles, 0x0268);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeleton, SlotGroups, 0x0278);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeleton, UnknownData_DKID, 0x0288);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeleton, AssetUserData, 0x0350);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USkeleton, 0x0360);
		}

		// class UBlendProfile : public UObject
		TEST_METHOD(Class__Engine__BlendProfile)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlendProfile, UnknownData_4T8Q, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlendProfile, OwningSkeleton, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlendProfile, ProfileEntries, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlendProfile, 0x0048);
		}

		// class ABlockingVolume : public AVolume
		TEST_METHOD(Class__Engine__BlockingVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABlockingVolume, 0x0370);
		}

		// class UBlueprintMapLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__BlueprintMapLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlueprintMapLibrary, 0x0028);
		}

		// class UPlatformGameInstance : public UGameInstance
		TEST_METHOD(Class__Engine__PlatformGameInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlatformGameInstance, ApplicationWillDeactivateDelegate, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlatformGameInstance, ApplicationHasReactivatedDelegate, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlatformGameInstance, ApplicationWillEnterBackgroundDelegate, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlatformGameInstance, ApplicationHasEnteredForegroundDelegate, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlatformGameInstance, ApplicationWillTerminateDelegate, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlatformGameInstance, ApplicationShouldUnloadResourcesDelegate, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlatformGameInstance, ApplicationReceivedStartupArgumentsDelegate, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlatformGameInstance, ApplicationRegisteredForRemoteNotificationsDelegate, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlatformGameInstance, ApplicationRegisteredForUserNotificationsDelegate, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlatformGameInstance, ApplicationFailedToRegisterForRemoteNotificationsDelegate, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlatformGameInstance, ApplicationReceivedRemoteNotificationDelegate, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlatformGameInstance, ApplicationReceivedLocalNotificationDelegate, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlatformGameInstance, ApplicationReceivedScreenOrientationChangedNotificationDelegate, 0x0160);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlatformGameInstance, 0x0170);
		}

		// class UBlueprintPlatformLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__BlueprintPlatformLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlueprintPlatformLibrary, 0x0028);
		}

		// class UBlueprintSetLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__BlueprintSetLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlueprintSetLibrary, 0x0028);
		}

		// class UBodySetup : public UObject
		TEST_METHOD(Class__Engine__BodySetup)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBodySetup, AggGeom, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBodySetup, BoneName, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBodySetup, PhysicsType, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBodySetup, UnknownData_XXZY, 0x008A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBodySetup, CollisionReponse, 0x008B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBodySetup, CollisionTraceFlag, 0x008C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBodySetup, UnknownData_T4CN, 0x008D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBodySetup, PhysMaterial, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBodySetup, WalkableSlopeOverride, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBodySetup, UnknownData_4J0Q, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBodySetup, DefaultInstance, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBodySetup, UnknownData_GP3B, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBodySetup, BuildScale3D, 0x0268);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBodySetup, UnknownData_MKVA, 0x0274);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBodySetup, 0x0280);
		}

		// class UBoneMaskFilter : public UObject
		TEST_METHOD(Class__Engine__BoneMaskFilter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBoneMaskFilter, BlendPoses, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBoneMaskFilter, 0x0038);
		}

		// class UBookmarkBase : public UObject
		TEST_METHOD(Class__Engine__BookmarkBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBookmarkBase, 0x0028);
		}

		// class UBookMark : public UBookmarkBase
		TEST_METHOD(Class__Engine__BookMark)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBookMark, Location, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBookMark, Rotation, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBookMark, HiddenLevels, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBookMark, 0x0050);
		}

		// class UBookMark2D : public UBookmarkBase
		TEST_METHOD(Class__Engine__BookMark2D)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBookMark2D, Zoom2D, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBookMark2D, Location, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBookMark2D, UnknownData_K1Y0, 0x0034);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBookMark2D, 0x0038);
		}

		// class AReflectionCapture : public AActor
		TEST_METHOD(Class__Engine__ReflectionCapture)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AReflectionCapture, CaptureComponent, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AReflectionCapture, 0x0340);
		}

		// class ABoxReflectionCapture : public AReflectionCapture
		TEST_METHOD(Class__Engine__BoxReflectionCapture)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABoxReflectionCapture, 0x0340);
		}

		// class UReflectionCaptureComponent : public USceneComponent
		TEST_METHOD(Class__Engine__ReflectionCaptureComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UReflectionCaptureComponent, CaptureOffsetComponent, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UReflectionCaptureComponent, ReflectionSourceType, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UReflectionCaptureComponent, UnknownData_EWNI, 0x0251);
			CHEAT_GEAR_CHECK_OFFSET(CG::UReflectionCaptureComponent, Cubemap, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UReflectionCaptureComponent, SourceCubemapAngle, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::UReflectionCaptureComponent, Brightness, 0x0264);
			CHEAT_GEAR_CHECK_OFFSET(CG::UReflectionCaptureComponent, CaptureOffset, 0x0268);
			CHEAT_GEAR_CHECK_OFFSET(CG::UReflectionCaptureComponent, MapBuildDataId, 0x0274);
			CHEAT_GEAR_CHECK_OFFSET(CG::UReflectionCaptureComponent, UnknownData_R7WL, 0x0284);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UReflectionCaptureComponent, 0x02BC);
		}

		// class UBoxReflectionCaptureComponent : public UReflectionCaptureComponent
		TEST_METHOD(Class__Engine__BoxReflectionCaptureComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBoxReflectionCaptureComponent, UnknownData_AT1M, 0x02BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBoxReflectionCaptureComponent, PreviewInfluenceBox, 0x02C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBoxReflectionCaptureComponent, PreviewCaptureBox, 0x02C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBoxReflectionCaptureComponent, 0x02D0);
		}

		// class UBreakpoint : public UObject
		TEST_METHOD(Class__Engine__Breakpoint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBreakpoint, UnknownData_1SAY, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBreakpoint, Node, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBreakpoint, UnknownData_XMJF, 0x0039);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBreakpoint, 0x0040);
		}

		// class UBrushBuilder : public UObject
		TEST_METHOD(Class__Engine__BrushBuilder)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBrushBuilder, BitmapFilename, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBrushBuilder, ToolTip, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBrushBuilder, UnknownData_V94L, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBrushBuilder, Vertices, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBrushBuilder, Polys, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBrushBuilder, Layer, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBrushBuilder, UnknownData_JD7Z, 0x0079);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBrushBuilder, 0x0080);
		}

		// class UBrushComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Engine__BrushComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBrushComponent, Brush, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBrushComponent, BrushBodySetup, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBrushComponent, UnknownData_3ZE0, 0x0578);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBrushComponent, 0x0580);
		}

		// class ABrushShape : public ABrush
		TEST_METHOD(Class__Engine__BrushShape)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABrushShape, 0x0370);
		}

		// class UButtonStyleAsset : public UObject
		TEST_METHOD(Class__Engine__ButtonStyleAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UButtonStyleAsset, ButtonStyle, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UButtonStyleAsset, 0x02A0);
		}

		// class UCameraAnim : public UObject
		TEST_METHOD(Class__Engine__CameraAnim)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraAnim, CameraInterpGroup, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraAnim, AnimLength, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraAnim, BoundingBox, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraAnim, UnknownData_PUYJ, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraAnim, BaseFOV, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraAnim, UnknownData_6XDJ, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraAnim, BasePostProcessSettings, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraAnim, BasePostProcessBlendWeight, 0x0690);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraAnim, UnknownData_VAQK, 0x0694);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraAnim, 0x06A0);
		}

		// class UCameraAnimInst : public UObject
		TEST_METHOD(Class__Engine__CameraAnimInst)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraAnimInst, CamAnim, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraAnimInst, InterpGroupInst, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraAnimInst, UnknownData_GKXO, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraAnimInst, PlayRate, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraAnimInst, UnknownData_5VD2, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraAnimInst, MoveTrack, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraAnimInst, MoveInst, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraAnimInst, PlaySpace, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraAnimInst, UnknownData_YZOZ, 0x0079);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraAnimInst, 0x0110);
		}

		// class ACameraBlockingVolume : public AVolume
		TEST_METHOD(Class__Engine__CameraBlockingVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACameraBlockingVolume, 0x0370);
		}

		// class UCameraModifier : public UObject
		TEST_METHOD(Class__Engine__CameraModifier)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraModifier, UnknownData_ZZWB, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraModifier, Priority, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraModifier, UnknownData_74H7, 0x002D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraModifier, CameraOwner, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraModifier, AlphaInTime, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraModifier, AlphaOutTime, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraModifier, Alpha, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraModifier, UnknownData_6U0J, 0x0044);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraModifier, 0x0048);
		}

		// class UCameraModifier_CameraShake : public UCameraModifier
		TEST_METHOD(Class__Engine__CameraModifier_CameraShake)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraModifier_CameraShake, ActiveShakes, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraModifier_CameraShake, SplitScreenShakeScale, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraModifier_CameraShake, UnknownData_ZW8I, 0x005C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraModifier_CameraShake, 0x0060);
		}

		// class UCameraShake : public UObject
		TEST_METHOD(Class__Engine__CameraShake)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraShake, UnknownData_U18F, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraShake, OscillationDuration, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraShake, OscillationBlendInTime, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraShake, OscillationBlendOutTime, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraShake, RotOscillation, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraShake, LocOscillation, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraShake, FOVOscillation, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraShake, AnimPlayRate, 0x008C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraShake, AnimScale, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraShake, AnimBlendInTime, 0x0094);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraShake, AnimBlendOutTime, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraShake, RandomAnimSegmentDuration, 0x009C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraShake, anim, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraShake, UnknownData_X6VR, 0x00A9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraShake, CameraOwner, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraShake, UnknownData_YVQB, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraShake, ShakeScale, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraShake, OscillatorTimeRemaining, 0x014C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraShake, AnimInst, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCameraShake, UnknownData_NF5E, 0x0158);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCameraShake, 0x0160);
		}

		// class UCanvas : public UObject
		TEST_METHOD(Class__Engine__Canvas)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCanvas, OrgX, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCanvas, OrgY, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCanvas, ClipX, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCanvas, ClipY, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCanvas, DrawColor, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCanvas, UnknownData_WQVY, 0x003D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCanvas, SizeX, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCanvas, SizeY, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCanvas, UnknownData_SE8N, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCanvas, ColorModulate, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCanvas, DefaultTexture, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCanvas, GradientTexture0, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCanvas, ReporterGraph, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCanvas, UnknownData_Y558, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCanvas, 0x02D0);
		}

		// class UTextureRenderTarget : public UTexture
		TEST_METHOD(Class__Engine__TextureRenderTarget)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextureRenderTarget, TargetGamma, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextureRenderTarget, UnknownData_AC8D, 0x00B4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextureRenderTarget, 0x00B8);
		}

		// class UTextureRenderTarget2D : public UTextureRenderTarget
		TEST_METHOD(Class__Engine__TextureRenderTarget2D)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextureRenderTarget2D, SizeX, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextureRenderTarget2D, SizeY, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextureRenderTarget2D, ClearColor, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextureRenderTarget2D, AddressX, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextureRenderTarget2D, AddressY, 0x00D1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextureRenderTarget2D, RenderTargetFormat, 0x00D3);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextureRenderTarget2D, OverrideFormat, 0x00D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextureRenderTarget2D, UnknownData_Q719, 0x00D5);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextureRenderTarget2D, 0x00E0);
		}

		// class UCanvasRenderTarget2D : public UTextureRenderTarget2D
		TEST_METHOD(Class__Engine__CanvasRenderTarget2D)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCanvasRenderTarget2D, OnCanvasRenderTargetUpdate, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCanvasRenderTarget2D, World, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCanvasRenderTarget2D, bShouldClearRenderTargetOnReceiveUpdate, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCanvasRenderTarget2D, UnknownData_6YED, 0x00F9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCanvasRenderTarget2D, 0x0100);
		}

		// class UCheckBoxStyleAsset : public UObject
		TEST_METHOD(Class__Engine__CheckBoxStyleAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckBoxStyleAsset, CheckBoxStyle, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCheckBoxStyleAsset, 0x05A8);
		}

		// class UChildActorComponent : public USceneComponent
		TEST_METHOD(Class__Engine__ChildActorComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UChildActorComponent, ChildActorClass, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChildActorComponent, ChildActor, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChildActorComponent, ChildActorTemplate, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChildActorComponent, UnknownData_GJXT, 0x0260);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UChildActorComponent, 0x0280);
		}

		// class UChildConnection : public UNetConnection
		TEST_METHOD(Class__Engine__ChildConnection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UChildConnection, Parent, 0x1918);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UChildConnection, 0x1920);
		}

		// class UPlatformInterfaceBase : public UObject
		TEST_METHOD(Class__Engine__PlatformInterfaceBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlatformInterfaceBase, AllDelegates, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlatformInterfaceBase, 0x0038);
		}

		// class UCloudStorageBase : public UPlatformInterfaceBase
		TEST_METHOD(Class__Engine__CloudStorageBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCloudStorageBase, LocalCloudFiles, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCloudStorageBase, UnknownData_8I22, 0x0049);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCloudStorageBase, 0x0050);
		}

		// class UCollisionProfile : public UDeveloperSettings
		TEST_METHOD(Class__Engine__CollisionProfile)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCollisionProfile, Profiles, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCollisionProfile, DefaultChannelResponses, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCollisionProfile, EditProfiles, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCollisionProfile, ProfileRedirects, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCollisionProfile, CollisionChannelRedirects, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCollisionProfile, UnknownData_KR61, 0x0088);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCollisionProfile, 0x0158);
		}

		// class UCommandlet : public UObject
		TEST_METHOD(Class__Engine__Commandlet)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCommandlet, HelpDescription, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCommandlet, HelpUsage, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCommandlet, HelpWebLink, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCommandlet, HelpParamNames, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCommandlet, HelpParamDescriptions, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCommandlet, UnknownData_D5B9, 0x0079);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCommandlet, 0x0080);
		}

		// class UDynamicBlueprintBinding : public UObject
		TEST_METHOD(Class__Engine__DynamicBlueprintBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDynamicBlueprintBinding, 0x0028);
		}

		// class UComponentDelegateBinding : public UDynamicBlueprintBinding
		TEST_METHOD(Class__Engine__ComponentDelegateBinding)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UComponentDelegateBinding, ComponentDelegateBindings, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UComponentDelegateBinding, 0x0038);
		}

		// class UCurveTable : public UObject
		TEST_METHOD(Class__Engine__CurveTable)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCurveTable, UnknownData_MK8M, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCurveTable, 0x0098);
		}

		// class UCompositeCurveTable : public UCurveTable
		TEST_METHOD(Class__Engine__CompositeCurveTable)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompositeCurveTable, ParentTables, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompositeCurveTable, OldParentTables, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCompositeCurveTable, 0x00B8);
		}

		// class UDataTable : public UObject
		TEST_METHOD(Class__Engine__DataTable)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDataTable, RowStruct, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDataTable, UnknownData_7C22, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDataTable, UnknownData_JFNW, 0x0081);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDataTable, 0x00A0);
		}

		// class UCompositeDataTable : public UDataTable
		TEST_METHOD(Class__Engine__CompositeDataTable)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompositeDataTable, ParentTables, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompositeDataTable, UnknownData_U6Z0, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompositeDataTable, OldParentTables, 0x00B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCompositeDataTable, 0x00C8);
		}

		// class UEngine : public UObject
		TEST_METHOD(Class__Engine__Engine)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, UnknownData_1FQR, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, TinyFont, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, TinyFontName, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, SmallFont, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, SmallFontName, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, MediumFont, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, MediumFontName, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, LargeFont, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, LargeFontName, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, SubtitleFont, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, SubtitleFontName, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, AdditionalFonts, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, UnknownData_TXKN, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, AdditionalFontNames, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ConsoleClass, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ConsoleClassName, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, GameViewportClientClass, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, GameViewportClientClassName, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, LocalPlayerClass, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, LocalPlayerClassName, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, WorldSettingsClass, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, WorldSettingsClassName, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, NavigationSystemClassName, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, NavigationSystemClass, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, NavigationSystemConfigClassName, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, NavigationSystemConfigClass, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, AvoidanceManagerClassName, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, AvoidanceManagerClass, 0x01D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, PhysicsCollisionHandlerClass, 0x01D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, PhysicsCollisionHandlerClassName, 0x01E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, GameUserSettingsClassName, 0x01F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, GameUserSettingsClass, 0x0210);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, AIControllerClassName, 0x0218);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, GameUserSettings, 0x0230);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, LevelScriptActorClass, 0x0238);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, LevelScriptActorClassName, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, DefaultBlueprintBaseClassName, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, GameSingletonClassName, 0x0270);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, GameSingleton, 0x0288);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, AssetManagerClassName, 0x0290);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, AssetManager, 0x02A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, DefaultTexture, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, DefaultTextureName, 0x02B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, DefaultDiffuseTexture, 0x02D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, DefaultDiffuseTextureName, 0x02D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, DefaultBSPVertexTexture, 0x02F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, DefaultBSPVertexTextureName, 0x02F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, HighFrequencyNoiseTexture, 0x0310);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, HighFrequencyNoiseTextureName, 0x0318);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, DefaultBokehTexture, 0x0330);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, DefaultBokehTextureName, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, DefaultBloomKernelTexture, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, DefaultBloomKernelTextureName, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, WireframeMaterial, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, WireframeMaterialName, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, DebugMeshMaterial, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, DebugMeshMaterialName, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, LevelColorationLitMaterial, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, LevelColorationLitMaterialName, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, LevelColorationUnlitMaterial, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, LevelColorationUnlitMaterialName, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, LightingTexelDensityMaterial, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, LightingTexelDensityName, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ShadedLevelColorationLitMaterial, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ShadedLevelColorationLitMaterialName, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ShadedLevelColorationUnlitMaterial, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ShadedLevelColorationUnlitMaterialName, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, RemoveSurfaceMaterial, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, RemoveSurfaceMaterialName, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, VertexColorMaterial, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, VertexColorMaterialName, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, VertexColorViewModeMaterial_ColorOnly, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, VertexColorViewModeMaterialName_ColorOnly, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, VertexColorViewModeMaterial_AlphaAsColor, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, VertexColorViewModeMaterialName_AlphaAsColor, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, VertexColorViewModeMaterial_RedOnly, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, VertexColorViewModeMaterialName_RedOnly, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, VertexColorViewModeMaterial_GreenOnly, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, VertexColorViewModeMaterialName_GreenOnly, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, VertexColorViewModeMaterial_BlueOnly, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, VertexColorViewModeMaterialName_BlueOnly, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, DebugEditorMaterialName, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ConstraintLimitMaterial, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ConstraintLimitMaterialX, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ConstraintLimitMaterialXAxis, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ConstraintLimitMaterialY, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ConstraintLimitMaterialYAxis, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ConstraintLimitMaterialZ, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ConstraintLimitMaterialZAxis, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ConstraintLimitMaterialPrismatic, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, InvalidLightmapSettingsMaterial, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, InvalidLightmapSettingsMaterialName, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, PreviewShadowsIndicatorMaterial, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, PreviewShadowsIndicatorMaterialName, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ArrowMaterial, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ArrowMaterialName, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, LightingOnlyBrightness, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ShaderComplexityColors, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, QuadComplexityColors, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, LightComplexityColors, 0x05B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, StationaryLightOverlapColors, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, LODColorationColors, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, HLODColorationColors, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, StreamingAccuracyColors, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, MaxPixelShaderAdditiveComplexityCount, 0x0608);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, MaxES2PixelShaderAdditiveComplexityCount, 0x060C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, MaxES3PixelShaderAdditiveComplexityCount, 0x0610);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, MinLightMapDensity, 0x0614);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, IdealLightMapDensity, 0x0618);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, MaxLightMapDensity, 0x061C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, UnknownData_QR02, 0x0621);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, RenderLightMapDensityGrayscaleScale, 0x0624);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, RenderLightMapDensityColorScale, 0x0628);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, LightMapDensityVertexMappedColor, 0x062C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, LightMapDensitySelectedColor, 0x063C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, UnknownData_0KW5, 0x064C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, StatColorMappings, 0x0650);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, DefaultPhysMaterial, 0x0660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, DefaultPhysMaterialName, 0x0668);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ActiveGameNameRedirects, 0x0680);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ActiveClassRedirects, 0x0690);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ActivePluginRedirects, 0x06A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ActiveStructRedirects, 0x06B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, PreIntegratedSkinBRDFTexture, 0x06C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, PreIntegratedSkinBRDFTextureName, 0x06C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ToneTexture, 0x06E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ToneTextureName, 0x06E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, MiniFontTexture, 0x0700);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, MiniFontTextureName, 0x0708);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, WeightMapPlaceholderTexture, 0x0720);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, WeightMapPlaceholderTextureName, 0x0728);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, LightMapDensityTexture, 0x0740);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, LightMapDensityTextureName, 0x0748);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, UnknownData_3LQI, 0x0760);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, GameViewport, 0x0768);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, DeferredCommands, 0x0770);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, TickCycles, 0x0780);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, GameCycles, 0x0784);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ClientCycles, 0x0788);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, NearClipPlane, 0x078C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, UnknownData_RTFG, 0x0791);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, MaximumLoopIterationCount, 0x0794);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, UnknownData_77AU, 0x0799);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, FixedFrameRate, 0x079C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, SmoothedFrameRateRange, 0x07A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, DefaultCustomTimeStep, 0x07B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, CurrentCustomTimeStep, 0x07B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, CustomTimeStepClassName, 0x07C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, DefaultTimecodeProvider, 0x07D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, CustomTimecodeProvider, 0x07E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, DefaultTimecodeProviderClassName, 0x07E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, TimecodeProviderClassName, 0x0800);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, DefaultTimecodeFrameRate, 0x0818);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, UnknownData_JHU4, 0x0821);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, NumPawnsAllowedToBeSpawnedInAFrame, 0x0824);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, UnknownData_B5ZF, 0x0829);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, C_WorldBox, 0x082C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, C_BrushWire, 0x0830);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, C_AddWire, 0x0834);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, C_SubtractWire, 0x0838);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, C_SemiSolidWire, 0x083C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, C_NonSolidWire, 0x0840);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, C_WireBackground, 0x0844);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, C_ScaleBoxHi, 0x0848);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, C_VolumeCollision, 0x084C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, C_BSPCollision, 0x0850);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, C_OrthoBackground, 0x0854);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, C_Volume, 0x0858);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, C_BrushShape, 0x085C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, StreamingDistanceFactor, 0x0860);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, UnknownData_Z8O9, 0x0864);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, GameScreenshotSaveDirectory, 0x0868);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, TransitionType, 0x0878);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, UnknownData_W2ZR, 0x0879);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, TransitionDescription, 0x0880);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, TransitionGameMode, 0x0890);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, MeshLODRange, 0x08A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, UnknownData_TVXI, 0x08A5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, CameraRotationThreshold, 0x08A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, CameraTranslationThreshold, 0x08AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, PrimitiveProbablyVisibleTime, 0x08B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, MaxOcclusionPixelsFraction, 0x08B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, UnknownData_HC5U, 0x08B9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, MaxParticleResize, 0x08BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, MaxParticleResizeWarn, 0x08C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, UnknownData_03BR, 0x08C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, PendingDroppedNotes, 0x08C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, NetClientTicksPerSecond, 0x08D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, DisplayGamma, 0x08DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, MinDesiredFrameRate, 0x08E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, DefaultSelectedMaterialColor, 0x08E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, SelectedMaterialColor, 0x08F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, SelectionOutlineColor, 0x0904);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, SubduedSelectionOutlineColor, 0x0914);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, SelectedMaterialColorOverride, 0x0924);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, bIsOverridingSelectedColor, 0x0934);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, UnknownData_RGST, 0x0935);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, UnknownData_Z148, 0x0939);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, bEnableVisualLogRecordingOnStart, 0x093C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, UnknownData_VKSS, 0x0940);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ScreenSaverInhibitorSemaphore, 0x0944);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, UnknownData_EGUT, 0x0949);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ParticleEventManagerClassPath, 0x0950);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, UnknownData_TRZM, 0x0960);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, SelectionHighlightIntensity, 0x0970);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, SelectionMeshSectionHighlightIntensity, 0x0974);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, BSPSelectionHighlightIntensity, 0x0978);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, HoverHighlightIntensity, 0x097C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, SelectionHighlightIntensityBillboards, 0x0980);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, UnknownData_K1NG, 0x0984);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, NetDriverDefinitions, 0x0BB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, ServerActors, 0x0BC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, RuntimeServerActors, 0x0BD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, UnknownData_4H9W, 0x0BE1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, NextWorldContextHandle, 0x0BF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngine, UnknownData_F6RQ, 0x0BFC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEngine, 0x0CC8);
		}

		// class UScriptViewportClient : public UObject
		TEST_METHOD(Class__Engine__ScriptViewportClient)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UScriptViewportClient, UnknownData_TNQT, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UScriptViewportClient, 0x0038);
		}

		// class UGameViewportClient : public UScriptViewportClient
		TEST_METHOD(Class__Engine__GameViewportClient)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameViewportClient, UnknownData_2LIZ, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameViewportClient, ViewportConsole, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameViewportClient, DebugProperties, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameViewportClient, UnknownData_YWEO, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameViewportClient, World, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameViewportClient, GameInstance, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameViewportClient, UnknownData_L6NI, 0x00A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameViewportClient, 0x0300);
		}

		// class UConsole : public UObject
		TEST_METHOD(Class__Engine__Console)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UConsole, UnknownData_7CDE, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UConsole, ConsoleTargetPlayer, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UConsole, DefaultTexture_Black, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UConsole, DefaultTexture_White, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UConsole, UnknownData_VIUX, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UConsole, HistoryBuffer, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UConsole, UnknownData_9H4F, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UConsole, 0x0130);
		}

		// class UControlChannel : public UChannel
		TEST_METHOD(Class__Engine__ControlChannel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UControlChannel, UnknownData_ITAP, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UControlChannel, 0x0080);
		}

		// class UControlRigInterface : public UInterface
		TEST_METHOD(Class__Engine__ControlRigInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UControlRigInterface, 0x0028);
		}

		// class UStreamingSettings : public UDeveloperSettings
		TEST_METHOD(Class__Engine__StreamingSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UStreamingSettings, UnknownData_5XUK, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStreamingSettings, TimeLimitExceededMultiplier, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStreamingSettings, TimeLimitExceededMinTime, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStreamingSettings, MinBulkDataSizeForAsyncLoading, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStreamingSettings, UnknownData_ZKFE, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStreamingSettings, AsyncLoadingTimeLimit, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStreamingSettings, PriorityAsyncLoadingExtraTime, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStreamingSettings, LevelStreamingActorsUpdateTimeLimit, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStreamingSettings, PriorityLevelStreamingActorsUpdateExtraTime, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStreamingSettings, LevelStreamingComponentsRegistrationGranularity, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStreamingSettings, LevelStreamingUnregisterComponentsTimeLimit, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStreamingSettings, LevelStreamingComponentsUnregistrationGranularity, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStreamingSettings, UnknownData_Z1EB, 0x0069);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStreamingSettings, 0x0070);
		}

		// class UGarbageCollectionSettings : public UDeveloperSettings
		TEST_METHOD(Class__Engine__GarbageCollectionSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGarbageCollectionSettings, TimeBetweenPurgingPendingKillObjects, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGarbageCollectionSettings, UnknownData_XYT8, 0x003D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGarbageCollectionSettings, MinGCClusterSize, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGarbageCollectionSettings, NumRetriesBeforeForcingGC, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGarbageCollectionSettings, MaxObjectsNotConsideredByGC, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGarbageCollectionSettings, SizeOfPermanentObjectPool, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGarbageCollectionSettings, MaxObjectsInGame, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGarbageCollectionSettings, MaxObjectsInEditor, 0x0054);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGarbageCollectionSettings, 0x0058);
		}

		// class ACullDistanceVolume : public AVolume
		TEST_METHOD(Class__Engine__CullDistanceVolume)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ACullDistanceVolume, CullDistances, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACullDistanceVolume, UnknownData_698L, 0x0381);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACullDistanceVolume, 0x0388);
		}

		// class UCurveBase : public UObject
		TEST_METHOD(Class__Engine__CurveBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCurveBase, UnknownData_Z2D0, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCurveBase, 0x0030);
		}

		// class UCurveEdPresetCurve : public UObject
		TEST_METHOD(Class__Engine__CurveEdPresetCurve)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCurveEdPresetCurve, 0x0028);
		}

		// class UCurveFloat : public UCurveBase
		TEST_METHOD(Class__Engine__CurveFloat)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCurveFloat, FloatCurve, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCurveFloat, bIsEventCurve, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCurveFloat, UnknownData_J33A, 0x00A1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCurveFloat, 0x00A8);
		}

		// class UCurveLinearColor : public UCurveBase
		TEST_METHOD(Class__Engine__CurveLinearColor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCurveLinearColor, FloatCurves, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCurveLinearColor, AdjustHue, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCurveLinearColor, AdjustSaturation, 0x01F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCurveLinearColor, AdjustBrightness, 0x01F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCurveLinearColor, AdjustBrightnessCurve, 0x01FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCurveLinearColor, AdjustVibrance, 0x0200);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCurveLinearColor, AdjustMinAlpha, 0x0204);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCurveLinearColor, AdjustMaxAlpha, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCurveLinearColor, UnknownData_GNJW, 0x020C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCurveLinearColor, 0x0210);
		}

		// class UTexture2D : public UTexture
		TEST_METHOD(Class__Engine__Texture2D)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTexture2D, StreamingIndex, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTexture2D, LevelIndex, 0x00B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTexture2D, FirstResourceMemMip, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTexture2D, AddressX, 0x00BD);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTexture2D, AddressY, 0x00BE);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTexture2D, UnknownData_68P3, 0x00BF);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTexture2D, ImportedSize, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTexture2D, ForceMipLevelsToBeResidentTimestamp, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTexture2D, UnknownData_DSAK, 0x00D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTexture2D, 0x00E8);
		}

		// class UCurveLinearColorAtlas : public UTexture2D
		TEST_METHOD(Class__Engine__CurveLinearColorAtlas)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCurveLinearColorAtlas, TextureSize, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCurveLinearColorAtlas, GradientPixelSize, 0x00EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCurveLinearColorAtlas, GradientCurves, 0x00F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCurveLinearColorAtlas, 0x0100);
		}

		// class UCurveSourceInterface : public UInterface
		TEST_METHOD(Class__Engine__CurveSourceInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCurveSourceInterface, 0x0028);
		}

		// class UCurveVector : public UCurveBase
		TEST_METHOD(Class__Engine__CurveVector)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCurveVector, FloatCurves, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCurveVector, 0x0180);
		}

		// class UPrimaryDataAsset : public UDataAsset
		TEST_METHOD(Class__Engine__PrimaryDataAsset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPrimaryDataAsset, 0x0030);
		}

		// class UDataTableFunctionLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__DataTableFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDataTableFunctionLibrary, 0x0028);
		}

		// class ADebugCameraController : public APlayerController
		TEST_METHOD(Class__Engine__DebugCameraController)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ADebugCameraController, UnknownData_L4O6, 0x0689);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADebugCameraController, DrawFrustum, 0x0690);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADebugCameraController, UnknownData_YO23, 0x0698);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADebugCameraController, SpeedScale, 0x06B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADebugCameraController, InitialMaxSpeed, 0x06BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADebugCameraController, InitialAccel, 0x06C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADebugCameraController, InitialDecel, 0x06C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADebugCameraController, UnknownData_5S2C, 0x06C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADebugCameraController, 0x06D0);
		}

		// class ADebugCameraHUD : public AHUD
		TEST_METHOD(Class__Engine__DebugCameraHUD)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADebugCameraHUD, 0x0428);
		}

		// class UDebugDrawService : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__DebugDrawService)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDebugDrawService, 0x0028);
		}

		// class ADecalActor : public AActor
		TEST_METHOD(Class__Engine__DecalActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ADecalActor, Decal, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADecalActor, 0x0340);
		}

		// class UDecalComponent : public USceneComponent
		TEST_METHOD(Class__Engine__DecalComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDecalComponent, DecalMaterial, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDecalComponent, SortOrder, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDecalComponent, FadeScreenSize, 0x0254);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDecalComponent, FadeStartDelay, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDecalComponent, FadeDuration, 0x025C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDecalComponent, FadeInDuration, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDecalComponent, FadeInStartDelay, 0x0264);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDecalComponent, UnknownData_CF3N, 0x0269);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDecalComponent, DecalSize, 0x026C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDecalComponent, UnknownData_9XX4, 0x0278);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDecalComponent, 0x0290);
		}

		// class ADefaultPawn : public APawn
		TEST_METHOD(Class__Engine__DefaultPawn)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ADefaultPawn, BaseTurnRate, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADefaultPawn, BaseLookUpRate, 0x039C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADefaultPawn, MovementComponent, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADefaultPawn, CollisionComponent, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADefaultPawn, MeshComponent, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADefaultPawn, UnknownData_DFX6, 0x03B9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADefaultPawn, 0x03C0);
		}

		// class APhysicsVolume : public AVolume
		TEST_METHOD(Class__Engine__PhysicsVolume)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::APhysicsVolume, TerminalVelocity, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::APhysicsVolume, Priority, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::APhysicsVolume, FluidFriction, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::APhysicsVolume, UnknownData_9TKC, 0x037D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APhysicsVolume, 0x0380);
		}

		// class ADefaultPhysicsVolume : public APhysicsVolume
		TEST_METHOD(Class__Engine__DefaultPhysicsVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADefaultPhysicsVolume, 0x0380);
		}

		// class UDemoNetConnection : public UNetConnection
		TEST_METHOD(Class__Engine__DemoNetConnection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDemoNetConnection, UnknownData_TSEZ, 0x1918);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDemoNetConnection, 0x1938);
		}

		// class UDemoNetDriver : public UNetDriver
		TEST_METHOD(Class__Engine__DemoNetDriver)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDemoNetDriver, UnknownData_4A0Y, 0x0698);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDemoNetDriver, RollbackNetStartupActors, 0x07A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDemoNetDriver, UnknownData_GU2T, 0x07F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDemoNetDriver, CheckpointSaveMaxMSPerFrame, 0x0B94);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDemoNetDriver, UnknownData_05UR, 0x0B98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDemoNetDriver, bIsLocalReplay, 0x0BC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDemoNetDriver, UnknownData_GJDS, 0x0BC9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDemoNetDriver, 0x0D30);
		}

		// class UPendingNetGame : public UObject
		TEST_METHOD(Class__Engine__PendingNetGame)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPendingNetGame, UnknownData_SXMT, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPendingNetGame, NetDriver, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPendingNetGame, DemoNetDriver, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPendingNetGame, UnknownData_ADW3, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPendingNetGame, 0x00C8);
		}

		// class UDemoPendingNetGame : public UPendingNetGame
		TEST_METHOD(Class__Engine__DemoPendingNetGame)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDemoPendingNetGame, 0x00C8);
		}

		// class UDestructibleInterface : public UInterface
		TEST_METHOD(Class__Engine__DestructibleInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDestructibleInterface, 0x0028);
		}

		// class UTextureLODSettings : public UObject
		TEST_METHOD(Class__Engine__TextureLODSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextureLODSettings, TextureLODGroups, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextureLODSettings, 0x0038);
		}

		// class UDeviceProfile : public UTextureLODSettings
		TEST_METHOD(Class__Engine__DeviceProfile)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeviceProfile, DeviceType, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeviceProfile, BaseProfileName, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeviceProfile, Parent, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeviceProfile, UnknownData_W784, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeviceProfile, CVars, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeviceProfile, UnknownData_SN0A, 0x0088);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDeviceProfile, 0x0098);
		}

		// class UDeviceProfileManager : public UObject
		TEST_METHOD(Class__Engine__DeviceProfileManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeviceProfileManager, Profiles, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeviceProfileManager, UnknownData_L2S0, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDeviceProfileManager, 0x00A8);
		}

		// class UDialogueSoundWaveProxy : public USoundBase
		TEST_METHOD(Class__Engine__DialogueSoundWaveProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDialogueSoundWaveProxy, UnknownData_N7PX, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDialogueSoundWaveProxy, 0x00C8);
		}

		// class UDialogueVoice : public UObject
		TEST_METHOD(Class__Engine__DialogueVoice)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDialogueVoice, Gender, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDialogueVoice, Plurality, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDialogueVoice, UnknownData_W9PN, 0x002A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDialogueVoice, LocalizationGUID, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDialogueVoice, UnknownData_UFZ6, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDialogueVoice, 0x0040);
		}

		// class UDialogueWave : public UObject
		TEST_METHOD(Class__Engine__DialogueWave)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDialogueWave, UnknownData_U696, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDialogueWave, SpokenText, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDialogueWave, SubtitleOverride, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDialogueWave, ContextMappings, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDialogueWave, LocalizationGUID, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDialogueWave, 0x0070);
		}

		// class ULightComponentBase : public USceneComponent
		TEST_METHOD(Class__Engine__LightComponentBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponentBase, LightGuid, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponentBase, Brightness, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponentBase, Intensity, 0x025C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponentBase, LightColor, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponentBase, UnknownData_YIJJ, 0x0265);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponentBase, IndirectLightingIntensity, 0x0268);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponentBase, VolumetricScatteringIntensity, 0x026C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULightComponentBase, 0x0270);
		}

		// class ULightComponent : public ULightComponentBase
		TEST_METHOD(Class__Engine__LightComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, Temperature, 0x0270);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, MaxDrawDistance, 0x0274);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, MaxDistanceFadeRange, 0x0278);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, UnknownData_HIFO, 0x027D);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, ShadowMapChannel, 0x0280);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, UnknownData_LWIW, 0x0284);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, MinRoughness, 0x0288);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, SpecularScale, 0x028C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, ShadowResolutionScale, 0x0290);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, ShadowBias, 0x0294);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, ShadowSharpen, 0x0298);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, ContactShadowLength, 0x029C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, UnknownData_X3I7, 0x02A1);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, LightingChannels, 0x02A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, UnknownData_8DWV, 0x02A5);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, LightFunctionMaterial, 0x02A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, LightFunctionScale, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, UnknownData_0DD7, 0x02BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, IESTexture, 0x02C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, UnknownData_MNYO, 0x02C9);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, IESBrightnessScale, 0x02CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, LightFunctionFadeDistance, 0x02D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, DisabledBrightness, 0x02D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, UnknownData_ZFCV, 0x02D9);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, BloomScale, 0x02DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, BloomThreshold, 0x02E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, BloomTint, 0x02E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, bUseRayTracedDistanceFieldShadows, 0x02E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, UnknownData_T3YS, 0x02E9);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, RayStartOffsetDepthScale, 0x02EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightComponent, UnknownData_IPDR, 0x02F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULightComponent, 0x0370);
		}

		// class UDirectionalLightComponent : public ULightComponent
		TEST_METHOD(Class__Engine__DirectionalLightComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDirectionalLightComponent, UnknownData_WVI4, 0x0371);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDirectionalLightComponent, OcclusionMaskDarkness, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDirectionalLightComponent, OcclusionDepthRange, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDirectionalLightComponent, UnknownData_9LKI, 0x037D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDirectionalLightComponent, SubtractIntensity, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDirectionalLightComponent, LightShaftOverrideDirection, 0x0384);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDirectionalLightComponent, WholeSceneDynamicShadowRadius, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDirectionalLightComponent, DynamicShadowDistanceMovableLight, 0x0394);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDirectionalLightComponent, DynamicShadowDistanceStationaryLight, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDirectionalLightComponent, DynamicShadowCascades, 0x039C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDirectionalLightComponent, CascadeDistributionExponent, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDirectionalLightComponent, CascadeTransitionFraction, 0x03A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDirectionalLightComponent, ShadowDistanceFadeoutFraction, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDirectionalLightComponent, UnknownData_EHB8, 0x03AD);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDirectionalLightComponent, FarShadowCascadeCount, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDirectionalLightComponent, FarShadowDistance, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDirectionalLightComponent, DistanceFieldShadowDistance, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDirectionalLightComponent, LightSourceAngle, 0x03BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDirectionalLightComponent, LightSourceSoftAngle, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDirectionalLightComponent, TraceDistance, 0x03C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDirectionalLightComponent, LightmassSettings, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDirectionalLightComponent, UnknownData_847M, 0x03D9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDirectionalLightComponent, ModulatedShadowColor, 0x03DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDirectionalLightComponent, UnknownData_TY34, 0x03E1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDirectionalLightComponent, 0x03F0);
		}

		// class UDistribution : public UObject
		TEST_METHOD(Class__Engine__Distribution)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistribution, UnknownData_KFL0, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistribution, 0x0030);
		}

		// class UDistributionFloat : public UDistribution
		TEST_METHOD(Class__Engine__DistributionFloat)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionFloat, UnknownData_54JU, 0x0031);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionFloat, 0x0038);
		}

		// class UDistributionFloatConstant : public UDistributionFloat
		TEST_METHOD(Class__Engine__DistributionFloatConstant)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionFloatConstant, Constant, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionFloatConstant, UnknownData_XUOA, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionFloatConstant, 0x0040);
		}

		// class UDistributionFloatConstantCurve : public UDistributionFloat
		TEST_METHOD(Class__Engine__DistributionFloatConstantCurve)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionFloatConstantCurve, ConstantCurve, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionFloatConstantCurve, 0x0050);
		}

		// class UDistributionFloatParameterBase : public UDistributionFloatConstant
		TEST_METHOD(Class__Engine__DistributionFloatParameterBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionFloatParameterBase, ParameterName, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionFloatParameterBase, MinInput, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionFloatParameterBase, MaxInput, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionFloatParameterBase, MinOutput, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionFloatParameterBase, MaxOutput, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionFloatParameterBase, ParamMode, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionFloatParameterBase, UnknownData_WPP7, 0x0059);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionFloatParameterBase, 0x0060);
		}

		// class UDistributionFloatParticleParameter : public UDistributionFloatParameterBase
		TEST_METHOD(Class__Engine__DistributionFloatParticleParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionFloatParticleParameter, 0x0060);
		}

		// class UDistributionFloatUniform : public UDistributionFloat
		TEST_METHOD(Class__Engine__DistributionFloatUniform)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionFloatUniform, Min, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionFloatUniform, Max, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionFloatUniform, 0x0040);
		}

		// class UDistributionFloatUniformCurve : public UDistributionFloat
		TEST_METHOD(Class__Engine__DistributionFloatUniformCurve)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionFloatUniformCurve, ConstantCurve, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionFloatUniformCurve, 0x0050);
		}

		// class UDistributionVector : public UDistribution
		TEST_METHOD(Class__Engine__DistributionVector)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVector, UnknownData_2NZJ, 0x0031);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionVector, 0x0038);
		}

		// class UDistributionVectorConstant : public UDistributionVector
		TEST_METHOD(Class__Engine__DistributionVectorConstant)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorConstant, Constant, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorConstant, UnknownData_W1IH, 0x0045);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorConstant, LockedAxes, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorConstant, UnknownData_7A29, 0x0049);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionVectorConstant, 0x0050);
		}

		// class UDistributionVectorConstantCurve : public UDistributionVector
		TEST_METHOD(Class__Engine__DistributionVectorConstantCurve)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorConstantCurve, ConstantCurve, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorConstantCurve, UnknownData_6L2D, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorConstantCurve, LockedAxes, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorConstantCurve, UnknownData_PTRZ, 0x0055);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionVectorConstantCurve, 0x0058);
		}

		// class UDistributionVectorParameterBase : public UDistributionVectorConstant
		TEST_METHOD(Class__Engine__DistributionVectorParameterBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorParameterBase, ParameterName, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorParameterBase, MinInput, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorParameterBase, MaxInput, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorParameterBase, MinOutput, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorParameterBase, MaxOutput, 0x007C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorParameterBase, ParamModes, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorParameterBase, UnknownData_OJHU, 0x008B);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionVectorParameterBase, 0x0090);
		}

		// class UDistributionVectorParticleParameter : public UDistributionVectorParameterBase
		TEST_METHOD(Class__Engine__DistributionVectorParticleParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionVectorParticleParameter, 0x0090);
		}

		// class UDistributionVectorUniform : public UDistributionVector
		TEST_METHOD(Class__Engine__DistributionVectorUniform)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorUniform, Max, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorUniform, Min, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorUniform, UnknownData_LYE3, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorUniform, LockedAxes, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorUniform, MirrorFlags, 0x0055);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorUniform, UnknownData_UNT5, 0x0059);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionVectorUniform, 0x0060);
		}

		// class UDistributionVectorUniformCurve : public UDistributionVector
		TEST_METHOD(Class__Engine__DistributionVectorUniformCurve)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorUniformCurve, ConstantCurve, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorUniformCurve, UnknownData_0N81, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorUniformCurve, LockedAxes, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorUniformCurve, MirrorFlags, 0x0056);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorUniformCurve, UnknownData_FE0D, 0x0059);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDistributionVectorUniformCurve, UnknownData_VCWX, 0x005D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDistributionVectorUniformCurve, 0x0060);
		}

		// class ADocumentationActor : public AActor
		TEST_METHOD(Class__Engine__DocumentationActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ADocumentationActor, UnknownData_2PED, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADocumentationActor, 0x0340);
		}

		// class UDrawFrustumComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Engine__DrawFrustumComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDrawFrustumComponent, UnknownData_7DHZ, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDrawFrustumComponent, FrustumAngle, 0x056C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDrawFrustumComponent, FrustumAspectRatio, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDrawFrustumComponent, FrustumStartDist, 0x0574);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDrawFrustumComponent, FrustumEndDist, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDrawFrustumComponent, UnknownData_MPID, 0x057C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDrawFrustumComponent, Texture, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDrawFrustumComponent, UnknownData_8ZSS, 0x0588);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDrawFrustumComponent, 0x0590);
		}

		// class UDrawSphereComponent : public USphereComponent
		TEST_METHOD(Class__Engine__DrawSphereComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDrawSphereComponent, UnknownData_WQCP, 0x0588);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDrawSphereComponent, 0x0590);
		}

		// class UEdGraph : public UObject
		TEST_METHOD(Class__Engine__EdGraph)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraph, Schema, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraph, Nodes, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraph, UnknownData_GE88, 0x0041);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEdGraph, 0x0060);
		}

		// class UEdGraphNode : public UObject
		TEST_METHOD(Class__Engine__EdGraphNode)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphNode, UnknownData_WPWT, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphNode, DeprecatedPins, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphNode, NodePosX, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphNode, NodePosY, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphNode, NodeWidth, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphNode, NodeHeight, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphNode, AdvancedPinDisplay, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphNode, EnabledState, 0x0059);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphNode, UnknownData_Q7JS, 0x005A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphNode, UnknownData_TBQE, 0x005D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphNode, NodeComment, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphNode, ErrorType, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphNode, UnknownData_EP6A, 0x0074);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphNode, ErrorMsg, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphNode, NodeGuid, 0x0088);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEdGraphNode, 0x0098);
		}

		// class UEdGraphNode_Documentation : public UEdGraphNode
		TEST_METHOD(Class__Engine__EdGraphNode_Documentation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphNode_Documentation, Link, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphNode_Documentation, Excerpt, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEdGraphNode_Documentation, 0x00B8);
		}

		// class UEdGraphPin_Deprecated : public UObject
		TEST_METHOD(Class__Engine__EdGraphPin_Deprecated)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphPin_Deprecated, PinName, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphPin_Deprecated, PinToolTip, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphPin_Deprecated, Direction, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphPin_Deprecated, UnknownData_PDG4, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphPin_Deprecated, PinType, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphPin_Deprecated, DefaultValue, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphPin_Deprecated, AutogeneratedDefaultValue, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphPin_Deprecated, DefaultObject, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphPin_Deprecated, DefaultTextValue, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphPin_Deprecated, LinkedTo, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphPin_Deprecated, SubPins, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphPin_Deprecated, ParentPin, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEdGraphPin_Deprecated, ReferencePassThroughConnection, 0x0118);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEdGraphPin_Deprecated, 0x0120);
		}

		// class UEdGraphSchema : public UObject
		TEST_METHOD(Class__Engine__EdGraphSchema)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEdGraphSchema, 0x0028);
		}

		// class AEmitter : public AActor
		TEST_METHOD(Class__Engine__Emitter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AEmitter, ParticleSystemComponent, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEmitter, UnknownData_VF6V, 0x0341);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEmitter, OnParticleSpawn, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEmitter, OnParticleBurst, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEmitter, OnParticleDeath, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEmitter, OnParticleCollide, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AEmitter, 0x0388);
		}

		// class AEmitterCameraLensEffectBase : public AEmitter
		TEST_METHOD(Class__Engine__EmitterCameraLensEffectBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AEmitterCameraLensEffectBase, PS_CameraEffect, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEmitterCameraLensEffectBase, PS_CameraEffectNonExtremeContent, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEmitterCameraLensEffectBase, BaseCamera, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEmitterCameraLensEffectBase, RelativeTransform, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEmitterCameraLensEffectBase, BaseFOV, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEmitterCameraLensEffectBase, UnknownData_8ROB, 0x03D5);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEmitterCameraLensEffectBase, EmittersToTreatAsSame, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEmitterCameraLensEffectBase, DistFromCamera, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEmitterCameraLensEffectBase, UnknownData_AIX7, 0x03EC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AEmitterCameraLensEffectBase, 0x03F0);
		}

		// class UEngineBaseTypes : public UObject
		TEST_METHOD(Class__Engine__EngineBaseTypes)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEngineBaseTypes, 0x0028);
		}

		// class UEngineHandlerComponentFactory : public UHandlerComponentFactory
		TEST_METHOD(Class__Engine__EngineHandlerComponentFactory)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEngineHandlerComponentFactory, 0x0028);
		}

		// class ULocalMessage : public UObject
		TEST_METHOD(Class__Engine__LocalMessage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULocalMessage, 0x0028);
		}

		// class UEngineMessage : public ULocalMessage
		TEST_METHOD(Class__Engine__EngineMessage)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngineMessage, FailedPlaceMessage, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngineMessage, MaxedOutMessage, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngineMessage, EnteredMessage, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngineMessage, LeftMessage, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngineMessage, GlobalNameChange, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngineMessage, SpecEnteredMessage, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngineMessage, NewPlayerMessage, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEngineMessage, NewSpecMessage, 0x0098);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEngineMessage, 0x00A8);
		}

		// class UEngineTypes : public UObject
		TEST_METHOD(Class__Engine__EngineTypes)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEngineTypes, 0x0028);
		}

		// class AExponentialHeightFog : public AInfo
		TEST_METHOD(Class__Engine__ExponentialHeightFog)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AExponentialHeightFog, Component, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AExponentialHeightFog, UnknownData_O7Z8, 0x0341);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AExponentialHeightFog, 0x0348);
		}

		// class UExponentialHeightFogComponent : public USceneComponent
		TEST_METHOD(Class__Engine__ExponentialHeightFogComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UExponentialHeightFogComponent, UnknownData_MW9P, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExponentialHeightFogComponent, FogInscatteringColor, 0x024C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExponentialHeightFogComponent, UnknownData_LFXG, 0x025C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExponentialHeightFogComponent, InscatteringColorCubemap, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExponentialHeightFogComponent, InscatteringColorCubemapAngle, 0x0268);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExponentialHeightFogComponent, InscatteringTextureTint, 0x026C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExponentialHeightFogComponent, FullyDirectionalInscatteringColorDistance, 0x027C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExponentialHeightFogComponent, NonDirectionalInscatteringColorDistance, 0x0280);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExponentialHeightFogComponent, DirectionalInscatteringExponent, 0x0284);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExponentialHeightFogComponent, DirectionalInscatteringStartDistance, 0x0288);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExponentialHeightFogComponent, DirectionalInscatteringColor, 0x028C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExponentialHeightFogComponent, FogHeightFalloff, 0x029C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExponentialHeightFogComponent, FogMaxOpacity, 0x02A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExponentialHeightFogComponent, StartDistance, 0x02A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExponentialHeightFogComponent, FogCutoffDistance, 0x02A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExponentialHeightFogComponent, bEnableVolumetricFog, 0x02AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExponentialHeightFogComponent, UnknownData_EMOZ, 0x02AD);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExponentialHeightFogComponent, VolumetricFogScatteringDistribution, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExponentialHeightFogComponent, VolumetricFogAlbedo, 0x02B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExponentialHeightFogComponent, VolumetricFogEmissive, 0x02B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExponentialHeightFogComponent, VolumetricFogExtinctionScale, 0x02C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExponentialHeightFogComponent, VolumetricFogDistance, 0x02CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExponentialHeightFogComponent, VolumetricFogStaticLightingScatteringIntensity, 0x02D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExponentialHeightFogComponent, bOverrideLightColorsWithFogInscatteringColors, 0x02D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExponentialHeightFogComponent, UnknownData_T9XD, 0x02D5);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UExponentialHeightFogComponent, 0x02E0);
		}

		// class UExporter : public UObject
		TEST_METHOD(Class__Engine__Exporter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UExporter, SupportedClass, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExporter, ExportRootScope, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExporter, FormatExtension, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExporter, FormatDescription, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExporter, PreferredFormatIndex, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExporter, TextIndent, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExporter, UnknownData_N6H8, 0x0061);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExporter, ExportTask, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExporter, UnknownData_YE37, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UExporter, 0x0078);
		}

		// class UFloatingPawnMovement : public UPawnMovementComponent
		TEST_METHOD(Class__Engine__FloatingPawnMovement)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UFloatingPawnMovement, MaxSpeed, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFloatingPawnMovement, Acceleration, 0x018C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFloatingPawnMovement, Deceleration, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFloatingPawnMovement, TurningBoost, 0x0194);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFloatingPawnMovement, UnknownData_824S, 0x0199);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFloatingPawnMovement, 0x01A0);
		}

		// class UFont : public UObject
		TEST_METHOD(Class__Engine__Font)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UFont, UnknownData_Z0QG, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFont, FontCacheType, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFont, UnknownData_2I06, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFont, Characters, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFont, Textures, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFont, IsRemapped, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFont, EmScale, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFont, Ascent, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFont, Descent, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFont, Leading, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFont, Kerning, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFont, ImportOptions, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFont, NumCharacters, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFont, UnknownData_YPEQ, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFont, MaxCharHeight, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFont, ScalingFactor, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFont, LegacyFontSize, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFont, LegacyFontName, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFont, CompositeFont, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFont, OffsetBaseline, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFont, OffsetScale, 0x0184);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFont, UnknownData_HFCA, 0x018C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFont, 0x01E0);
		}

		// class UFontFace : public UObject
		TEST_METHOD(Class__Engine__FontFace)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UFontFace, UnknownData_NNI1, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFontFace, SourceFilename, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFontFace, Hinting, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFontFace, LoadingPolicy, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFontFace, LayoutMethod, 0x0042);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFontFace, UnknownData_YX8J, 0x0043);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFontFace, 0x0058);
		}

		// class UFontImportOptions : public UObject
		TEST_METHOD(Class__Engine__FontImportOptions)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UFontImportOptions, Data, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFontImportOptions, 0x00D8);
		}

		// class UForceFeedbackAttenuation : public UObject
		TEST_METHOD(Class__Engine__ForceFeedbackAttenuation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UForceFeedbackAttenuation, Attenuation, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UForceFeedbackAttenuation, 0x00C8);
		}

		// class UForceFeedbackComponent : public USceneComponent
		TEST_METHOD(Class__Engine__ForceFeedbackComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UForceFeedbackComponent, ForceFeedbackEffect, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UForceFeedbackComponent, UnknownData_S7KV, 0x0251);
			CHEAT_GEAR_CHECK_OFFSET(CG::UForceFeedbackComponent, IntensityMultiplier, 0x0254);
			CHEAT_GEAR_CHECK_OFFSET(CG::UForceFeedbackComponent, AttenuationSettings, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UForceFeedbackComponent, AttenuationOverrides, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::UForceFeedbackComponent, OnForceFeedbackFinished, 0x0300);
			CHEAT_GEAR_CHECK_OFFSET(CG::UForceFeedbackComponent, UnknownData_QYQZ, 0x0310);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UForceFeedbackComponent, 0x0320);
		}

		// class UForceFeedbackEffect : public UObject
		TEST_METHOD(Class__Engine__ForceFeedbackEffect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UForceFeedbackEffect, ChannelDetails, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UForceFeedbackEffect, Duration, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UForceFeedbackEffect, UnknownData_QIYC, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UForceFeedbackEffect, 0x0040);
		}

		// class UGameEngine : public UEngine
		TEST_METHOD(Class__Engine__GameEngine)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameEngine, MaxDeltaTime, 0x0CC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameEngine, ServerFlushLogInterval, 0x0CCC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameEngine, GameInstance, 0x0CD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameEngine, UnknownData_4OB8, 0x0CD8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameEngine, 0x0D18);
		}

		// class AGameNetworkManager : public AInfo
		TEST_METHOD(Class__Engine__GameNetworkManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, AdjustedNetSpeed, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, LastNetSpeedUpdateTime, 0x033C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, TotalNetBandwidth, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, MinDynamicBandwidth, 0x0344);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, MaxDynamicBandwidth, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, UnknownData_Z9G7, 0x034D);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, StandbyRxCheatTime, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, StandbyTxCheatTime, 0x0354);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, BadPingThreshold, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, PercentMissingForRxStandby, 0x035C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, PercentMissingForTxStandby, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, PercentForBadPing, 0x0364);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, JoinInProgressStandbyWaitTime, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, MoveRepSize, 0x036C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, MAXPOSITIONERRORSQUARED, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, MAXNEARZEROVELOCITYSQUARED, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, CLIENTADJUSTUPDATECOST, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, MAXCLIENTUPDATEINTERVAL, 0x037C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, MaxClientForcedUpdateDuration, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, MaxMoveDeltaTime, 0x0384);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, ClientNetSendMoveDeltaTime, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, ClientNetSendMoveDeltaTimeThrottled, 0x038C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, ClientNetSendMoveDeltaTimeStationary, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, ClientNetSendMoveThrottleAtNetSpeed, 0x0394);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, ClientNetSendMoveThrottleOverPlayerCount, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, ClientAuthorativePosition, 0x039C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, UnknownData_6WFB, 0x039D);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, ClientErrorUpdateRateLimit, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, bMovementTimeDiscrepancyDetection, 0x03A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, bMovementTimeDiscrepancyResolution, 0x03A5);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, UnknownData_1HY5, 0x03A6);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, MovementTimeDiscrepancyMaxTimeMargin, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, MovementTimeDiscrepancyMinTimeMargin, 0x03AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, MovementTimeDiscrepancyResolutionRate, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, MovementTimeDiscrepancyDriftAllowance, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, bMovementTimeDiscrepancyForceCorrectionsDuringResolution, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, bUseDistanceBasedRelevancy, 0x03B9);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameNetworkManager, UnknownData_7FP9, 0x03BA);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGameNetworkManager, 0x03C8);
		}

		// class UGameplayStatics : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__GameplayStatics)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayStatics, 0x0028);
		}

		// class AGameSession : public AInfo
		TEST_METHOD(Class__Engine__GameSession)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameSession, MaxSpectators, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameSession, MaxPlayers, 0x033C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameSession, MaxPartySize, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameSession, MaxSplitscreensPerConnection, 0x0344);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameSession, bRequiresPushToTalk, 0x0345);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameSession, UnknownData_IC9E, 0x0346);
			CHEAT_GEAR_CHECK_OFFSET(CG::AGameSession, SessionName, 0x0348);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGameSession, 0x0350);
		}

		// class UGameUserSettings : public UObject
		TEST_METHOD(Class__Engine__GameUserSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, bUseVSync, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, bUseDynamicResolution, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, UnknownData_PJDQ, 0x002A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, ResolutionSizeX, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, ResolutionSizeY, 0x007C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, LastUserConfirmedResolutionSizeX, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, LastUserConfirmedResolutionSizeY, 0x0084);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, WindowPosX, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, WindowPosY, 0x008C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, FullscreenMode, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, LastConfirmedFullscreenMode, 0x0094);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, PreferredFullscreenMode, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, Version, 0x009C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, AudioQualityLevel, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, LastConfirmedAudioQualityLevel, 0x00A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, FrameRateLimit, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, UnknownData_F9EC, 0x00AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, DesiredScreenWidth, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, bUseDesiredScreenHeight, 0x00B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, UnknownData_9499, 0x00B5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, DesiredScreenHeight, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, LastUserConfirmedDesiredScreenWidth, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, LastUserConfirmedDesiredScreenHeight, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, LastRecommendedScreenWidth, 0x00C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, LastRecommendedScreenHeight, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, LastCPUBenchmarkResult, 0x00CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, LastGPUBenchmarkResult, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, UnknownData_LGET, 0x00D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, LastCPUBenchmarkSteps, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, LastGPUBenchmarkSteps, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, LastGPUBenchmarkMultiplier, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, bUseHDRDisplayOutput, 0x00FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, UnknownData_RX1Z, 0x00FD);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, HDRDisplayOutputNits, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, UnknownData_U2O5, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameUserSettings, OnGameUserSettingsUINeedsUpdate, 0x0108);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameUserSettings, 0x0118);
		}

		// class ASpotLight : public ALight
		TEST_METHOD(Class__Engine__SpotLight)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASpotLight, SpotLightComponent, 0x0348);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpotLight, 0x0350);
		}

		// class AGeneratedMeshAreaLight : public ASpotLight
		TEST_METHOD(Class__Engine__GeneratedMeshAreaLight)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGeneratedMeshAreaLight, 0x0350);
		}

		// class UHapticFeedbackEffect_Base : public UObject
		TEST_METHOD(Class__Engine__HapticFeedbackEffect_Base)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHapticFeedbackEffect_Base, 0x0028);
		}

		// class UHapticFeedbackEffect_Buffer : public UHapticFeedbackEffect_Base
		TEST_METHOD(Class__Engine__HapticFeedbackEffect_Buffer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UHapticFeedbackEffect_Buffer, Amplitudes, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UHapticFeedbackEffect_Buffer, SampleRate, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UHapticFeedbackEffect_Buffer, UnknownData_S3N6, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHapticFeedbackEffect_Buffer, 0x0068);
		}

		// class UHapticFeedbackEffect_Curve : public UHapticFeedbackEffect_Base
		TEST_METHOD(Class__Engine__HapticFeedbackEffect_Curve)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UHapticFeedbackEffect_Curve, HapticDetails, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHapticFeedbackEffect_Curve, 0x0118);
		}

		// class UHapticFeedbackEffect_SoundWave : public UHapticFeedbackEffect_Base
		TEST_METHOD(Class__Engine__HapticFeedbackEffect_SoundWave)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UHapticFeedbackEffect_SoundWave, SoundWave, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UHapticFeedbackEffect_SoundWave, UnknownData_GJPM, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHapticFeedbackEffect_SoundWave, 0x0060);
		}

		// class UHealthSnapshotBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__HealthSnapshotBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHealthSnapshotBlueprintLibrary, 0x0028);
		}

		// class UHLODProxy : public UObject
		TEST_METHOD(Class__Engine__HLODProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UHLODProxy, ProxyMeshes, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHLODProxy, 0x0038);
		}

		// class UAmbisonicsSubmixSettingsBase : public UObject
		TEST_METHOD(Class__Engine__AmbisonicsSubmixSettingsBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAmbisonicsSubmixSettingsBase, 0x0028);
		}

		// class USpatializationPluginSourceSettingsBase : public UObject
		TEST_METHOD(Class__Engine__SpatializationPluginSourceSettingsBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpatializationPluginSourceSettingsBase, 0x0028);
		}

		// class UOcclusionPluginSourceSettingsBase : public UObject
		TEST_METHOD(Class__Engine__OcclusionPluginSourceSettingsBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UOcclusionPluginSourceSettingsBase, 0x0028);
		}

		// class UReverbPluginSourceSettingsBase : public UObject
		TEST_METHOD(Class__Engine__ReverbPluginSourceSettingsBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UReverbPluginSourceSettingsBase, 0x0028);
		}

		// class UImportanceSamplingLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__ImportanceSamplingLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImportanceSamplingLibrary, 0x0028);
		}

		// class UImportantToggleSettingInterface : public UInterface
		TEST_METHOD(Class__Engine__ImportantToggleSettingInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImportantToggleSettingInterface, 0x0028);
		}

		// class UInGameAdManager : public UPlatformInterfaceBase
		TEST_METHOD(Class__Engine__InGameAdManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInGameAdManager, UnknownData_4HY5, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInGameAdManager, ClickedBannerDelegates, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInGameAdManager, ClosedAdDelegates, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInGameAdManager, 0x0060);
		}

		// class UInheritableComponentHandler : public UObject
		TEST_METHOD(Class__Engine__InheritableComponentHandler)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInheritableComponentHandler, Records, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInheritableComponentHandler, UnnecessaryComponents, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInheritableComponentHandler, 0x0048);
		}

		// class UInputDelegateBinding : public UDynamicBlueprintBinding
		TEST_METHOD(Class__Engine__InputDelegateBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputDelegateBinding, 0x0028);
		}

		// class UInputActionDelegateBinding : public UInputDelegateBinding
		TEST_METHOD(Class__Engine__InputActionDelegateBinding)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputActionDelegateBinding, InputActionDelegateBindings, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputActionDelegateBinding, 0x0038);
		}

		// class UInputAxisDelegateBinding : public UInputDelegateBinding
		TEST_METHOD(Class__Engine__InputAxisDelegateBinding)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputAxisDelegateBinding, InputAxisDelegateBindings, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputAxisDelegateBinding, 0x0038);
		}

		// class UInputAxisKeyDelegateBinding : public UInputDelegateBinding
		TEST_METHOD(Class__Engine__InputAxisKeyDelegateBinding)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputAxisKeyDelegateBinding, InputAxisKeyDelegateBindings, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputAxisKeyDelegateBinding, 0x0038);
		}

		// class UInputKeyDelegateBinding : public UInputDelegateBinding
		TEST_METHOD(Class__Engine__InputKeyDelegateBinding)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputKeyDelegateBinding, InputKeyDelegateBindings, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputKeyDelegateBinding, 0x0038);
		}

		// class UInputSettings : public UObject
		TEST_METHOD(Class__Engine__InputSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputSettings, AxisConfig, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputSettings, bUseAutocorrect, 0x003A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputSettings, UnknownData_9AZ8, 0x003B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputSettings, ExcludedAutocorrectOS, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputSettings, ExcludedAutocorrectCultures, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputSettings, ExcludedAutocorrectDeviceModels, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputSettings, DefaultViewportMouseCaptureMode, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputSettings, DefaultViewportMouseLockMode, 0x0071);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputSettings, UnknownData_JUTG, 0x0072);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputSettings, FOVScale, 0x0074);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputSettings, DoubleClickTime, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputSettings, UnknownData_MTJY, 0x007C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputSettings, ActionMappings, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputSettings, AxisMappings, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputSettings, DefaultTouchInterface, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputSettings, ConsoleKey, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputSettings, ConsoleKeys, 0x00D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputSettings, 0x00E0);
		}

		// class UInputTouchDelegateBinding : public UInputDelegateBinding
		TEST_METHOD(Class__Engine__InputTouchDelegateBinding)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputTouchDelegateBinding, InputTouchDelegateBindings, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputTouchDelegateBinding, 0x0038);
		}

		// class UInputVectorAxisDelegateBinding : public UInputAxisKeyDelegateBinding
		TEST_METHOD(Class__Engine__InputVectorAxisDelegateBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputVectorAxisDelegateBinding, 0x0038);
		}

		// class UInterface_AssetUserData : public UInterface
		TEST_METHOD(Class__Engine__Interface_AssetUserData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterface_AssetUserData, 0x0028);
		}

		// class UInterface_CollisionDataProvider : public UInterface
		TEST_METHOD(Class__Engine__Interface_CollisionDataProvider)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterface_CollisionDataProvider, 0x0028);
		}

		// class UInterface_PostProcessVolume : public UInterface
		TEST_METHOD(Class__Engine__Interface_PostProcessVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterface_PostProcessVolume, 0x0028);
		}

		// class UInterface_PreviewMeshProvider : public UInterface
		TEST_METHOD(Class__Engine__Interface_PreviewMeshProvider)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterface_PreviewMeshProvider, 0x0028);
		}

		// class UInterpCurveEdSetup : public UObject
		TEST_METHOD(Class__Engine__InterpCurveEdSetup)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpCurveEdSetup, Tabs, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpCurveEdSetup, ActiveTab, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpCurveEdSetup, UnknownData_D2EC, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpCurveEdSetup, 0x0040);
		}

		// class UInterpData : public UObject
		TEST_METHOD(Class__Engine__InterpData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpData, InterpLength, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpData, PathBuildTime, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpData, InterpGroups, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpData, CurveEdSetup, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpData, EdSectionStart, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpData, EdSectionEnd, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpData, UnknownData_28BT, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpData, CachedDirectorGroup, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpData, AllEventNames, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpData, 0x0070);
		}

		// class UInterpFilter : public UObject
		TEST_METHOD(Class__Engine__InterpFilter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpFilter, Caption, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpFilter, 0x0038);
		}

		// class UInterpFilter_Classes : public UInterpFilter
		TEST_METHOD(Class__Engine__InterpFilter_Classes)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpFilter_Classes, 0x0038);
		}

		// class UInterpFilter_Custom : public UInterpFilter
		TEST_METHOD(Class__Engine__InterpFilter_Custom)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpFilter_Custom, 0x0038);
		}

		// class UInterpGroup : public UObject
		TEST_METHOD(Class__Engine__InterpGroup)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpGroup, UnknownData_2P7L, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpGroup, InterpTracks, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpGroup, GroupName, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpGroup, GroupColor, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpGroup, UnknownData_RRH7, 0x004D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpGroup, 0x0050);
		}

		// class UInterpGroupCamera : public UInterpGroup
		TEST_METHOD(Class__Engine__InterpGroupCamera)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpGroupCamera, CameraAnimInst, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpGroupCamera, CompressTolerance, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpGroupCamera, UnknownData_G88D, 0x005C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpGroupCamera, 0x0060);
		}

		// class UInterpGroupDirector : public UInterpGroup
		TEST_METHOD(Class__Engine__InterpGroupDirector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpGroupDirector, 0x0050);
		}

		// class UInterpGroupInst : public UObject
		TEST_METHOD(Class__Engine__InterpGroupInst)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpGroupInst, Group, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpGroupInst, GroupActor, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpGroupInst, TrackInst, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpGroupInst, 0x0048);
		}

		// class UInterpGroupInstCamera : public UInterpGroupInst
		TEST_METHOD(Class__Engine__InterpGroupInstCamera)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpGroupInstCamera, 0x0048);
		}

		// class UInterpGroupInstDirector : public UInterpGroupInst
		TEST_METHOD(Class__Engine__InterpGroupInstDirector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpGroupInstDirector, 0x0048);
		}

		// class UInterpToMovementComponent : public UMovementComponent
		TEST_METHOD(Class__Engine__InterpToMovementComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpToMovementComponent, Duration, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpToMovementComponent, UnknownData_6WGK, 0x0145);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpToMovementComponent, BehaviourType, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpToMovementComponent, UnknownData_T9KT, 0x0149);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpToMovementComponent, UnknownData_4N6H, 0x014D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpToMovementComponent, OnInterpToReverse, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpToMovementComponent, OnInterpToStop, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpToMovementComponent, OnWaitBeginDelegate, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpToMovementComponent, OnWaitEndDelegate, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpToMovementComponent, OnResetDelegate, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpToMovementComponent, MaxSimulationTimeStep, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpToMovementComponent, MaxSimulationIterations, 0x01A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpToMovementComponent, ControlPoints, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpToMovementComponent, UnknownData_RXDE, 0x01B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpToMovementComponent, 0x01E0);
		}

		// class UInterpTrackAnimControl : public UInterpTrackFloatBase
		TEST_METHOD(Class__Engine__InterpTrackAnimControl)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackAnimControl, SlotName, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackAnimControl, AnimSeqs, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackAnimControl, UnknownData_L0P5, 0x00A9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackAnimControl, 0x00B0);
		}

		// class UInterpTrackVectorBase : public UInterpTrack
		TEST_METHOD(Class__Engine__InterpTrackVectorBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackVectorBase, VectorTrack, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackVectorBase, CurveTension, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackVectorBase, UnknownData_L6OG, 0x008C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackVectorBase, 0x0090);
		}

		// class UInterpTrackAudioMaster : public UInterpTrackVectorBase
		TEST_METHOD(Class__Engine__InterpTrackAudioMaster)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackAudioMaster, 0x0090);
		}

		// class UInterpTrackBoolProp : public UInterpTrack
		TEST_METHOD(Class__Engine__InterpTrackBoolProp)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackBoolProp, BoolTrack, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackBoolProp, PropertyName, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackBoolProp, 0x0088);
		}

		// class UInterpTrackColorProp : public UInterpTrackVectorBase
		TEST_METHOD(Class__Engine__InterpTrackColorProp)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackColorProp, PropertyName, 0x0090);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackColorProp, 0x0098);
		}

		// class UInterpTrackColorScale : public UInterpTrackVectorBase
		TEST_METHOD(Class__Engine__InterpTrackColorScale)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackColorScale, 0x0090);
		}

		// class UInterpTrackDirector : public UInterpTrack
		TEST_METHOD(Class__Engine__InterpTrackDirector)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackDirector, CutTrack, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackDirector, UnknownData_49N5, 0x0081);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackDirector, 0x0088);
		}

		// class UInterpTrackEvent : public UInterpTrack
		TEST_METHOD(Class__Engine__InterpTrackEvent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackEvent, EventTrack, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackEvent, UnknownData_XR5H, 0x0081);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackEvent, 0x0088);
		}

		// class UInterpTrackFade : public UInterpTrackFloatBase
		TEST_METHOD(Class__Engine__InterpTrackFade)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackFade, UnknownData_3EQN, 0x0091);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackFade, FadeColor, 0x0094);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackFade, UnknownData_8187, 0x00A4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackFade, 0x00A8);
		}

		// class UInterpTrackFloatAnimBPParam : public UInterpTrackFloatBase
		TEST_METHOD(Class__Engine__InterpTrackFloatAnimBPParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackFloatAnimBPParam, AnimBlueprintClass, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackFloatAnimBPParam, AnimClass, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackFloatAnimBPParam, ParamName, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackFloatAnimBPParam, UnknownData_T9DC, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackFloatAnimBPParam, 0x00B0);
		}

		// class UInterpTrackFloatMaterialParam : public UInterpTrackFloatBase
		TEST_METHOD(Class__Engine__InterpTrackFloatMaterialParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackFloatMaterialParam, TargetMaterials, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackFloatMaterialParam, ParamName, 0x00A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackFloatMaterialParam, 0x00A8);
		}

		// class UInterpTrackFloatParticleParam : public UInterpTrackFloatBase
		TEST_METHOD(Class__Engine__InterpTrackFloatParticleParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackFloatParticleParam, ParamName, 0x0090);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackFloatParticleParam, 0x0098);
		}

		// class UInterpTrackFloatProp : public UInterpTrackFloatBase
		TEST_METHOD(Class__Engine__InterpTrackFloatProp)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackFloatProp, PropertyName, 0x0090);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackFloatProp, 0x0098);
		}

		// class UInterpTrackInstAnimControl : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstAnimControl)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstAnimControl, LastUpdatePosition, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstAnimControl, UnknownData_Y7YT, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstAnimControl, 0x0030);
		}

		// class UInterpTrackInstAudioMaster : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstAudioMaster)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstAudioMaster, 0x0028);
		}

		// class UInterpTrackInstProperty : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstProperty)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstProperty, InterpProperty, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstProperty, PropertyOuterObjectInst, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstProperty, 0x0038);
		}

		// class UInterpTrackInstBoolProp : public UInterpTrackInstProperty
		TEST_METHOD(Class__Engine__InterpTrackInstBoolProp)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstBoolProp, UnknownData_PSQW, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstBoolProp, BoolProperty, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstBoolProp, ResetBool, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstBoolProp, UnknownData_BU76, 0x0049);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstBoolProp, 0x0050);
		}

		// class UInterpTrackInstColorProp : public UInterpTrackInstProperty
		TEST_METHOD(Class__Engine__InterpTrackInstColorProp)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstColorProp, UnknownData_C271, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstColorProp, ResetColor, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstColorProp, UnknownData_BI3Q, 0x0044);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstColorProp, 0x0048);
		}

		// class UInterpTrackInstColorScale : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstColorScale)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstColorScale, 0x0028);
		}

		// class UInterpTrackInstDirector : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstDirector)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstDirector, OldViewTarget, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstDirector, 0x0030);
		}

		// class UInterpTrackInstEvent : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstEvent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstEvent, LastUpdatePosition, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstEvent, UnknownData_IXSD, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstEvent, 0x0030);
		}

		// class UInterpTrackInstFade : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstFade)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstFade, 0x0028);
		}

		// class UInterpTrackInstFloatAnimBPParam : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstFloatAnimBPParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstFloatAnimBPParam, AnimScriptInstance, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstFloatAnimBPParam, ResetFloat, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstFloatAnimBPParam, UnknownData_KXN0, 0x0034);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstFloatAnimBPParam, 0x0040);
		}

		// class UInterpTrackInstFloatMaterialParam : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstFloatMaterialParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstFloatMaterialParam, MaterialInstances, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstFloatMaterialParam, ResetFloats, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstFloatMaterialParam, PrimitiveMaterialRefs, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstFloatMaterialParam, InstancedTrack, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstFloatMaterialParam, 0x0060);
		}

		// class UInterpTrackInstFloatParticleParam : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstFloatParticleParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstFloatParticleParam, ResetFloat, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstFloatParticleParam, UnknownData_RK7Z, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstFloatParticleParam, 0x0030);
		}

		// class UInterpTrackInstFloatProp : public UInterpTrackInstProperty
		TEST_METHOD(Class__Engine__InterpTrackInstFloatProp)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstFloatProp, UnknownData_3L2C, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstFloatProp, ResetFloat, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstFloatProp, UnknownData_3VNJ, 0x0044);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstFloatProp, 0x0048);
		}

		// class UInterpTrackInstLinearColorProp : public UInterpTrackInstProperty
		TEST_METHOD(Class__Engine__InterpTrackInstLinearColorProp)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstLinearColorProp, UnknownData_HULF, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstLinearColorProp, ResetColor, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstLinearColorProp, 0x0050);
		}

		// class UInterpTrackInstMove : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstMove)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstMove, ResetLocation, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstMove, ResetRotation, 0x0034);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstMove, 0x0040);
		}

		// class UInterpTrackInstParticleReplay : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstParticleReplay)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstParticleReplay, LastUpdatePosition, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstParticleReplay, UnknownData_3G5L, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstParticleReplay, 0x0030);
		}

		// class UInterpTrackInstSlomo : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstSlomo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstSlomo, OldTimeDilation, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstSlomo, UnknownData_FX3B, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstSlomo, 0x0030);
		}

		// class UInterpTrackInstSound : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstSound)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstSound, LastUpdatePosition, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstSound, UnknownData_PVJ2, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstSound, PlayAudioComp, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstSound, 0x0038);
		}

		// class UInterpTrackInstToggle : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstToggle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstToggle, Action, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstToggle, UnknownData_F047, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstToggle, LastUpdatePosition, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstToggle, UnknownData_1UO2, 0x0031);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstToggle, 0x0038);
		}

		// class UInterpTrackInstVectorMaterialParam : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstVectorMaterialParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstVectorMaterialParam, MaterialInstances, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstVectorMaterialParam, ResetVectors, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstVectorMaterialParam, PrimitiveMaterialRefs, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstVectorMaterialParam, InstancedTrack, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstVectorMaterialParam, 0x0060);
		}

		// class UInterpTrackInstVectorProp : public UInterpTrackInstProperty
		TEST_METHOD(Class__Engine__InterpTrackInstVectorProp)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstVectorProp, UnknownData_5H80, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstVectorProp, ResetVector, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstVectorProp, UnknownData_Q1WX, 0x004C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstVectorProp, 0x0050);
		}

		// class UInterpTrackInstVisibility : public UInterpTrackInst
		TEST_METHOD(Class__Engine__InterpTrackInstVisibility)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstVisibility, Action, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstVisibility, UnknownData_KI5Z, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackInstVisibility, LastUpdatePosition, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackInstVisibility, 0x0030);
		}

		// class UInterpTrackLinearColorBase : public UInterpTrack
		TEST_METHOD(Class__Engine__InterpTrackLinearColorBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackLinearColorBase, LinearColorTrack, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackLinearColorBase, CurveTension, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackLinearColorBase, UnknownData_MI6V, 0x008C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackLinearColorBase, 0x0090);
		}

		// class UInterpTrackLinearColorProp : public UInterpTrackLinearColorBase
		TEST_METHOD(Class__Engine__InterpTrackLinearColorProp)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackLinearColorProp, PropertyName, 0x0090);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackLinearColorProp, 0x0098);
		}

		// class UInterpTrackMove : public UInterpTrack
		TEST_METHOD(Class__Engine__InterpTrackMove)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackMove, PosTrack, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackMove, EulerTrack, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackMove, LookupTrack, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackMove, LookAtGroupName, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackMove, LinCurveTension, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackMove, AngCurveTension, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackMove, UnknownData_R6KI, 0x00C1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackMove, RotMode, 0x00C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackMove, UnknownData_B97D, 0x00C5);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackMove, 0x00C8);
		}

		// class UInterpTrackMoveAxis : public UInterpTrackFloatBase
		TEST_METHOD(Class__Engine__InterpTrackMoveAxis)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackMoveAxis, MoveAxis, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackMoveAxis, UnknownData_0PRW, 0x0091);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackMoveAxis, LookupTrack, 0x0098);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackMoveAxis, 0x00A8);
		}

		// class UInterpTrackParticleReplay : public UInterpTrack
		TEST_METHOD(Class__Engine__InterpTrackParticleReplay)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackParticleReplay, TrackKeys, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackParticleReplay, 0x0080);
		}

		// class UInterpTrackSlomo : public UInterpTrackFloatBase
		TEST_METHOD(Class__Engine__InterpTrackSlomo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackSlomo, 0x0090);
		}

		// class UInterpTrackSound : public UInterpTrackVectorBase
		TEST_METHOD(Class__Engine__InterpTrackSound)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackSound, Sounds, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackSound, UnknownData_IF4O, 0x00A1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackSound, 0x00A8);
		}

		// class UInterpTrackToggle : public UInterpTrack
		TEST_METHOD(Class__Engine__InterpTrackToggle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackToggle, ToggleTrack, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackToggle, UnknownData_ZTP6, 0x0081);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackToggle, 0x0088);
		}

		// class UInterpTrackVectorMaterialParam : public UInterpTrackVectorBase
		TEST_METHOD(Class__Engine__InterpTrackVectorMaterialParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackVectorMaterialParam, TargetMaterials, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackVectorMaterialParam, ParamName, 0x00A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackVectorMaterialParam, 0x00A8);
		}

		// class UInterpTrackVectorProp : public UInterpTrackVectorBase
		TEST_METHOD(Class__Engine__InterpTrackVectorProp)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackVectorProp, PropertyName, 0x0090);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackVectorProp, 0x0098);
		}

		// class UInterpTrackVisibility : public UInterpTrack
		TEST_METHOD(Class__Engine__InterpTrackVisibility)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackVisibility, VisibilityTrack, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterpTrackVisibility, UnknownData_70YQ, 0x0081);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterpTrackVisibility, 0x0088);
		}

		// class UIntSerialization : public UObject
		TEST_METHOD(Class__Engine__IntSerialization)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UIntSerialization, UnsignedInt16Variable, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIntSerialization, UnknownData_0JT3, 0x002A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIntSerialization, UnsignedInt32Variable, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIntSerialization, UnsignedInt64Variable, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIntSerialization, SignedInt8Variable, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIntSerialization, UnknownData_8KMC, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIntSerialization, SignedInt16Variable, 0x003A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIntSerialization, UnknownData_W23L, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIntSerialization, SignedInt64Variable, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIntSerialization, UnsignedInt8Variable, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIntSerialization, UnknownData_FDSS, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIntSerialization, SignedInt32Variable, 0x004C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UIntSerialization, 0x0050);
		}

		// class AKillZVolume : public APhysicsVolume
		TEST_METHOD(Class__Engine__KillZVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AKillZVolume, 0x0380);
		}

		// class UKismetArrayLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__KismetArrayLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetArrayLibrary, 0x0028);
		}

		// class UKismetGuidLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__KismetGuidLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetGuidLibrary, 0x0028);
		}

		// class UKismetInputLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__KismetInputLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetInputLibrary, 0x0028);
		}

		// class UKismetInternationalizationLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__KismetInternationalizationLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetInternationalizationLibrary, 0x0028);
		}

		// class UKismetMaterialLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__KismetMaterialLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetMaterialLibrary, 0x0028);
		}

		// class UKismetMathLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__KismetMathLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetMathLibrary, 0x0028);
		}

		// class UKismetNodeHelperLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__KismetNodeHelperLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetNodeHelperLibrary, 0x0028);
		}

		// class UKismetRenderingLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__KismetRenderingLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetRenderingLibrary, 0x0028);
		}

		// class UKismetStringLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__KismetStringLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetStringLibrary, 0x0028);
		}

		// class UKismetStringTableLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__KismetStringTableLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetStringTableLibrary, 0x0028);
		}

		// class UKismetSystemLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__KismetSystemLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetSystemLibrary, 0x0028);
		}

		// class UKismetTextLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__KismetTextLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetTextLibrary, 0x0028);
		}

		// class ULayer : public UObject
		TEST_METHOD(Class__Engine__Layer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULayer, LayerName, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULayer, UnknownData_3DAI, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULayer, ActorStats, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULayer, 0x0048);
		}

		// class ULevel : public UObject
		TEST_METHOD(Class__Engine__Level)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, UnknownData_Q03V, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, OwningWorld, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, Model, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, ModelComponents, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, ActorCluster, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, NumTextureStreamingUnbuiltComponents, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, NumTextureStreamingDirtyResources, 0x00EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, LevelScriptActor, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, NavListStart, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, NavListEnd, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, NavDataChunks, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, LightmapTotalSize, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, ShadowmapTotalSize, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, StaticNavigableGeometry, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, StreamingTextureGuids, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, UnknownData_ZJ1M, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, bIsLightingScenario, 0x01D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, UnknownData_SXGC, 0x01D1);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, LevelBuildDataId, 0x01D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, UnknownData_BMRF, 0x01E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, MapBuildData, 0x01E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, LightBuildLevelOffset, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, UnknownData_RZCX, 0x01FD);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, WorldSettings, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, UnknownData_4VY5, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, AssetUserData, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, UnknownData_7BLC, 0x0268);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevel, DestroyedReplicatedStaticActors, 0x0278);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevel, 0x0288);
		}

		// class ULevelActorContainer : public UObject
		TEST_METHOD(Class__Engine__LevelActorContainer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelActorContainer, Actors, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelActorContainer, 0x0038);
		}

		// class ALevelBounds : public AActor
		TEST_METHOD(Class__Engine__LevelBounds)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ALevelBounds, bAutoUpdateBounds, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALevelBounds, UnknownData_IRVD, 0x0339);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALevelBounds, 0x0340);
		}

		// class ULevelScriptBlueprint : public UBlueprint
		TEST_METHOD(Class__Engine__LevelScriptBlueprint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelScriptBlueprint, 0x00E0);
		}

		// class UWorld : public UObject
		TEST_METHOD(Class__Engine__World)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, UnknownData_6USP, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, PersistentLevel, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, NetDriver, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, LineBatcher, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, PersistentLineBatcher, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, ForegroundLineBatcher, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, NetworkManager, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, PhysicsCollisionHandler, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, ExtraReferencedObjects, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, PerModuleDataObjects, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, StreamingLevels, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, StreamingLevelsToConsider, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, StreamingLevelsPrefix, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, CurrentLevelPendingVisibility, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, CurrentLevelPendingInvisibility, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, DemoNetDriver, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, MyParticleEventManager, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, DefaultPhysicsVolume, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, UnknownData_D3PB, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, NavigationSystem, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, AuthorityGameMode, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, GameState, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, AISystem, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, AvoidanceManager, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, Levels, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, LevelCollections, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, UnknownData_5LFB, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, CurrentLevel, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, OwningGameInstance, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, ParameterCollectionInstances, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, CanvasForRenderingToTarget, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, CanvasForDrawMaterialToRenderTarget, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, UnknownData_KVBY, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, WorldComposition, 0x07A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, UnknownData_IG4D, 0x07B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, UnknownData_XLOU, 0x07FB);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorld, PSCPool, 0x0820);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWorld, 0x0878);
		}

		// class ULevelStreaming : public UObject
		TEST_METHOD(Class__Engine__LevelStreaming)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelStreaming, WorldAsset, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelStreaming, PackageNameToLoad, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelStreaming, LODPackageNames, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelStreaming, UnknownData_8LOB, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelStreaming, LevelTransform, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelStreaming, LevelLODIndex, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelStreaming, UnknownData_91EF, 0x00B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelStreaming, LevelColor, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelStreaming, EditorStreamingVolumes, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelStreaming, MinTimeBetweenVolumeUnloadRequests, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelStreaming, UnknownData_AV9G, 0x00DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelStreaming, OnLevelLoaded, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelStreaming, OnLevelUnloaded, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelStreaming, OnLevelShown, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelStreaming, OnLevelHidden, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelStreaming, LoadedLevel, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelStreaming, PendingUnloadLevel, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelStreaming, UnknownData_QARW, 0x0130);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelStreaming, 0x0140);
		}

		// class ULevelStreamingAlwaysLoaded : public ULevelStreaming
		TEST_METHOD(Class__Engine__LevelStreamingAlwaysLoaded)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelStreamingAlwaysLoaded, 0x0140);
		}

		// class ULevelStreamingDynamic : public ULevelStreaming
		TEST_METHOD(Class__Engine__LevelStreamingDynamic)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelStreamingDynamic, UnknownData_RTQ6, 0x0141);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelStreamingDynamic, 0x0150);
		}

		// class ULevelStreamingPersistent : public ULevelStreaming
		TEST_METHOD(Class__Engine__LevelStreamingPersistent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelStreamingPersistent, 0x0140);
		}

		// class ALevelStreamingVolume : public AVolume
		TEST_METHOD(Class__Engine__LevelStreamingVolume)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ALevelStreamingVolume, StreamingLevelNames, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALevelStreamingVolume, UnknownData_Z2BZ, 0x0381);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALevelStreamingVolume, StreamingUsage, 0x0384);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALevelStreamingVolume, UnknownData_WHV9, 0x0385);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALevelStreamingVolume, 0x0388);
		}

		// class ULightmappedSurfaceCollection : public UObject
		TEST_METHOD(Class__Engine__LightmappedSurfaceCollection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightmappedSurfaceCollection, SourceModel, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightmappedSurfaceCollection, Surfaces, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULightmappedSurfaceCollection, 0x0040);
		}

		// class ULightMapTexture2D : public UTexture2D
		TEST_METHOD(Class__Engine__LightMapTexture2D)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightMapTexture2D, UnknownData_2LLN, 0x00E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULightMapTexture2D, 0x00F0);
		}

		// class ALightmassCharacterIndirectDetailVolume : public AVolume
		TEST_METHOD(Class__Engine__LightmassCharacterIndirectDetailVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALightmassCharacterIndirectDetailVolume, 0x0370);
		}

		// class ALightmassImportanceVolume : public AVolume
		TEST_METHOD(Class__Engine__LightmassImportanceVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALightmassImportanceVolume, 0x0370);
		}

		// class ALightmassPortal : public AActor
		TEST_METHOD(Class__Engine__LightmassPortal)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ALightmassPortal, PortalComponent, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALightmassPortal, 0x0340);
		}

		// class ULightmassPortalComponent : public USceneComponent
		TEST_METHOD(Class__Engine__LightmassPortalComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightmassPortalComponent, PreviewBox, 0x0248);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULightmassPortalComponent, 0x0250);
		}

		// class ULightmassPrimitiveSettingsObject : public UObject
		TEST_METHOD(Class__Engine__LightmassPrimitiveSettingsObject)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightmassPrimitiveSettingsObject, LightmassSettings, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULightmassPrimitiveSettingsObject, 0x0040);
		}

		// class ULineBatchComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Engine__LineBatchComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULineBatchComponent, UnknownData_4SEN, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULineBatchComponent, UnknownData_SQ7M, 0x0570);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULineBatchComponent, 0x05B0);
		}

		// class ULocalLightComponent : public ULightComponent
		TEST_METHOD(Class__Engine__LocalLightComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULocalLightComponent, IntensityUnits, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULocalLightComponent, UnknownData_DYK4, 0x0371);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULocalLightComponent, Radius, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULocalLightComponent, AttenuationRadius, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULocalLightComponent, LightmassSettings, 0x037C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULocalLightComponent, UnknownData_IA01, 0x0388);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULocalLightComponent, 0x038C);
		}

		// class ULocalPlayer : public UPlayer
		TEST_METHOD(Class__Engine__LocalPlayer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULocalPlayer, UnknownData_VD8B, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULocalPlayer, ViewportClient, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULocalPlayer, UnknownData_BQXX, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULocalPlayer, AspectRatioAxisConstraint, 0x0094);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULocalPlayer, UnknownData_UNZB, 0x0095);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULocalPlayer, PendingLevelPlayerControllerClass, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULocalPlayer, UnknownData_FBQ3, 0x00A1);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULocalPlayer, ControllerId, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULocalPlayer, UnknownData_URJD, 0x010C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULocalPlayer, 0x01C8);
		}

		// class ALODActor : public AActor
		TEST_METHOD(Class__Engine__LODActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ALODActor, StaticMeshComponent, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALODActor, Proxy, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALODActor, Key, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALODActor, LODDrawDistance, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALODActor, UnknownData_Q2LE, 0x0354);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALODActor, SubActors, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALODActor, LODLevel, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALODActor, UnknownData_R5KW, 0x036C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALODActor, CachedNumHLODLevels, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALODActor, UnknownData_BXKD, 0x0381);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALODActor, 0x0388);
		}

		// class UMapBuildDataRegistry : public UObject
		TEST_METHOD(Class__Engine__MapBuildDataRegistry)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMapBuildDataRegistry, LevelLightingQuality, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMapBuildDataRegistry, UnknownData_XI1D, 0x0029);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMapBuildDataRegistry, 0x01C8);
		}

		// class UMaterial : public UMaterialInterface
		TEST_METHOD(Class__Engine__Material)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, PhysMaterial, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, Metallic, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UnknownData_GH39, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, Specular, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UnknownData_RFYA, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, Normal, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UnknownData_GN6M, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, EmissiveColor, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UnknownData_104P, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, MaterialDomain, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, BlendMode, 0x00F1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, DecalBlendMode, 0x00F2);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, MaterialDecalResponse, 0x00F3);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, ShadingModel, 0x00F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UnknownData_LT3U, 0x00F5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, OpacityMaskClipValue, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UnknownData_D3QI, 0x00FD);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, WorldPositionOffset, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UnknownData_27IJ, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, Refraction, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UnknownData_A98Y, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, MaterialAttributes, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UnknownData_2NRL, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, MiddleShadowColor, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UnknownData_0XG1, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, MiddleShadowGrad, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UnknownData_2R2D, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, AmbientShadowColor, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UnknownData_75WZ, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, OutlinePower, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UnknownData_CH16, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, BloomIntensity, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UnknownData_ZQ4M, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, pixelDepthOffset, 0x01C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UnknownData_1VHT, 0x01D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UnknownData_6OAH, 0x01E2);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, NumCustomizedUVs, 0x01E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, TranslucencyLightingMode, 0x01E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UnknownData_OIUO, 0x01E9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, TranslucencyDirectionalLightingIntensity, 0x01EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UnknownData_JSYX, 0x01F1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, TranslucentShadowDensityScale, 0x01F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, TranslucentSelfShadowDensityScale, 0x01F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, TranslucentSelfShadowSecondDensityScale, 0x01FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, TranslucentSelfShadowSecondOpacity, 0x0200);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, TranslucentBackscatteringExponent, 0x0204);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, TranslucentMultipleScatteringExtinction, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, TranslucentShadowStartOffset, 0x0218);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, D3D11TessellationMode, 0x0220);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UnknownData_IC9L, 0x0221);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UnknownData_TEUF, 0x0225);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, MaxDisplacement, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UnknownData_QW4N, 0x022D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, Expressions, 0x0230);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, MaterialFunctionInfos, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, MaterialParameterCollectionInfos, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UnknownData_YIMO, 0x0262);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UsageFlagWarnings, 0x0264);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, BlendableLocation, 0x0268);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UnknownData_KKHN, 0x0269);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, BlendablePriority, 0x026C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, BlendableOutputAlpha, 0x0270);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, RefractionMode, 0x0271);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UnknownData_HH9M, 0x0272);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, RefractionDepthBias, 0x0274);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, StateId, 0x0278);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UnknownData_JJ5F, 0x0288);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, CachedQualityLevelsUsed, 0x02A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, UnknownData_HOFP, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterial, ExpressionTextureReferences, 0x0328);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterial, 0x0338);
		}

		// class UMaterialBillboardComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Engine__MaterialBillboardComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialBillboardComponent, Elements, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialBillboardComponent, UnknownData_OQGJ, 0x0578);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialBillboardComponent, 0x0580);
		}

		// class UMaterialExpressionAbs : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionAbs)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionAbs, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionAbs, UnknownData_WMQC, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionAbs, 0x0058);
		}

		// class UMaterialExpressionActorPositionWS : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionActorPositionWS)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionActorPositionWS, 0x0040);
		}

		// class UMaterialExpressionAdd : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionAdd)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionAdd, A, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionAdd, UnknownData_MLWA, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionAdd, B, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionAdd, UnknownData_61PJ, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionAdd, ConstA, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionAdd, ConstB, 0x0074);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionAdd, 0x0078);
		}

		// class UMaterialExpressionAntialiasedTextureMask : public UMaterialExpressionTextureSampleParameter2D
		TEST_METHOD(Class__Engine__MaterialExpressionAntialiasedTextureMask)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionAntialiasedTextureMask, Threshold, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionAntialiasedTextureMask, Channel, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionAntialiasedTextureMask, UnknownData_D60Z, 0x011D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionAntialiasedTextureMask, 0x0120);
		}

		// class UMaterialExpressionAppendVector : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionAppendVector)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionAppendVector, A, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionAppendVector, UnknownData_ZEKT, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionAppendVector, B, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionAppendVector, UnknownData_8436, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionAppendVector, 0x0070);
		}

		// class UMaterialExpressionArccosine : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionArccosine)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionArccosine, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionArccosine, UnknownData_YCL0, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionArccosine, 0x0058);
		}

		// class UMaterialExpressionArccosineFast : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionArccosineFast)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionArccosineFast, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionArccosineFast, UnknownData_ES01, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionArccosineFast, 0x0058);
		}

		// class UMaterialExpressionArcsine : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionArcsine)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionArcsine, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionArcsine, UnknownData_BJI1, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionArcsine, 0x0058);
		}

		// class UMaterialExpressionArcsineFast : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionArcsineFast)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionArcsineFast, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionArcsineFast, UnknownData_QFPK, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionArcsineFast, 0x0058);
		}

		// class UMaterialExpressionArctangent : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionArctangent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionArctangent, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionArctangent, UnknownData_FWK1, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionArctangent, 0x0058);
		}

		// class UMaterialExpressionArctangent2 : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionArctangent2)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionArctangent2, Y, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionArctangent2, UnknownData_TTQ2, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionArctangent2, X, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionArctangent2, UnknownData_84M3, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionArctangent2, 0x0070);
		}

		// class UMaterialExpressionArctangent2Fast : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionArctangent2Fast)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionArctangent2Fast, Y, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionArctangent2Fast, UnknownData_PZAH, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionArctangent2Fast, X, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionArctangent2Fast, UnknownData_DPVG, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionArctangent2Fast, 0x0070);
		}

		// class UMaterialExpressionArctangentFast : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionArctangentFast)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionArctangentFast, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionArctangentFast, UnknownData_OTRZ, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionArctangentFast, 0x0058);
		}

		// class UMaterialExpressionAtmosphericFogColor : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionAtmosphericFogColor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionAtmosphericFogColor, WorldPosition, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionAtmosphericFogColor, UnknownData_WBAI, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionAtmosphericFogColor, 0x0058);
		}

		// class UMaterialExpressionAtmosphericLightColor : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionAtmosphericLightColor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionAtmosphericLightColor, 0x0040);
		}

		// class UMaterialExpressionAtmosphericLightVector : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionAtmosphericLightVector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionAtmosphericLightVector, 0x0040);
		}

		// class UMaterialExpressionBentNormalCustomOutput : public UMaterialExpressionCustomOutput
		TEST_METHOD(Class__Engine__MaterialExpressionBentNormalCustomOutput)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionBentNormalCustomOutput, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionBentNormalCustomOutput, UnknownData_MQLS, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionBentNormalCustomOutput, 0x0058);
		}

		// class UMaterialExpressionBlackBody : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionBlackBody)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionBlackBody, Temp, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionBlackBody, UnknownData_WBUV, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionBlackBody, 0x0058);
		}

		// class UMaterialExpressionBlendMaterialAttributes : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionBlendMaterialAttributes)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionBlendMaterialAttributes, A, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionBlendMaterialAttributes, UnknownData_UC2U, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionBlendMaterialAttributes, B, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionBlendMaterialAttributes, UnknownData_3G7O, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionBlendMaterialAttributes, Alpha, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionBlendMaterialAttributes, UnknownData_LGMA, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionBlendMaterialAttributes, PixelAttributeBlendType, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionBlendMaterialAttributes, VertexAttributeBlendType, 0x0099);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionBlendMaterialAttributes, UnknownData_2BUI, 0x009A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionBlendMaterialAttributes, 0x00A0);
		}

		// class UMaterialExpressionBreakMaterialAttributes : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionBreakMaterialAttributes)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionBreakMaterialAttributes, MaterialAttributes, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionBreakMaterialAttributes, UnknownData_6WEV, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionBreakMaterialAttributes, 0x0060);
		}

		// class UMaterialExpressionBumpOffset : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionBumpOffset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionBumpOffset, Coordinate, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionBumpOffset, UnknownData_QRT3, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionBumpOffset, Height, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionBumpOffset, UnknownData_HOFP, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionBumpOffset, HeightRatioInput, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionBumpOffset, UnknownData_WAWU, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionBumpOffset, HeightRatio, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionBumpOffset, ReferencePlane, 0x008C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionBumpOffset, ConstCoordinate, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionBumpOffset, UnknownData_EQ0L, 0x0094);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionBumpOffset, 0x0098);
		}

		// class UMaterialExpressionCameraPositionWS : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionCameraPositionWS)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionCameraPositionWS, 0x0040);
		}

		// class UMaterialExpressionCameraVectorWS : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionCameraVectorWS)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionCameraVectorWS, 0x0040);
		}

		// class UMaterialExpressionCeil : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionCeil)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionCeil, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionCeil, UnknownData_2HZ3, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionCeil, 0x0058);
		}

		// class UMaterialExpressionParameter : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionParameter, ParameterName, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionParameter, ExpressionGUID, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionParameter, 0x0058);
		}

		// class UMaterialExpressionVectorParameter : public UMaterialExpressionParameter
		TEST_METHOD(Class__Engine__MaterialExpressionVectorParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionVectorParameter, DefaultValue, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionVectorParameter, 0x0068);
		}

		// class UMaterialExpressionChannelMaskParameter : public UMaterialExpressionVectorParameter
		TEST_METHOD(Class__Engine__MaterialExpressionChannelMaskParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionChannelMaskParameter, MaskChannel, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionChannelMaskParameter, UnknownData_5LXJ, 0x0069);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionChannelMaskParameter, Input, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionChannelMaskParameter, UnknownData_7OF7, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionChannelMaskParameter, 0x0088);
		}

		// class UMaterialExpressionClamp : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionClamp)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionClamp, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionClamp, UnknownData_R4RL, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionClamp, Min, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionClamp, UnknownData_WDH7, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionClamp, Max, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionClamp, UnknownData_B7O1, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionClamp, ClampMode, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionClamp, UnknownData_OAEP, 0x0089);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionClamp, MinDefault, 0x008C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionClamp, MaxDefault, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionClamp, UnknownData_6338, 0x0094);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionClamp, 0x0098);
		}

		// class UMaterialExpressionClearCoatNormalCustomOutput : public UMaterialExpressionCustomOutput
		TEST_METHOD(Class__Engine__MaterialExpressionClearCoatNormalCustomOutput)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionClearCoatNormalCustomOutput, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionClearCoatNormalCustomOutput, UnknownData_2ZLE, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionClearCoatNormalCustomOutput, 0x0058);
		}

		// class UMaterialExpressionCollectionParameter : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionCollectionParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionCollectionParameter, Collection, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionCollectionParameter, ParameterName, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionCollectionParameter, ParameterId, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionCollectionParameter, 0x0060);
		}

		// class UMaterialExpressionComment : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionComment)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionComment, SizeX, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionComment, SizeY, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionComment, Text, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionComment, CommentColor, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionComment, FontSize, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionComment, UnknownData_8OYY, 0x006C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionComment, 0x0070);
		}

		// class UMaterialExpressionComponentMask : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionComponentMask)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionComponentMask, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionComponentMask, UnknownData_9218, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionComponentMask, UnknownData_7657, 0x0059);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionComponentMask, 0x0060);
		}

		// class UMaterialExpressionConstant : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionConstant)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionConstant, R, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionConstant, UnknownData_G8R1, 0x0044);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionConstant, 0x0048);
		}

		// class UMaterialExpressionConstant2Vector : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionConstant2Vector)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionConstant2Vector, R, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionConstant2Vector, G, 0x0044);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionConstant2Vector, 0x0048);
		}

		// class UMaterialExpressionConstant3Vector : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionConstant3Vector)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionConstant3Vector, Constant, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionConstant3Vector, 0x0050);
		}

		// class UMaterialExpressionConstant4Vector : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionConstant4Vector)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionConstant4Vector, Constant, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionConstant4Vector, 0x0050);
		}

		// class UMaterialExpressionConstantBiasScale : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionConstantBiasScale)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionConstantBiasScale, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionConstantBiasScale, UnknownData_91XB, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionConstantBiasScale, Bias, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionConstantBiasScale, Scale, 0x005C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionConstantBiasScale, 0x0060);
		}

		// class UMaterialExpressionCosine : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionCosine)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionCosine, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionCosine, UnknownData_FE8A, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionCosine, Period, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionCosine, UnknownData_7NG7, 0x005C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionCosine, 0x0060);
		}

		// class UMaterialExpressionCrossProduct : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionCrossProduct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionCrossProduct, A, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionCrossProduct, UnknownData_4L1V, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionCrossProduct, B, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionCrossProduct, UnknownData_7LRV, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionCrossProduct, 0x0070);
		}

		// class UMaterialExpressionScalarParameter : public UMaterialExpressionParameter
		TEST_METHOD(Class__Engine__MaterialExpressionScalarParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionScalarParameter, DefaultValue, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionScalarParameter, UnknownData_D79G, 0x005C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionScalarParameter, 0x0060);
		}

		// class UMaterialExpressionCurveAtlasRowParameter : public UMaterialExpressionScalarParameter
		TEST_METHOD(Class__Engine__MaterialExpressionCurveAtlasRowParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionCurveAtlasRowParameter, Curve, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionCurveAtlasRowParameter, Atlas, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionCurveAtlasRowParameter, InputTime, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionCurveAtlasRowParameter, UnknownData_GT8H, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionCurveAtlasRowParameter, 0x0088);
		}

		// class UMaterialExpressionCustom : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionCustom)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionCustom, code, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionCustom, OutputType, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionCustom, UnknownData_WN6A, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionCustom, Description, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionCustom, Inputs, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionCustom, 0x0078);
		}

		// class UMaterialExpressionDDX : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDDX)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDDX, Value, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDDX, UnknownData_9DKW, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDDX, 0x0058);
		}

		// class UMaterialExpressionDDY : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDDY)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDDY, Value, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDDY, UnknownData_2NFM, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDDY, 0x0058);
		}

		// class UMaterialExpressionDecalDerivative : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDecalDerivative)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDecalDerivative, 0x0040);
		}

		// class UMaterialExpressionDecalLifetimeOpacity : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDecalLifetimeOpacity)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDecalLifetimeOpacity, 0x0040);
		}

		// class UMaterialExpressionDecalMipmapLevel : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDecalMipmapLevel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDecalMipmapLevel, TextureSize, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDecalMipmapLevel, UnknownData_WNNN, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDecalMipmapLevel, ConstWidth, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDecalMipmapLevel, ConstHeight, 0x005C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDecalMipmapLevel, 0x0060);
		}

		// class UMaterialExpressionDepthFade : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDepthFade)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDepthFade, InOpacity, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDepthFade, UnknownData_3OI2, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDepthFade, FadeDistance, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDepthFade, UnknownData_5C57, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDepthFade, OpacityDefault, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDepthFade, FadeDistanceDefault, 0x0074);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDepthFade, 0x0078);
		}

		// class UMaterialExpressionDepthOfFieldFunction : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDepthOfFieldFunction)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDepthOfFieldFunction, FunctionValue, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDepthOfFieldFunction, UnknownData_N4FQ, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDepthOfFieldFunction, Depth, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDepthOfFieldFunction, UnknownData_RGRM, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDepthOfFieldFunction, 0x0060);
		}

		// class UMaterialExpressionDeriveNormalZ : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDeriveNormalZ)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDeriveNormalZ, InXY, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDeriveNormalZ, UnknownData_X91C, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDeriveNormalZ, 0x0058);
		}

		// class UMaterialExpressionDesaturation : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDesaturation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDesaturation, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDesaturation, UnknownData_Z6WE, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDesaturation, Fraction, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDesaturation, UnknownData_7S1X, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDesaturation, LuminanceFactors, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDesaturation, 0x0080);
		}

		// class UMaterialExpressionDistance : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDistance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDistance, A, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDistance, UnknownData_4IT8, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDistance, B, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDistance, UnknownData_B6CG, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDistance, 0x0070);
		}

		// class UMaterialExpressionDistanceCullFade : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDistanceCullFade)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDistanceCullFade, 0x0040);
		}

		// class UMaterialExpressionDistanceFieldGradient : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDistanceFieldGradient)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDistanceFieldGradient, Position, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDistanceFieldGradient, UnknownData_GE8V, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDistanceFieldGradient, 0x0058);
		}

		// class UMaterialExpressionDistanceToNearestSurface : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDistanceToNearestSurface)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDistanceToNearestSurface, Position, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDistanceToNearestSurface, UnknownData_BZA3, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDistanceToNearestSurface, 0x0058);
		}

		// class UMaterialExpressionDivide : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDivide)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDivide, A, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDivide, UnknownData_P194, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDivide, B, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDivide, UnknownData_CRVJ, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDivide, ConstA, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDivide, ConstB, 0x0074);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDivide, 0x0078);
		}

		// class UMaterialExpressionDotProduct : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDotProduct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDotProduct, A, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDotProduct, UnknownData_6UWI, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDotProduct, B, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDotProduct, UnknownData_XGO2, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDotProduct, 0x0070);
		}

		// class UMaterialExpressionDynamicParameter : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionDynamicParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDynamicParameter, ParamNames, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDynamicParameter, DefaultValue, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDynamicParameter, ParameterIndex, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionDynamicParameter, UnknownData_A273, 0x0064);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionDynamicParameter, 0x0068);
		}

		// class UMaterialExpressionEyeAdaptation : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionEyeAdaptation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionEyeAdaptation, 0x0040);
		}

		// class UMaterialExpressionFeatureLevelSwitch : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionFeatureLevelSwitch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFeatureLevelSwitch, Default, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFeatureLevelSwitch, UnknownData_7RYZ, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFeatureLevelSwitch, Inputs, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFeatureLevelSwitch, UnknownData_LXHX, 0x0098);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionFeatureLevelSwitch, 0x00B8);
		}

		// class UMaterialExpressionFloor : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionFloor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFloor, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFloor, UnknownData_3HYR, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionFloor, 0x0058);
		}

		// class UMaterialExpressionFmod : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionFmod)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFmod, A, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFmod, UnknownData_C2GJ, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFmod, B, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFmod, UnknownData_HK7W, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionFmod, 0x0070);
		}

		// class UMaterialExpressionFontSample : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionFontSample)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFontSample, Font, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFontSample, FontTexturePage, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFontSample, UnknownData_6QB5, 0x004C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionFontSample, 0x0050);
		}

		// class UMaterialExpressionFontSampleParameter : public UMaterialExpressionFontSample
		TEST_METHOD(Class__Engine__MaterialExpressionFontSampleParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFontSampleParameter, ParameterName, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFontSampleParameter, ExpressionGUID, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFontSampleParameter, Group, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionFontSampleParameter, 0x0070);
		}

		// class UMaterialExpressionFrac : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionFrac)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFrac, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFrac, UnknownData_VJ9M, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionFrac, 0x0058);
		}

		// class UMaterialExpressionFresnel : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionFresnel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFresnel, ExponentIn, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFresnel, UnknownData_TJIT, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFresnel, Exponent, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFresnel, UnknownData_GE51, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFresnel, BaseReflectFractionIn, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFresnel, UnknownData_G235, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFresnel, BaseReflectFraction, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFresnel, UnknownData_VLW9, 0x007C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFresnel, Normal, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFresnel, UnknownData_K6YE, 0x0090);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionFresnel, 0x0098);
		}

		// class UMaterialExpressionFunctionInput : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionFunctionInput)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFunctionInput, Preview, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFunctionInput, UnknownData_RA0S, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFunctionInput, InputName, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFunctionInput, Description, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFunctionInput, ID, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFunctionInput, InputType, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFunctionInput, UnknownData_2UBT, 0x0081);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFunctionInput, PreviewValue, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFunctionInput, UnknownData_G8P2, 0x00A1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFunctionInput, SortPriority, 0x00A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFunctionInput, UnknownData_NWM1, 0x00A9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionFunctionInput, 0x00D0);
		}

		// class UMaterialExpressionFunctionOutput : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionFunctionOutput)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFunctionOutput, OutputName, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFunctionOutput, Description, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFunctionOutput, SortPriority, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFunctionOutput, UnknownData_VNWY, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFunctionOutput, A, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFunctionOutput, UnknownData_CT90, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFunctionOutput, UnknownData_5W2J, 0x0079);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFunctionOutput, ID, 0x007C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionFunctionOutput, UnknownData_WABV, 0x008C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionFunctionOutput, 0x0090);
		}

		// class UMaterialExpressionGetMaterialAttributes : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionGetMaterialAttributes)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionGetMaterialAttributes, MaterialAttributes, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionGetMaterialAttributes, UnknownData_Q87T, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionGetMaterialAttributes, AttributeGetTypes, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionGetMaterialAttributes, 0x0070);
		}

		// class UMaterialExpressionGIReplace : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionGIReplace)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionGIReplace, Default, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionGIReplace, UnknownData_S00W, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionGIReplace, StaticIndirect, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionGIReplace, UnknownData_DLVI, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionGIReplace, DynamicIndirect, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionGIReplace, UnknownData_MBR8, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionGIReplace, 0x0088);
		}

		// class UMaterialExpressionIf : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionIf)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionIf, A, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionIf, UnknownData_127F, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionIf, B, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionIf, UnknownData_73LO, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionIf, AGreaterThanB, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionIf, UnknownData_Z2J4, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionIf, AEqualsB, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionIf, UnknownData_WAV1, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionIf, ALessThanB, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionIf, UnknownData_81N4, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionIf, EqualsThreshold, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionIf, ConstB, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionIf, ConstAEqualsB, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionIf, UnknownData_E4J1, 0x00C4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionIf, 0x00C8);
		}

		// class UMaterialExpressionLightmapUVs : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionLightmapUVs)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionLightmapUVs, 0x0040);
		}

		// class UMaterialExpressionLightmassReplace : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionLightmassReplace)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLightmassReplace, Realtime, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLightmassReplace, UnknownData_69SR, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLightmassReplace, Lightmass, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLightmassReplace, UnknownData_EU4K, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionLightmassReplace, 0x0070);
		}

		// class UMaterialExpressionLightVector : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionLightVector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionLightVector, 0x0040);
		}

		// class UMaterialExpressionLinearInterpolate : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionLinearInterpolate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLinearInterpolate, A, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLinearInterpolate, UnknownData_VTKI, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLinearInterpolate, B, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLinearInterpolate, UnknownData_OKAK, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLinearInterpolate, Alpha, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLinearInterpolate, UnknownData_X2C7, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLinearInterpolate, ConstA, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLinearInterpolate, ConstB, 0x008C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLinearInterpolate, ConstAlpha, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLinearInterpolate, UnknownData_SFT3, 0x0094);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionLinearInterpolate, 0x0098);
		}

		// class UMaterialExpressionLogarithm10 : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionLogarithm10)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLogarithm10, X, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLogarithm10, UnknownData_S4S0, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionLogarithm10, 0x0058);
		}

		// class UMaterialExpressionLogarithm2 : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionLogarithm2)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLogarithm2, X, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLogarithm2, UnknownData_GKNS, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionLogarithm2, 0x0058);
		}

		// class UMaterialExpressionMakeMaterialAttributes : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionMakeMaterialAttributes)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, BaseColor, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, UnknownData_9I4L, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, Metallic, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, UnknownData_R72J, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, Specular, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, UnknownData_US63, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, Roughness, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, UnknownData_7R32, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, EmissiveColor, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, UnknownData_YBLQ, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, Opacity, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, UnknownData_8QAO, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, OpacityMask, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, UnknownData_271C, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, Normal, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, UnknownData_7OUJ, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, WorldPositionOffset, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, UnknownData_3JQD, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, WorldDisplacement, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, UnknownData_GNIU, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, TessellationMultiplier, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, UnknownData_A7XR, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, SubsurfaceColor, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, UnknownData_OBXQ, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, ClearCoat, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, UnknownData_VLKP, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, ClearCoatRoughness, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, UnknownData_QWBX, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, AmbientOcclusion, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, UnknownData_046P, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, Refraction, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, UnknownData_X3W3, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, CustomizedUVs, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, UnknownData_539O, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, MiddleShadowColor, 0x0280);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, UnknownData_UHJV, 0x0290);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, MiddleShadowGrad, 0x0298);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, UnknownData_HQN4, 0x02A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, AmbientShadowColor, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, UnknownData_JJX5, 0x02C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, OutlinePower, 0x02C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, UnknownData_0DXG, 0x02D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, BloomIntensity, 0x02E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, UnknownData_3GTH, 0x02F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, pixelDepthOffset, 0x02F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMakeMaterialAttributes, UnknownData_H3ML, 0x0308);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionMakeMaterialAttributes, 0x0310);
		}

		// class UMaterialExpressionMaterialAttributeLayers : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionMaterialAttributeLayers)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMaterialAttributeLayers, ParameterName, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMaterialAttributeLayers, ExpressionGUID, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMaterialAttributeLayers, Input, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMaterialAttributeLayers, UnknownData_CZH9, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMaterialAttributeLayers, DefaultLayers, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMaterialAttributeLayers, LayerCallers, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMaterialAttributeLayers, NumActiveLayerCallers, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMaterialAttributeLayers, UnknownData_IHOR, 0x00CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMaterialAttributeLayers, BlendCallers, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMaterialAttributeLayers, NumActiveBlendCallers, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMaterialAttributeLayers, bIsLayerGraphBuilt, 0x00E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMaterialAttributeLayers, UnknownData_K2G1, 0x00E5);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionMaterialAttributeLayers, 0x00F0);
		}

		// class UMaterialExpressionMaterialFunctionCall : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionMaterialFunctionCall)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMaterialFunctionCall, MaterialFunction, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMaterialFunctionCall, FunctionParameterInfo, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionMaterialFunctionCall, 0x0058);
		}

		// class UMaterialExpressionMaterialLayerOutput : public UMaterialExpressionFunctionOutput
		TEST_METHOD(Class__Engine__MaterialExpressionMaterialLayerOutput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionMaterialLayerOutput, 0x0090);
		}

		// class UMaterialExpressionMaterialProxyReplace : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionMaterialProxyReplace)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMaterialProxyReplace, Realtime, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMaterialProxyReplace, UnknownData_WC2Q, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMaterialProxyReplace, MaterialProxy, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMaterialProxyReplace, UnknownData_9T9A, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionMaterialProxyReplace, 0x0070);
		}

		// class UMaterialExpressionMax : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionMax)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMax, A, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMax, UnknownData_O5EQ, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMax, B, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMax, UnknownData_DMC5, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMax, ConstA, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMax, ConstB, 0x0074);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionMax, 0x0078);
		}

		// class UMaterialExpressionMin : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionMin)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMin, A, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMin, UnknownData_U3QB, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMin, B, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMin, UnknownData_X94E, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMin, ConstA, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMin, ConstB, 0x0074);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionMin, 0x0078);
		}

		// class UMaterialExpressionMultiply : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionMultiply)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMultiply, A, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMultiply, UnknownData_L5Y1, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMultiply, B, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMultiply, UnknownData_2FM9, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMultiply, ConstA, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionMultiply, ConstB, 0x0074);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionMultiply, 0x0078);
		}

		// class UMaterialExpressionNoise : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionNoise)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionNoise, Position, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionNoise, UnknownData_C7MP, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionNoise, FilterWidth, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionNoise, UnknownData_BAI4, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionNoise, Scale, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionNoise, Quality, 0x0074);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionNoise, NoiseFunction, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionNoise, UnknownData_AGU8, 0x0079);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionNoise, UnknownData_2TK7, 0x007D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionNoise, Levels, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionNoise, OutputMin, 0x0084);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionNoise, OutputMax, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionNoise, LevelScale, 0x008C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionNoise, UnknownData_SK7A, 0x0091);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionNoise, RepeatSize, 0x0094);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionNoise, 0x0098);
		}

		// class UMaterialExpressionNormalize : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionNormalize)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionNormalize, VectorInput, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionNormalize, UnknownData_5JEL, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionNormalize, 0x0058);
		}

		// class UMaterialExpressionObjectBounds : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionObjectBounds)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionObjectBounds, 0x0040);
		}

		// class UMaterialExpressionObjectOrientation : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionObjectOrientation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionObjectOrientation, 0x0040);
		}

		// class UMaterialExpressionObjectPositionWS : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionObjectPositionWS)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionObjectPositionWS, 0x0040);
		}

		// class UMaterialExpressionObjectRadius : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionObjectRadius)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionObjectRadius, 0x0040);
		}

		// class UMaterialExpressionOneMinus : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionOneMinus)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionOneMinus, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionOneMinus, UnknownData_LSY5, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionOneMinus, 0x0058);
		}

		// class UMaterialExpressionPanner : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionPanner)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionPanner, Coordinate, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionPanner, UnknownData_3773, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionPanner, Time, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionPanner, UnknownData_PPF7, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionPanner, Speed, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionPanner, UnknownData_DWOH, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionPanner, SpeedX, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionPanner, SpeedY, 0x008C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionPanner, ConstCoordinate, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionPanner, bFractionalPart, 0x0094);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionPanner, UnknownData_AQJH, 0x0095);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionPanner, 0x0098);
		}

		// class UMaterialExpressionParticleColor : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionParticleColor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionParticleColor, 0x0040);
		}

		// class UMaterialExpressionParticleDirection : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionParticleDirection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionParticleDirection, 0x0040);
		}

		// class UMaterialExpressionParticleMacroUV : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionParticleMacroUV)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionParticleMacroUV, 0x0040);
		}

		// class UMaterialExpressionParticleMotionBlurFade : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionParticleMotionBlurFade)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionParticleMotionBlurFade, 0x0040);
		}

		// class UMaterialExpressionParticlePositionWS : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionParticlePositionWS)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionParticlePositionWS, 0x0040);
		}

		// class UMaterialExpressionParticleRadius : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionParticleRadius)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionParticleRadius, 0x0040);
		}

		// class UMaterialExpressionParticleRandom : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionParticleRandom)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionParticleRandom, 0x0040);
		}

		// class UMaterialExpressionParticleRelativeTime : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionParticleRelativeTime)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionParticleRelativeTime, 0x0040);
		}

		// class UMaterialExpressionParticleSize : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionParticleSize)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionParticleSize, 0x0040);
		}

		// class UMaterialExpressionParticleSpeed : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionParticleSpeed)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionParticleSpeed, 0x0040);
		}

		// class UMaterialExpressionParticleSubUV : public UMaterialExpressionTextureSample
		TEST_METHOD(Class__Engine__MaterialExpressionParticleSubUV)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionParticleSubUV, UnknownData_456R, 0x00F9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionParticleSubUV, 0x0100);
		}

		// class UMaterialExpressionPerInstanceFadeAmount : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionPerInstanceFadeAmount)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionPerInstanceFadeAmount, 0x0040);
		}

		// class UMaterialExpressionPerInstanceRandom : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionPerInstanceRandom)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionPerInstanceRandom, 0x0040);
		}

		// class UMaterialExpressionPixelDepth : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionPixelDepth)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionPixelDepth, 0x0040);
		}

		// class UMaterialExpressionPixelNormalWS : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionPixelNormalWS)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionPixelNormalWS, 0x0040);
		}

		// class UMaterialExpressionPower : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionPower)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionPower, Base, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionPower, UnknownData_MOVH, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionPower, Exponent, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionPower, UnknownData_EVY9, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionPower, ConstExponent, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionPower, UnknownData_OIER, 0x0074);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionPower, 0x0078);
		}

		// class UMaterialExpressionPrecomputedAOMask : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionPrecomputedAOMask)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionPrecomputedAOMask, 0x0040);
		}

		// class UMaterialExpressionPreSkinnedNormal : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionPreSkinnedNormal)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionPreSkinnedNormal, 0x0040);
		}

		// class UMaterialExpressionPreSkinnedPosition : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionPreSkinnedPosition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionPreSkinnedPosition, 0x0040);
		}

		// class UMaterialExpressionPreviousFrameSwitch : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionPreviousFrameSwitch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionPreviousFrameSwitch, CurrentFrame, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionPreviousFrameSwitch, UnknownData_3T1D, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionPreviousFrameSwitch, PreviousFrame, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionPreviousFrameSwitch, UnknownData_W76A, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionPreviousFrameSwitch, 0x0070);
		}

		// class UMaterialExpressionQualitySwitch : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionQualitySwitch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionQualitySwitch, Default, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionQualitySwitch, UnknownData_ZW9U, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionQualitySwitch, Inputs, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionQualitySwitch, UnknownData_LWVZ, 0x0088);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionQualitySwitch, 0x00A0);
		}

		// class UMaterialExpressionReflectionVectorWS : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionReflectionVectorWS)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionReflectionVectorWS, CustomWorldNormal, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionReflectionVectorWS, UnknownData_3KDV, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionReflectionVectorWS, UnknownData_MPUJ, 0x0059);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionReflectionVectorWS, 0x0060);
		}

		// class UMaterialExpressionReroute : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionReroute)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionReroute, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionReroute, UnknownData_7ZC7, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionReroute, 0x0058);
		}

		// class UMaterialExpressionRotateAboutAxis : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionRotateAboutAxis)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionRotateAboutAxis, NormalizedRotationAxis, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionRotateAboutAxis, UnknownData_1MYZ, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionRotateAboutAxis, RotationAngle, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionRotateAboutAxis, UnknownData_PB5S, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionRotateAboutAxis, PivotPoint, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionRotateAboutAxis, UnknownData_986L, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionRotateAboutAxis, Position, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionRotateAboutAxis, UnknownData_QBYT, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionRotateAboutAxis, Period, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionRotateAboutAxis, UnknownData_QG1G, 0x00A4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionRotateAboutAxis, 0x00A8);
		}

		// class UMaterialExpressionRotator : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionRotator)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionRotator, Coordinate, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionRotator, UnknownData_TLXW, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionRotator, Time, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionRotator, UnknownData_TYCL, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionRotator, CenterX, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionRotator, CenterY, 0x0074);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionRotator, Speed, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionRotator, ConstCoordinate, 0x007C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionRotator, 0x0080);
		}

		// class UMaterialExpressionRound : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionRound)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionRound, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionRound, UnknownData_4ZMR, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionRound, 0x0058);
		}

		// class UMaterialExpressionSaturate : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSaturate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSaturate, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSaturate, UnknownData_TCKI, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSaturate, 0x0058);
		}

		// class UMaterialExpressionSceneColor : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSceneColor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSceneColor, InputMode, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSceneColor, UnknownData_ASQR, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSceneColor, Input, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSceneColor, UnknownData_BB0E, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSceneColor, OffsetFraction, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSceneColor, UnknownData_S6FD, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSceneColor, ConstInput, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSceneColor, 0x0080);
		}

		// class UMaterialExpressionSceneDepth : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSceneDepth)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSceneDepth, InputMode, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSceneDepth, UnknownData_AQXJ, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSceneDepth, Input, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSceneDepth, UnknownData_MV22, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSceneDepth, Coordinates, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSceneDepth, UnknownData_F1VA, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSceneDepth, ConstInput, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSceneDepth, 0x0080);
		}

		// class UMaterialExpressionSceneTexelSize : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSceneTexelSize)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSceneTexelSize, 0x0040);
		}

		// class UMaterialExpressionSceneTexture : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSceneTexture)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSceneTexture, Coordinates, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSceneTexture, UnknownData_IB7K, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSceneTexture, SceneTextureId, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSceneTexture, bFiltered, 0x0059);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSceneTexture, UnknownData_D8LP, 0x005A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSceneTexture, 0x0060);
		}

		// class UMaterialExpressionScreenPosition : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionScreenPosition)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionScreenPosition, 0x0040);
		}

		// class UMaterialExpressionSetMaterialAttributes : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSetMaterialAttributes)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSetMaterialAttributes, Inputs, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSetMaterialAttributes, AttributeSetTypes, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSetMaterialAttributes, 0x0060);
		}

		// class UMaterialExpressionShadingPathSwitch : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionShadingPathSwitch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionShadingPathSwitch, Default, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionShadingPathSwitch, UnknownData_X7EL, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionShadingPathSwitch, Inputs, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionShadingPathSwitch, UnknownData_LX2R, 0x0088);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionShadingPathSwitch, 0x00A0);
		}

		// class UMaterialExpressionSign : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSign)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSign, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSign, UnknownData_JMR0, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSign, 0x0058);
		}

		// class UMaterialExpressionSine : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSine)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSine, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSine, UnknownData_U1P2, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSine, Period, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSine, UnknownData_EYOR, 0x005C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSine, 0x0060);
		}

		// class UMaterialExpressionSobol : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSobol)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSobol, Cell, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSobol, UnknownData_4AEX, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSobol, Index, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSobol, UnknownData_VZVN, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSobol, Seed, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSobol, UnknownData_TQCB, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSobol, ConstIndex, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSobol, ConstSeed, 0x008C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSobol, UnknownData_KPX1, 0x0094);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSobol, 0x0098);
		}

		// class UMaterialExpressionSpeedTree : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSpeedTree)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSpeedTree, GeometryInput, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSpeedTree, UnknownData_W96I, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSpeedTree, WindInput, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSpeedTree, UnknownData_Z9SJ, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSpeedTree, LODInput, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSpeedTree, UnknownData_H3E5, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSpeedTree, ExtraBendWS, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSpeedTree, UnknownData_GBJY, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSpeedTree, GeometryType, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSpeedTree, WindType, 0x00A1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSpeedTree, LODType, 0x00A2);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSpeedTree, UnknownData_WNHA, 0x00A3);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSpeedTree, BillboardThreshold, 0x00A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSpeedTree, bAccurateWindVelocities, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSpeedTree, UnknownData_N385, 0x00A9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSpeedTree, 0x00B0);
		}

		// class UMaterialExpressionSphereMask : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSphereMask)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSphereMask, A, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSphereMask, UnknownData_U3LL, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSphereMask, B, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSphereMask, UnknownData_6OTC, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSphereMask, Radius, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSphereMask, UnknownData_DGZQ, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSphereMask, Hardness, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSphereMask, UnknownData_BS95, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSphereMask, AttenuationRadius, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSphereMask, HardnessPercent, 0x00A4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSphereMask, 0x00A8);
		}

		// class UMaterialExpressionSphericalParticleOpacity : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSphericalParticleOpacity)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSphericalParticleOpacity, Density, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSphericalParticleOpacity, UnknownData_BB98, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSphericalParticleOpacity, ConstantDensity, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSphericalParticleOpacity, UnknownData_L9OZ, 0x005C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSphericalParticleOpacity, 0x0060);
		}

		// class UMaterialExpressionSquareRoot : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSquareRoot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSquareRoot, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSquareRoot, UnknownData_K0D2, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSquareRoot, 0x0058);
		}

		// class UMaterialExpressionStaticBool : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionStaticBool)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionStaticBool, UnknownData_B6D8, 0x0041);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionStaticBool, 0x0048);
		}

		// class UMaterialExpressionStaticBoolParameter : public UMaterialExpressionParameter
		TEST_METHOD(Class__Engine__MaterialExpressionStaticBoolParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionStaticBoolParameter, UnknownData_K61C, 0x0059);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionStaticBoolParameter, 0x0060);
		}

		// class UMaterialExpressionStaticComponentMaskParameter : public UMaterialExpressionParameter
		TEST_METHOD(Class__Engine__MaterialExpressionStaticComponentMaskParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionStaticComponentMaskParameter, Input, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionStaticComponentMaskParameter, UnknownData_94YJ, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionStaticComponentMaskParameter, UnknownData_77FL, 0x0071);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionStaticComponentMaskParameter, 0x0078);
		}

		// class UMaterialExpressionStaticSwitch : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionStaticSwitch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionStaticSwitch, UnknownData_J77E, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionStaticSwitch, A, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionStaticSwitch, UnknownData_RCG5, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionStaticSwitch, B, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionStaticSwitch, UnknownData_WYHM, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionStaticSwitch, Value, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionStaticSwitch, UnknownData_HU8Z, 0x0088);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionStaticSwitch, 0x0090);
		}

		// class UMaterialExpressionStaticSwitchParameter : public UMaterialExpressionStaticBoolParameter
		TEST_METHOD(Class__Engine__MaterialExpressionStaticSwitchParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionStaticSwitchParameter, A, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionStaticSwitchParameter, UnknownData_6G8Q, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionStaticSwitchParameter, B, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionStaticSwitchParameter, UnknownData_HSED, 0x0088);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionStaticSwitchParameter, 0x0090);
		}

		// class UMaterialExpressionSubtract : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionSubtract)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSubtract, A, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSubtract, UnknownData_CF7M, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSubtract, B, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSubtract, UnknownData_Z9VY, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSubtract, ConstA, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSubtract, ConstB, 0x0074);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSubtract, 0x0078);
		}

		// class UMaterialExpressionTangent : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionTangent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTangent, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTangent, UnknownData_PNJ7, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTangent, Period, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTangent, UnknownData_P5O7, 0x005C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTangent, 0x0060);
		}

		// class UMaterialExpressionTangentOutput : public UMaterialExpressionCustomOutput
		TEST_METHOD(Class__Engine__MaterialExpressionTangentOutput)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTangentOutput, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTangentOutput, UnknownData_02D3, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTangentOutput, 0x0058);
		}

		// class UMaterialExpressionTemporalSobol : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionTemporalSobol)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTemporalSobol, Index, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTemporalSobol, UnknownData_IEK1, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTemporalSobol, Seed, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTemporalSobol, UnknownData_7C71, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTemporalSobol, ConstIndex, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTemporalSobol, ConstSeed, 0x0074);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTemporalSobol, UnknownData_24BM, 0x007C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTemporalSobol, 0x0080);
		}

		// class UMaterialExpressionTextureCoordinate : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionTextureCoordinate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureCoordinate, CoordinateIndex, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureCoordinate, UTiling, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureCoordinate, VTiling, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureCoordinate, UnknownData_CT64, 0x004D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTextureCoordinate, 0x0050);
		}

		// class UMaterialExpressionTextureObject : public UMaterialExpressionTextureBase
		TEST_METHOD(Class__Engine__MaterialExpressionTextureObject)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTextureObject, 0x0050);
		}

		// class UMaterialExpressionTextureObjectParameter : public UMaterialExpressionTextureSampleParameter
		TEST_METHOD(Class__Engine__MaterialExpressionTextureObjectParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTextureObjectParameter, 0x0118);
		}

		// class UMaterialExpressionTextureProperty : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionTextureProperty)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureProperty, TextureObject, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureProperty, UnknownData_2B2P, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureProperty, Property, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureProperty, UnknownData_45NJ, 0x0059);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTextureProperty, 0x0060);
		}

		// class UMaterialExpressionTextureSampleParameterCube : public UMaterialExpressionTextureSampleParameter
		TEST_METHOD(Class__Engine__MaterialExpressionTextureSampleParameterCube)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTextureSampleParameterCube, 0x0118);
		}

		// class UMaterialExpressionTextureSampleParameterSubUV : public UMaterialExpressionTextureSampleParameter2D
		TEST_METHOD(Class__Engine__MaterialExpressionTextureSampleParameterSubUV)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTextureSampleParameterSubUV, UnknownData_BEEV, 0x0119);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTextureSampleParameterSubUV, 0x0120);
		}

		// class UMaterialExpressionTextureSampleParameterVolume : public UMaterialExpressionTextureSampleParameter
		TEST_METHOD(Class__Engine__MaterialExpressionTextureSampleParameterVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTextureSampleParameterVolume, 0x0118);
		}

		// class UMaterialExpressionTime : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionTime)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTime, UnknownData_3C22, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTime, Period, 0x0044);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTime, 0x0048);
		}

		// class UMaterialExpressionTransform : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionTransform)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTransform, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTransform, UnknownData_XAGG, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTransform, TransformSourceType, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTransform, TransformType, 0x0059);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTransform, UnknownData_5JSG, 0x005A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTransform, 0x0060);
		}

		// class UMaterialExpressionTransformPosition : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionTransformPosition)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTransformPosition, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTransformPosition, UnknownData_4J95, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTransformPosition, TransformSourceType, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTransformPosition, TransformType, 0x0059);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTransformPosition, UnknownData_Q2KA, 0x005A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTransformPosition, 0x0060);
		}

		// class UMaterialExpressionTruncate : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionTruncate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTruncate, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionTruncate, UnknownData_6YIZ, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTruncate, 0x0058);
		}

		// class UMaterialExpressionTwoSidedSign : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionTwoSidedSign)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionTwoSidedSign, 0x0040);
		}

		// class UMaterialExpressionVectorNoise : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionVectorNoise)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionVectorNoise, Position, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionVectorNoise, UnknownData_V71P, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionVectorNoise, NoiseFunction, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionVectorNoise, UnknownData_45D8, 0x0059);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionVectorNoise, Quality, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionVectorNoise, UnknownData_VIEB, 0x0061);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionVectorNoise, TileSize, 0x0064);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionVectorNoise, 0x0068);
		}

		// class UMaterialExpressionVertexColor : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionVertexColor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionVertexColor, 0x0040);
		}

		// class UMaterialExpressionVertexInterpolator : public UMaterialExpressionCustomOutput
		TEST_METHOD(Class__Engine__MaterialExpressionVertexInterpolator)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionVertexInterpolator, Input, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionVertexInterpolator, UnknownData_6ZKF, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionVertexInterpolator, 0x0068);
		}

		// class UMaterialExpressionVertexNormalWS : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionVertexNormalWS)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionVertexNormalWS, 0x0040);
		}

		// class UMaterialExpressionViewProperty : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionViewProperty)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionViewProperty, Property, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionViewProperty, UnknownData_BKWJ, 0x0041);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionViewProperty, 0x0048);
		}

		// class UMaterialExpressionViewSize : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionViewSize)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionViewSize, 0x0040);
		}

		// class UMaterialExpressionWorldPosition : public UMaterialExpression
		TEST_METHOD(Class__Engine__MaterialExpressionWorldPosition)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionWorldPosition, WorldPositionShaderOffset, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionWorldPosition, UnknownData_0CHK, 0x0041);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionWorldPosition, 0x0048);
		}

		// class UMaterialFunctionInterface : public UObject
		TEST_METHOD(Class__Engine__MaterialFunctionInterface)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialFunctionInterface, StateId, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialFunctionInterface, MaterialFunctionUsage, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialFunctionInterface, UnknownData_2RN7, 0x0039);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialFunctionInterface, 0x0040);
		}

		// class UMaterialFunction : public UMaterialFunctionInterface
		TEST_METHOD(Class__Engine__MaterialFunction)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialFunction, Description, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialFunction, UnknownData_UG6Q, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialFunction, FunctionExpressions, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialFunction, UnknownData_7X00, 0x0069);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialFunction, 0x0070);
		}

		// class UMaterialFunctionInstance : public UMaterialFunctionInterface
		TEST_METHOD(Class__Engine__MaterialFunctionInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialFunctionInstance, Parent, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialFunctionInstance, Base, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialFunctionInstance, ScalarParameterValues, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialFunctionInstance, VectorParameterValues, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialFunctionInstance, TextureParameterValues, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialFunctionInstance, FontParameterValues, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialFunctionInstance, StaticSwitchParameterValues, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialFunctionInstance, StaticComponentMaskParameterValues, 0x00A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialFunctionInstance, 0x00B0);
		}

		// class UMaterialFunctionMaterialLayer : public UMaterialFunction
		TEST_METHOD(Class__Engine__MaterialFunctionMaterialLayer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialFunctionMaterialLayer, 0x0070);
		}

		// class UMaterialFunctionMaterialLayerInstance : public UMaterialFunctionInstance
		TEST_METHOD(Class__Engine__MaterialFunctionMaterialLayerInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialFunctionMaterialLayerInstance, 0x00B0);
		}

		// class UMaterialFunctionMaterialLayerBlend : public UMaterialFunction
		TEST_METHOD(Class__Engine__MaterialFunctionMaterialLayerBlend)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialFunctionMaterialLayerBlend, 0x0070);
		}

		// class UMaterialFunctionMaterialLayerBlendInstance : public UMaterialFunctionInstance
		TEST_METHOD(Class__Engine__MaterialFunctionMaterialLayerBlendInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialFunctionMaterialLayerBlendInstance, 0x00B0);
		}

		// class AMaterialInstanceActor : public AActor
		TEST_METHOD(Class__Engine__MaterialInstanceActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AMaterialInstanceActor, TargetActors, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMaterialInstanceActor, 0x0348);
		}

		// class UMaterialInstanceDynamic : public UMaterialInstance
		TEST_METHOD(Class__Engine__MaterialInstanceDynamic)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialInstanceDynamic, UnknownData_SVU4, 0x01E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialInstanceDynamic, 0x0238);
		}

		// class UMaterialParameterCollection : public UObject
		TEST_METHOD(Class__Engine__MaterialParameterCollection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialParameterCollection, StateId, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialParameterCollection, ScalarParameters, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialParameterCollection, VectorParameters, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialParameterCollection, UnknownData_BUHC, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialParameterCollection, 0x0068);
		}

		// class UMaterialParameterCollectionInstance : public UObject
		TEST_METHOD(Class__Engine__MaterialParameterCollectionInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialParameterCollectionInstance, UnknownData_MJY4, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialParameterCollectionInstance, Collection, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialParameterCollectionInstance, UnknownData_DET1, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialParameterCollectionInstance, 0x00F0);
		}

		// class AMatineeActor : public AActor
		TEST_METHOD(Class__Engine__MatineeActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AMatineeActor, MatineeData, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AMatineeActor, MatineeControllerName, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AMatineeActor, PlayRate, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::AMatineeActor, UnknownData_FSEH, 0x034D);
			CHEAT_GEAR_CHECK_OFFSET(CG::AMatineeActor, ForceStartPosition, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::AMatineeActor, UnknownData_O7IF, 0x0355);
			CHEAT_GEAR_CHECK_OFFSET(CG::AMatineeActor, PreferredSplitScreenNum, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::AMatineeActor, UnknownData_9BGG, 0x035D);
			CHEAT_GEAR_CHECK_OFFSET(CG::AMatineeActor, GroupActorInfos, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::AMatineeActor, UnknownData_JHN2, 0x0371);
			CHEAT_GEAR_CHECK_OFFSET(CG::AMatineeActor, GroupInst, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::AMatineeActor, CameraCuts, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::AMatineeActor, UnknownData_Q923, 0x0399);
			CHEAT_GEAR_CHECK_OFFSET(CG::AMatineeActor, InterpPosition, 0x039C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AMatineeActor, UnknownData_BTX6, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AMatineeActor, ReplicationForceIsPlaying, 0x03A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AMatineeActor, UnknownData_XRBX, 0x03A5);
			CHEAT_GEAR_CHECK_OFFSET(CG::AMatineeActor, OnPlay, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AMatineeActor, OnStop, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AMatineeActor, OnPause, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AMatineeActor, UnknownData_97HE, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMatineeActor, 0x03E0);
		}

		// class AMatineeActorCameraAnim : public AMatineeActor
		TEST_METHOD(Class__Engine__MatineeActorCameraAnim)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AMatineeActorCameraAnim, CameraAnim, 0x03E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMatineeActorCameraAnim, 0x03E8);
		}

		// class UMatineeAnimInterface : public UInterface
		TEST_METHOD(Class__Engine__MatineeAnimInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMatineeAnimInterface, 0x0028);
		}

		// class UMatineeInterface : public UInterface
		TEST_METHOD(Class__Engine__MatineeInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMatineeInterface, 0x0028);
		}

		// class AMeshMergeCullingVolume : public AVolume
		TEST_METHOD(Class__Engine__MeshMergeCullingVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMeshMergeCullingVolume, 0x0370);
		}

		// class UMeshSimplificationSettings : public UDeveloperSettings
		TEST_METHOD(Class__Engine__MeshSimplificationSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMeshSimplificationSettings, MeshReductionModuleName, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMeshSimplificationSettings, 0x0040);
		}

		// class UMeshVertexPainterKismetLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__MeshVertexPainterKismetLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMeshVertexPainterKismetLibrary, 0x0028);
		}

		// class UMicroTransactionBase : public UPlatformInterfaceBase
		TEST_METHOD(Class__Engine__MicroTransactionBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMicroTransactionBase, AvailableProducts, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMicroTransactionBase, LastError, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMicroTransactionBase, LastErrorSolution, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMicroTransactionBase, 0x0068);
		}

		// class UModelComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Engine__ModelComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UModelComponent, UnknownData_GNCV, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UModelComponent, UnknownData_LEXL, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UModelComponent, ModelBodySetup, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UModelComponent, UnknownData_8DTW, 0x0588);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UModelComponent, 0x05B0);
		}

		// class UMorphTarget : public UObject
		TEST_METHOD(Class__Engine__MorphTarget)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMorphTarget, BaseSkelMesh, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMorphTarget, UnknownData_H6PR, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMorphTarget, 0x0040);
		}

		// class UNavAgentInterface : public UInterface
		TEST_METHOD(Class__Engine__NavAgentInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavAgentInterface, 0x0028);
		}

		// class UNavAreaBase : public UObject
		TEST_METHOD(Class__Engine__NavAreaBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavAreaBase, UnknownData_N2JU, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavAreaBase, 0x0030);
		}

		// class UNavCollisionBase : public UObject
		TEST_METHOD(Class__Engine__NavCollisionBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavCollisionBase, UnknownData_02BU, 0x0029);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavCollisionBase, 0x0070);
		}

		// class UNavEdgeProviderInterface : public UInterface
		TEST_METHOD(Class__Engine__NavEdgeProviderInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavEdgeProviderInterface, 0x0028);
		}

		// class UNavigationDataChunk : public UObject
		TEST_METHOD(Class__Engine__NavigationDataChunk)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationDataChunk, NavigationDataName, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavigationDataChunk, 0x0030);
		}

		// class UNavigationDataInterface : public UInterface
		TEST_METHOD(Class__Engine__NavigationDataInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavigationDataInterface, 0x0028);
		}

		// class UNavigationSystemBase : public UObject
		TEST_METHOD(Class__Engine__NavigationSystemBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavigationSystemBase, 0x0028);
		}

		// class UNavigationSystem : public UObject
		TEST_METHOD(Class__Engine__NavigationSystem)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationSystem, UnknownData_YGUM, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavigationSystem, 0x0038);
		}

		// class UNavigationSystemConfig : public UObject
		TEST_METHOD(Class__Engine__NavigationSystemConfig)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationSystemConfig, NavigationSystemClass, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationSystemConfig, UnknownData_RN47, 0x0041);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavigationSystemConfig, 0x0048);
		}

		// class UNullNavSysConfig : public UNavigationSystemConfig
		TEST_METHOD(Class__Engine__NullNavSysConfig)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNullNavSysConfig, 0x0048);
		}

		// class UNavLinkDefinition : public UObject
		TEST_METHOD(Class__Engine__NavLinkDefinition)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavLinkDefinition, Links, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavLinkDefinition, SegmentLinks, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavLinkDefinition, UnknownData_5YY9, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavLinkDefinition, 0x0050);
		}

		// class UNavPathObserverInterface : public UInterface
		TEST_METHOD(Class__Engine__NavPathObserverInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavPathObserverInterface, 0x0028);
		}

		// class UNavRelevantInterface : public UInterface
		TEST_METHOD(Class__Engine__NavRelevantInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavRelevantInterface, 0x0028);
		}

		// class USimulatedClientNetConnection : public UNetConnection
		TEST_METHOD(Class__Engine__SimulatedClientNetConnection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USimulatedClientNetConnection, 0x1918);
		}

		// class UNetworkPredictionInterface : public UInterface
		TEST_METHOD(Class__Engine__NetworkPredictionInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNetworkPredictionInterface, 0x0028);
		}

		// class UNetworkSettings : public UDeveloperSettings
		TEST_METHOD(Class__Engine__NetworkSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetworkSettings, UnknownData_MY5F, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetworkSettings, MaxRepArraySize, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetworkSettings, MaxRepArrayMemory, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetworkSettings, UnknownData_93BE, 0x0044);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNetworkSettings, 0x0048);
		}

		// class UNodeMappingContainer : public UObject
		TEST_METHOD(Class__Engine__NodeMappingContainer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNodeMappingContainer, SourceItems, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNodeMappingContainer, TargetItems, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNodeMappingContainer, SourceToTarget, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNodeMappingContainer, SourceAsset, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNodeMappingContainer, TargetAsset, 0x0140);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNodeMappingContainer, 0x0168);
		}

		// class UNodeMappingProviderInterface : public UInterface
		TEST_METHOD(Class__Engine__NodeMappingProviderInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNodeMappingProviderInterface, 0x0028);
		}

		// class ANote : public AActor
		TEST_METHOD(Class__Engine__Note)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ANote, 0x0338);
		}

		// class UnuccCdSpringCtrl : public UObject
		TEST_METHOD(Class__Engine__nuccCdSpringCtrl)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UnuccCdSpringCtrl, m_asset, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UnuccCdSpringCtrl, UnknownData_GL0D, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UnuccCdSpringCtrl, 0x0130);
		}

		// class UNuccDynamicsAsset : public UObject
		TEST_METHOD(Class__Engine__NuccDynamicsAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNuccDynamicsAsset, PreviewSkeletalMesh, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNuccDynamicsAsset, sppParamTbl, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNuccDynamicsAsset, elpParamTbl, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNuccDynamicsAsset, sprParamTbl, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNuccDynamicsAsset, originalSprParamTbl, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNuccDynamicsAsset, 0x0090);
		}

		// class UNuccDynamicsAssetUnited : public UNuccDynamicsAsset
		TEST_METHOD(Class__Engine__NuccDynamicsAssetUnited)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNuccDynamicsAssetUnited, UnknownData_CSW2, 0x0090);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNuccDynamicsAssetUnited, 0x00A0);
		}

		// class UObjectLibrary : public UObject
		TEST_METHOD(Class__Engine__ObjectLibrary)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UObjectLibrary, ObjectBaseClass, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UObjectLibrary, bHasBlueprintClasses, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UObjectLibrary, UnknownData_LS3E, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UObjectLibrary, Objects, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UObjectLibrary, WeakObjects, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UObjectLibrary, bUseWeakReferences, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UObjectLibrary, bIsFullyLoaded, 0x0059);
			CHEAT_GEAR_CHECK_OFFSET(CG::UObjectLibrary, UnknownData_2SLG, 0x005A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UObjectLibrary, 0x00A8);
		}

		// class UObjectReferencer : public UObject
		TEST_METHOD(Class__Engine__ObjectReferencer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UObjectReferencer, ReferencedObjects, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UObjectReferencer, 0x0038);
		}

		// class UPackageMapClient : public UPackageMap
		TEST_METHOD(Class__Engine__PackageMapClient)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPackageMapClient, UnknownData_M50K, 0x00E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPackageMapClient, 0x0380);
		}

		// class APainCausingVolume : public APhysicsVolume
		TEST_METHOD(Class__Engine__PainCausingVolume)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::APainCausingVolume, UnknownData_UM8S, 0x0381);
			CHEAT_GEAR_CHECK_OFFSET(CG::APainCausingVolume, DamagePerSec, 0x0384);
			CHEAT_GEAR_CHECK_OFFSET(CG::APainCausingVolume, DamageType, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::APainCausingVolume, PainInterval, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::APainCausingVolume, UnknownData_H9BT, 0x0395);
			CHEAT_GEAR_CHECK_OFFSET(CG::APainCausingVolume, DamageInstigator, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::APainCausingVolume, UnknownData_33N1, 0x03A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APainCausingVolume, 0x03A8);
		}

		// class UParticleEmitter : public UObject
		TEST_METHOD(Class__Engine__ParticleEmitter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleEmitter, EmitterName, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleEmitter, SubUVDataOffset, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleEmitter, EmitterRenderMode, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleEmitter, SignificanceLevel, 0x0035);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleEmitter, UnknownData_ZSY6, 0x0036);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleEmitter, UnknownData_V6IY, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleEmitter, LODLevels, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleEmitter, PeakActiveParticles, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleEmitter, InitialAllocationCount, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleEmitter, QualityLevelSpawnRateScale, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleEmitter, DetailModeBitmask, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleEmitter, UnknownData_L7NH, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleEmitter, 0x0158);
		}

		// class AParticleEventManager : public AActor
		TEST_METHOD(Class__Engine__ParticleEventManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AParticleEventManager, 0x0338);
		}

		// class UParticleLODLevel : public UObject
		TEST_METHOD(Class__Engine__ParticleLODLevel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleLODLevel, Level, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleLODLevel, UnknownData_2M2Z, 0x002D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleLODLevel, RequiredModule, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleLODLevel, Modules, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleLODLevel, TypeDataModule, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleLODLevel, SpawnModule, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleLODLevel, EventGenerator, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleLODLevel, SpawningModules, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleLODLevel, SpawnModules, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleLODLevel, UpdateModules, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleLODLevel, OrbitModules, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleLODLevel, EventReceiverModules, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleLODLevel, UnknownData_FNI9, 0x00B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleLODLevel, PeakActiveParticles, 0x00B4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleLODLevel, 0x00B8);
		}

		// class UParticleModule : public UObject
		TEST_METHOD(Class__Engine__ParticleModule)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModule, UnknownData_UK7L, 0x002A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModule, LODValidity, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModule, UnknownData_R819, 0x002D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModule, 0x0030);
		}

		// class UParticleModuleAccelerationBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleAccelerationBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAccelerationBase, UnknownData_FTQ4, 0x0031);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleAccelerationBase, 0x0038);
		}

		// class UParticleModuleAcceleration : public UParticleModuleAccelerationBase
		TEST_METHOD(Class__Engine__ParticleModuleAcceleration)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAcceleration, Acceleration, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAcceleration, UnknownData_V41Q, 0x0089);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleAcceleration, 0x0090);
		}

		// class UParticleModuleAccelerationConstant : public UParticleModuleAccelerationBase
		TEST_METHOD(Class__Engine__ParticleModuleAccelerationConstant)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAccelerationConstant, Acceleration, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAccelerationConstant, UnknownData_BXVM, 0x0044);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleAccelerationConstant, 0x0048);
		}

		// class UParticleModuleAccelerationDrag : public UParticleModuleAccelerationBase
		TEST_METHOD(Class__Engine__ParticleModuleAccelerationDrag)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAccelerationDrag, DragCoefficient, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAccelerationDrag, DragCoefficientRaw, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleAccelerationDrag, 0x0078);
		}

		// class UParticleModuleAccelerationDragScaleOverLife : public UParticleModuleAccelerationBase
		TEST_METHOD(Class__Engine__ParticleModuleAccelerationDragScaleOverLife)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAccelerationDragScaleOverLife, DragScale, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAccelerationDragScaleOverLife, DragScaleRaw, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleAccelerationDragScaleOverLife, 0x0078);
		}

		// class UParticleModuleAccelerationOverLifetime : public UParticleModuleAccelerationBase
		TEST_METHOD(Class__Engine__ParticleModuleAccelerationOverLifetime)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAccelerationOverLifetime, AccelOverLife, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleAccelerationOverLifetime, 0x0088);
		}

		// class UParticleModuleAttractorBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleAttractorBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleAttractorBase, 0x0030);
		}

		// class UParticleModuleAttractorLine : public UParticleModuleAttractorBase
		TEST_METHOD(Class__Engine__ParticleModuleAttractorLine)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAttractorLine, EndPoint0, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAttractorLine, EndPoint1, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAttractorLine, Range, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAttractorLine, Strength, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleAttractorLine, 0x00B8);
		}

		// class UParticleModuleAttractorParticle : public UParticleModuleAttractorBase
		TEST_METHOD(Class__Engine__ParticleModuleAttractorParticle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAttractorParticle, EmitterName, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAttractorParticle, Range, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAttractorParticle, UnknownData_43TT, 0x0071);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAttractorParticle, Strength, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAttractorParticle, UnknownData_7BQ0, 0x00B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAttractorParticle, SelectionMethod, 0x00B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAttractorParticle, UnknownData_3BQD, 0x00B5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAttractorParticle, UnknownData_44P4, 0x00B9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAttractorParticle, LastSelIndex, 0x00BC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleAttractorParticle, 0x00C0);
		}

		// class UParticleModuleAttractorPoint : public UParticleModuleAttractorBase
		TEST_METHOD(Class__Engine__ParticleModuleAttractorPoint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAttractorPoint, Position, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAttractorPoint, Range, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAttractorPoint, Strength, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAttractorPoint, UnknownData_LA3M, 0x00F2);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleAttractorPoint, 0x00F8);
		}

		// class UParticleModuleAttractorPointGravity : public UParticleModuleAttractorBase
		TEST_METHOD(Class__Engine__ParticleModuleAttractorPointGravity)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAttractorPointGravity, Position, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAttractorPointGravity, Radius, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAttractorPointGravity, Strength, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleAttractorPointGravity, StrengthRaw, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleAttractorPointGravity, 0x0080);
		}

		// class UParticleModuleBeamBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleBeamBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleBeamBase, 0x0030);
		}

		// class UParticleModuleBeamModifier : public UParticleModuleBeamBase
		TEST_METHOD(Class__Engine__ParticleModuleBeamModifier)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamModifier, ModifierType, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamModifier, UnknownData_7KRB, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamModifier, PositionOptions, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamModifier, Position, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamModifier, TangentOptions, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamModifier, UnknownData_4X3N, 0x008C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamModifier, Tangent, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamModifier, UnknownData_1OV6, 0x00E1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamModifier, StrengthOptions, 0x00E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamModifier, Strength, 0x00E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleBeamModifier, 0x0120);
		}

		// class UParticleModuleBeamNoise : public UParticleModuleBeamBase
		TEST_METHOD(Class__Engine__ParticleModuleBeamNoise)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamNoise, UnknownData_NPVI, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamNoise, Frequency, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamNoise, Frequency_LowRange, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamNoise, UnknownData_OYT0, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamNoise, NoiseRange, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamNoise, NoiseRangeScale, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamNoise, UnknownData_UQCL, 0x00C9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamNoise, NoiseSpeed, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamNoise, UnknownData_NPWW, 0x0121);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamNoise, NoiseLockRadius, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamNoise, UnknownData_TPY2, 0x0129);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamNoise, NoiseLockTime, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamNoise, NoiseTension, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamNoise, UnknownData_R0JH, 0x0135);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamNoise, NoiseTangentStrength, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamNoise, NoiseTessellation, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamNoise, UnknownData_BCC7, 0x0175);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamNoise, FrequencyDistance, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamNoise, UnknownData_P7YH, 0x017D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamNoise, NoiseScale, 0x0180);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleBeamNoise, 0x01B8);
		}

		// class UParticleModuleBeamSource : public UParticleModuleBeamBase
		TEST_METHOD(Class__Engine__ParticleModuleBeamSource)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamSource, SourceMethod, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamSource, UnknownData_VR9M, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamSource, SourceName, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamSource, UnknownData_28NI, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamSource, Source, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamSource, UnknownData_D69W, 0x0099);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamSource, SourceTangentMethod, 0x009C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamSource, UnknownData_GOHM, 0x009D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamSource, SourceTangent, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamSource, UnknownData_VWLX, 0x00F1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamSource, SourceStrength, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamSource, UnknownData_14SP, 0x0131);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleBeamSource, 0x0138);
		}

		// class UParticleModuleBeamTarget : public UParticleModuleBeamBase
		TEST_METHOD(Class__Engine__ParticleModuleBeamTarget)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamTarget, TargetMethod, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamTarget, UnknownData_YE7K, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamTarget, TargetName, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamTarget, Target, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamTarget, UnknownData_2LKY, 0x0091);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamTarget, TargetTangentMethod, 0x0094);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamTarget, UnknownData_V5VU, 0x0095);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamTarget, TargetTangent, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamTarget, UnknownData_C0FQ, 0x00E9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamTarget, TargetStrength, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamTarget, UnknownData_8DLL, 0x0129);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamTarget, LockRadius, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleBeamTarget, UnknownData_CK15, 0x0130);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleBeamTarget, 0x0138);
		}

		// class UParticleModuleCameraBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleCameraBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleCameraBase, 0x0030);
		}

		// class UParticleModuleCameraOffset : public UParticleModuleCameraBase
		TEST_METHOD(Class__Engine__ParticleModuleCameraOffset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCameraOffset, CameraOffset, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCameraOffset, UnknownData_RRW0, 0x0069);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCameraOffset, UpdateMethod, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCameraOffset, UnknownData_8UXX, 0x006D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleCameraOffset, 0x0070);
		}

		// class UParticleModuleCollisionBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleCollisionBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleCollisionBase, 0x0030);
		}

		// class UParticleModuleCollision : public UParticleModuleCollisionBase
		TEST_METHOD(Class__Engine__ParticleModuleCollision)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCollision, DampingFactor, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCollision, DampingFactorRotation, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCollision, MaxCollisions, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCollision, CollisionCompletionOption, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCollision, UnknownData_WLBL, 0x0109);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCollision, CollisionTypes, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCollision, UnknownData_2XK5, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCollision, UnknownData_R4DK, 0x0129);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCollision, ParticleMass, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCollision, DirScalar, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCollision, UnknownData_1VRV, 0x016D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCollision, VerticalFudgeFactor, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCollision, UnknownData_2VIR, 0x0174);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCollision, DelayAmount, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCollision, UnknownData_UOHD, 0x01B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCollision, MaxCollisionDistance, 0x01B4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleCollision, 0x01B8);
		}

		// class UParticleModuleCollisionGPU : public UParticleModuleCollisionBase
		TEST_METHOD(Class__Engine__ParticleModuleCollisionGPU)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCollisionGPU, Resilience, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCollisionGPU, ResilienceScaleOverLife, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCollisionGPU, Friction, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCollisionGPU, RandomSpread, 0x00A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCollisionGPU, RandomDistribution, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCollisionGPU, RadiusScale, 0x00AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCollisionGPU, RadiusBias, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCollisionGPU, Response, 0x00B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCollisionGPU, CollisionMode, 0x00B5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleCollisionGPU, UnknownData_I5VR, 0x00B6);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleCollisionGPU, 0x00B8);
		}

		// class UParticleModuleColorBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleColorBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleColorBase, 0x0030);
		}

		// class UParticleModuleColor : public UParticleModuleColorBase
		TEST_METHOD(Class__Engine__ParticleModuleColor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleColor, StartColor, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleColor, StartAlpha, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleColor, UnknownData_CRPQ, 0x00B9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleColor, 0x00C0);
		}

		// class UParticleModuleColor_Seeded : public UParticleModuleColor
		TEST_METHOD(Class__Engine__ParticleModuleColor_Seeded)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleColor_Seeded, RandomSeedInfo, 0x00C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleColor_Seeded, 0x00E0);
		}

		// class UParticleModuleColorOverLife : public UParticleModuleColorBase
		TEST_METHOD(Class__Engine__ParticleModuleColorOverLife)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleColorOverLife, ColorOverLife, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleColorOverLife, AlphaOverLife, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleColorOverLife, UnknownData_A5OW, 0x00B9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleColorOverLife, 0x00C0);
		}

		// class UParticleModuleColorScaleOverLife : public UParticleModuleColorBase
		TEST_METHOD(Class__Engine__ParticleModuleColorScaleOverLife)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleColorScaleOverLife, ColorScaleOverLife, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleColorScaleOverLife, AlphaScaleOverLife, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleColorScaleOverLife, UnknownData_DB5P, 0x00B9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleColorScaleOverLife, 0x00C0);
		}

		// class UParticleModuleEventBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleEventBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleEventBase, 0x0030);
		}

		// class UParticleModuleEventGenerator : public UParticleModuleEventBase
		TEST_METHOD(Class__Engine__ParticleModuleEventGenerator)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleEventGenerator, Events, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleEventGenerator, 0x0040);
		}

		// class UParticleModuleEventReceiverBase : public UParticleModuleEventBase
		TEST_METHOD(Class__Engine__ParticleModuleEventReceiverBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleEventReceiverBase, EventGeneratorType, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleEventReceiverBase, UnknownData_D3QY, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleEventReceiverBase, EventName, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleEventReceiverBase, 0x0040);
		}

		// class UParticleModuleEventReceiverKillParticles : public UParticleModuleEventReceiverBase
		TEST_METHOD(Class__Engine__ParticleModuleEventReceiverKillParticles)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleEventReceiverKillParticles, UnknownData_5HOA, 0x0041);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleEventReceiverKillParticles, 0x0048);
		}

		// class UParticleModuleEventReceiverSpawn : public UParticleModuleEventReceiverBase
		TEST_METHOD(Class__Engine__ParticleModuleEventReceiverSpawn)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleEventReceiverSpawn, SpawnCount, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleEventReceiverSpawn, UnknownData_DCTC, 0x0079);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleEventReceiverSpawn, InheritVelocityScale, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleEventReceiverSpawn, PhysicalMaterials, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleEventReceiverSpawn, UnknownData_COG1, 0x00E1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleEventReceiverSpawn, 0x00E8);
		}

		// class UParticleModuleEventSendToGame : public UObject
		TEST_METHOD(Class__Engine__ParticleModuleEventSendToGame)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleEventSendToGame, 0x0028);
		}

		// class UParticleModuleKillBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleKillBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleKillBase, 0x0030);
		}

		// class UParticleModuleKillBox : public UParticleModuleKillBase
		TEST_METHOD(Class__Engine__ParticleModuleKillBox)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleKillBox, LowerLeftCorner, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleKillBox, UpperRightCorner, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleKillBox, UnknownData_QIVV, 0x00D1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleKillBox, 0x00D8);
		}

		// class UParticleModuleKillHeight : public UParticleModuleKillBase
		TEST_METHOD(Class__Engine__ParticleModuleKillHeight)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleKillHeight, Height, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleKillHeight, UnknownData_O75L, 0x0069);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleKillHeight, 0x0070);
		}

		// class UParticleModuleLifetimeBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleLifetimeBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLifetimeBase, 0x0030);
		}

		// class UParticleModuleLifetime : public UParticleModuleLifetimeBase
		TEST_METHOD(Class__Engine__ParticleModuleLifetime)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLifetime, LifeTime, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLifetime, 0x0068);
		}

		// class UParticleModuleLifetime_Seeded : public UParticleModuleLifetime
		TEST_METHOD(Class__Engine__ParticleModuleLifetime_Seeded)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLifetime_Seeded, RandomSeedInfo, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLifetime_Seeded, 0x0088);
		}

		// class UParticleModuleLightBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleLightBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLightBase, 0x0030);
		}

		// class UParticleModuleLight : public UParticleModuleLightBase
		TEST_METHOD(Class__Engine__ParticleModuleLight)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLight, bUseInverseSquaredFalloff, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLight, bAffectsTranslucency, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLight, bPreviewLightRadius, 0x0032);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLight, UnknownData_XUTV, 0x0033);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLight, SpawnFraction, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLight, ColorScaleOverLife, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLight, BrightnessOverLife, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLight, RadiusScale, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLight, LightExponent, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLight, LightingChannels, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLight, UnknownData_4A21, 0x0131);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLight, VolumetricScatteringIntensity, 0x0134);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLight, bHighQualityLights, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLight, bShadowCastingLights, 0x0139);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLight, UnknownData_TS5L, 0x013A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLight, 0x0140);
		}

		// class UParticleModuleLight_Seeded : public UParticleModuleLight
		TEST_METHOD(Class__Engine__ParticleModuleLight_Seeded)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLight_Seeded, RandomSeedInfo, 0x0140);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLight_Seeded, 0x0160);
		}

		// class UParticleModuleLocationBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleLocationBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationBase, 0x0030);
		}

		// class UParticleModuleLocation : public UParticleModuleLocationBase
		TEST_METHOD(Class__Engine__ParticleModuleLocation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocation, StartLocation, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocation, DistributeOverNPoints, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocation, DistributeThreshold, 0x0084);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocation, 0x0088);
		}

		// class UParticleModuleLocation_Seeded : public UParticleModuleLocation
		TEST_METHOD(Class__Engine__ParticleModuleLocation_Seeded)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocation_Seeded, RandomSeedInfo, 0x0088);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocation_Seeded, 0x00A8);
		}

		// class UParticleModuleLocationBoneSocket : public UParticleModuleLocationBase
		TEST_METHOD(Class__Engine__ParticleModuleLocationBoneSocket)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationBoneSocket, SourceType, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationBoneSocket, UnknownData_L0ZH, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationBoneSocket, UniversalOffset, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationBoneSocket, SourceLocations, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationBoneSocket, SelectionMethod, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationBoneSocket, UnknownData_I62Q, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationBoneSocket, UnknownData_Z0OJ, 0x0055);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationBoneSocket, InheritVelocityScale, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationBoneSocket, UnknownData_YD87, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationBoneSocket, SkelMeshActorParamName, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationBoneSocket, NumPreSelectedIndices, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationBoneSocket, UnknownData_NKVX, 0x006C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationBoneSocket, 0x0070);
		}

		// class UParticleModuleLocationDirect : public UParticleModuleLocationBase
		TEST_METHOD(Class__Engine__ParticleModuleLocationDirect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationDirect, Location, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationDirect, LocationOffset, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationDirect, ScaleFactor, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationDirect, Direction, 0x0120);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationDirect, 0x0170);
		}

		// class UParticleModuleLocationEmitter : public UParticleModuleLocationBase
		TEST_METHOD(Class__Engine__ParticleModuleLocationEmitter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationEmitter, EmitterName, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationEmitter, SelectionMethod, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationEmitter, UnknownData_GDDL, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationEmitter, UnknownData_GSI2, 0x003D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationEmitter, InheritSourceVelocityScale, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationEmitter, UnknownData_8JXH, 0x0045);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationEmitter, InheritSourceRotationScale, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationEmitter, UnknownData_6PQ3, 0x004C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationEmitter, 0x0050);
		}

		// class UParticleModuleLocationEmitterDirect : public UParticleModuleLocationBase
		TEST_METHOD(Class__Engine__ParticleModuleLocationEmitterDirect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationEmitterDirect, EmitterName, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationEmitterDirect, 0x0038);
		}

		// class UParticleModuleLocationPrimitiveBase : public UParticleModuleLocationBase
		TEST_METHOD(Class__Engine__ParticleModuleLocationPrimitiveBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationPrimitiveBase, UnknownData_2XCD, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationPrimitiveBase, VelocityScale, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationPrimitiveBase, StartLocation, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationPrimitiveBase, 0x00C0);
		}

		// class UParticleModuleLocationPrimitiveCylinder : public UParticleModuleLocationPrimitiveBase
		TEST_METHOD(Class__Engine__ParticleModuleLocationPrimitiveCylinder)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationPrimitiveCylinder, UnknownData_7JCR, 0x00C1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationPrimitiveCylinder, StartRadius, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationPrimitiveCylinder, StartHeight, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationPrimitiveCylinder, HeightAxis, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationPrimitiveCylinder, UnknownData_PZLG, 0x0139);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationPrimitiveCylinder, 0x0140);
		}

		// class UParticleModuleLocationPrimitiveCylinder_Seeded : public UParticleModuleLocationPrimitiveCylinder
		TEST_METHOD(Class__Engine__ParticleModuleLocationPrimitiveCylinder_Seeded)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationPrimitiveCylinder_Seeded, RandomSeedInfo, 0x0140);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationPrimitiveCylinder_Seeded, 0x0160);
		}

		// class UParticleModuleLocationPrimitiveSphere : public UParticleModuleLocationPrimitiveBase
		TEST_METHOD(Class__Engine__ParticleModuleLocationPrimitiveSphere)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationPrimitiveSphere, StartRadius, 0x00C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationPrimitiveSphere, 0x00F8);
		}

		// class UParticleModuleLocationPrimitiveSphere_Seeded : public UParticleModuleLocationPrimitiveSphere
		TEST_METHOD(Class__Engine__ParticleModuleLocationPrimitiveSphere_Seeded)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationPrimitiveSphere_Seeded, RandomSeedInfo, 0x00F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationPrimitiveSphere_Seeded, 0x0118);
		}

		// class UParticleModuleLocationPrimitiveTriangle : public UParticleModuleLocationBase
		TEST_METHOD(Class__Engine__ParticleModuleLocationPrimitiveTriangle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationPrimitiveTriangle, StartOffset, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationPrimitiveTriangle, Height, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationPrimitiveTriangle, Angle, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationPrimitiveTriangle, Thickness, 0x00F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationPrimitiveTriangle, 0x0128);
		}

		// class UParticleModuleLocationSkelVertSurface : public UParticleModuleLocationBase
		TEST_METHOD(Class__Engine__ParticleModuleLocationSkelVertSurface)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationSkelVertSurface, SourceType, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationSkelVertSurface, UnknownData_6X6W, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationSkelVertSurface, UniversalOffset, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationSkelVertSurface, UnknownData_BRGI, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationSkelVertSurface, InheritVelocityScale, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationSkelVertSurface, SkelMeshActorParamName, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationSkelVertSurface, ValidAssociatedBones, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationSkelVertSurface, UnknownData_WOBZ, 0x0061);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationSkelVertSurface, NormalToCompare, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationSkelVertSurface, NormalCheckToleranceDegrees, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationSkelVertSurface, NormalCheckTolerance, 0x0074);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationSkelVertSurface, ValidMaterialIndices, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationSkelVertSurface, UnknownData_XARQ, 0x0089);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationSkelVertSurface, InheritUVChannel, 0x008C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationSkelVertSurface, 0x0090);
		}

		// class UParticleModuleLocationWorldOffset : public UParticleModuleLocation
		TEST_METHOD(Class__Engine__ParticleModuleLocationWorldOffset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationWorldOffset, 0x0088);
		}

		// class UParticleModuleLocationWorldOffset_Seeded : public UParticleModuleLocationWorldOffset
		TEST_METHOD(Class__Engine__ParticleModuleLocationWorldOffset_Seeded)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleLocationWorldOffset_Seeded, RandomSeedInfo, 0x0088);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleLocationWorldOffset_Seeded, 0x00A8);
		}

		// class UParticleModuleMaterialBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleMaterialBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleMaterialBase, 0x0030);
		}

		// class UParticleModuleMeshMaterial : public UParticleModuleMaterialBase
		TEST_METHOD(Class__Engine__ParticleModuleMeshMaterial)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleMeshMaterial, MeshMaterials, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleMeshMaterial, 0x0040);
		}

		// class UParticleModuleRotationBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleRotationBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleRotationBase, 0x0030);
		}

		// class UParticleModuleMeshRotation : public UParticleModuleRotationBase
		TEST_METHOD(Class__Engine__ParticleModuleMeshRotation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleMeshRotation, StartRotation, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleMeshRotation, UnknownData_CHNJ, 0x0081);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleMeshRotation, 0x0088);
		}

		// class UParticleModuleMeshRotation_Seeded : public UParticleModuleMeshRotation
		TEST_METHOD(Class__Engine__ParticleModuleMeshRotation_Seeded)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleMeshRotation_Seeded, RandomSeedInfo, 0x0088);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleMeshRotation_Seeded, 0x00A8);
		}

		// class UParticleModuleRotationRateBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleRotationRateBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleRotationRateBase, 0x0030);
		}

		// class UParticleModuleMeshRotationRate : public UParticleModuleRotationRateBase
		TEST_METHOD(Class__Engine__ParticleModuleMeshRotationRate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleMeshRotationRate, StartRotationRate, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleMeshRotationRate, 0x0080);
		}

		// class UParticleModuleMeshRotationRate_Seeded : public UParticleModuleMeshRotationRate
		TEST_METHOD(Class__Engine__ParticleModuleMeshRotationRate_Seeded)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleMeshRotationRate_Seeded, RandomSeedInfo, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleMeshRotationRate_Seeded, 0x00A0);
		}

		// class UParticleModuleMeshRotationRateMultiplyLife : public UParticleModuleRotationRateBase
		TEST_METHOD(Class__Engine__ParticleModuleMeshRotationRateMultiplyLife)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleMeshRotationRateMultiplyLife, LifeMultiplier, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleMeshRotationRateMultiplyLife, 0x0080);
		}

		// class UParticleModuleMeshRotationRateOverLife : public UParticleModuleRotationRateBase
		TEST_METHOD(Class__Engine__ParticleModuleMeshRotationRateOverLife)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleMeshRotationRateOverLife, RotRate, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleMeshRotationRateOverLife, UnknownData_HRZ6, 0x0081);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleMeshRotationRateOverLife, 0x0088);
		}

		// class UParticleModuleOrbitBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleOrbitBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleOrbitBase, UnknownData_HC6K, 0x0031);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleOrbitBase, 0x0038);
		}

		// class UParticleModuleOrbit : public UParticleModuleOrbitBase
		TEST_METHOD(Class__Engine__ParticleModuleOrbit)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleOrbit, ChainMode, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleOrbit, UnknownData_IHGO, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleOrbit, OffsetAmount, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleOrbit, OffsetOptions, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleOrbit, UnknownData_VNQ7, 0x0094);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleOrbit, RotationAmount, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleOrbit, RotationOptions, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleOrbit, UnknownData_1WOI, 0x00EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleOrbit, RotationRateAmount, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleOrbit, RotationRateOptions, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleOrbit, UnknownData_MBT0, 0x0144);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleOrbit, 0x0148);
		}

		// class UParticleModuleOrientationBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleOrientationBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleOrientationBase, 0x0030);
		}

		// class UParticleModuleOrientationAxisLock : public UParticleModuleOrientationBase
		TEST_METHOD(Class__Engine__ParticleModuleOrientationAxisLock)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleOrientationAxisLock, LockAxisFlags, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleOrientationAxisLock, UnknownData_THOT, 0x0031);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleOrientationAxisLock, 0x0038);
		}

		// class UParticleModuleParameterBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleParameterBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleParameterBase, 0x0030);
		}

		// class UParticleModuleParameterDynamic : public UParticleModuleParameterBase
		TEST_METHOD(Class__Engine__ParticleModuleParameterDynamic)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleParameterDynamic, DynamicParams, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleParameterDynamic, UpdateFlags, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleParameterDynamic, UnknownData_B8AO, 0x0045);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleParameterDynamic, 0x0048);
		}

		// class UParticleModuleParameterDynamic_Seeded : public UParticleModuleParameterDynamic
		TEST_METHOD(Class__Engine__ParticleModuleParameterDynamic_Seeded)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleParameterDynamic_Seeded, RandomSeedInfo, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleParameterDynamic_Seeded, 0x0068);
		}

		// class UParticleModulePivotOffset : public UParticleModuleLocationBase
		TEST_METHOD(Class__Engine__ParticleModulePivotOffset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModulePivotOffset, PivotOffset, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModulePivotOffset, 0x0038);
		}

		// class UParticleModuleRequired : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleRequired)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, Material, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, EmitterOrigin, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, EmitterRotation, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, ScreenAlignment, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, UnknownData_AF5A, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, MinFacingCameraBlendDistance, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, MaxFacingCameraBlendDistance, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, UnknownData_443U, 0x005D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, SortMode, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, UnknownData_SNGN, 0x0061);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, UnknownData_BE12, 0x0065);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, EmitterDuration, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, EmitterDurationLow, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, UnknownData_DTRA, 0x0071);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, EmitterLoops, 0x0074);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, SpawnRate, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, ParticleBurstMethod, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, UnknownData_F225, 0x00B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, BurstList, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, EmitterDelay, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, EmitterDelayLow, 0x00CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, UnknownData_RMC9, 0x00D1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, InterpolationMethod, 0x00D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, UnknownData_MCO3, 0x00D5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, SubImages_Horizontal, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, SubImages_Vertical, 0x00DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, UnknownData_4CAH, 0x00E1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, RandomImageTime, 0x00E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, RandomImageChanges, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, UnknownData_8T64, 0x00ED);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, MacroUVPosition, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, MacroUVRadius, 0x00FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, UnknownData_Q0EO, 0x0101);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, MaxDrawCount, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, UVFlippingMode, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, UnknownData_N9CD, 0x0109);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, CutoutTexture, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, BoundingMode, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, OpacitySourceMode, 0x0119);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, UnknownData_FW2I, 0x011A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, AlphaThreshold, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, EmitterNormalsMode, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, UnknownData_NATS, 0x0121);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, NormalsSphereCenter, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, NormalsCylinderDirection, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, UnknownData_24FV, 0x013D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, NamedMaterialOverrides, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRequired, UnknownData_82B8, 0x0150);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleRequired, 0x0170);
		}

		// class UParticleModuleRotation : public UParticleModuleRotationBase
		TEST_METHOD(Class__Engine__ParticleModuleRotation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRotation, StartRotation, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleRotation, 0x0068);
		}

		// class UParticleModuleRotation_Seeded : public UParticleModuleRotation
		TEST_METHOD(Class__Engine__ParticleModuleRotation_Seeded)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRotation_Seeded, RandomSeedInfo, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleRotation_Seeded, 0x0088);
		}

		// class UParticleModuleRotationOverLifetime : public UParticleModuleRotationBase
		TEST_METHOD(Class__Engine__ParticleModuleRotationOverLifetime)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRotationOverLifetime, RotationOverLife, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRotationOverLifetime, UnknownData_TKBW, 0x0069);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleRotationOverLifetime, 0x0070);
		}

		// class UParticleModuleRotationRate : public UParticleModuleRotationRateBase
		TEST_METHOD(Class__Engine__ParticleModuleRotationRate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRotationRate, StartRotationRate, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleRotationRate, 0x0068);
		}

		// class UParticleModuleRotationRate_Seeded : public UParticleModuleRotationRate
		TEST_METHOD(Class__Engine__ParticleModuleRotationRate_Seeded)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRotationRate_Seeded, RandomSeedInfo, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleRotationRate_Seeded, 0x0088);
		}

		// class UParticleModuleRotationRateMultiplyLife : public UParticleModuleRotationRateBase
		TEST_METHOD(Class__Engine__ParticleModuleRotationRateMultiplyLife)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleRotationRateMultiplyLife, LifeMultiplier, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleRotationRateMultiplyLife, 0x0068);
		}

		// class UParticleModuleSizeBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleSizeBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleSizeBase, 0x0030);
		}

		// class UParticleModuleSize : public UParticleModuleSizeBase
		TEST_METHOD(Class__Engine__ParticleModuleSize)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSize, StartSize, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleSize, 0x0080);
		}

		// class UParticleModuleSize_Seeded : public UParticleModuleSize
		TEST_METHOD(Class__Engine__ParticleModuleSize_Seeded)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSize_Seeded, RandomSeedInfo, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleSize_Seeded, 0x00A0);
		}

		// class UParticleModuleSizeMultiplyLife : public UParticleModuleSizeBase
		TEST_METHOD(Class__Engine__ParticleModuleSizeMultiplyLife)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSizeMultiplyLife, LifeMultiplier, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSizeMultiplyLife, UnknownData_HXVP, 0x0081);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleSizeMultiplyLife, 0x0088);
		}

		// class UParticleModuleSizeScale : public UParticleModuleSizeBase
		TEST_METHOD(Class__Engine__ParticleModuleSizeScale)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSizeScale, SizeScale, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSizeScale, UnknownData_4KJZ, 0x0081);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleSizeScale, 0x0088);
		}

		// class UParticleModuleSizeScaleBySpeed : public UParticleModuleSizeBase
		TEST_METHOD(Class__Engine__ParticleModuleSizeScaleBySpeed)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSizeScaleBySpeed, SpeedScale, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSizeScaleBySpeed, MaxScale, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleSizeScaleBySpeed, 0x0040);
		}

		// class UParticleModuleSourceMovement : public UParticleModuleLocationBase
		TEST_METHOD(Class__Engine__ParticleModuleSourceMovement)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSourceMovement, SourceMovementScale, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleSourceMovement, 0x0080);
		}

		// class UParticleModuleSpawnBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleSpawnBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSpawnBase, UnknownData_NK5Y, 0x0031);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleSpawnBase, 0x0038);
		}

		// class UParticleModuleSpawn : public UParticleModuleSpawnBase
		TEST_METHOD(Class__Engine__ParticleModuleSpawn)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSpawn, Rate, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSpawn, RateScale, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSpawn, ParticleBurstMethod, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSpawn, UnknownData_YFYP, 0x00A9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSpawn, BurstList, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSpawn, BurstScale, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSpawn, UnknownData_ABU4, 0x00F9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleSpawn, 0x0100);
		}

		// class UParticleModuleSpawnPerUnit : public UParticleModuleSpawnBase
		TEST_METHOD(Class__Engine__ParticleModuleSpawnPerUnit)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSpawnPerUnit, UnitScalar, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSpawnPerUnit, UnknownData_VGMO, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSpawnPerUnit, SpawnPerUnit, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSpawnPerUnit, UnknownData_W2KE, 0x0079);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSpawnPerUnit, MovementTolerance, 0x007C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSpawnPerUnit, MaxFrameDistance, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSpawnPerUnit, UnknownData_IZ1Y, 0x0085);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleSpawnPerUnit, 0x0088);
		}

		// class UParticleModuleSubUVBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleSubUVBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleSubUVBase, 0x0030);
		}

		// class UParticleModuleSubUV : public UParticleModuleSubUVBase
		TEST_METHOD(Class__Engine__ParticleModuleSubUV)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSubUV, Animation, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSubUV, SubImageIndex, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSubUV, UnknownData_SLZV, 0x0071);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleSubUV, 0x0078);
		}

		// class UParticleModuleSubUVMovie : public UParticleModuleSubUV
		TEST_METHOD(Class__Engine__ParticleModuleSubUVMovie)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSubUVMovie, UnknownData_66IV, 0x0079);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSubUVMovie, FrameRate, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSubUVMovie, StartingFrame, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleSubUVMovie, UnknownData_CZCC, 0x00BC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleSubUVMovie, 0x00C0);
		}

		// class UParticleModuleTrailBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleTrailBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleTrailBase, 0x0030);
		}

		// class UParticleModuleTrailSource : public UParticleModuleTrailBase
		TEST_METHOD(Class__Engine__ParticleModuleTrailSource)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTrailSource, SourceMethod, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTrailSource, UnknownData_9GP2, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTrailSource, SourceName, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTrailSource, SourceStrength, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTrailSource, UnknownData_0OED, 0x0079);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTrailSource, SourceOffsetCount, 0x007C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTrailSource, SourceOffsetDefaults, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTrailSource, SelectionMethod, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTrailSource, UnknownData_2BHZ, 0x0091);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTrailSource, UnknownData_GJ6X, 0x0095);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleTrailSource, 0x0098);
		}

		// class UParticleModuleTypeDataBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleTypeDataBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleTypeDataBase, 0x0030);
		}

		// class UParticleModuleTypeDataAnimTrail : public UParticleModuleTypeDataBase
		TEST_METHOD(Class__Engine__ParticleModuleTypeDataAnimTrail)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataAnimTrail, UnknownData_THFM, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataAnimTrail, TilingDistance, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataAnimTrail, DistanceTessellationStepSize, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataAnimTrail, TangentTessellationStepSize, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataAnimTrail, WidthTessellationStepSize, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataAnimTrail, UnknownData_QD75, 0x0044);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleTypeDataAnimTrail, 0x0048);
		}

		// class UParticleModuleTypeDataBeam2 : public UParticleModuleTypeDataBase
		TEST_METHOD(Class__Engine__ParticleModuleTypeDataBeam2)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataBeam2, BeamMethod, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataBeam2, UnknownData_71M7, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataBeam2, TextureTile, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataBeam2, TextureTileDistance, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataBeam2, Sheets, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataBeam2, MaxBeamCount, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataBeam2, Speed, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataBeam2, InterpolationPoints, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataBeam2, UnknownData_0IFC, 0x004D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataBeam2, UpVectorStepSize, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataBeam2, UnknownData_K87D, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataBeam2, BranchParentName, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataBeam2, Distance, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataBeam2, TaperMethod, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataBeam2, UnknownData_HW2Q, 0x0099);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataBeam2, TaperFactor, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataBeam2, TaperScale, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataBeam2, UnknownData_724W, 0x0111);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleTypeDataBeam2, 0x0168);
		}

		// class UParticleModuleTypeDataGpu : public UParticleModuleTypeDataBase
		TEST_METHOD(Class__Engine__ParticleModuleTypeDataGpu)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataGpu, EmitterInfo, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataGpu, ResourceData, 0x02F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataGpu, CameraMotionBlurAmount, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataGpu, UnknownData_69M4, 0x0455);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleTypeDataGpu, 0x0460);
		}

		// class UParticleModuleTypeDataMesh : public UParticleModuleTypeDataBase
		TEST_METHOD(Class__Engine__ParticleModuleTypeDataMesh)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataMesh, Mesh, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataMesh, bUseStaticMeshLODs, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataMesh, UnknownData_9V5U, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataMesh, LODSizeScale, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataMesh, UnknownData_ONNS, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataMesh, MeshAlignment, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataMesh, UnknownData_0K81, 0x0045);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataMesh, UnknownData_3RFI, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataMesh, Pitch, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataMesh, Roll, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataMesh, Yaw, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataMesh, RollPitchYawRange, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataMesh, UnknownData_55P4, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataMesh, AxisLockOption, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataMesh, UnknownData_WDGI, 0x00B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataMesh, UnknownData_ESAY, 0x00B5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataMesh, CameraFacingUpAxisOption, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataMesh, CameraFacingOption, 0x00B9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataMesh, UnknownData_QS13, 0x00BA);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataMesh, UnknownData_TXHW, 0x00BD);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleTypeDataMesh, 0x00C0);
		}

		// class UParticleModuleTypeDataRibbon : public UParticleModuleTypeDataBase
		TEST_METHOD(Class__Engine__ParticleModuleTypeDataRibbon)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataRibbon, MaxTessellationBetweenParticles, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataRibbon, SheetsPerTrail, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataRibbon, MaxTrailCount, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataRibbon, MaxParticleInTrailCount, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataRibbon, UnknownData_VBDH, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataRibbon, RenderAxis, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataRibbon, UnknownData_ODAK, 0x0045);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataRibbon, TangentSpawningScalar, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataRibbon, UnknownData_S4LJ, 0x004D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataRibbon, TilingDistance, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataRibbon, DistanceTessellationStepSize, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataRibbon, UnknownData_WDNA, 0x0059);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleTypeDataRibbon, TangentTessellationScalar, 0x005C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleTypeDataRibbon, 0x0060);
		}

		// class UParticleModuleVectorFieldBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleVectorFieldBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleVectorFieldBase, 0x0030);
		}

		// class UParticleModuleVectorFieldGlobal : public UParticleModuleVectorFieldBase
		TEST_METHOD(Class__Engine__ParticleModuleVectorFieldGlobal)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVectorFieldGlobal, UnknownData_USI6, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVectorFieldGlobal, GlobalVectorFieldScale, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVectorFieldGlobal, GlobalVectorFieldTightness, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVectorFieldGlobal, UnknownData_PWQ5, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleVectorFieldGlobal, 0x0040);
		}

		// class UParticleModuleVectorFieldLocal : public UParticleModuleVectorFieldBase
		TEST_METHOD(Class__Engine__ParticleModuleVectorFieldLocal)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVectorFieldLocal, VectorField, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVectorFieldLocal, RelativeTranslation, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVectorFieldLocal, RelativeRotation, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVectorFieldLocal, RelativeScale3D, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVectorFieldLocal, Intensity, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVectorFieldLocal, Tightness, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVectorFieldLocal, UnknownData_NYCI, 0x0065);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleVectorFieldLocal, 0x0068);
		}

		// class UParticleModuleVectorFieldRotation : public UParticleModuleVectorFieldBase
		TEST_METHOD(Class__Engine__ParticleModuleVectorFieldRotation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVectorFieldRotation, MinInitialRotation, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVectorFieldRotation, MaxInitialRotation, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleVectorFieldRotation, 0x0048);
		}

		// class UParticleModuleVectorFieldRotationRate : public UParticleModuleVectorFieldBase
		TEST_METHOD(Class__Engine__ParticleModuleVectorFieldRotationRate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVectorFieldRotationRate, RotationRate, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVectorFieldRotationRate, UnknownData_TEHF, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleVectorFieldRotationRate, 0x0040);
		}

		// class UParticleModuleVectorFieldScale : public UParticleModuleVectorFieldBase
		TEST_METHOD(Class__Engine__ParticleModuleVectorFieldScale)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVectorFieldScale, VectorFieldScale, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVectorFieldScale, VectorFieldScaleRaw, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleVectorFieldScale, 0x0070);
		}

		// class UParticleModuleVectorFieldScaleOverLife : public UParticleModuleVectorFieldBase
		TEST_METHOD(Class__Engine__ParticleModuleVectorFieldScaleOverLife)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVectorFieldScaleOverLife, VectorFieldScaleOverLife, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVectorFieldScaleOverLife, VectorFieldScaleOverLifeRaw, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleVectorFieldScaleOverLife, 0x0070);
		}

		// class UParticleModuleVelocityBase : public UParticleModule
		TEST_METHOD(Class__Engine__ParticleModuleVelocityBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVelocityBase, UnknownData_KTW3, 0x0031);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleVelocityBase, 0x0038);
		}

		// class UParticleModuleVelocity : public UParticleModuleVelocityBase
		TEST_METHOD(Class__Engine__ParticleModuleVelocity)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVelocity, StartVelocity, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVelocity, StartVelocityRadial, 0x0088);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleVelocity, 0x00C0);
		}

		// class UParticleModuleVelocity_Seeded : public UParticleModuleVelocity
		TEST_METHOD(Class__Engine__ParticleModuleVelocity_Seeded)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVelocity_Seeded, RandomSeedInfo, 0x00C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleVelocity_Seeded, 0x00E0);
		}

		// class UParticleModuleVelocityCone : public UParticleModuleVelocityBase
		TEST_METHOD(Class__Engine__ParticleModuleVelocityCone)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVelocityCone, Angle, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVelocityCone, Velocity, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVelocityCone, Direction, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVelocityCone, UnknownData_2HQS, 0x00B4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleVelocityCone, 0x00B8);
		}

		// class UParticleModuleVelocityInheritParent : public UParticleModuleVelocityBase
		TEST_METHOD(Class__Engine__ParticleModuleVelocityInheritParent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVelocityInheritParent, Scale, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleVelocityInheritParent, 0x0088);
		}

		// class UParticleModuleVelocityOverLifetime : public UParticleModuleVelocityBase
		TEST_METHOD(Class__Engine__ParticleModuleVelocityOverLifetime)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVelocityOverLifetime, VelOverLife, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleModuleVelocityOverLifetime, UnknownData_C60J, 0x0089);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleModuleVelocityOverLifetime, 0x0090);
		}

		// class UParticleSpriteEmitter : public UParticleEmitter
		TEST_METHOD(Class__Engine__ParticleSpriteEmitter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleSpriteEmitter, 0x0158);
		}

		// class UParticleSystem : public UObject
		TEST_METHOD(Class__Engine__ParticleSystem)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, SystemUpdateMode, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, UnknownData_PKH9, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, UpdateTime_FPS, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, UpdateTime_Delta, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, WarmupTime, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, WarmupTickRate, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, UnknownData_VI4Z, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, Emitters, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, PreviewComponent, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, CurveEdSetup, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, UnknownData_B21N, 0x0061);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, LODDistanceCheckTime, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, LODMethod, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, UnknownData_WF9D, 0x0069);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, LODDistances, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, UnknownData_QTIM, 0x0081);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, LODSettings, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, UnknownData_BZ3S, 0x0099);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, FixedRelativeBoundingBox, 0x009C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, SecondsBeforeInactive, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, UnknownData_5GXW, 0x00BD);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, Delay, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, DelayLow, 0x00C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, UnknownData_WYC2, 0x00C9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, bAutoDeactivate, 0x00CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, UnknownData_5G09, 0x00CD);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, MinTimeBetweenTicks, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, InsignificantReaction, 0x00D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, UnknownData_LWIT, 0x00D5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, InsignificanceDelay, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, MaxSignificanceLevel, 0x00DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, UnknownData_M0RK, 0x00DD);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, MaxPoolSize, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, MacroUVPosition, 0x00E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, MacroUVRadius, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, OcclusionBoundsMethod, 0x00F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, UnknownData_ENXB, 0x00F5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, CustomOcclusionBounds, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, UnknownData_186V, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, SoloTracking, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, NamedMaterialSlots, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystem, UnknownData_R690, 0x0138);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleSystem, 0x0140);
		}

		// class UParticleSystemReplay : public UObject
		TEST_METHOD(Class__Engine__ParticleSystemReplay)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemReplay, ClipIDNumber, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleSystemReplay, UnknownData_RYEO, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleSystemReplay, 0x0040);
		}

		// class UPathFollowingAgentInterface : public UInterface
		TEST_METHOD(Class__Engine__PathFollowingAgentInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPathFollowingAgentInterface, 0x0028);
		}

		// class UPawnNoiseEmitterComponent : public UActorComponent
		TEST_METHOD(Class__Engine__PawnNoiseEmitterComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnNoiseEmitterComponent, UnknownData_UIDM, 0x0101);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnNoiseEmitterComponent, LastRemoteNoisePosition, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnNoiseEmitterComponent, NoiseLifetime, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnNoiseEmitterComponent, LastRemoteNoiseVolume, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnNoiseEmitterComponent, LastRemoteNoiseTime, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnNoiseEmitterComponent, LastLocalNoiseVolume, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnNoiseEmitterComponent, LastLocalNoiseTime, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnNoiseEmitterComponent, UnknownData_Z8SQ, 0x0124);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPawnNoiseEmitterComponent, 0x0128);
		}

		// class UPhysicalAnimationComponent : public UActorComponent
		TEST_METHOD(Class__Engine__PhysicalAnimationComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicalAnimationComponent, StrengthMultiplyer, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicalAnimationComponent, UnknownData_HSOS, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicalAnimationComponent, SkeletalMeshComponent, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicalAnimationComponent, UnknownData_TV5X, 0x0110);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicalAnimationComponent, 0x0138);
		}

		// class UPhysicalMaterial : public UObject
		TEST_METHOD(Class__Engine__PhysicalMaterial)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicalMaterial, Friction, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicalMaterial, FrictionCombineMode, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicalMaterial, bOverrideFrictionCombineMode, 0x002D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicalMaterial, UnknownData_G9SX, 0x002E);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicalMaterial, Restitution, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicalMaterial, RestitutionCombineMode, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicalMaterial, bOverrideRestitutionCombineMode, 0x0035);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicalMaterial, UnknownData_S39E, 0x0036);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicalMaterial, Density, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicalMaterial, RaiseMassToPower, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicalMaterial, DestructibleDamageThresholdScale, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicalMaterial, UnknownData_XEVG, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicalMaterial, PhysicalMaterialProperty, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicalMaterial, SurfaceType, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicalMaterial, UnknownData_5HW1, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicalMaterial, TireFrictionScale, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicalMaterial, TireFrictionScales, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicalMaterial, UnknownData_HCL2, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicalMaterial, 0x0080);
		}

		// class UPhysicalMaterialPropertyBase : public UObject
		TEST_METHOD(Class__Engine__PhysicalMaterialPropertyBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicalMaterialPropertyBase, 0x0028);
		}

		// class UPhysicsAsset : public UObject
		TEST_METHOD(Class__Engine__PhysicsAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsAsset, UnknownData_6YS8, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsAsset, BoundsBodies, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsAsset, SkeletalBodySetups, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsAsset, ConstraintSetup, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsAsset, UnknownData_KV58, 0x0061);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsAsset, ThumbnailInfo, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsAsset, BodySetup, 0x0110);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicsAsset, 0x0120);
		}

		// class USkeletalBodySetup : public UBodySetup
		TEST_METHOD(Class__Engine__SkeletalBodySetup)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalBodySetup, bSkipScaleFromAnimation, 0x0280);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalBodySetup, UnknownData_MQUI, 0x0281);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalBodySetup, PhysicalAnimationData, 0x0288);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USkeletalBodySetup, 0x0298);
		}

		// class UPhysicsCollisionHandler : public UObject
		TEST_METHOD(Class__Engine__PhysicsCollisionHandler)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsCollisionHandler, ImpactThreshold, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsCollisionHandler, ImpactReFireDelay, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsCollisionHandler, DefaultImpactSound, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsCollisionHandler, LastImpactSoundTime, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsCollisionHandler, UnknownData_XTJQ, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicsCollisionHandler, 0x0040);
		}

		// class ARigidBodyBase : public AActor
		TEST_METHOD(Class__Engine__RigidBodyBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARigidBodyBase, 0x0338);
		}

		// class APhysicsConstraintActor : public ARigidBodyBase
		TEST_METHOD(Class__Engine__PhysicsConstraintActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::APhysicsConstraintActor, ConstraintComp, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::APhysicsConstraintActor, ConstraintActor1, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::APhysicsConstraintActor, ConstraintActor2, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::APhysicsConstraintActor, UnknownData_RELR, 0x0351);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APhysicsConstraintActor, 0x0358);
		}

		// class UPhysicsConstraintComponent : public USceneComponent
		TEST_METHOD(Class__Engine__PhysicsConstraintComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsConstraintComponent, ConstraintActor1, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsConstraintComponent, ComponentName1, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsConstraintComponent, ConstraintActor2, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsConstraintComponent, ComponentName2, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsConstraintComponent, UnknownData_1OTX, 0x0268);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsConstraintComponent, ConstraintSetup, 0x0278);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsConstraintComponent, OnConstraintBroken, 0x0280);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsConstraintComponent, ConstraintInstance, 0x0290);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsConstraintComponent, UnknownData_ERTU, 0x0448);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicsConstraintComponent, 0x0450);
		}

		// class UPhysicsConstraintTemplate : public UObject
		TEST_METHOD(Class__Engine__PhysicsConstraintTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsConstraintTemplate, DefaultInstance, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsConstraintTemplate, ProfileHandles, 0x01E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsConstraintTemplate, DefaultProfile, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsConstraintTemplate, UnknownData_CSG0, 0x02F4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicsConstraintTemplate, 0x02F8);
		}

		// class UPhysicsHandleComponent : public UActorComponent
		TEST_METHOD(Class__Engine__PhysicsHandleComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsHandleComponent, GrabbedComponent, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsHandleComponent, UnknownData_K7PQ, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsHandleComponent, UnknownData_K3IL, 0x0111);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsHandleComponent, LinearDamping, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsHandleComponent, LinearStiffness, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsHandleComponent, AngularDamping, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsHandleComponent, AngularStiffness, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsHandleComponent, UnknownData_RIWS, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsHandleComponent, InterpolationSpeed, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsHandleComponent, UnknownData_BXB8, 0x0194);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicsHandleComponent, 0x01B0);
		}

		// class UPhysicsSettings : public UDeveloperSettings
		TEST_METHOD(Class__Engine__PhysicsSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, DefaultGravityZ, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, DefaultTerminalVelocity, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, DefaultFluidFriction, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, SimulateScratchMemorySize, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, RagdollAggregateThreshold, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, TriangleMeshTriangleMinAreaThreshold, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, bEnableAsyncScene, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, bEnableShapeSharing, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, bEnablePCM, 0x0052);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, bEnableStabilization, 0x0053);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, bWarnMissingLocks, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, bEnable2DPhysics, 0x0055);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, UnknownData_ZOTH, 0x0056);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, PhysicErrorCorrection, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, LockedAxis, 0x008C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, DefaultDegreesOfFreedom, 0x008D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, UnknownData_5WQZ, 0x008E);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, BounceThresholdVelocity, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, FrictionCombineMode, 0x0094);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, RestitutionCombineMode, 0x0095);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, UnknownData_6XYD, 0x0096);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, MaxAngularVelocity, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, MaxDepenetrationVelocity, 0x009C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, ContactOffsetMultiplier, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, MinContactOffset, 0x00A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, MaxContactOffset, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, bSimulateSkeletalMeshOnDedicatedServer, 0x00AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, DefaultShapeComplexity, 0x00AD);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, bDefaultHasComplexCollision, 0x00AE);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, bSuppressFaceRemapTable, 0x00AF);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, bSupportUVFromHitResults, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, bDisableActiveActors, 0x00B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, bDisableKinematicStaticPairs, 0x00B2);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, bDisableKinematicKinematicPairs, 0x00B3);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, bDisableCCD, 0x00B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, bEnableEnhancedDeterminism, 0x00B5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, UnknownData_NNXG, 0x00B6);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, MaxPhysicsDeltaTime, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, bSubstepping, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, bSubsteppingAsync, 0x00BD);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, UnknownData_25C3, 0x00BE);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, MaxSubstepDeltaTime, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, MaxSubsteps, 0x00C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, SyncSceneSmoothingFactor, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, AsyncSceneSmoothingFactor, 0x00CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, InitialAverageFrameRate, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, PhysXTreeRebuildRate, 0x00D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, PhysicalSurfaces, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, DefaultBroadphaseSettings, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSettings, UnknownData_YF34, 0x010C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicsSettings, 0x0110);
		}

		// class UPhysicsSpringComponent : public USceneComponent
		TEST_METHOD(Class__Engine__PhysicsSpringComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSpringComponent, UnknownData_IT32, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSpringComponent, SpringDamping, 0x024C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSpringComponent, SpringLengthAtRest, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSpringComponent, SpringRadius, 0x0254);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSpringComponent, SpringChannel, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSpringComponent, bIgnoreSelf, 0x0259);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSpringComponent, UnknownData_CNQI, 0x025A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSpringComponent, SpringCompression, 0x025C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsSpringComponent, UnknownData_A163, 0x0260);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicsSpringComponent, 0x0270);
		}

		// class APhysicsThruster : public ARigidBodyBase
		TEST_METHOD(Class__Engine__PhysicsThruster)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::APhysicsThruster, ThrusterComponent, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APhysicsThruster, 0x0340);
		}

		// class UPhysicsThrusterComponent : public USceneComponent
		TEST_METHOD(Class__Engine__PhysicsThrusterComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPhysicsThrusterComponent, UnknownData_Y1F7, 0x0248);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPhysicsThrusterComponent, 0x0250);
		}

		// class APlanarReflection : public ASceneCapture
		TEST_METHOD(Class__Engine__PlanarReflection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::APlanarReflection, PlanarReflectionComponent, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlanarReflection, bShowPreviewPlane, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlanarReflection, UnknownData_4TFU, 0x0349);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APlanarReflection, 0x0350);
		}

		// class UPlanarReflectionComponent : public USceneCaptureComponent
		TEST_METHOD(Class__Engine__PlanarReflectionComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlanarReflectionComponent, PreviewBox, 0x02E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlanarReflectionComponent, NormalDistortionStrength, 0x02E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlanarReflectionComponent, PrefilterRoughness, 0x02EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlanarReflectionComponent, PrefilterRoughnessDistance, 0x02F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlanarReflectionComponent, ScreenPercentage, 0x02F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlanarReflectionComponent, ExtraFOV, 0x02F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlanarReflectionComponent, DistanceFromPlaneFadeStart, 0x02FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlanarReflectionComponent, DistanceFromPlaneFadeEnd, 0x0300);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlanarReflectionComponent, DistanceFromPlaneFadeoutStart, 0x0304);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlanarReflectionComponent, DistanceFromPlaneFadeoutEnd, 0x0308);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlanarReflectionComponent, AngleFromPlaneFadeStart, 0x030C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlanarReflectionComponent, AngleFromPlaneFadeEnd, 0x0310);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlanarReflectionComponent, bRenderSceneTwoSided, 0x0314);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlanarReflectionComponent, UnknownData_NDSE, 0x0315);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlanarReflectionComponent, 0x03C0);
		}

		// class APlaneReflectionCapture : public AReflectionCapture
		TEST_METHOD(Class__Engine__PlaneReflectionCapture)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APlaneReflectionCapture, 0x0340);
		}

		// class UPlaneReflectionCaptureComponent : public UReflectionCaptureComponent
		TEST_METHOD(Class__Engine__PlaneReflectionCaptureComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlaneReflectionCaptureComponent, UnknownData_AC7P, 0x02BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlaneReflectionCaptureComponent, PreviewInfluenceRadius, 0x02C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlaneReflectionCaptureComponent, PreviewCaptureBox, 0x02C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlaneReflectionCaptureComponent, 0x02D0);
		}

		// class UPlatformEventsComponent : public UActorComponent
		TEST_METHOD(Class__Engine__PlatformEventsComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlatformEventsComponent, PlatformChangedToLaptopModeDelegate, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlatformEventsComponent, PlatformChangedToTabletModeDelegate, 0x0110);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlatformEventsComponent, 0x0120);
		}

		// class UPlatformInterfaceWebResponse : public UObject
		TEST_METHOD(Class__Engine__PlatformInterfaceWebResponse)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlatformInterfaceWebResponse, OriginalURL, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlatformInterfaceWebResponse, ResponseCode, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlatformInterfaceWebResponse, Tag, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlatformInterfaceWebResponse, StringResponse, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlatformInterfaceWebResponse, BinaryResponse, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlatformInterfaceWebResponse, UnknownData_INN3, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlatformInterfaceWebResponse, 0x00B0);
		}

		// class UPlayerInput : public UObject
		TEST_METHOD(Class__Engine__PlayerInput)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlayerInput, UnknownData_VZFS, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlayerInput, DebugExecBindings, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlayerInput, UnknownData_GIZF, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlayerInput, InvertedAxis, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlayerInput, UnknownData_14D4, 0x0170);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlayerInput, 0x03A8);
		}

		// class APlayerStartPIE : public APlayerStart
		TEST_METHOD(Class__Engine__PlayerStartPIE)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APlayerStartPIE, 0x0368);
		}

		// class APlayerState : public AInfo
		TEST_METHOD(Class__Engine__PlayerState)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerState, Score, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerState, UnknownData_3G5E, 0x033C);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerState, PlayerName, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerState, UnknownData_U48E, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerState, PlayerId, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerState, Ping, 0x0364);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerState, UnknownData_AIQ8, 0x0365);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerState, UnknownData_NCER, 0x0367);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerState, StartTime, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerState, UnknownData_595W, 0x036C);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerState, EngineMessageClass, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerState, UnknownData_S1CV, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerState, SavedNetworkAddress, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerState, UniqueId, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerState, UnknownData_4A3T, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerState, PawnPrivate, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerState, UnknownData_9YLC, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerState, PlayerNamePrivate, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::APlayerState, UnknownData_SII5, 0x03F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APlayerState, 0x0400);
		}

		// class UPluginCommandlet : public UCommandlet
		TEST_METHOD(Class__Engine__PluginCommandlet)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPluginCommandlet, UnknownData_UTUM, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPluginCommandlet, 0x00A0);
		}

		// class APointLight : public ALight
		TEST_METHOD(Class__Engine__PointLight)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::APointLight, PointLightComponent, 0x0348);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APointLight, 0x0350);
		}

		// class UPointLightComponent : public ULocalLightComponent
		TEST_METHOD(Class__Engine__PointLightComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPointLightComponent, LightFalloffExponent, 0x038C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPointLightComponent, SourceRadius, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPointLightComponent, SoftSourceRadius, 0x0394);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPointLightComponent, SourceLength, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPointLightComponent, UnknownData_IGY4, 0x039C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPointLightComponent, 0x03A0);
		}

		// class UPolys : public UObject
		TEST_METHOD(Class__Engine__Polys)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPolys, UnknownData_ID1Y, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPolys, 0x0038);
		}

		// class UPoseableMeshComponent : public USkinnedMeshComponent
		TEST_METHOD(Class__Engine__PoseableMeshComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPoseableMeshComponent, UnknownData_O78F, 0x06D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPoseableMeshComponent, 0x0820);
		}

		// class UPoseAsset : public UAnimationAsset
		TEST_METHOD(Class__Engine__PoseAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPoseAsset, PoseContainer, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPoseAsset, bAdditivePose, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPoseAsset, UnknownData_ZR2K, 0x0189);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPoseAsset, BasePoseIndex, 0x018C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPoseAsset, RetargetSource, 0x0190);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPoseAsset, 0x0198);
		}

		// class UPoseWatch : public UObject
		TEST_METHOD(Class__Engine__PoseWatch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPoseWatch, Node, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPoseWatch, PoseWatchColour, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPoseWatch, UnknownData_WPDI, 0x0034);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPoseWatch, 0x0038);
		}

		// class UPostProcessComponent : public USceneComponent
		TEST_METHOD(Class__Engine__PostProcessComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPostProcessComponent, UnknownData_NN61, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPostProcessComponent, UnknownData_HS4L, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPostProcessComponent, Settings, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPostProcessComponent, Priority, 0x0890);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPostProcessComponent, BlendRadius, 0x0894);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPostProcessComponent, BlendWeight, 0x0898);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPostProcessComponent, UnknownData_9W4R, 0x089D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPostProcessComponent, 0x08A0);
		}

		// class APostProcessVolume : public AVolume
		TEST_METHOD(Class__Engine__PostProcessVolume)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::APostProcessVolume, UnknownData_4KZU, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::APostProcessVolume, Settings, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::APostProcessVolume, Priority, 0x09B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::APostProcessVolume, BlendRadius, 0x09B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::APostProcessVolume, BlendWeight, 0x09B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::APostProcessVolume, UnknownData_9T0J, 0x09BD);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APostProcessVolume, 0x09C0);
		}

		// class APrecomputedVisibilityOverrideVolume : public AVolume
		TEST_METHOD(Class__Engine__PrecomputedVisibilityOverrideVolume)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::APrecomputedVisibilityOverrideVolume, OverrideVisibleActors, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::APrecomputedVisibilityOverrideVolume, OverrideInvisibleActors, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::APrecomputedVisibilityOverrideVolume, OverrideInvisibleLevels, 0x0390);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APrecomputedVisibilityOverrideVolume, 0x03A0);
		}

		// class APrecomputedVisibilityVolume : public AVolume
		TEST_METHOD(Class__Engine__PrecomputedVisibilityVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APrecomputedVisibilityVolume, 0x0370);
		}

		// class UPreviewCollectionInterface : public UInterface
		TEST_METHOD(Class__Engine__PreviewCollectionInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPreviewCollectionInterface, 0x0028);
		}

		// class UPreviewMeshCollection : public UDataAsset
		TEST_METHOD(Class__Engine__PreviewMeshCollection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPreviewMeshCollection, UnknownData_EQAE, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPreviewMeshCollection, Skeleton, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPreviewMeshCollection, SkeletalMeshes, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPreviewMeshCollection, 0x0050);
		}

		// class UPrimaryAssetLabel : public UPrimaryDataAsset
		TEST_METHOD(Class__Engine__PrimaryAssetLabel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimaryAssetLabel, Rules, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimaryAssetLabel, UnknownData_XB4V, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimaryAssetLabel, ExplicitAssets, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimaryAssetLabel, ExplicitBlueprints, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPrimaryAssetLabel, AssetCollection, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPrimaryAssetLabel, 0x0070);
		}

		// class UProxyLODMeshSimplificationSettings : public UDeveloperSettings
		TEST_METHOD(Class__Engine__ProxyLODMeshSimplificationSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UProxyLODMeshSimplificationSettings, ProxyLODMeshReductionModuleName, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UProxyLODMeshSimplificationSettings, 0x0040);
		}

		// class ARadialForceActor : public ARigidBodyBase
		TEST_METHOD(Class__Engine__RadialForceActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ARadialForceActor, ForceComponent, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARadialForceActor, 0x0340);
		}

		// class URadialForceComponent : public USceneComponent
		TEST_METHOD(Class__Engine__RadialForceComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::URadialForceComponent, UnknownData_VLO9, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::URadialForceComponent, ImpulseStrength, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::URadialForceComponent, UnknownData_CDVM, 0x0255);
			CHEAT_GEAR_CHECK_OFFSET(CG::URadialForceComponent, ForceStrength, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::URadialForceComponent, DestructibleDamage, 0x025C);
			CHEAT_GEAR_CHECK_OFFSET(CG::URadialForceComponent, ObjectTypesToAffect, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::URadialForceComponent, UnknownData_B1WK, 0x0270);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URadialForceComponent, 0x0280);
		}

		// class ARectLight : public ALight
		TEST_METHOD(Class__Engine__RectLight)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ARectLight, RectLightComponent, 0x0348);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARectLight, 0x0350);
		}

		// class URectLightComponent : public ULocalLightComponent
		TEST_METHOD(Class__Engine__RectLightComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::URectLightComponent, SourceHeight, 0x038C);
			CHEAT_GEAR_CHECK_OFFSET(CG::URectLightComponent, SourceTexture, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::URectLightComponent, UnknownData_LXBD, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URectLightComponent, 0x03A0);
		}

		// class URendererSettings : public UDeveloperSettings
		TEST_METHOD(Class__Engine__RendererSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, UnknownData_APM0, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, MaxMobileCascades, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, MobileMSAASampleCount, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, UnknownData_TI03, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, UnknownData_YHWB, 0x0045);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, MinScreenRadiusForLights, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, MinScreenRadiusForEarlyZPass, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, MinScreenRadiusForCSMdepth, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, UnknownData_4GFE, 0x0055);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, ReflectionCaptureResolution, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, UnknownData_UG1G, 0x005E);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, TessellationAdaptivePixelsPerTriangle, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, UnknownData_DH81, 0x0065);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, TranslucentSortPolicy, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, UnknownData_E837, 0x0069);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, TranslucentSortAxis, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, CustomDepthStencil, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, UnknownData_P7EN, 0x0079);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, UnknownData_FXVP, 0x007D);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, bEnableAlphaChannelInPostProcessing, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, UnknownData_LA65, 0x0081);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, UnknownData_RTS4, 0x0085);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, DefaultFeatureAutoExposure, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, UnknownData_VR48, 0x0089);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, UnknownData_VPT4, 0x008D);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, DefaultFeatureAntiAliasing, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, DefaultLightUnits, 0x0091);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, DefaultBackBufferPixelFormat, 0x0092);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, UnknownData_YGXL, 0x0093);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, UnknownData_K9ZZ, 0x0095);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, EarlyZPass, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, UnknownData_OZW7, 0x0099);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, UnknownData_C293, 0x009D);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, ClearSceneMethod, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, UnknownData_1WLT, 0x00A1);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, UnknownData_J6ZU, 0x00A5);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, GPUSimulationTextureSizeX, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, GPUSimulationTextureSizeY, 0x00AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, UnknownData_ZDFW, 0x00B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, GBufferFormat, 0x00B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, UnknownData_NKZ9, 0x00B5);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, UnknownData_AKEL, 0x00BA);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, WireframeCullThreshold, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, UnknownData_LHQ1, 0x00C2);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, MobileNumDynamicPointLights, 0x00C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, UnknownData_6U13, 0x00C9);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, SkinCacheSceneMemoryLimitInMB, 0x00CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererSettings, UnknownData_SBH8, 0x00D1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URendererSettings, 0x00D8);
		}

		// class URendererOverrideSettings : public UDeveloperSettings
		TEST_METHOD(Class__Engine__RendererOverrideSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::URendererOverrideSettings, UnknownData_RDVG, 0x0039);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URendererOverrideSettings, 0x0040);
		}

		// class UReplicationDriver : public UObject
		TEST_METHOD(Class__Engine__ReplicationDriver)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UReplicationDriver, 0x0028);
		}

		// class UReplicationConnectionDriver : public UObject
		TEST_METHOD(Class__Engine__ReplicationConnectionDriver)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UReplicationConnectionDriver, 0x0028);
		}

		// class UReporterBase : public UObject
		TEST_METHOD(Class__Engine__ReporterBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UReporterBase, UnknownData_4CVT, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UReporterBase, 0x0030);
		}

		// class UReporterGraph : public UReporterBase
		TEST_METHOD(Class__Engine__ReporterGraph)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UReporterGraph, UnknownData_NWT2, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UReporterGraph, 0x00A8);
		}

		// class UReverbEffect : public UObject
		TEST_METHOD(Class__Engine__ReverbEffect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UReverbEffect, Density, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UReverbEffect, Diffusion, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UReverbEffect, Gain, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UReverbEffect, GainHF, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UReverbEffect, DecayTime, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UReverbEffect, DecayHFRatio, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UReverbEffect, ReflectionsGain, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UReverbEffect, ReflectionsDelay, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UReverbEffect, LateGain, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UReverbEffect, LateDelay, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UReverbEffect, AirAbsorptionGainHF, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UReverbEffect, RoomRolloffFactor, 0x0054);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UReverbEffect, 0x0058);
		}

		// class URig : public UObject
		TEST_METHOD(Class__Engine__Rig)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::URig, UnknownData_Z8S6, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::URig, TransformBases, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::URig, Nodes, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URig, 0x0050);
		}

		// class URotatingMovementComponent : public UMovementComponent
		TEST_METHOD(Class__Engine__RotatingMovementComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::URotatingMovementComponent, RotationRate, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::URotatingMovementComponent, PivotTranslation, 0x014C);
			CHEAT_GEAR_CHECK_OFFSET(CG::URotatingMovementComponent, UnknownData_Y7RI, 0x0159);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URotatingMovementComponent, 0x0160);
		}

		// class URVOAvoidanceInterface : public UInterface
		TEST_METHOD(Class__Engine__RVOAvoidanceInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URVOAvoidanceInterface, 0x0028);
		}

		// class UScene : public UObject
		TEST_METHOD(Class__Engine__Scene)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UScene, 0x0028);
		}

		// class USceneCaptureComponentCube : public USceneCaptureComponent
		TEST_METHOD(Class__Engine__SceneCaptureComponentCube)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponentCube, TextureTarget, 0x02E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponentCube, TextureTargetLeft, 0x02E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponentCube, TextureTargetRight, 0x02F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponentCube, TextureTargetODS, 0x02F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponentCube, IPD, 0x0300);
			CHEAT_GEAR_CHECK_OFFSET(CG::USceneCaptureComponentCube, UnknownData_I0QE, 0x0304);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USceneCaptureComponentCube, 0x0310);
		}

		// class ASceneCaptureCube : public ASceneCapture
		TEST_METHOD(Class__Engine__SceneCaptureCube)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASceneCaptureCube, CaptureComponentCube, 0x0340);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASceneCaptureCube, 0x0348);
		}

		// class USCS_Node : public UObject
		TEST_METHOD(Class__Engine__SCS_Node)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USCS_Node, ComponentClass, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::USCS_Node, ComponentTemplate, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::USCS_Node, CookedComponentInstancingData, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::USCS_Node, AttachToName, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::USCS_Node, ParentComponentOrVariableName, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::USCS_Node, ParentComponentOwnerClassName, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::USCS_Node, bIsParentComponentNative, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USCS_Node, UnknownData_1SLT, 0x00A1);
			CHEAT_GEAR_CHECK_OFFSET(CG::USCS_Node, ChildNodes, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USCS_Node, MetaDataArray, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USCS_Node, VariableGuid, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USCS_Node, InternalVariableName, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USCS_Node, 0x00E0);
		}

		// class USelection : public UObject
		TEST_METHOD(Class__Engine__Selection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USelection, UnknownData_PQ5S, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USelection, 0x00A0);
		}

		// class AServerStatReplicator : public AInfo
		TEST_METHOD(Class__Engine__ServerStatReplicator)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, bUpdateStatNet, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, bOverwriteClientStats, 0x0339);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, UnknownData_8T5A, 0x033A);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, Channels, 0x033C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, InRate, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, OutRate, 0x0344);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, OutSaturation, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, MaxPacketOverhead, 0x034C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, InRateClientMax, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, InRateClientMin, 0x0354);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, InRateClientAvg, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, InPacketsClientMax, 0x035C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, InPacketsClientMin, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, InPacketsClientAvg, 0x0364);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, OutRateClientMax, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, OutRateClientMin, 0x036C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, OutRateClientAvg, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, OutPacketsClientMax, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, OutPacketsClientMin, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, OutPacketsClientAvg, 0x037C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, NetNumClients, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, InPackets, 0x0384);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, OutPackets, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, InBunches, 0x038C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, OutBunches, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, OutLoss, 0x0394);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, InLoss, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, VoiceBytesSent, 0x039C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, VoiceBytesRecv, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, VoicePacketsSent, 0x03A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, VoicePacketsRecv, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, PercentInVoice, 0x03AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, PercentOutVoice, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, NumActorChannels, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, NumConsideredActors, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, PrioritizedActors, 0x03BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, NumRelevantActors, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, NumRelevantDeletedActors, 0x03C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, NumReplicatedActorAttempts, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, NumReplicatedActors, 0x03CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, NumActors, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, NumNetActors, 0x03D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, NumDormantActors, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, NumInitiallyDormantActors, 0x03DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, NumNetGUIDsAckd, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, NumNetGUIDsPending, 0x03E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, NumNetGUIDsUnAckd, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, ObjPathBytes, 0x03EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, NetGUIDOutRate, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, NetGUIDInRate, 0x03F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, NetSaturated, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AServerStatReplicator, UnknownData_60XH, 0x03FC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AServerStatReplicator, 0x0400);
		}

		// class UShadowMapTexture2D : public UTexture2D
		TEST_METHOD(Class__Engine__ShadowMapTexture2D)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UShadowMapTexture2D, ShadowmapFlags, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShadowMapTexture2D, UnknownData_W8QI, 0x00E9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UShadowMapTexture2D, 0x00F0);
		}

		// class USimpleConstructionScript : public UObject
		TEST_METHOD(Class__Engine__SimpleConstructionScript)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USimpleConstructionScript, RootNodes, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::USimpleConstructionScript, AllNodes, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::USimpleConstructionScript, DefaultSceneRootNode, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::USimpleConstructionScript, UnknownData_C9JD, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USimpleConstructionScript, 0x00A0);
		}

		// class USkeletalMeshLODSettings : public UDataAsset
		TEST_METHOD(Class__Engine__SkeletalMeshLODSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshLODSettings, MinLOD, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshLODSettings, UnknownData_85X1, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshLODSettings, LODGroups, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USkeletalMeshLODSettings, 0x0048);
		}

		// class USkeletalMeshSocket : public UObject
		TEST_METHOD(Class__Engine__SkeletalMeshSocket)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshSocket, SocketName, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshSocket, BoneName, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshSocket, RelativeLocation, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshSocket, RelativeRotation, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshSocket, RelativeScale, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshSocket, bForceAlwaysAnimated, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkeletalMeshSocket, UnknownData_C2AC, 0x005D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USkeletalMeshSocket, 0x0060);
		}

		// class ASkyLight : public AInfo
		TEST_METHOD(Class__Engine__SkyLight)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASkyLight, LightComponent, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASkyLight, UnknownData_LT8N, 0x0341);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASkyLight, 0x0348);
		}

		// class USkyLightComponent : public ULightComponentBase
		TEST_METHOD(Class__Engine__SkyLightComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USkyLightComponent, SourceType, 0x0270);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkyLightComponent, UnknownData_Z8EA, 0x0271);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkyLightComponent, Cubemap, 0x0278);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkyLightComponent, SourceCubemapAngle, 0x0280);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkyLightComponent, CubemapResolution, 0x0284);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkyLightComponent, SkyDistanceThreshold, 0x0288);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkyLightComponent, bCaptureEmissiveOnly, 0x028C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkyLightComponent, bLowerHemisphereIsBlack, 0x028D);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkyLightComponent, UnknownData_R5ST, 0x028E);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkyLightComponent, LowerHemisphereColor, 0x0290);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkyLightComponent, OcclusionMaxDistance, 0x02A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkyLightComponent, Contrast, 0x02A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkyLightComponent, OcclusionExponent, 0x02A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkyLightComponent, MinOcclusion, 0x02AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkyLightComponent, OcclusionTint, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkyLightComponent, OcclusionCombineMode, 0x02B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkyLightComponent, UnknownData_PTSS, 0x02B5);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkyLightComponent, BlendDestinationCubemap, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkyLightComponent, UnknownData_0NRF, 0x0360);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USkyLightComponent, 0x0420);
		}

		// class USlateBrushAsset : public UObject
		TEST_METHOD(Class__Engine__SlateBrushAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USlateBrushAsset, Brush, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USlateBrushAsset, 0x00B0);
		}

		// class USlateTextureAtlasInterface : public UInterface
		TEST_METHOD(Class__Engine__SlateTextureAtlasInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USlateTextureAtlasInterface, 0x0028);
		}

		// class USmokeTestCommandlet : public UCommandlet
		TEST_METHOD(Class__Engine__SmokeTestCommandlet)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USmokeTestCommandlet, 0x0080);
		}

		// class USoundAttenuation : public UObject
		TEST_METHOD(Class__Engine__SoundAttenuation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundAttenuation, Attenuation, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundAttenuation, 0x02D0);
		}

		// class USoundClass : public UObject
		TEST_METHOD(Class__Engine__SoundClass)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundClass, Properties, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundClass, UnknownData_JROB, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundClass, ChildClasses, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundClass, PassiveSoundMixModifiers, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundClass, ParentClass, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundClass, 0x0080);
		}

		// class USoundConcurrency : public UObject
		TEST_METHOD(Class__Engine__SoundConcurrency)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundConcurrency, Concurrency, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundConcurrency, 0x0038);
		}

		// class USoundCue : public USoundBase
		TEST_METHOD(Class__Engine__SoundCue)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundCue, UnknownData_ER7P, 0x00A9);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundCue, FirstNode, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundCue, VolumeMultiplier, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundCue, PitchMultiplier, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundCue, AttenuationOverrides, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundCue, SubtitlePriority, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundCue, UnknownData_MFAZ, 0x036C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundCue, 0x0380);
		}

		// class USoundEffectSourcePreset : public USoundEffectPreset
		TEST_METHOD(Class__Engine__SoundEffectSourcePreset)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundEffectSourcePreset, 0x0040);
		}

		// class USoundEffectSourcePresetChain : public UObject
		TEST_METHOD(Class__Engine__SoundEffectSourcePresetChain)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundEffectSourcePresetChain, Chain, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundEffectSourcePresetChain, UnknownData_E93I, 0x0039);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundEffectSourcePresetChain, 0x0040);
		}

		// class USoundGroups : public UObject
		TEST_METHOD(Class__Engine__SoundGroups)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundGroups, SoundGroupProfiles, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundGroups, UnknownData_W9Q4, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundGroups, 0x0088);
		}

		// class USoundMix : public UObject
		TEST_METHOD(Class__Engine__SoundMix)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundMix, UnknownData_TTY7, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundMix, EQPriority, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundMix, EQSettings, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundMix, SoundClassEffects, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundMix, InitialDelay, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundMix, FadeInTime, 0x007C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundMix, Duration, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundMix, FadeOutTime, 0x0084);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundMix, 0x0088);
		}

		// class USoundNode : public UObject
		TEST_METHOD(Class__Engine__SoundNode)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNode, ChildNodes, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNode, 0x0038);
		}

		// class USoundNodeAssetReferencer : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeAssetReferencer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeAssetReferencer, 0x0038);
		}

		// class USoundNodeAttenuation : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeAttenuation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeAttenuation, AttenuationSettings, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeAttenuation, AttenuationOverrides, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeAttenuation, UnknownData_5PSD, 0x02E9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeAttenuation, 0x02F0);
		}

		// class USoundNodeBranch : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeBranch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeBranch, BoolParameterName, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeBranch, 0x0040);
		}

		// class USoundNodeConcatenator : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeConcatenator)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeConcatenator, InputVolume, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeConcatenator, 0x0048);
		}

		// class USoundNodeDelay : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeDelay)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeDelay, DelayMin, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeDelay, DelayMax, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeDelay, 0x0040);
		}

		// class USoundNodeDialoguePlayer : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeDialoguePlayer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeDialoguePlayer, DialogueWaveParameter, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeDialoguePlayer, UnknownData_G3PB, 0x0059);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeDialoguePlayer, 0x0060);
		}

		// class USoundNodeDistanceCrossFade : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeDistanceCrossFade)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeDistanceCrossFade, CrossFadeInput, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeDistanceCrossFade, 0x0048);
		}

		// class USoundNodeDoppler : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeDoppler)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeDoppler, DopplerIntensity, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeDoppler, UnknownData_CFDG, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeDoppler, 0x0040);
		}

		// class USoundNodeEnveloper : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeEnveloper)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeEnveloper, LoopStart, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeEnveloper, LoopEnd, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeEnveloper, DurationAfterLoop, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeEnveloper, loopCount, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeEnveloper, UnknownData_U2LP, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeEnveloper, VolumeInterpCurve, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeEnveloper, PitchInterpCurve, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeEnveloper, VolumeCurve, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeEnveloper, PitchCurve, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeEnveloper, PitchMin, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeEnveloper, PitchMax, 0x0154);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeEnveloper, VolumeMin, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeEnveloper, VolumeMax, 0x015C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeEnveloper, 0x0160);
		}

		// class USoundNodeGroupControl : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeGroupControl)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeGroupControl, GroupSizes, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeGroupControl, 0x0048);
		}

		// class USoundNodeLooping : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeLooping)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeLooping, loopCount, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeLooping, UnknownData_562N, 0x003D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeLooping, 0x0040);
		}

		// class USoundNodeMature : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeMature)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeMature, 0x0038);
		}

		// class USoundNodeMixer : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeMixer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeMixer, InputVolume, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeMixer, 0x0048);
		}

		// class USoundNodeModulator : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeModulator)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeModulator, PitchMin, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeModulator, PitchMax, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeModulator, VolumeMin, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeModulator, VolumeMax, 0x0044);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeModulator, 0x0048);
		}

		// class USoundNodeModulatorContinuous : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeModulatorContinuous)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeModulatorContinuous, PitchModulationParams, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeModulatorContinuous, VolumeModulationParams, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeModulatorContinuous, 0x0078);
		}

		// class USoundNodeOscillator : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeOscillator)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeOscillator, UnknownData_74I1, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeOscillator, AmplitudeMin, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeOscillator, AmplitudeMax, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeOscillator, FrequencyMin, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeOscillator, FrequencyMax, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeOscillator, OffsetMin, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeOscillator, OffsetMax, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeOscillator, CenterMin, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeOscillator, CenterMax, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeOscillator, UnknownData_GZYP, 0x005C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeOscillator, 0x0060);
		}

		// class USoundNodeParamCrossFade : public USoundNodeDistanceCrossFade
		TEST_METHOD(Class__Engine__SoundNodeParamCrossFade)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeParamCrossFade, ParamName, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeParamCrossFade, 0x0050);
		}

		// class USoundNodeQualityLevel : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeQualityLevel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeQualityLevel, 0x0038);
		}

		// class USoundNodeRandom : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeRandom)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeRandom, Weights, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeRandom, PreselectAtLevelLoad, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeRandom, UnknownData_NA0K, 0x004D);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeRandom, UnknownData_GS42, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeRandom, HasBeenUsed, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeRandom, NumRandomUsed, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeRandom, UnknownData_UP13, 0x006C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeRandom, 0x0070);
		}

		// class USoundNodeSoundClass : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeSoundClass)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeSoundClass, SoundClassOverride, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeSoundClass, 0x0040);
		}

		// class USoundNodeSwitch : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeSwitch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeSwitch, IntParameterName, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeSwitch, 0x0040);
		}

		// class USoundNodeWaveParam : public USoundNode
		TEST_METHOD(Class__Engine__SoundNodeWaveParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeWaveParam, WaveParameterName, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeWaveParam, 0x0040);
		}

		// class USoundNodeWavePlayer : public USoundNodeAssetReferencer
		TEST_METHOD(Class__Engine__SoundNodeWavePlayer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeWavePlayer, SoundWaveAssetPtr, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeWavePlayer, SoundWave, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundNodeWavePlayer, UnknownData_BOHW, 0x0069);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundNodeWavePlayer, 0x0070);
		}

		// class USoundSourceBus : public USoundWave
		TEST_METHOD(Class__Engine__SoundSourceBus)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundSourceBus, SourceBusChannels, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundSourceBus, UnknownData_1LIZ, 0x0209);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundSourceBus, SourceBusDuration, 0x020C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundSourceBus, UnknownData_ZVFL, 0x0211);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundSourceBus, 0x0220);
		}

		// class USoundSubmix : public UObject
		TEST_METHOD(Class__Engine__SoundSubmix)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundSubmix, ChildSubmixes, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundSubmix, ParentSubmix, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundSubmix, ChannelFormat, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundSubmix, UnknownData_UX5N, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundSubmix, SubmixEffectChain, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundSubmix, AmbisonicsPluginSettings, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundSubmix, EnvelopeFollowerAttackTime, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundSubmix, EnvelopeFollowerReleaseTime, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundSubmix, OnSubmixRecordedFileDone, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundSubmix, UnknownData_QY2T, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundSubmix, 0x0080);
		}

		// class ASpectatorPawn : public ADefaultPawn
		TEST_METHOD(Class__Engine__SpectatorPawn)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASpectatorPawn, 0x03C0);
		}

		// class USpectatorPawnMovement : public UFloatingPawnMovement
		TEST_METHOD(Class__Engine__SpectatorPawnMovement)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USpectatorPawnMovement, UnknownData_C93J, 0x01A1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpectatorPawnMovement, 0x01A8);
		}

		// class ASphereReflectionCapture : public AReflectionCapture
		TEST_METHOD(Class__Engine__SphereReflectionCapture)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASphereReflectionCapture, DrawCaptureRadius, 0x0340);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASphereReflectionCapture, 0x0348);
		}

		// class USphereReflectionCaptureComponent : public UReflectionCaptureComponent
		TEST_METHOD(Class__Engine__SphereReflectionCaptureComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USphereReflectionCaptureComponent, CaptureDistanceScale, 0x02BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::USphereReflectionCaptureComponent, PreviewInfluenceRadius, 0x02C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USphereReflectionCaptureComponent, UnknownData_O6WG, 0x02C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USphereReflectionCaptureComponent, 0x02D0);
		}

		// class ASplineMeshActor : public AActor
		TEST_METHOD(Class__Engine__SplineMeshActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASplineMeshActor, SplineMeshComponent, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASplineMeshActor, 0x0340);
		}

		// class USplineMeshComponent : public UStaticMeshComponent
		TEST_METHOD(Class__Engine__SplineMeshComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineMeshComponent, UnknownData_9FQL, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineMeshComponent, SplineParams, 0x0600);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineMeshComponent, SplineUpDir, 0x0658);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineMeshComponent, UnknownData_MSH6, 0x0665);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineMeshComponent, ForwardAxis, 0x0668);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineMeshComponent, UnknownData_UOMW, 0x0669);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineMeshComponent, SplineBoundaryMin, 0x066C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineMeshComponent, SplineBoundaryMax, 0x0670);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineMeshComponent, UnknownData_8J9A, 0x0674);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineMeshComponent, BodySetup, 0x0678);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineMeshComponent, CachedMeshBodySetupGuid, 0x0680);
			CHEAT_GEAR_CHECK_OFFSET(CG::USplineMeshComponent, UnknownData_E3U1, 0x0691);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USplineMeshComponent, 0x06A0);
		}

		// class USpotLightComponent : public UPointLightComponent
		TEST_METHOD(Class__Engine__SpotLightComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USpotLightComponent, InnerConeAngle, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpotLightComponent, OuterConeAngle, 0x03A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpotLightComponent, LightShaftConeAngle, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpotLightComponent, UnknownData_26ZA, 0x03AC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpotLightComponent, 0x03B0);
		}

		// class UStaticMeshDescriptions : public UObject
		TEST_METHOD(Class__Engine__StaticMeshDescriptions)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMeshDescriptions, UnknownData_T9I2, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStaticMeshDescriptions, 0x0038);
		}

		// class UStaticMesh : public UObject
		TEST_METHOD(Class__Engine__StaticMesh)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMesh, UnknownData_R6T2, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMesh, MinLOD, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMesh, LpvBiasMultiplier, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMesh, StaticMaterials, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMesh, LightmapUVDensity, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMesh, LightMapResolution, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMesh, LightMapCoordinateIndex, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMesh, DistanceFieldSelfShadowBias, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMesh, BodySetup, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMesh, LODForCollision, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMesh, UnknownData_H38Q, 0x007D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMesh, Sockets, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMesh, UnknownData_T7WH, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMesh, PositiveBoundsExtension, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMesh, NegativeBoundsExtension, 0x00C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMesh, ExtendedBounds, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMesh, ElementToIgnoreForTexFactor, 0x00EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMesh, AssetUserData, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMesh, EditableMesh, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMesh, NavCollision, 0x0108);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStaticMesh, 0x0110);
		}

		// class UStaticMeshSocket : public UObject
		TEST_METHOD(Class__Engine__StaticMeshSocket)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMeshSocket, SocketName, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMeshSocket, RelativeLocation, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMeshSocket, RelativeRotation, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMeshSocket, RelativeScale, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMeshSocket, UnknownData_Q7UP, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStaticMeshSocket, Tag, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStaticMeshSocket, 0x0068);
		}

		// class UStereoLayerComponent : public USceneComponent
		TEST_METHOD(Class__Engine__StereoLayerComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UStereoLayerComponent, UnknownData_EA18, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStereoLayerComponent, Texture, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStereoLayerComponent, LeftTexture, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStereoLayerComponent, UnknownData_2A9V, 0x0261);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStereoLayerComponent, QuadSize, 0x0264);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStereoLayerComponent, UVRect, 0x026C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStereoLayerComponent, CylinderRadius, 0x0280);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStereoLayerComponent, CylinderOverlayArc, 0x0284);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStereoLayerComponent, CylinderHeight, 0x0288);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStereoLayerComponent, StereoLayerType, 0x028C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStereoLayerComponent, StereoLayerShape, 0x028D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStereoLayerComponent, UnknownData_JKJA, 0x028E);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStereoLayerComponent, Priority, 0x0290);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStereoLayerComponent, UnknownData_0SHI, 0x0294);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStereoLayerComponent, 0x02E0);
		}

		// class UStereoLayerFunctionLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__StereoLayerFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStereoLayerFunctionLibrary, 0x0028);
		}

		// class UStringTable : public UObject
		TEST_METHOD(Class__Engine__StringTable)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UStringTable, UnknownData_PF7D, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStringTable, 0x0040);
		}

		// class USubsurfaceProfile : public UObject
		TEST_METHOD(Class__Engine__SubsurfaceProfile)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USubsurfaceProfile, Settings, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USubsurfaceProfile, 0x0078);
		}

		// class USubUVAnimation : public UObject
		TEST_METHOD(Class__Engine__SubUVAnimation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USubUVAnimation, SubUVTexture, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::USubUVAnimation, SubImages_Horizontal, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::USubUVAnimation, SubImages_Vertical, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::USubUVAnimation, BoundingMode, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::USubUVAnimation, OpacitySourceMode, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::USubUVAnimation, UnknownData_GALY, 0x003A);
			CHEAT_GEAR_CHECK_OFFSET(CG::USubUVAnimation, AlphaThreshold, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USubUVAnimation, UnknownData_EYM8, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USubUVAnimation, 0x0060);
		}

		// class UTimecodeProvider : public UObject
		TEST_METHOD(Class__Engine__TimecodeProvider)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTimecodeProvider, 0x0028);
		}

		// class USystemTimeTimecodeProvider : public UTimecodeProvider
		TEST_METHOD(Class__Engine__SystemTimeTimecodeProvider)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USystemTimeTimecodeProvider, FrameRate, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::USystemTimeTimecodeProvider, UnknownData_8IQV, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USystemTimeTimecodeProvider, 0x0038);
		}

		// class UTextPropertyTestObject : public UObject
		TEST_METHOD(Class__Engine__TextPropertyTestObject)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextPropertyTestObject, DefaultedText, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextPropertyTestObject, UndefaultedText, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextPropertyTestObject, TransientText, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextPropertyTestObject, 0x0070);
		}

		// class ATextRenderActor : public AActor
		TEST_METHOD(Class__Engine__TextRenderActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ATextRenderActor, TextRender, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATextRenderActor, 0x0340);
		}

		// class UTextRenderComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Engine__TextRenderComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextRenderComponent, Text, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextRenderComponent, TextMaterial, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextRenderComponent, Font, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextRenderComponent, HorizontalAlignment, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextRenderComponent, VerticalAlignment, 0x0591);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextRenderComponent, UnknownData_RUWZ, 0x0592);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextRenderComponent, TextRenderColor, 0x0594);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextRenderComponent, XScale, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextRenderComponent, YScale, 0x059C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextRenderComponent, WorldSize, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextRenderComponent, InvDefaultSize, 0x05A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextRenderComponent, HorizSpacingAdjust, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextRenderComponent, VertSpacingAdjust, 0x05AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextRenderComponent, UnknownData_V0AN, 0x05B1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextRenderComponent, 0x05C0);
		}

		// class UTexture2DDynamic : public UTexture
		TEST_METHOD(Class__Engine__Texture2DDynamic)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTexture2DDynamic, UnknownData_W6KE, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTexture2DDynamic, Format, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTexture2DDynamic, UnknownData_YAXB, 0x00B9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTexture2DDynamic, 0x00C8);
		}

		// class UTextureCube : public UTexture
		TEST_METHOD(Class__Engine__TextureCube)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextureCube, UnknownData_3YWZ, 0x00B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextureCube, 0x0108);
		}

		// class UTextureLightProfile : public UTexture2D
		TEST_METHOD(Class__Engine__TextureLightProfile)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextureLightProfile, Brightness, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextureLightProfile, TextureMultiplier, 0x00EC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextureLightProfile, 0x00F0);
		}

		// class UTextureRenderTargetCube : public UTextureRenderTarget
		TEST_METHOD(Class__Engine__TextureRenderTargetCube)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextureRenderTargetCube, SizeX, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextureRenderTargetCube, ClearColor, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextureRenderTargetCube, OverrideFormat, 0x00CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextureRenderTargetCube, UnknownData_S5GT, 0x00CE);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextureRenderTargetCube, 0x00D0);
		}

		// class UThumbnailInfo : public UObject
		TEST_METHOD(Class__Engine__ThumbnailInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UThumbnailInfo, 0x0028);
		}

		// class UTimelineComponent : public UActorComponent
		TEST_METHOD(Class__Engine__TimelineComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTimelineComponent, TheTimeline, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTimelineComponent, UnknownData_D1YK, 0x0199);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTimelineComponent, 0x01A0);
		}

		// class UTimelineTemplate : public UObject
		TEST_METHOD(Class__Engine__TimelineTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTimelineTemplate, TimelineLength, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTimelineTemplate, LengthMode, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTimelineTemplate, UnknownData_X50H, 0x002D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTimelineTemplate, UnknownData_IIL0, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTimelineTemplate, EventTracks, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTimelineTemplate, FloatTracks, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTimelineTemplate, VectorTracks, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTimelineTemplate, LinearColorTracks, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTimelineTemplate, MetaDataArray, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTimelineTemplate, TimelineGuid, 0x0088);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTimelineTemplate, 0x0098);
		}

		// class UTireType : public UDataAsset
		TEST_METHOD(Class__Engine__TireType)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTireType, FrictionScale, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTireType, UnknownData_E998, 0x0034);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTireType, 0x0038);
		}

		// class UTouchInterface : public UObject
		TEST_METHOD(Class__Engine__TouchInterface)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTouchInterface, Controls, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTouchInterface, ActiveOpacity, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTouchInterface, InactiveOpacity, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTouchInterface, TimeUntilDeactive, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTouchInterface, TimeUntilReset, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTouchInterface, ActivationDelay, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTouchInterface, bPreventRecenter, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTouchInterface, UnknownData_OC15, 0x004D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTouchInterface, StartupDelay, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTouchInterface, UnknownData_ACNN, 0x0054);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTouchInterface, 0x0058);
		}

		// class ATriggerCapsule : public ATriggerBase
		TEST_METHOD(Class__Engine__TriggerCapsule)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATriggerCapsule, 0x0340);
		}

		// class ATriggerVolume : public AVolume
		TEST_METHOD(Class__Engine__TriggerVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATriggerVolume, 0x0370);
		}

		// class UTwitterIntegrationBase : public UPlatformInterfaceBase
		TEST_METHOD(Class__Engine__TwitterIntegrationBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTwitterIntegrationBase, 0x0038);
		}

		// class UUserDefinedEnum : public UEnum
		TEST_METHOD(Class__Engine__UserDefinedEnum)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserDefinedEnum, DisplayNameMap, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUserDefinedEnum, 0x00B0);
		}

		// class UUserDefinedStruct : public UScriptStruct
		TEST_METHOD(Class__Engine__UserDefinedStruct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserDefinedStruct, Status, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserDefinedStruct, UnknownData_N54L, 0x0099);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserDefinedStruct, Guid, 0x009C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserDefinedStruct, UnknownData_PDC0, 0x00AC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUserDefinedStruct, 0x00E0);
		}

		// class UUserInterfaceSettings : public UDeveloperSettings
		TEST_METHOD(Class__Engine__UserInterfaceSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserInterfaceSettings, RenderFocusRule, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserInterfaceSettings, UnknownData_56LR, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserInterfaceSettings, HardwareCursors, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserInterfaceSettings, SoftwareCursors, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserInterfaceSettings, DefaultCursor, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserInterfaceSettings, TextEditBeamCursor, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserInterfaceSettings, CrosshairsCursor, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserInterfaceSettings, HandCursor, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserInterfaceSettings, GrabHandCursor, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserInterfaceSettings, GrabHandClosedCursor, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserInterfaceSettings, SlashedCircleCursor, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserInterfaceSettings, ApplicationScale, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserInterfaceSettings, UIScaleRule, 0x018C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserInterfaceSettings, UnknownData_5CB0, 0x018D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserInterfaceSettings, CustomScalingRuleClass, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserInterfaceSettings, UIScaleCurve, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserInterfaceSettings, bAllowHighDPIInGameMode, 0x0220);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserInterfaceSettings, bLoadWidgetsOnDedicatedServer, 0x0221);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserInterfaceSettings, UnknownData_SD00, 0x0222);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserInterfaceSettings, CursorClasses, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserInterfaceSettings, CustomScalingRuleClassInstance, 0x0238);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserInterfaceSettings, CustomScalingRule, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserInterfaceSettings, UnknownData_EFV8, 0x0248);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUserInterfaceSettings, 0x0258);
		}

		// class UVectorField : public UObject
		TEST_METHOD(Class__Engine__VectorField)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UVectorField, Bounds, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVectorField, Intensity, 0x0044);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVectorField, 0x0048);
		}

		// class UVectorFieldAnimated : public UVectorField
		TEST_METHOD(Class__Engine__VectorFieldAnimated)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UVectorFieldAnimated, Texture, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVectorFieldAnimated, ConstructionOp, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVectorFieldAnimated, UnknownData_ALAK, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVectorFieldAnimated, VolumeSizeX, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVectorFieldAnimated, VolumeSizeY, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVectorFieldAnimated, VolumeSizeZ, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVectorFieldAnimated, SubImagesX, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVectorFieldAnimated, SubImagesY, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVectorFieldAnimated, FrameCount, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVectorFieldAnimated, FramesPerSecond, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVectorFieldAnimated, UnknownData_9BC0, 0x0071);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVectorFieldAnimated, NoiseField, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVectorFieldAnimated, NoiseScale, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVectorFieldAnimated, NoiseMax, 0x0084);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVectorFieldAnimated, 0x0088);
		}

		// class UVectorFieldComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Engine__VectorFieldComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UVectorFieldComponent, VectorField, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVectorFieldComponent, Intensity, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVectorFieldComponent, Tightness, 0x0574);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVectorFieldComponent, UnknownData_AEJ8, 0x0579);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVectorFieldComponent, 0x0590);
		}

		// class UVectorFieldStatic : public UVectorField
		TEST_METHOD(Class__Engine__VectorFieldStatic)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UVectorFieldStatic, SizeX, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVectorFieldStatic, SizeY, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVectorFieldStatic, SizeZ, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVectorFieldStatic, UnknownData_PB8Q, 0x0054);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVectorFieldStatic, 0x00D0);
		}

		// class AVectorFieldVolume : public AActor
		TEST_METHOD(Class__Engine__VectorFieldVolume)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVectorFieldVolume, VectorFieldComponent, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVectorFieldVolume, 0x0340);
		}

		// class UVirtualTexture : public UObject
		TEST_METHOD(Class__Engine__VirtualTexture)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UVirtualTexture, Space, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVirtualTexture, Rebuild, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVirtualTexture, UnknownData_TNQA, 0x0031);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVirtualTexture, 0x0050);
		}

		// class ULightMapVirtualTexture : public UVirtualTexture
		TEST_METHOD(Class__Engine__LightMapVirtualTexture)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightMapVirtualTexture, LayerFlags, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightMapVirtualTexture, UnknownData_PYTL, 0x0054);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULightMapVirtualTexture, 0x0058);
		}

		// class UVirtualTextureSpace : public UObject
		TEST_METHOD(Class__Engine__VirtualTextureSpace)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UVirtualTextureSpace, Layers, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVirtualTextureSpace, TileSize, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVirtualTextureSpace, BorderWidth, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVirtualTextureSpace, Size, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVirtualTextureSpace, Dimensions, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVirtualTextureSpace, Format, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVirtualTextureSpace, UnknownData_6BS3, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVirtualTextureSpace, PoolSize, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVirtualTextureSpace, UnknownData_9LZN, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVirtualTextureSpace, 0x0070);
		}

		// class ULightMapVirtualTextureSpace : public UVirtualTextureSpace
		TEST_METHOD(Class__Engine__LightMapVirtualTextureSpace)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULightMapVirtualTextureSpace, 0x0070);
		}

		// class UVisualLoggerAutomationTests : public UObject
		TEST_METHOD(Class__Engine__VisualLoggerAutomationTests)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVisualLoggerAutomationTests, 0x0028);
		}

		// class UVisualLoggerDebugSnapshotInterface : public UInterface
		TEST_METHOD(Class__Engine__VisualLoggerDebugSnapshotInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVisualLoggerDebugSnapshotInterface, 0x0028);
		}

		// class UVisualLoggerKismetLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__VisualLoggerKismetLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVisualLoggerKismetLibrary, 0x0028);
		}

		// class UVoiceChannel : public UChannel
		TEST_METHOD(Class__Engine__VoiceChannel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UVoiceChannel, UnknownData_GEPG, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVoiceChannel, 0x0078);
		}

		// class UVOIPTalker : public UActorComponent
		TEST_METHOD(Class__Engine__VOIPTalker)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UVOIPTalker, Settings, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVOIPTalker, UnknownData_87LM, 0x0118);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVOIPTalker, 0x0138);
		}

		// class UVOIPStatics : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Engine__VOIPStatics)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVOIPStatics, 0x0028);
		}

		// class UVolumeTexture : public UTexture
		TEST_METHOD(Class__Engine__VolumeTexture)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UVolumeTexture, UnknownData_QPB7, 0x00B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVolumeTexture, 0x0108);
		}

		// class AVolumetricLightmapDensityVolume : public AVolume
		TEST_METHOD(Class__Engine__VolumetricLightmapDensityVolume)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVolumetricLightmapDensityVolume, AllowedMipLevelRange, 0x0370);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVolumetricLightmapDensityVolume, 0x0378);
		}

		// class AWindDirectionalSource : public AInfo
		TEST_METHOD(Class__Engine__WindDirectionalSource)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AWindDirectionalSource, Component, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWindDirectionalSource, 0x0340);
		}

		// class UWindDirectionalSourceComponent : public USceneComponent
		TEST_METHOD(Class__Engine__WindDirectionalSourceComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UWindDirectionalSourceComponent, UnknownData_QG1N, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWindDirectionalSourceComponent, Speed, 0x024C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWindDirectionalSourceComponent, MinGustAmount, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWindDirectionalSourceComponent, MaxGustAmount, 0x0254);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWindDirectionalSourceComponent, Radius, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWindDirectionalSourceComponent, UnknownData_4XAD, 0x025D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWindDirectionalSourceComponent, 0x0270);
		}

		// class UWorldComposition : public UObject
		TEST_METHOD(Class__Engine__WorldComposition)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorldComposition, UnknownData_8FRU, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorldComposition, TilesStreaming, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorldComposition, TilesStreamingTimeThreshold, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorldComposition, bLoadAllTilesDuringCinematic, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorldComposition, bRebaseOriginIn3DSpace, 0x0061);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorldComposition, UnknownData_BSQU, 0x0062);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWorldComposition, RebaseOriginDistance, 0x0064);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWorldComposition, 0x0068);
		}

		// class UHierarchicalLODSetup : public UObject
		TEST_METHOD(Class__Engine__HierarchicalLODSetup)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UHierarchicalLODSetup, HierarchicalLODSetup, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UHierarchicalLODSetup, OverrideBaseMaterial, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHierarchicalLODSetup, 0x0060);
		}

		// class ULevelVariantSets : public UObject
		TEST_METHOD(Class__VariantManagerContent__LevelVariantSets)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelVariantSets, VariantSets, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelVariantSets, DisplayNodeExpansionStates, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelVariantSets, 0x0088);
		}

		// class ALevelVariantSetsActor : public AActor
		TEST_METHOD(Class__VariantManagerContent__LevelVariantSetsActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ALevelVariantSetsActor, LevelVariantSets, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALevelVariantSetsActor, 0x0350);
		}

		// class UPropertyValue : public UObject
		TEST_METHOD(Class__VariantManagerContent__PropertyValue)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPropertyValue, UnknownData_XWYB, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPropertyValue, FullDisplayString, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPropertyValue, bHasRecordedData, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPropertyValue, bIsObjectProperty, 0x0089);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPropertyValue, UnknownData_KSOU, 0x008A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPropertyValue, ValueBytes, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPropertyValue, PropCategory, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPropertyValue, UnknownData_D4EQ, 0x00A1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPropertyValue, Properties, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPropertyValue, PropertyIndices, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPropertyValue, UnknownData_GEC0, 0x00C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPropertyValue, 0x00F0);
		}

		// class UPropertyValueMaterial : public UPropertyValue
		TEST_METHOD(Class__VariantManagerContent__PropertyValueMaterial)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPropertyValueMaterial, 0x00F0);
		}

		// class UPropertyValueTransform : public UPropertyValue
		TEST_METHOD(Class__VariantManagerContent__PropertyValueTransform)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPropertyValueTransform, 0x00F0);
		}

		// class UPropertyValueVisibility : public UPropertyValue
		TEST_METHOD(Class__VariantManagerContent__PropertyValueVisibility)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPropertyValueVisibility, 0x00F0);
		}

		// class UVariant : public UObject
		TEST_METHOD(Class__VariantManagerContent__Variant)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UVariant, DisplayText, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVariant, ObjectBindings, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVariant, 0x0050);
		}

		// class UVariantObjectBinding : public UObject
		TEST_METHOD(Class__VariantManagerContent__VariantObjectBinding)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UVariantObjectBinding, ObjectPtr, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVariantObjectBinding, LazyObjectPtr, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVariantObjectBinding, UnknownData_TB1K, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVariantObjectBinding, CapturedProperties, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVariantObjectBinding, 0x0070);
		}

		// class UVariantSet : public UObject
		TEST_METHOD(Class__VariantManagerContent__VariantSet)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UVariantSet, DisplayText, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVariantSet, Variants, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVariantSet, 0x0050);
		}

		// class UImgMediaSettings : public UObject
		TEST_METHOD(Class__ImgMediaFactory__ImgMediaSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UImgMediaSettings, DefaultFrameRate, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UImgMediaSettings, CacheBehindPercentage, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UImgMediaSettings, CacheSizeGB, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UImgMediaSettings, CacheThreads, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UImgMediaSettings, CacheThreadStackSizeKB, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UImgMediaSettings, ExrDecoderThreads, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UImgMediaSettings, UnknownData_HD8P, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UImgMediaSettings, DefaultProxy, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UImgMediaSettings, UseDefaultProxy, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UImgMediaSettings, UnknownData_516O, 0x0059);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImgMediaSettings, 0x0060);
		}

		// class ULinearTimecodeComponent : public USceneComponent
		TEST_METHOD(Class__LinearTimecode__LinearTimecodeComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULinearTimecodeComponent, MediaPlayer, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULinearTimecodeComponent, DropTimecode, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULinearTimecodeComponent, UnknownData_NWNT, 0x026C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULinearTimecodeComponent, OnTimecodeChange, 0x0270);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULinearTimecodeComponent, UnknownData_A4C4, 0x0280);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULinearTimecodeComponent, 0x02B0);
		}

		// class UDropTimecodeToStringConversion : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__LinearTimecode__DropTimecodeToStringConversion)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDropTimecodeToStringConversion, 0x0028);
		}

		// class UWheeledVehicleMovementComponent : public UPawnMovementComponent
		TEST_METHOD(Class__PhysXVehicles__WheeledVehicleMovementComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, UnknownData_Q2G0, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, UnknownData_V2WQ, 0x0191);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, UnknownData_HAWJ, 0x0195);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, Mass, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, UnknownData_2EPG, 0x019C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, WheelSetups, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, DragCoefficient, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, ChassisWidth, 0x01B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, ChassisHeight, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, DragArea, 0x01BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, EstimatedMaxEngineSpeed, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, MaxEngineRPM, 0x01C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, DebugDragMagnitude, 0x01C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, InertiaTensorScale, 0x01CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, MinNormalizedTireLoad, 0x01D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, MinNormalizedTireLoadFiltered, 0x01DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, MaxNormalizedTireLoad, 0x01E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, MaxNormalizedTireLoadFiltered, 0x01E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, ThresholdLongitudinalSpeed, 0x01E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, LowForwardSpeedSubStepCount, 0x01EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, HighForwardSpeedSubStepCount, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, UnknownData_QKQF, 0x01F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, Wheels, 0x01F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, UnknownData_Z4ZT, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, RVOAvoidanceRadius, 0x0220);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, RVOAvoidanceHeight, 0x0224);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, AvoidanceConsiderationRadius, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, RVOSteeringStep, 0x022C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, RVOThrottleStep, 0x0230);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, AvoidanceUID, 0x0234);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, AvoidanceGroup, 0x0238);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, GroupsToAvoid, 0x023C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, GroupsToIgnore, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, AvoidanceWeight, 0x0244);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, PendingLaunchVelocity, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, ReplicatedState, 0x0254);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, UnknownData_47T2, 0x0268);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, RawSteeringInput, 0x026C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, RawThrottleInput, 0x0270);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, RawBrakeInput, 0x0274);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, SteeringInput, 0x0278);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, ThrottleInput, 0x027C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, BrakeInput, 0x0280);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, HandbrakeInput, 0x0284);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, IdleBrakeInput, 0x0288);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, StopThreshold, 0x028C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, WrongDirectionThreshold, 0x0290);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, ThrottleInputRate, 0x0294);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, BrakeInputRate, 0x029C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, HandbrakeInputRate, 0x02A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, SteeringInputRate, 0x02AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, UnknownData_REH6, 0x02B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent, OverrideController, 0x02D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWheeledVehicleMovementComponent, 0x02E0);
		}

		// class USimpleWheeledVehicleMovementComponent : public UWheeledVehicleMovementComponent
		TEST_METHOD(Class__PhysXVehicles__SimpleWheeledVehicleMovementComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USimpleWheeledVehicleMovementComponent, 0x02E0);
		}

		// class UTireConfig : public UDataAsset
		TEST_METHOD(Class__PhysXVehicles__TireConfig)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTireConfig, FrictionScale, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTireConfig, UnknownData_INU1, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTireConfig, TireFrictionScales, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTireConfig, UnknownData_FVFM, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTireConfig, 0x0050);
		}

		// class UVehicleAnimInstance : public UAnimInstance
		TEST_METHOD(Class__PhysXVehicles__VehicleAnimInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleAnimInstance, UnknownData_R4HZ, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleAnimInstance, WheeledVehicleMovementComponent, 0x0910);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleAnimInstance, UnknownData_TLZM, 0x0918);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVehicleAnimInstance, 0x0920);
		}

		// class UVehicleWheel : public UObject
		TEST_METHOD(Class__PhysXVehicles__VehicleWheel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, CollisionMesh, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, bDontCreateShape, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, bAutoAdjustCollisionSize, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, UnknownData_KTGZ, 0x0032);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, Offset, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, ShapeRadius, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, ShapeWidth, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, Mass, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, DampingRate, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, SteerAngle, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, bAffectedByHandbrake, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, UnknownData_M4NI, 0x0055);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, TireType, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, TireConfig, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, LatStiffMaxLoad, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, LatStiffValue, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, LongStiffValue, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, SuspensionForceOffset, 0x0074);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, SuspensionMaxRaise, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, SuspensionMaxDrop, 0x007C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, SuspensionNaturalFrequency, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, SuspensionDampingRatio, 0x0084);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, SweepType, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, UnknownData_V2UN, 0x0089);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, MaxBrakeTorque, 0x008C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, MaxHandBrakeTorque, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, UnknownData_KYW0, 0x0094);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, VehicleSim, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, WheelIndex, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, DebugLongSlip, 0x00A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, DebugLatSlip, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, DebugNormalizedTireLoad, 0x00AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, UnknownData_KHB5, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, DebugWheelTorque, 0x00B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, DebugLongForce, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, DebugLatForce, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, Location, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, OldLocation, 0x00CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, Velocity, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVehicleWheel, UnknownData_9LNS, 0x00E4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVehicleWheel, 0x00F0);
		}

		// class AWheeledVehicle : public APawn
		TEST_METHOD(Class__PhysXVehicles__WheeledVehicle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AWheeledVehicle, Mesh, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::AWheeledVehicle, VehicleMovement, 0x03A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWheeledVehicle, 0x03A8);
		}

		// class UWheeledVehicleMovementComponent4W : public UWheeledVehicleMovementComponent
		TEST_METHOD(Class__PhysXVehicles__WheeledVehicleMovementComponent4W)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent4W, EngineSetup, 0x02E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent4W, DifferentialSetup, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent4W, AckermannAccuracy, 0x038C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent4W, TransmissionSetup, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWheeledVehicleMovementComponent4W, SteeringCurve, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWheeledVehicleMovementComponent4W, 0x0438);
		}

		// class UTips_C : public UAT_UITips
		TEST_METHOD(WidgetBlueprintGeneratedClass__Tips__Tips_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_C, Change, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_C, Out, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_C, In, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_C, Dmy_Img_Full, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_C, Tips_Win00, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_C, Tips_Win01, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_C, Xcmn_Fade_Brack, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_C, Xmenu_Arrow_L, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_C, Xmenu_Arrow_R, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_C, Xmenu_Cloud_Btm, 0x0508);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTips_C, 0x0510);
		}

		// class UXcmn_Action_Canvas_C : public UAT_UICmnActionPopUp
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Action_Canvas__Xcmn_Action_Canvas_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Action_Canvas_C, Ins_Core, 0x0400);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Action_Canvas_C, 0x0408);
		}

		// class UXcmn_Win01_C : public UAT_UIGameWindow
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Win01__Xcmn_Win01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_C, Out, 0x0660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_C, In, 0x0668);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_C, All_Win01, 0x0670);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_C, Img_Bar, 0x0678);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_C, Img_Entry_Space_Btm, 0x0680);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_C, Img_Entry_Space_Top, 0x0688);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_C, Img_FeedMark_Space, 0x0690);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_C, Img_Item, 0x0698);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_C, Img_Xwin01_Base, 0x06A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_C, Img_Xwin01_Base_Shadow, 0x06A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_C, Img_Xwin01_Bg, 0x06B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_C, Img_Xwin01_Bg_Shadow, 0x06B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_C, Img_Xwin01_Title, 0x06C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_C, Ins_Arrow, 0x06C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_C, Ins_Detail_Reward, 0x06D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_C, Ins_Scrollbar, 0x06D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_C, Pnl_Base, 0x06E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_C, Txt_Detail, 0x06E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_C, Txt_Detail_Item, 0x06F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_C, Txt_Help, 0x06F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_C, Txt_Title, 0x0700);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_C, Txt_Work, 0x0708);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_C, Xcmn_Fade_Black, 0x0710);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Win01_C, 0x0718);
		}

		// class UXcmn_Win00_C : public UAT_UISystemWindow
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Win00__Xcmn_Win00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win00_C, UberGraphFrame, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win00_C, Out, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win00_C, In, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win00_C, All_Win00, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win00_C, Img_Xwin00_Base, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win00_C, Img_Xwin00_Title, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win00_C, Ins_Arrow, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win00_C, Pnl_Base, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win00_C, Pnl_Title, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win00_C, Txt_Detail, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win00_C, Txt_Title, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win00_C, Xcmn_Fade_Black, 0x04E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Win00_C, 0x04F0);
		}

		// class USkill_E_Icon_C : public UAT_UISkillEnemyIcon
		TEST_METHOD(WidgetBlueprintGeneratedClass__Skill_E_Icon__Skill_E_Icon_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_E_Icon_C, UberGraphFrame, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_E_Icon_C, Finish, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_E_Icon_C, Out, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_E_Icon_C, In, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_E_Icon_C, Ins_E_Skill, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_E_Icon_C, Ins_E_Skill_Eff, 0x0420);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USkill_E_Icon_C, 0x0428);
		}

		// class UBattle_Lock_Tps_S_C : public UAT_UITPSLockOnMark
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Lock_Tps_S__Battle_Lock_Tps_S_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps_S_C, Out_01, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps_S_C, Max, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps_S_C, Overlaid, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps_S_C, In, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps_S_C, Out_00, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps_S_C, Img_Curs_Mini00_00, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps_S_C, Img_Curs_Mini00_01_00, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps_S_C, Img_Curs_Mini00_01_01, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps_S_C, Img_Curs_Mini00_01_02, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps_S_C, Img_Curs_Mini00_01_03, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps_S_C, Img_Curs_Mini00_Eff00, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps_S_C, Img_Curs_Mini00_Eff02, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps_S_C, Img_Curs_Mini01_00, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps_S_C, Img_Curs_Mini01_01_00, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps_S_C, Img_Curs_Mini01_01_01, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps_S_C, Img_Curs_Mini01_01_02, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps_S_C, Img_Curs_Mini01_01_03, 0x0450);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Lock_Tps_S_C, 0x0458);
		}

		// class UList_Bar_C : public UAT_UIGameoverBar
		TEST_METHOD(WidgetBlueprintGeneratedClass__List_Bar__List_Bar_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UList_Bar_C, Enter, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UList_Bar_C, Ins_Base_Hexa_Curs, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UList_Bar_C, Ins_Base_Hexa_Curs01, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UList_Bar_C, Ins_Base_Hexa_Curs02, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UList_Bar_C, Ins_Curs_Hexa_Eff00, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UList_Bar_C, Ins_Curs_Hexa_Eff01, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UList_Bar_C, Txt_List, 0x03D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UList_Bar_C, 0x03D8);
		}

		// class UBattle_Gauge_Heat_C : public UAT_UIBattleHudGaugePlayerHeatUp
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Gauge_Heat__Battle_Gauge_Heat_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Heat_C, Gauge_Charge, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Heat_C, Loop_Full, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Heat_C, Gauge_Heat, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Heat_C, All_Nut, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Heat_C, All_Nut_InvalidationBox, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Heat_C, Img_Heat_frame00, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Heat_C, Img_Heat_frame01, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Heat_C, Ins_Gauge_Heat, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Heat_C, Ins_Heat_Eff00_00, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Heat_C, Ins_Heat_Eff00_01, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Heat_C, Ins_Heat_Eff02, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Heat_C, Ins_Heat_Gauge_Eff03, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Heat_C, Ins_Xef_Fire00_04, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Heat_C, Ins_Xef_Fire00_05, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Heat_C, Xef_Gauge_Eff, 0x04B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Gauge_Heat_C, 0x04C0);
		}

		// class UXcmn_Emb_List_Link_C : public UAT_UIGameWindowLinkList
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Emb_List_Link__Xcmn_Emb_List_Link_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_List_Link_C, Img_Win_hr01, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_List_Link_C, Txt_Link_Name, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_List_Link_C, Xcmn_Emb01_00, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_List_Link_C, Xcmn_Emb01_01, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_List_Link_C, Xcmn_Emb01_02, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_List_Link_C, Xcmn_Emb01_03, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_List_Link_C, Xcmn_Emb01_04, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_List_Link_C, Xcmn_Emb01_05, 0x03F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Emb_List_Link_C, 0x03F8);
		}

		// class ULoading_Bar_C : public UAT_UICmnLoadingBar
		TEST_METHOD(WidgetBlueprintGeneratedClass__Loading_Bar__Loading_Bar_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_Bar_C, Dot_Loop_Arae, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_Bar_C, Out, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_Bar_C, In, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_Bar_C, Dot_Loop, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_Bar_C, Icon_Star, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_Bar_C, Img_Dot00, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_Bar_C, Img_Dot01, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_Bar_C, Img_Dot02, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_Bar_C, Img_Gage_Base, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_Bar_C, Img_Gauge_Frame, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_Bar_C, Ins_Icon_Add, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_Bar_C, Ins_Icon_Load, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_Bar_C, Lang_Loading, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_Bar_C, Lang_Loading_Arae, 0x0468);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULoading_Bar_C, 0x0470);
		}

		// class UXef_Gauge_Eff_C : public UAT_UIBattleHudGaugePlayerHeatUpTipEffect
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xef_Gauge_Eff__Xef_Gauge_Eff_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Gauge_Eff_C, UberGraphFrame, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Gauge_Eff_C, Start_2, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Gauge_Eff_C, Start01, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Gauge_Eff_C, Start, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Gauge_Eff_C, All_Nut_InvalidationBox, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Gauge_Eff_C, Image_1, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Gauge_Eff_C, Image_2, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Gauge_Eff_C, Image_4, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Gauge_Eff_C, Ins_Long_Eff_P00, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Gauge_Eff_C, Ins_Long_Eff_P01, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Gauge_Eff_C, Ins_Long_Eff_P01_00, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Gauge_Eff_C, Ins_Long_Eff_P01_01, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Gauge_Eff_C, Ins_Xef_Fad01, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Gauge_Eff_C, Ins_Xef_Fad01_00, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Gauge_Eff_C, Ins_Xef_Spark00, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Gauge_Eff_C, Ins_Xef_Spark00_00, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Gauge_Eff_C, Ins_Xef_Spark00_01, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Gauge_Eff_C, Ins_Xef_Spark00_02, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Gauge_Eff_C, Ins_Xef_Spark00_03, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Gauge_Eff_C, Ins_Xef_Spark01, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Gauge_Eff_C, Ins_Xef_Spark02, 0x0468);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXef_Gauge_Eff_C, 0x0470);
		}

		// class UBattle_Break_Parts_C : public UAT_UIBattleHudGaugeEnemyBreakParts
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Break_Parts__Battle_Break_Parts_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Break_Parts_C, Break_S, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Break_Parts_C, Break_M, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Break_Parts_C, Break_L, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Break_Parts_C, Img_Break_Parts00_00, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Break_Parts_C, Img_Break_Parts00_01, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Break_Parts_C, Img_Break_Parts01_00, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Break_Parts_C, Img_Break_Parts01_01, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Break_Parts_C, Img_Break_Parts01_02, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Break_Parts_C, Img_Break_Parts02_00, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Break_Parts_C, Img_Break_Parts03_00, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Break_Parts_C, Img_Break_Parts03_01, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Break_Parts_C, Img_Break_Parts03_02, 0x0440);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Break_Parts_C, 0x0448);
		}

		// class UBattle_Skill_Name_E_C : public UAT_UISkillName
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Skill_Name_E__Battle_Skill_Name_E_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Skill_Name_E_C, Out, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Skill_Name_E_C, In, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Skill_Name_E_C, Icon_Skill01_01, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Skill_Name_E_C, Img_Base_Skill_Name, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Skill_Name_E_C, Ins_Icon_Rare00, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Skill_Name_E_C, Ins_Icon_Skill01_Line, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Skill_Name_E_C, Txt_Skill_Name, 0x0440);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Skill_Name_E_C, 0x0448);
		}

		// class UBattle_Command_List01_C : public UAT_UICommandPaletteSkillCoopBar
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Command_List01__Battle_Command_List01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List01_C, Enter, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List01_C, Loop, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List01_C, Btn_Plat00, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List01_C, Img_Base_List01, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List01_C, Ins_Base_List02, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List01_C, Ins_Eff_List02, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List01_C, Ins_Eff_List_00, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List01_C, Ins_Eff_List_01, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List01_C, Ins_Xef_Elc_Run00_00, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List01_C, Ins_Xef_Elc_Run00_01, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List01_C, Ins_Xef_Elc_Run00_02, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List01_C, Ins_Xef_Elc_Run00_03, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List01_C, Txt_List, 0x0448);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Command_List01_C, 0x0450);
		}

		// class AAccessPointBase : public AActor
		TEST_METHOD(Class__AT__AccessPointBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAccessPointBase, AccessPointRootComponent, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAccessPointBase, InteractSphereComponent, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAccessPointBase, InteractState, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAccessPointBase, InteractItemType, 0x0349);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAccessPointBase, UnknownData_USB3, 0x034A);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAccessPointBase, Montage, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAccessPointBase, MontageStand, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAccessPointBase, UnknownData_0T58, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAccessPointBase, TreasureItemSkeletalMeshComponent, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAccessPointBase, TreasureItemSkeletalMotion, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAccessPointBase, TreasureItemMeshEffect, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAccessPointBase, TreasureParticleEffect, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAccessPointBase, UnknownData_TMHW, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAccessPointBase, 0x03C0);
		}

		// class UAccessPointBaseComponent : public USphereComponent
		TEST_METHOD(Class__AT__AccessPointBaseComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAccessPointBaseComponent, AccessPointRootComponent, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAccessPointBaseComponent, SphereComponent, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAccessPointBaseComponent, Montage, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAccessPointBaseComponent, MontageStand, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAccessPointBaseComponent, CurveObject, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAccessPointBaseComponent, UnknownData_CGDM, 0x05B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAccessPointBaseComponent, 0x05D0);
		}

		// class AAccessPointItemBase : public AAccessPointBase
		TEST_METHOD(Class__AT__AccessPointItemBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAccessPointItemBase, UnknownData_9N18, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAccessPointItemBase, 0x0400);
		}

		// class UActorTrackingEffectComponent : public UActorComponent
		TEST_METHOD(Class__AT__ActorTrackingEffectComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorTrackingEffectComponent, m_pNpcComponent, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorTrackingEffectComponent, m_pTrackingParticleSystem, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorTrackingEffectComponent, m_pStandOutParticleSystem, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorTrackingEffectComponent, m_pTrackingParticleComponent, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorTrackingEffectComponent, TrackingParticleComponent, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorTrackingEffectComponent, TrackingEffectList, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorTrackingEffectComponent, m_pStandOutParticleComponent, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorTrackingEffectComponent, m_vSpawnParticleLocation, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorTrackingEffectComponent, UnknownData_KVIF, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorTrackingEffectComponent, CreateEffectDist, 0x0184);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorTrackingEffectComponent, EffectScale, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorTrackingEffectComponent, TrailEffectType, 0x018C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorTrackingEffectComponent, UnknownData_YC63, 0x018D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorTrackingEffectComponent, DeleteLocationTime, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorTrackingEffectComponent, EffectDisableDist, 0x0194);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorTrackingEffectComponent, NoDeleteLocation, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorTrackingEffectComponent, UnknownData_K1SH, 0x0199);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorTrackingEffectComponent, EffectScaleCurve, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorTrackingEffectComponent, TrailEffectAlphaStartCurve, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorTrackingEffectComponent, TrailEffectAlphaEndCurve, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorTrackingEffectComponent, EffectLifeCurve, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorTrackingEffectComponent, DebugOn, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorTrackingEffectComponent, AplhaOn, 0x01C1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorTrackingEffectComponent, UnknownData_QYK1, 0x01C2);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UActorTrackingEffectComponent, 0x01D0);
		}

		// class UAG_DarkEffectNotifyState : public UAnimNotifyState
		TEST_METHOD(Class__AT__AG_DarkEffectNotifyState)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_DarkEffectNotifyState, DarkPower, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_DarkEffectNotifyState, FadeIn, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_DarkEffectNotifyState, FadeOut, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_DarkEffectNotifyState, Duration, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_DarkEffectNotifyState, UnknownData_GHQO, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAG_DarkEffectNotifyState, 0x0048);
		}

		// class UAG_PostEffectNotifyState : public UAnimNotifyState
		TEST_METHOD(Class__AT__AG_PostEffectNotifyState)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_PostEffectNotifyState, FringeFadein, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_PostEffectNotifyState, FringeFadeout, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_PostEffectNotifyState, FringeIntensity, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_PostEffectNotifyState, UnknownData_C4J7, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_PostEffectNotifyState, ColorGrading, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_PostEffectNotifyState, UnknownData_IC5Y, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAG_PostEffectNotifyState, 0x0068);
		}

		// class UAG_TimedParticleAnimNotifyState : public UAnimNotifyState
		TEST_METHOD(Class__AT__AG_TimedParticleAnimNotifyState)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_TimedParticleAnimNotifyState, PSTemplate, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_TimedParticleAnimNotifyState, BlurFadein, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_TimedParticleAnimNotifyState, BlurFadeout, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_TimedParticleAnimNotifyState, BlurAmount, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_TimedParticleAnimNotifyState, BlurRadius, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_TimedParticleAnimNotifyState, BlurExponent, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_TimedParticleAnimNotifyState, UnknownData_2SGU, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_TimedParticleAnimNotifyState, Land, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_TimedParticleAnimNotifyState, CachedParticles, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_TimedParticleAnimNotifyState, GroundSpawn, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_TimedParticleAnimNotifyState, UnknownData_8N1M, 0x00B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_TimedParticleAnimNotifyState, RotationDontAttach, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_TimedParticleAnimNotifyState, UnknownData_61F0, 0x00C1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_TimedParticleAnimNotifyState, SocketName, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_TimedParticleAnimNotifyState, LocationOffset, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_TimedParticleAnimNotifyState, RotationOffset, 0x00DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_TimedParticleAnimNotifyState, Scale, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_TimedParticleAnimNotifyState, Attached, 0x00EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_TimedParticleAnimNotifyState, bDestroyAtEnd, 0x00ED);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_TimedParticleAnimNotifyState, bDetachedAtEnd, 0x00EE);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_TimedParticleAnimNotifyState, UnknownData_PGB6, 0x00EF);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_TimedParticleAnimNotifyState, PersonaDisplayEffectID, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_TimedParticleAnimNotifyState, UnknownData_CV81, 0x00F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_TimedParticleAnimNotifyState, OffsetTable, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAG_TimedParticleAnimNotifyState, UnknownData_T41I, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAG_TimedParticleAnimNotifyState, 0x0108);
		}

		// class UAnimNotifyState_AG_Trail : public UAnimNotifyState
		TEST_METHOD(Class__AT__AnimNotifyState_AG_Trail)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_Trail, PSTemplate, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_Trail, Gear2SkyPSTemplate, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_Trail, Gear3SkyPSTemplate, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_Trail, Gear2WaterPSTemplate, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_Trail, Gear3WaterPSTemplate, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_Trail, FirstSocketName, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_Trail, SecondSocketName, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_Trail, WidthScaleMode, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_Trail, UnknownData_QJST, 0x0069);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_Trail, WidthScaleCurve, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_AG_Trail, 0x0078);
		}

		// class UAgreeKPI : public UObject
		TEST_METHOD(Class__AT__AgreeKPI)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAgreeKPI, UnknownData_IBQV, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAgreeKPI, 0x0040);
		}

		// class UAIBase : public UActorComponent
		TEST_METHOD(Class__AT__AIBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIBase, UnknownData_KJJ0, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIBase, m_MyATCharacter, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIBase, m_EnemyAI, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIBase, m_CompanionAI, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIBase, m_BattleAI, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIBase, UnknownData_5QWR, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIBase, m_BattleAI_ActMng, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIBase, m_BattleAI_LotMng, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIBase, m_StatusCheck, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIBase, pComponent, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIBase, UnknownData_9QHH, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIBase, EncountData, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIBase, UnknownData_4LBY, 0x0210);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIBase, 0x0218);
		}

		// class UAIManager : public UActorComponent
		TEST_METHOD(Class__AT__AIManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIManager, AIEncountTable, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIManager, m_pDataTable_DistRelation, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIManager, BattleGroupAIMap, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIManager, UnknownData_C5NK, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIManager, pAI_TPSTbl, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIManager, UnknownData_3MZH, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIManager, m_SpawnList, 0x02A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIManager, UnknownData_RAI9, 0x02F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIManager, 0x0300);
		}

		// class ARideCharacterBase : public ACharacter
		TEST_METHOD(Class__AT__RideCharacterBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ARideCharacterBase, MobCheackCapsuleComponent, 0x0748);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARideCharacterBase, UnknownData_KR28, 0x0750);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARideCharacterBase, ConstParamDataTable, 0x0760);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARideCharacterBase, ConstOffsetParamDataTable, 0x0768);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARideCharacterBase, MiningCircleScaleIncreaseCurve, 0x0770);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARideCharacterBase, MiningCircleScaleDecreaseCurve, 0x0778);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARideCharacterBase, PlayerCharacter, 0x0780);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARideCharacterBase, CharaAnimBP, 0x0788);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARideCharacterBase, OldCharaAnimBP, 0x0790);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARideCharacterBase, ParticleCircle, 0x0798);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARideCharacterBase, ParticleCompCircle, 0x07A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARideCharacterBase, UnknownData_0AIA, 0x07A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARideCharacterBase, MineralMiningPointList, 0x07B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARideCharacterBase, MineralMiningCircleState, 0x07C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARideCharacterBase, UnknownData_F06O, 0x07C1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARideCharacterBase, 0x0840);
		}

		// class AAirCar : public ARideCharacterBase
		TEST_METHOD(Class__AT__AirCar)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, MoveState, 0x0840);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, VirtualController, 0x0848);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, ParticleDust, 0x0850);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, ParticleSnow, 0x0858);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, ParticleAsphalt, 0x0860);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, ParticleWatersurface, 0x0868);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, ParticleWind, 0x0870);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, ParticleSpawnSmog, 0x0878);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, ParticleBoostDust, 0x0880);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, ParticleBoostSnow, 0x0888);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, ParticleBoostAsphalt, 0x0890);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, ParticleBoostWatersurface, 0x0898);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, ParticleBoostWind, 0x08A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, ParticleBoostBurner, 0x08A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, ParticleStorageSmog, 0x08B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, ParticleLampEffect, 0x08B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, RidingCharaMoveCurve, 0x08C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, RideOutCharaMoveCurve, 0x08C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, RidingCarMoveCurve, 0x08D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, CarUpDownMoveCurve, 0x08D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, ParticleCompDust, 0x08E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, ParticleCompWind, 0x08E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, ParticleCompBoostWind, 0x08F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, ParticleCompBoostBurner1, 0x08F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, ParticleCompBoostBurner2, 0x0900);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, ParticleCompBoostBurner3, 0x0908);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, ParticleCompBoostBurner4, 0x0910);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, ParticleCompSpawnSmog, 0x0918);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, ParticleCompBrakeLampLeft, 0x0920);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, ParticleCompBrakeLampRight, 0x0928);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, ParticleCompBackLampLeft, 0x0930);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, ParticleCompBackLampRight, 0x0938);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, MyPlayerControllerClass, 0x0940);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, UnknownData_XWUR, 0x0948);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, m_FriendCharacter, 0x0960);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, m_FriendMob, 0x0968);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, m_DynamicMaterials, 0x0970);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCar, UnknownData_BR5A, 0x0980);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAirCar, 0x0990);
		}

		// class AATPlayerControllerBase : public APlayerController
		TEST_METHOD(Class__AT__ATPlayerControllerBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATPlayerControllerBase, UnknownData_XYHS, 0x0688);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATPlayerControllerBase, m_xDebugMenuHud, 0x0698);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATPlayerControllerBase, UnknownData_LY7X, 0x06A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATPlayerControllerBase, m_xUISystemInputComponent, 0x06B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATPlayerControllerBase, 0x06B8);
		}

		// class ARidePlayerControllerBase : public AATPlayerControllerBase
		TEST_METHOD(Class__AT__RidePlayerControllerBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ARidePlayerControllerBase, UnknownData_DAMD, 0x06B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARidePlayerControllerBase, CachedCmnInput, 0x0800);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARidePlayerControllerBase, 0x0808);
		}

		// class AAirCarController : public ARidePlayerControllerBase
		TEST_METHOD(Class__AT__AirCarController)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAirCarController, UnknownData_7SXE, 0x0808);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAirCarController, 0x0848);
		}

		// class URideMoveStateBase : public UActorComponent
		TEST_METHOD(Class__AT__RideMoveStateBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URideMoveStateBase, 0x0100);
		}

		// class UAirCarMoveState : public URideMoveStateBase
		TEST_METHOD(Class__AT__AirCarMoveState)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAirCarMoveState, UnknownData_9S8J, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAirCarMoveState, OwnerChara, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAirCarMoveState, OwnerCharaMoveComp, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAirCarMoveState, UnknownData_VAWD, 0x0170);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAirCarMoveState, 0x0248);
		}

		// class UAirCarVirtualController : public UActorComponent
		TEST_METHOD(Class__AT__AirCarVirtualController)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAirCarVirtualController, OwnerChara, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAirCarVirtualController, OwnerMoveState, 0x0108);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAirCarVirtualController, 0x0110);
		}

		// class UAnimalAccessPoint : public UAccessPointBaseComponent
		TEST_METHOD(Class__AT__AnimalAccessPoint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, UnknownData_GUF5, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, CaptureSaveName, 0x0608);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, UnknownData_WP1Y, 0x0610);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, CaptureState, 0x0611);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, NotifyNowState, 0x0612);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, bPlayMontage, 0x0613);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, PlayerCanMoveAfterEffectTime, 0x0614);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, CaptureSkeletalMeshComponent, 0x0618);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, CaptureSkeletalMotion, 0x0620);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, CaptureMeshComponent, 0x0628);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, CaptureMeshEffect, 0x0630);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, CaptureParticleComponent, 0x0638);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, CaptureEffect, 0x0640);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, CaptureItemParticleComponent, 0x0648);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, CaptureItemEffect, 0x0650);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, FieldItemTableComponent, 0x0658);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, AnimalParamTable, 0x0660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, AnimalParamID, 0x0668);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, UnknownData_UGEH, 0x0670);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, ChickenEffect, 0x0678);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, AdjustChickenEffectLocationZ, 0x0680);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, ChickenEffectScale, 0x0684);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, ItemSpawnDist, 0x0690);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, ItemSpawnRate, 0x0694);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, LoopEffect, 0x0698);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, LoopEffectScale, 0x06A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, UnknownData_JI3D, 0x06AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, RemoveEffect, 0x06B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, RemoveEffectScale, 0x06B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, UnknownData_060T, 0x06C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, MoveEffect, 0x06C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, MoveEffectScale, 0x06D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, ItemTouchDistance, 0x06DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, ItemHideDistance, 0x06E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, ItemLocationZAdjust, 0x06E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, ItemLocationRadiusMin, 0x06E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, ItemLocationRadiusMax, 0x06EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, ItemLocationAngleMax, 0x06F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, UnknownData_2IVN, 0x06F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, TreasureItemSkeletalMeshComponent, 0x0708);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, TreasureItemSkeletalMotion, 0x0710);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, TreasureItemMeshEffect, 0x0718);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, TreasureParticleEffect, 0x0720);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, UnknownData_0HD8, 0x0728);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, AnimalCaptureManager, 0x0780);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPoint, UnknownData_3M8D, 0x0788);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimalAccessPoint, 0x0790);
		}

		// class UAnimalAccessPointSaveData : public UObject
		TEST_METHOD(Class__AT__AnimalAccessPointSaveData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPointSaveData, AppearNum, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalAccessPointSaveData, UnknownData_93EV, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimalAccessPointSaveData, 0x0030);
		}

		// class UAnimalCaptureManager : public UActorComponent
		TEST_METHOD(Class__AT__AnimalCaptureManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalCaptureManager, TargetExaminedAccessPoint, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalCaptureManager, ChickenPoint, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalCaptureManager, UnknownData_I5WY, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalCaptureManager, AnimalAccessPointList, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalCaptureManager, ChickenPointList, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalCaptureManager, UnknownData_3O8B, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalCaptureManager, AnimalCaptureDashSpeed, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalCaptureManager, AnimalCaptureDistance, 0x015C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalCaptureManager, AnimalCaptureDefaultSpeed, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalCaptureManager, AnimalCaptureDashAcceleration, 0x0164);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalCaptureManager, AnimalCaptureWaitFrame, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalCaptureManager, AnimalCaptureCancelTime, 0x016C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalCaptureManager, CapturePopupHeight, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalCaptureManager, UnknownData_BNZ3, 0x0174);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimalCaptureManager, 0x0198);
		}

		// class UNpcComponentBase : public UActorComponent
		TEST_METHOD(Class__AT__NpcComponentBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, UnknownData_KH4H, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, OwnerMob, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, AIController, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, m_xMovementCmp, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, NpcActionComponent, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, UnknownData_D6HJ, 0x01C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, MobCategory, 0x01F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, UnknownData_G0LJ, 0x01F9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, PresetID, 0x0200);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, ThisMobSectorType, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, UnknownData_F1UH, 0x0209);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, SplineId, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, RideOn, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, UnknownData_YR6B, 0x0381);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, SplineDist, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, SplineDistMax, 0x038C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, UnknownData_AQWY, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, pNpcAction, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, pNpcEventVolume, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, pNpcEventVolumeCmp, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, pActionPoint, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, UnknownData_CBTY, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, MoveSpeed, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, MaxMoveSpeed, 0x043C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, MoveAcceleration, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, MoveDeceleration, 0x0444);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, UnknownData_JS9O, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, BattleInactive, 0x045A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, DemoInactive, 0x045B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, TalkInactive, 0x045C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNpcComponentBase, UnknownData_I6TC, 0x045D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNpcComponentBase, 0x0460);
		}

		// class UAnimalComponentBase : public UNpcComponentBase
		TEST_METHOD(Class__AT__AnimalComponentBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, UnknownData_0D23, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, pNpcSubAction, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, UnknownData_VGEB, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, AnimalType, 0x0542);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, UseBluePrintsParameter, 0x0543);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, WalkMoveSpeed, 0x0544);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, RunMoveSpeed, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, FlightMoveSpeed, 0x054C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, WalkMoveAcceleration, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, RunMoveAcceleration, 0x0554);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, FlightMoveAcceleration, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, WalkMoveDeceleration, 0x055C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, RunMoveDeceleration, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, FlightMoveDeceleration, 0x0564);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, SpawnRatio, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, MoveStartTime, 0x056C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, MoveStopTime, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, UnknownData_NS9Y, 0x0574);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, GetSplineTagName, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, RareFlag, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, IsSuicideWhenActiveStateDeactivated, 0x0581);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, UnknownData_06BI, 0x0582);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, ActionTime, 0x0584);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, PlayActionTime, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, UnknownData_IS5Q, 0x058C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, IntervalTime, 0x0594);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, UnknownData_C0U3, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, CurveCheckAngle, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, LimitAngleHigh, 0x05D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, LimitAngleLow, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, UnknownData_P1PU, 0x05DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, m_eNowActionState, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, m_eNowSubActionState, 0x05F1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, UnknownData_1OXE, 0x05F2);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, GeneralVarietyInfo, 0x0600);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, SymbolType, 0x062C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, UnknownData_DN38, 0x062D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, ChildNum, 0x0630);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, ChildSizeMax, 0x0634);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, ChildSizeMin, 0x0638);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, UnknownData_HNDM, 0x063C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, CustumMontageList, 0x0680);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, SetPlayMontage, 0x06D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimalComponentBase, UnknownData_1UPG, 0x06D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimalComponentBase, 0x06E0);
		}

		// class AAnimalSpawnerTargetPoint : public ATargetPoint
		TEST_METHOD(Class__AT__AnimalSpawnerTargetPoint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAnimalSpawnerTargetPoint, ClassToSpawn, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAnimalSpawnerTargetPoint, MaxActorNum, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAnimalSpawnerTargetPoint, UnknownData_I7ET, 0x0344);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAnimalSpawnerTargetPoint, 0x0350);
		}

		// class AAnimalSpawnerVolumeBase : public AVolume
		TEST_METHOD(Class__AT__AnimalSpawnerVolumeBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAnimalSpawnerVolumeBase, m_VolumeBrushType, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAnimalSpawnerVolumeBase, UnknownData_XCDP, 0x0371);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAnimalSpawnerVolumeBase, VolumeKind, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAnimalSpawnerVolumeBase, SpawnerTargetPointState, 0x0375);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAnimalSpawnerVolumeBase, DrawAnimalVolume, 0x0376);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAnimalSpawnerVolumeBase, UnknownData_6XVF, 0x0377);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAnimalSpawnerVolumeBase, GeneralVarietyInfo, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAnimalSpawnerVolumeBase, UnknownData_KWOT, 0x03AC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAnimalSpawnerVolumeBase, 0x03B0);
		}

		// class AAnimalSpawnerVolumeGround : public AAnimalSpawnerVolumeBase
		TEST_METHOD(Class__AT__AnimalSpawnerVolumeGround)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAnimalSpawnerVolumeGround, AnimalSpawnData, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAnimalSpawnerVolumeGround, SpawnerVolumeArray, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAnimalSpawnerVolumeGround, SpawnPointArray, 0x03D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAnimalSpawnerVolumeGround, 0x03E0);
		}

		// class AAnimalSpawnerVolumeSky : public AAnimalSpawnerVolumeBase
		TEST_METHOD(Class__AT__AnimalSpawnerVolumeSky)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAnimalSpawnerVolumeSky, AnimalSpawnData, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAnimalSpawnerVolumeSky, SpawnerVolumeArray, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAnimalSpawnerVolumeSky, SpawnPointArray, 0x03D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAnimalSpawnerVolumeSky, 0x03E0);
		}

		// class UAnimNotifyState_AG_Effect : public UAnimNotifyState
		TEST_METHOD(Class__AT__AnimNotifyState_AG_Effect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_Effect, Name, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_AG_Effect, 0x0038);
		}

		// class UAnimNotify_AG_WaterSurface : public UAnimNotifyState_AG_Effect
		TEST_METHOD(Class__AT__AnimNotify_AG_WaterSurface)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_AG_WaterSurface, ParticleSystem, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_AG_WaterSurface, SocketNameForCheckShow, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_AG_WaterSurface, Scale, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_AG_WaterSurface, bDestroyAtEnd, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_AG_WaterSurface, bDetachedAtEnd, 0x0055);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_AG_WaterSurface, UnknownData_TY38, 0x0056);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_AG_WaterSurface, CachedParticle, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_AG_WaterSurface, SpawnLocation_Z, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_AG_WaterSurface, UnknownData_P0B7, 0x0064);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_AG_WaterSurface, 0x0068);
		}

		// class UAnimNotify_BaitEffect : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_BaitEffect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_BaitEffect, BaitEffect, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_BaitEffect, SocketName, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_BaitEffect, 0x0048);
		}

		// class UAnimNotify_BaseballGame : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_BaseballGame)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_BaseballGame, NotifyType, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_BaseballGame, UnknownData_NSBE, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_BaseballGame, UnknownData_B47J, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_BaseballGame, 0x0040);
		}

		// class UAnimNotify_BookAnimFinish : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_BookAnimFinish)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_BookAnimFinish, 0x0038);
		}

		// class UAnimNotify_Buff : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_Buff)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_Buff, BuffEffectParticle, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_Buff, BuffName, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_Buff, 0x0048);
		}

		// class UAnimNotify_BuffTeam : public UAnimNotify_Buff
		TEST_METHOD(Class__AT__AnimNotify_BuffTeam)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_BuffTeam, 0x0048);
		}

		// class UAnimNotify_ComboAssist : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_ComboAssist)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_ComboAssist, 0x0038);
		}

		// class UAnimNotify_Cpl030AbsorbModeStart : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_Cpl030AbsorbModeStart)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_Cpl030AbsorbModeStart, 0x0038);
		}

		// class UAnimNotify_Cpl071Summon : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_Cpl071Summon)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_Cpl071Summon, LocationOfs, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_Cpl071Summon, UnknownData_BDK3, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_Cpl071Summon, SummonEffect, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_Cpl071Summon, UseGroup, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_Cpl071Summon, SummonIndex, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_Cpl071Summon, UseRandomLocation, 0x0052);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_Cpl071Summon, UseAttach, 0x0053);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_Cpl071Summon, UnknownData_SPMG, 0x0054);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_Cpl071Summon, 0x0058);
		}

		// class UAnimNotify_DestroyProjectile : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_DestroyProjectile)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_DestroyProjectile, UseVanish, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_DestroyProjectile, UnknownData_CJMF, 0x0039);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_DestroyProjectile, 0x0040);
		}

		// class UAnimNotify_DestroyReplicatedCharacter : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_DestroyReplicatedCharacter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_DestroyReplicatedCharacter, 0x0038);
		}

		// class UAnimNotify_DirectDamage : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_DirectDamage)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_DirectDamage, DamageParam, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_DirectDamage, AdjustSocketTransform, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_DirectDamage, AdjustRotaion, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_DirectDamage, UnknownData_RUCZ, 0x007C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_DirectDamage, AdjustSocketTransform2, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_DirectDamage, AdjustRotaion2, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_DirectDamage, AllPartyMember, 0x0094);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_DirectDamage, UnknownData_C5WQ, 0x0095);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_DirectDamage, 0x0098);
		}

		// class UAnimNotify_DisableDelayDeathAction : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_DisableDelayDeathAction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_DisableDelayDeathAction, 0x0038);
		}

		// class UAnimNotify_Fishing_EffectHide : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_Fishing_EffectHide)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_Fishing_EffectHide, 0x0038);
		}

		// class UAnimNotify_Fishing_EffectVisible : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_Fishing_EffectVisible)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_Fishing_EffectVisible, 0x0038);
		}

		// class UAnimNotify_Fishing_FailedReaction : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_Fishing_FailedReaction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_Fishing_FailedReaction, 0x0038);
		}

		// class UAnimNotify_Fishing_FishAttach : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_Fishing_FishAttach)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_Fishing_FishAttach, PlayState, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_Fishing_FishAttach, UnknownData_YPBW, 0x0039);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_Fishing_FishAttach, 0x0040);
		}

		// class UAnimNotify_Fishing_FishDetach : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_Fishing_FishDetach)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_Fishing_FishDetach, 0x0038);
		}

		// class UAnimNotify_Fishing_FishHide : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_Fishing_FishHide)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_Fishing_FishHide, 0x0038);
		}

		// class UAnimNotify_Fishing_FishVisible : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_Fishing_FishVisible)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_Fishing_FishVisible, 0x0038);
		}

		// class UAnimNotify_Fishing_QTE_Start : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_Fishing_QTE_Start)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_Fishing_QTE_Start, 0x0038);
		}

		// class UAnimNotify_Fishing_RodAttach : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_Fishing_RodAttach)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_Fishing_RodAttach, RodMontage, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_Fishing_RodAttach, RelativeLocation, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_Fishing_RodAttach, RelativeRotation, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_Fishing_RodAttach, SocketName, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_Fishing_RodAttach, 0x0060);
		}

		// class UAnimNotify_Fishing_RodDetach : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_Fishing_RodDetach)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_Fishing_RodDetach, 0x0038);
		}

		// class UAnimNotify_Fishing_RodHide : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_Fishing_RodHide)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_Fishing_RodHide, 0x0038);
		}

		// class UAnimNotify_Fishing_RodVisible : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_Fishing_RodVisible)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_Fishing_RodVisible, 0x0038);
		}

		// class UAnimNotify_Fishing_StartReaction : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_Fishing_StartReaction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_Fishing_StartReaction, 0x0038);
		}

		// class UAnimNotify_Heal : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_Heal)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_Heal, HealParticleType, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_Heal, HealParticleColor, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_Heal, HealEffectType, 0x003A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_Heal, UnknownData_E7DV, 0x003B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_Heal, HealNumber, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_Heal, 0x0040);
		}

		// class UAnimNotify_HealTeam : public UAnimNotify_Heal
		TEST_METHOD(Class__AT__AnimNotify_HealTeam)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_HealTeam, 0x0040);
		}

		// class UAnimNotify_PlaySkillMessage : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_PlaySkillMessage)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_PlaySkillMessage, messageId, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_PlaySkillMessage, 0x0048);
		}

		// class UAnimNotify_Provocation : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_Provocation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_Provocation, EffectTime, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_Provocation, UnknownData_ZUF6, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_Provocation, 0x0040);
		}

		// class UAnimNotify_Rage : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_Rage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_Rage, 0x0038);
		}

		// class UAnimNotify_SetCpl018SkillSpecial : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_SetCpl018SkillSpecial)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SetCpl018SkillSpecial, spawnclass, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_SetCpl018SkillSpecial, 0x0040);
		}

		// class UAnimNotify_SetFacialByID : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_SetFacialByID)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SetFacialByID, FaceId, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SetFacialByID, UnknownData_6BA4, 0x0039);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_SetFacialByID, 0x0040);
		}

		// class UAnimNotify_SetMobCallBack : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_SetMobCallBack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SetMobCallBack, PlayCallBack_Id, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_SetMobCallBack, 0x0040);
		}

		// class UAnimNotify_SetNPAShockWave : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_SetNPAShockWave)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SetNPAShockWave, spawnclass, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_SetNPAShockWave, 0x0040);
		}

		// class UAnimNotifyState_SpawnProjectileBase : public UAnimNotifyState
		TEST_METHOD(Class__AT__AnimNotifyState_SpawnProjectileBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SpawnProjectileBase, UnknownData_OGYS, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SpawnProjectileBase, SocketName, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SpawnProjectileBase, Size, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SpawnProjectileBase, vecOffset, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SpawnProjectileBase, vecTargetOffset, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SpawnProjectileBase, RotOffset, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SpawnProjectileBase, bRequestEnd, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SpawnProjectileBase, bSweep, 0x0069);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SpawnProjectileBase, UnknownData_CCDF, 0x006A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_SpawnProjectileBase, 0x0070);
		}

		// class UAnimNotify_SpawnProjectileBeam : public UAnimNotifyState_SpawnProjectileBase
		TEST_METHOD(Class__AT__AnimNotify_SpawnProjectileBeam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileBeam, Projectile, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_SpawnProjectileBeam, 0x0078);
		}

		// class UAnimNotify_SpawnProjectileBeamHuge : public UAnimNotify_SpawnProjectileBeam
		TEST_METHOD(Class__AT__AnimNotify_SpawnProjectileBeamHuge)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileBeamHuge, UnknownData_UBIH, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_SpawnProjectileBeamHuge, 0x0088);
		}

		// class UAnimNotify_SpawnProjectileBase : public UAnimNotifyState
		TEST_METHOD(Class__AT__AnimNotify_SpawnProjectileBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileBase, UnknownData_4IVM, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileBase, SocketName, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileBase, Size, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileBase, Offset, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileBase, offsetRot, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileBase, Sweep, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileBase, UnknownData_BZ3C, 0x005D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_SpawnProjectileBase, 0x0060);
		}

		// class UAnimNotify_SpawnProjectileBullet : public UAnimNotify_SpawnProjectileBase
		TEST_METHOD(Class__AT__AnimNotify_SpawnProjectileBullet)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileBullet, ProjectileClass, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_SpawnProjectileBullet, 0x0068);
		}

		// class UAnimNotify_SpawnProjectileCpl005LongRangeA : public UAnimNotifyState
		TEST_METHOD(Class__AT__AnimNotify_SpawnProjectileCpl005LongRangeA)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileCpl005LongRangeA, ProjectileClass, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileCpl005LongRangeA, SocketName, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileCpl005LongRangeA, Offset, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileCpl005LongRangeA, Size, 0x004C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_SpawnProjectileCpl005LongRangeA, 0x0050);
		}

		// class UAnimNotify_SpawnProjectileCpl058FloatMine : public UAnimNotify_SpawnProjectileBase
		TEST_METHOD(Class__AT__AnimNotify_SpawnProjectileCpl058FloatMine)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileCpl058FloatMine, ProjectileClass, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileCpl058FloatMine, ProjectileCount, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileCpl058FloatMine, UnknownData_PP8G, 0x0069);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileCpl058FloatMine, RadiationAngleYaw, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileCpl058FloatMine, RadiationAnglePitch, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileCpl058FloatMine, UnknownData_EJEW, 0x0074);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_SpawnProjectileCpl058FloatMine, 0x0078);
		}

		// class UAnimNotify_SpawnProjectileEnemyBullet : public UAnimNotify_SpawnProjectileBase
		TEST_METHOD(Class__AT__AnimNotify_SpawnProjectileEnemyBullet)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileEnemyBullet, ProjectileClass, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileEnemyBullet, ProjectileClass2, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileEnemyBullet, ProjectileEffect, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileEnemyBullet, ProjectileEffect2, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileEnemyBullet, EffectLocationOffset, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileEnemyBullet, UnknownData_90OD, 0x008C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_SpawnProjectileEnemyBullet, 0x0098);
		}

		// class UAnimNotify_SpawnProjectileFieldShot : public UAnimNotify_SpawnProjectileBase
		TEST_METHOD(Class__AT__AnimNotify_SpawnProjectileFieldShot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileFieldShot, ProjectileClass, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileFieldShot, UnknownData_ACO4, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_SpawnProjectileFieldShot, 0x0078);
		}

		// class UAnimNotify_SpawnProjectileMine : public UAnimNotify_SpawnProjectileBase
		TEST_METHOD(Class__AT__AnimNotify_SpawnProjectileMine)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileMine, ProjectileClass, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileMine, IsFixAngle, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileMine, UnknownData_Q0D0, 0x0069);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileMine, RadiationAngleYaw, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileMine, RadiationAnglePitch, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileMine, UnknownData_HLJ2, 0x0074);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_SpawnProjectileMine, 0x0078);
		}

		// class UAnimNotify_SpawnProjectilePattern : public UAnimNotify_SpawnProjectileBase
		TEST_METHOD(Class__AT__AnimNotify_SpawnProjectilePattern)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectilePattern, ProjectileClass, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectilePattern, LaunchPattern, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectilePattern, bReserveOnly, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectilePattern, UnknownData_AWNE, 0x0079);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectilePattern, SignParticle, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_SpawnProjectilePattern, 0x0088);
		}

		// class UAnimNotify_SpawnProjectileRepeat : public UAnimNotify_SpawnProjectileBase
		TEST_METHOD(Class__AT__AnimNotify_SpawnProjectileRepeat)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileRepeat, ProjectileClass, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileRepeat, LaunchInterval, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileRepeat, LaunchAngleMax, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileRepeat, UnknownData_CBDV, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_SpawnProjectileRepeat, 0x00C0);
		}

		// class UAnimNotify_SpawnProjectileReserved : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_SpawnProjectileReserved)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileReserved, ProjectileClass, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_SpawnProjectileReserved, 0x0040);
		}

		// class UAnimNotify_SpawnProjectileRushBullet : public UAnimNotify_SpawnProjectileBase
		TEST_METHOD(Class__AT__AnimNotify_SpawnProjectileRushBullet)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileRushBullet, ProjectileClass, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileRushBullet, ProjectileClass2, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_SpawnProjectileRushBullet, 0x0070);
		}

		// class UAnimNotify_SpawnProjectileSlashWave : public UAnimNotify_SpawnProjectileBase
		TEST_METHOD(Class__AT__AnimNotify_SpawnProjectileSlashWave)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileSlashWave, UnknownData_DJCL, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_SpawnProjectileSlashWave, 0x0090);
		}

		// class UAnimNotify_SpawnProjectileWideShot : public UAnimNotify_SpawnProjectileBase
		TEST_METHOD(Class__AT__AnimNotify_SpawnProjectileWideShot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileWideShot, ProjectileClass, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileWideShot, LaunchNum, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileWideShot, LaunchAngleH, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileWideShot, bLaunchAngleHRandom, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileWideShot, UnknownData_N7OY, 0x0071);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileWideShot, LaunchAngleVMin, 0x0074);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileWideShot, LaunchAngleVMax, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SpawnProjectileWideShot, LaunchOffset, 0x007C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_SpawnProjectileWideShot, 0x0080);
		}

		// class UAnimNotify_SummonCharacter : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_SummonCharacter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SummonCharacter, SummonIndex, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SummonCharacter, bUseSummonLocation, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SummonCharacter, UnknownData_HRBH, 0x003A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SummonCharacter, SummonLocation, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SummonCharacter, bWithBoost, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_SummonCharacter, UnknownData_NJB8, 0x0049);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_SummonCharacter, 0x0050);
		}

		// class UAnimNotify_TeleportToRoot : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_TeleportToRoot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_TeleportToRoot, RotationOffset, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_TeleportToRoot, LocationOffset, 0x0044);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_TeleportToRoot, 0x0050);
		}

		// class UAnimNotify_TeleportToTarget : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotify_TeleportToTarget)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_TeleportToTarget, Distance, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_TeleportToTarget, DistanceMin, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_TeleportToTarget, DistanceMax, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_TeleportToTarget, EnableDistanceLimit, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_TeleportToTarget, UnknownData_NY34, 0x0045);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_TeleportToTarget, 0x0048);
		}

		// class UAnimNotifyState_Absorb : public UAnimNotifyState
		TEST_METHOD(Class__AT__AnimNotifyState_Absorb)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Absorb, SocketName, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Absorb, UnknownData_LIIW, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Absorb, Offset, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Absorb, DamageRadius, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Absorb, UnknownData_H58T, 0x0074);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_Absorb, 0x00D0);
		}

		// class UAnimNotifyState_CharacterEffect : public UAnimNotifyState_AG_Effect
		TEST_METHOD(Class__AT__AnimNotifyState_CharacterEffect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_CharacterEffect, ParticleManager, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_CharacterEffect, PersonaDisplayEffectID, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_CharacterEffect, UnknownData_H6PY, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_CharacterEffect, CharacterEffectData, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_CharacterEffect, 0x0050);
		}

		// class UAnimNotifyState_AG_CharacterTrail : public UAnimNotifyState_AG_Effect
		TEST_METHOD(Class__AT__AnimNotifyState_AG_CharacterTrail)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_CharacterTrail, Owner, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_CharacterTrail, ID, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_CharacterTrail, UnknownData_ZOKU, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_CharacterTrail, ParticleManager, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_CharacterTrail, ParticleDatas, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_CharacterTrail, CharacterEffectData, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_AG_CharacterTrail, 0x0068);
		}

		// class UAnimNotifyState_AG_EF_Particle : public UAnimNotifyState_AG_Effect
		TEST_METHOD(Class__AT__AnimNotifyState_AG_EF_Particle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_EF_Particle, ParticleDatas, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_EF_Particle, CachedParticles, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_EF_Particle, CachedParticleDatas, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_AG_EF_Particle, 0x0068);
		}

		// class UAnimNotifyState_AG_FootEffect : public UAnimNotifyState_AG_Effect
		TEST_METHOD(Class__AT__AnimNotifyState_AG_FootEffect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_FootEffect, LandEffectSetting, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_FootEffect, CachedParticle, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_FootEffect, AppearingEffect, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_FootEffect, PersonaDisplayEffect, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_FootEffect, UnknownData_DJI6, 0x00A9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_FootEffect, SocketNameForCheckShow, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AG_FootEffect, UnknownData_W9K0, 0x00B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_AG_FootEffect, 0x0130);
		}

		// class UAnimNotifyState_Attack : public UAnimNotifyState
		TEST_METHOD(Class__AT__AnimNotifyState_Attack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Attack, SocketName, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Attack, OffsetLcation, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Attack, OffsetRotation, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Attack, DamageParam, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Attack, DamageRadius, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Attack, UsePhoton, 0x0084);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Attack, PhotonDestroyType, 0x0085);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Attack, UnknownData_KGQH, 0x0086);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Attack, PhotonDamageAmount, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Attack, UnknownData_IQ2D, 0x008C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_Attack, 0x0130);
		}

		// class UAnimNotifyState_AttackMulti : public UAnimNotifyState_Attack
		TEST_METHOD(Class__AT__AnimNotifyState_AttackMulti)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AttackMulti, DamageInterval, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AttackMulti, DamageCountMax, 0x0134);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_AttackMulti, 0x0138);
		}

		// class UAnimNotifyState_AttackCapsule : public UAnimNotifyState_Attack
		TEST_METHOD(Class__AT__AnimNotifyState_AttackCapsule)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AttackCapsule, DamageLength, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AttackCapsule, UnknownData_CLW9, 0x0134);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_AttackCapsule, 0x0138);
		}

		// class UAnimNotifyState_AttackCapsuleMulti : public UAnimNotifyState_AttackCapsule
		TEST_METHOD(Class__AT__AnimNotifyState_AttackCapsuleMulti)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AttackCapsuleMulti, DamageInterval, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_AttackCapsuleMulti, DamageCountMax, 0x013C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_AttackCapsuleMulti, 0x0140);
		}

		// class UAnimNotifyState_C002Z_B02_SKL001 : public UAnimNotify_SpawnProjectileBeam
		TEST_METHOD(Class__AT__AnimNotifyState_C002Z_B02_SKL001)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_C002Z_B02_SKL001, UnknownData_N58O, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_C002Z_B02_SKL001, 0x0088);
		}

		// class UAnimNotifyState_CKG_HiddenAttach : public UAnimNotifyState
		TEST_METHOD(Class__AT__AnimNotifyState_CKG_HiddenAttach)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_CKG_HiddenAttach, TargetLeftAttach, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_CKG_HiddenAttach, FoodOnlyHide, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_CKG_HiddenAttach, UnknownData_MZ6F, 0x0032);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_CKG_HiddenAttach, 0x0038);
		}

		// class UAnimNotifyState_CollectiveWarp : public UAnimNotifyState
		TEST_METHOD(Class__AT__AnimNotifyState_CollectiveWarp)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_CollectiveWarp, Distance, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_CollectiveWarp, Rotate, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_CollectiveWarp, UseTargetRotation, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_CollectiveWarp, CharacterDraw, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_CollectiveWarp, AfterTeleportLookTarget, 0x0042);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_CollectiveWarp, UnknownData_R6L3, 0x0043);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_CollectiveWarp, TeleportEffect, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_CollectiveWarp, Socket, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_CollectiveWarp, SupportDistance1, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_CollectiveWarp, SupportOffsetRot1, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_CollectiveWarp, SupportDistance2, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_CollectiveWarp, SupportOffsetRot2, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_CollectiveWarp, UnknownData_EJAX, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_CollectiveWarp, 0x00A8);
		}

		// class UAnimNotifyState_Cpl024ShortRange : public UAnimNotifyState
		TEST_METHOD(Class__AT__AnimNotifyState_Cpl024ShortRange)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Cpl024ShortRange, DamageParam, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Cpl024ShortRange, HitDist, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Cpl024ShortRange, MaxTimeToHitDist, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Cpl024ShortRange, UnknownData_HC5T, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_Cpl024ShortRange, 0x0088);
		}

		// class UAnimNotifyState_Cpl034SonicBlow : public UAnimNotifyState
		TEST_METHOD(Class__AT__AnimNotifyState_Cpl034SonicBlow)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Cpl034SonicBlow, Speed, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Cpl034SonicBlow, SpeedAccel, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Cpl034SonicBlow, bIgnoreVertical, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Cpl034SonicBlow, EndSpeedKeep, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Cpl034SonicBlow, OwnerRotateSync, 0x003A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Cpl034SonicBlow, UseOwnerForwardVector, 0x003B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Cpl034SonicBlow, IsCorrectHeight, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Cpl034SonicBlow, UnknownData_GHNI, 0x003D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_Cpl034SonicBlow, 0x0040);
		}

		// class UAnimNotifyState_DirectionCamera : public UAnimNotifyState
		TEST_METHOD(Class__AT__AnimNotifyState_DirectionCamera)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_DirectionCamera, bEnableFlip, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_DirectionCamera, bUseOtherAnim, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_DirectionCamera, bLoop, 0x0032);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_DirectionCamera, bAttach, 0x0033);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_DirectionCamera, fStartTimeOffset, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_DirectionCamera, AutoCalcCurTime, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_DirectionCamera, UnknownData_SLHC, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_DirectionCamera, CameraAnim, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_DirectionCamera, FlipCameraAnim, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_DirectionCamera, ForceSet, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_DirectionCamera, UnknownData_SZLU, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_DirectionCamera, NextCameraAnim, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_DirectionCamera, bEndReset, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_DirectionCamera, UnknownData_1Y87, 0x0061);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_DirectionCamera, CameraInst, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_DirectionCamera, UnknownData_PKST, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_DirectionCamera, 0x0078);
		}

		// class UAnimNotifyState_DisableBodyCollision : public UAnimNotifyState
		TEST_METHOD(Class__AT__AnimNotifyState_DisableBodyCollision)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_DisableBodyCollision, UnknownData_ZH3T, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_DisableBodyCollision, 0x0038);
		}

		// class UAnimNotifyState_PlayParticleBeam : public UAnimNotifyState
		TEST_METHOD(Class__AT__AnimNotifyState_PlayParticleBeam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleBeam, Particle, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleBeam, SourceSocketName, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleBeam, SourceOffsetLocation, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleBeam, SourceOffsetRotation, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleBeam, TargetSocketName, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleBeam, TargetOffsetLocation, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleBeam, TargetOffsetRotation, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleBeam, bInteractive, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleBeam, UnknownData_GWQK, 0x0079);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_PlayParticleBeam, 0x01C0);
		}

		// class UAnimNotifyState_RadialBlur : public UAnimNotifyState
		TEST_METHOD(Class__AT__AnimNotifyState_RadialBlur)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_RadialBlur, AmountMin, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_RadialBlur, AmountMax, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_RadialBlur, Radius, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_RadialBlur, Exponent, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_RadialBlur, InterpTime, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_RadialBlur, FadeOutTime, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_RadialBlur, AttachName, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_RadialBlur, AttachTarget, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_RadialBlur, UnknownData_ETW4, 0x0051);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_RadialBlur, 0x0058);
		}

		// class UAnimNotifyState_SensingVolume : public UAnimNotifyState
		TEST_METHOD(Class__AT__AnimNotifyState_SensingVolume)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SensingVolume, m_Box, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SensingVolume, SocketName, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SensingVolume, BoxExtent, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SensingVolume, dist, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SensingVolume, VolumeEType, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SensingVolume, UnknownData_4OQM, 0x0051);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_SensingVolume, 0x0058);
		}

		// class UAnimNotifyState_SetMobAction : public UAnimNotifyState
		TEST_METHOD(Class__AT__AnimNotifyState_SetMobAction)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SetMobAction, SetActionType, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SetMobAction, Category, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SetMobAction, UnknownData_V9W2, 0x0032);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SetMobAction, ActionPriority, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SetMobAction, PlayProbability, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SetMobAction, ActionPlayerInfinity, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SetMobAction, UnknownData_BBFO, 0x003D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SetMobAction, ActionTime, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SetMobAction, RandAddActionTime, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SetMobAction, ActionTimeInfinityProbability, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SetMobAction, DrawVolume, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SetMobAction, UnknownData_56GM, 0x004D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SetMobAction, VolumeScale, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SetMobAction, ActionRestriction, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SetMobAction, UnknownData_XYF1, 0x005D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_SetMobAction, EventActor, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_SetMobAction, 0x0068);
		}

		// class UAnimNotifyState_ShotComboInvalid : public UAnimNotifyState
		TEST_METHOD(Class__AT__AnimNotifyState_ShotComboInvalid)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_ShotComboInvalid, 0x0030);
		}

		// class UAnimNotifyState_TargetCamera : public UAnimNotifyState
		TEST_METHOD(Class__AT__AnimNotifyState_TargetCamera)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_TargetCamera, OnceDirectionType, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_TargetCamera, UnknownData_PIT6, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_TargetCamera, CameraDistance, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_TargetCamera, UnknownData_1Y85, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_TargetCamera, 0x0040);
		}

		// class UAnimNotifyState_TeleportToTarget : public UAnimNotifyState
		TEST_METHOD(Class__AT__AnimNotifyState_TeleportToTarget)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_TeleportToTarget, Distance, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_TeleportToTarget, Rotate, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_TeleportToTarget, UseRotateRandomRange, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_TeleportToTarget, UseTargetRotation, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_TeleportToTarget, CharacterDraw, 0x0042);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_TeleportToTarget, AfterTeleportLookTarget, 0x0043);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_TeleportToTarget, UnknownData_WBIC, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_TeleportToTarget, TeleportEffect, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_TeleportToTarget, Socket, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_TeleportToTarget, UnknownData_5557, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_TeleportToTarget, 0x0088);
		}

		// class UAnimNotifyState_Turn : public UAnimNotifyState
		TEST_METHOD(Class__AT__AnimNotifyState_Turn)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Turn, Rotate, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Turn, EaseType, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Turn, UnknownData_X5DC, 0x003D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Turn, BlendExp, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Turn, Steps, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Turn, UnknownData_D1NR, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_Turn, 0x0068);
		}

		// class UAnimNotifyState_UseRetargetSetting : public UAnimNotifyState
		TEST_METHOD(Class__AT__AnimNotifyState_UseRetargetSetting)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_UseRetargetSetting, UnknownData_DP9W, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_UseRetargetSetting, 0x0038);
		}

		// class UAnimNotifySubTitle : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotifySubTitle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifySubTitle, StringID, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifySubTitle, dispTime, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifySubTitle, UnknownData_MKV8, 0x004C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifySubTitle, 0x0050);
		}

		// class UAnimNotifyTreasureItemSpawn : public UAnimNotify
		TEST_METHOD(Class__AT__AnimNotifyTreasureItemSpawn)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyTreasureItemSpawn, 0x0038);
		}

		// class AAreaBoundsVolume : public AVolume
		TEST_METHOD(Class__AT__AreaBoundsVolume)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAreaBoundsVolume, AreaName, 0x0370);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAreaBoundsVolume, 0x0380);
		}

		// class UAT_AnimInstance : public UAnimInstance
		TEST_METHOD(Class__AT__AT_AnimInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_AnimInstance, TargetOffset, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_AnimInstance, ExtendOffset, 0x036C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_AnimInstance, LandNutOffset, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_AnimInstance, FlyNutOffset, 0x0384);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_AnimInstance, AimSklOffset, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_AnimInstance, UnknownData_YB97, 0x039C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_AnimInstance, OwnerCharacter, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_AnimInstance, UnknownData_V51A, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_AnimInstance, bEnableAdditiveHair, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_AnimInstance, bEnableAdditiveClothes, 0x03B9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_AnimInstance, bEnableAdditiveOptions, 0x03BA);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_AnimInstance, UnknownData_K2UH, 0x03BB);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_AnimInstance, 0x03C0);
		}

		// class UAT_AnimNotifyState_ChickenEgg : public UAnimNotifyState
		TEST_METHOD(Class__AT__AT_AnimNotifyState_ChickenEgg)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_AnimNotifyState_ChickenEgg, UnknownData_CWZV, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_AnimNotifyState_ChickenEgg, 0x0040);
		}

		// class UAT_AnimNotifyState_ToAccessPoint : public UAnimNotifyState
		TEST_METHOD(Class__AT__AT_AnimNotifyState_ToAccessPoint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_AnimNotifyState_ToAccessPoint, 0x0030);
		}

		// class UAT_AnimNotifyState_ToTreasureAP : public UAT_AnimNotifyState_ToAccessPoint
		TEST_METHOD(Class__AT__AT_AnimNotifyState_ToTreasureAP)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_AnimNotifyState_ToTreasureAP, 0x0030);
		}

		// class AAT_BaseHUD : public ACFHUD
		TEST_METHOD(Class__AT__AT_BaseHUD)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_BaseHUD, UnknownData_J6HP, 0x04E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_BaseHUD, 0x0508);
		}

		// class UAT_BlueprintFunctionLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__AT__AT_BlueprintFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_BlueprintFunctionLibrary, 0x0028);
		}

		// class AAT_BlurManager : public AActor
		TEST_METHOD(Class__AT__AT_BlurManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_BlurManager, Material, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_BlurManager, PostProcess, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_BlurManager, xRadialBlurParam, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_BlurManager, UnknownData_K178, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_BlurManager, 0x03B0);
		}

		// class UAT_CapturedCharacterAnimInstance : public UAnimInstance
		TEST_METHOD(Class__AT__AT_CapturedCharacterAnimInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_CapturedCharacterAnimInstance, mainAnimation, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_CapturedCharacterAnimInstance, LookAtTargetLocation, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_CapturedCharacterAnimInstance, LookAtBlendValue, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_CapturedCharacterAnimInstance, UnknownData_8FWY, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_CapturedCharacterAnimInstance, 0x0380);
		}

		// class AAT_CharacterBase : public ACharacter
		TEST_METHOD(Class__AT__AT_CharacterBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, UnknownData_LZJX, 0x0748);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, UnknownData_E2BG, 0x0750);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, CharacterType, 0x0758);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, m_param_id, 0x0759);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, UnknownData_RC1H, 0x075A);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, FacialComponent, 0x0760);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, m_fBankX, 0x0768);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, m_fBankY, 0x076C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, CmnConstParamDataTable, 0x0770);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, m_bIsUnderWater, 0x0778);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, UnknownData_RIQ9, 0x0779);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, OnPreDeadEvent, 0x0780);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, OnPostDeadEvent, 0x0790);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, OnTargetChanged, 0x07A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, OnPressedFieldActionDelegate, 0x07B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, UnknownData_ML7Z, 0x07C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, OnPressedNextMessageDelegate, 0x07D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, UnknownData_6FK5, 0x07E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, OnLandedCharacter, 0x0800);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, OnAccsessPointDelegate, 0x0810);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, OnFishingBaitActionDelegate, 0x0820);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, m_xParticleManagerComponent, 0x0830);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, m_pLightTowerComponent, 0x0838);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, UnknownData_ZQWI, 0x0840);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, LookAtTargetActor, 0x0848);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, UnknownData_ICWL, 0x0850);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, LookAtCalculator, 0x0880);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, UnknownData_L8UD, 0x0888);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, bEnabledLipSync, 0x0889);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, UnknownData_BPQ1, 0x088A);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, speakerID, 0x0890);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterBase, UnknownData_BUXX, 0x08A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_CharacterBase, 0x08B8);
		}

		// class AAT_Character : public AAT_CharacterBase
		TEST_METHOD(Class__AT__AT_Character)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_XYP3, 0x08B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_TAWU, 0x08C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, TPSSkillComponent, 0x08C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, StatusCmp, 0x08D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, AttributeComponent, 0x08D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, CharacterSkillComponent, 0x08E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, CharacterDamageComponent, 0x08E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, CharacterHealthComponent, 0x08F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, CancelFlagComponent, 0x08F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, ActionManager, 0x0900);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, CorrectionFlySpeedComponent, 0x0908);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, LockonList, 0x0910);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, WearEffectComponent, 0x0918);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, InteractComponent, 0x0920);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, EncountCheckComponent, 0x0928);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, FlashEffectComponent, 0x0930);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, TargetPointComponent, 0x0938);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, NpcTalkComponent, 0x0940);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, MobIconComponent, 0x0948);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, FollowUpPointsComponent, 0x0950);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnderWaterComponennt, 0x0958);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, CombineMeshComponent, 0x0960);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, SparkingComponent, 0x0968);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, ItemGetEffectComponent, 0x0970);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, CharacterAuraComponent, 0x0978);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, DirectionCursorComponent, 0x0980);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, MoveSolveComponent, 0x0988);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, FootIKManager, 0x0990);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_9QVY, 0x0998);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, CharacterName, 0x09A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, CrossTalkDataTable2, 0x09B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, ConstParamDataTable, 0x09B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_5ESP, 0x09C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, DamageReactor, 0x09D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, SpawnType, 0x09E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, CurrentActionID, 0x09E1);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, PrevActionID, 0x09E2);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_EO7A, 0x09E3);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, ReservActionID, 0x09E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, LongBlowoffDummyClass, 0x09F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_bInTown, 0x0A00);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_4E4Q, 0x0A01);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, DeathExplodeEffect, 0x0A08);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, SplashParticleSystem, 0x0A10);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, SplashParticle, 0x0A18);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_O1L1, 0x0A20);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, BreakStartParticleSystem, 0x0A28);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, StunParticleSystem, 0x0A30);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, StunParticle, 0x0A38);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, EnemyParticleSystem, 0x0A40);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, EnemyParticle, 0x0A48);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, LeafEffectParticleSystem, 0x0A50);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, LeafEffectParticleSystemComponent, 0x0A58);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_2RWN, 0x0A60);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, WaterSplashOffset, 0x0A68);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, KiEffectSetting, 0x0A70);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_EQHY, 0x0A78);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, GroundHeightDebugHit, 0x0A80);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_I3YP, 0x0B08);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, FieldShotChargeEffect_PSTemplate, 0x0B10);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_EBSD, 0x0B18);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, JumpSplashParticleSystem, 0x0B28);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, JumpSplashParticle, 0x0B30);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, FallSplashParticle, 0x0B38);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_O7YP, 0x0B40);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, WaterDropParticleSystem_UpperWater, 0x0B48);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, WaterDropParticleSystem_UnderWater, 0x0B50);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, WaterDropParticle, 0x0B58);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_bAuraActive, 0x0B60);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_8B17, 0x0B61);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_vActionEndLocation, 0x0B64);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_vActionSaveCharacter, 0x0B70);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, SuckerPunchCharacter, 0x0B78);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_vPosPre1f, 0x0B80);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_HQ1G, 0x0B8C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_pLookatTarget, 0x0B90);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_pOldLookatTarget, 0x0B98);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_fLookatTime, 0x0BA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_bLookatIntervalFlag, 0x0BA4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_MPBA, 0x0BA5);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_fLookatIntervalTime, 0x0BA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_fLookatIntervalRandamTime, 0x0BAC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_bLookatFlag, 0x0BB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_bLookatTargetChangeFlag, 0x0BB1);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_I06R, 0x0BB2);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_rLookatHeadRotation, 0x0BB4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_rLookatBreastRotation, 0x0BC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_vRecordTargetPos, 0x0BCC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, TargetCharacterPtr, 0x0BD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_3IUP, 0x0BE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_bIsHairMorphing, 0x0BF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_bIsClothesMorphing, 0x0BF1);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_bIsHairMorphingRepeat, 0x0BF2);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_bIsClothesMorphingRepeat, 0x0BF3);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_fHairMorphingValue, 0x0BF4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_fClothesMorphingValue, 0x0BF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_fHairMorphingValueMin, 0x0BFC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_fClothesMorphingValueMin, 0x0C00);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_fHairMorphingValueMax, 0x0C04);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_fClothesMorphingValueMax, 0x0C08);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_fHairMorphingValueRate, 0x0C0C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_fClothesMorphingValueRate, 0x0C10);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_63GL, 0x0C14);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_sHairMorphingTargetNames, 0x0C18);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_sClothesMorphingTargetNames, 0x0C28);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_bDoingDemo, 0x0C38);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_ZS63, 0x0C39);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UseFacialSetting, 0x0CF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UseForceFacialSetting, 0x0CF1);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_V1CQ, 0x0CF2);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_eFlyGearState, 0x0D40);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_eFlyGearState2, 0x0D41);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_C620, 0x0D42);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_fLandMoveTime, 0x0D44);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_ZZGX, 0x0D48);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_eRunGearState, 0x0D49);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_YAL3, 0x0D4A);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, MoveState, 0x0DE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, VirtualController, 0x0DF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, RestrictMoveControl, 0x0DF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, FloatRollRadiusCurve, 0x0E00);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, FloatRollThirdRadiusCurve, 0x0E08);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, FloatRollThirdAnimActorClass, 0x0E10);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, FloatRollThirdAttachBoneName, 0x0E18);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_1YGO, 0x0E20);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, RidingBankX, 0x0E60);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, RidingBankY, 0x0E64);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, IsPassengerRiding, 0x0E68);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, RidingState, 0x0E69);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_EBJF, 0x0E6A);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, CharaAnimBP, 0x0E70);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, RideAnimBP, 0x0E78);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, AirCarRideAnimBP, 0x0E80);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, TwinFootRideAnimBP, 0x0E88);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, PassengerRideAnimBP, 0x0E90);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, RidingCharaMoveCurve, 0x0E98);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, RidingCharaPassengerMoveCurve, 0x0EA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_MJSF, 0x0EA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, ReserveProjectileSign, 0x0ED8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_4QHY, 0x0EE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, m_DynamicMaterials, 0x0F28);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character, UnknownData_U8VV, 0x0F38);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character, 0x0FA0);
		}

		// class AAT_CharacterHugeBase : public AAT_Character
		TEST_METHOD(Class__AT__AT_CharacterHugeBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CharacterHugeBase, UnknownData_R6E3, 0x0FA0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_CharacterHugeBase, 0x0FB0);
		}

		// class AAT_CharacterPlayableBase : public AAT_Character
		TEST_METHOD(Class__AT__AT_CharacterPlayableBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_CharacterPlayableBase, 0x0FA0);
		}

		// class USupportActionInfo : public UObject
		TEST_METHOD(Class__AT__SupportActionInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USupportActionInfo, CharacterSupportParameter, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::USupportActionInfo, OffenseStyleParameter, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::USupportActionInfo, DefenseStyleParameter, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::USupportActionInfo, SpecialStyleParameter, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::USupportActionInfo, RecoveryHpParameter, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::USupportActionInfo, RecoveryMpParameter, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::USupportActionInfo, ParameterTable, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::USupportActionInfo, SkillAssistTrigger, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::USupportActionInfo, CharacterSkillAssist, 0x0090);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USupportActionInfo, 0x00E0);
		}

		// class UATCorrectionFlySpeedComponent : public UActorComponent
		TEST_METHOD(Class__AT__ATCorrectionFlySpeedComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCorrectionFlySpeedComponent, UnknownData_ISWU, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCorrectionFlySpeedComponent, 0x0118);
		}

		// class AATDamageCollisionBase : public ATriggerBase
		TEST_METHOD(Class__AT__ATDamageCollisionBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDamageCollisionBase, UnknownData_2YL1, 0x0340);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATDamageCollisionBase, 0x0570);
		}

		// class AAT_DamageCollisionBox : public AATDamageCollisionBase
		TEST_METHOD(Class__AT__AT_DamageCollisionBox)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_DamageCollisionBox, 0x0570);
		}

		// class AAT_DamageCollisionCapsule : public AATDamageCollisionBase
		TEST_METHOD(Class__AT__AT_DamageCollisionCapsule)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_DamageCollisionCapsule, 0x0570);
		}

		// class AAT_DamageCollisionSphere : public AATDamageCollisionBase
		TEST_METHOD(Class__AT__AT_DamageCollisionSphere)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_DamageCollisionSphere, 0x0570);
		}

		// class AAT_DamageExpCharacter : public ACharacter
		TEST_METHOD(Class__AT__AT_DamageExpCharacter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_DamageExpCharacter, UnknownData_7LHY, 0x0748);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_DamageExpCharacter, ExternalAttachObjects, 0x0750);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_DamageExpCharacter, VariationOptions, 0x0760);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_DamageExpCharacter, FormMeshs, 0x0770);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_DamageExpCharacter, FormOptions, 0x0780);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_DamageExpCharacter, VariationAttachObjects, 0x0790);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_DamageExpCharacter, FormAttachObjects, 0x07A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_DamageExpCharacter, VariationDynamicMaterials, 0x07B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_DamageExpCharacter, FormDynamicMaterials, 0x07C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_DamageExpCharacter, SkeletalMeshComponentPool, 0x07D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_DamageExpCharacter, UnknownData_VXW6, 0x07E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_DamageExpCharacter, 0x07F0);
		}

		// class UAT_DamageType : public UDamageType
		TEST_METHOD(Class__AT__AT_DamageType)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_DamageType, HitEffect, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_DamageType, HitSeID, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_DamageType, UnknownData_E6WG, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_DamageType, GuardEffect, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_DamageType, GuardSeID, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_DamageType, UseHeatUp, 0x0059);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_DamageType, UnknownData_41PL, 0x005A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_DamageType, HitEffectHeatUp, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_DamageType, HitSeIDHeatUp, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_DamageType, UnknownData_92W4, 0x0069);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_DamageType, 0x0070);
		}

		// class UAT_DepthOfFieldManager : public UActorComponent
		TEST_METHOD(Class__AT__AT_DepthOfFieldManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_DepthOfFieldManager, 0x0100);
		}

		// class UAT_DPICustomScalingRule : public UDPICustomScalingRule
		TEST_METHOD(Class__AT__AT_DPICustomScalingRule)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_DPICustomScalingRule, 0x0028);
		}

		// class UAT_EffectStatics : public UActorComponent
		TEST_METHOD(Class__AT__AT_EffectStatics)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_EffectStatics, UnknownData_LI0A, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_EffectStatics, 0x0108);
		}

		// class AAT_GameHUD : public AAT_BaseHUD
		TEST_METHOD(Class__AT__AT_GameHUD)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD, UIClasses, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD, UIInstances, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD, m_xTopMenuPostProcessClass, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD, UIBattleManager, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD, UIFieldManager, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD, UIMiniGameManager, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD, UICommManager, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD, Subtitles, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD, InMenuSubtitles, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD, FullScreenMovie, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD, UIPause, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD, m_xTopMenuPostProcess, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD, m_pPlayer, 0x05B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD, UnknownData_P15Q, 0x05C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD, UICommBoardIns, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD, UnknownData_341I, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD, UIAssetLoader, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD, UnknownData_OKCV, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD, m_bVisibleControllHUD, 0x05EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD, UnknownData_54VD, 0x05ED);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD, GameMode, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD, PlayerController, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD, HudInfo, 0x0600);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD, UILoader, 0x0608);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD, UiDebug, 0x0610);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_GameHUD, 0x0618);
		}

		// class UAT_GameInstance : public UCFGameInstance
		TEST_METHOD(Class__AT__AT_GameInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, AdjustConstParamDataTable, 0x0298);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, SaveManager, 0x02A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, GameFlowManager, 0x02A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, TreasureManager, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, MissionStore, 0x02B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, AnimalCaptureManager, 0x02C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, TreasureAccessPointTable, 0x02C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, EventBattleAccessor, 0x02D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, EventBattleStartPointManager, 0x02D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, WindRoadParamManager, 0x02E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, FeverParamManager, 0x02E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, GlobalData, 0x02F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, GlobalTerrainDecorateResources, 0x02F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, LoadingScreenClass, 0x0300);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, SystemIconClass, 0x0308);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, SystemDialogClass, 0x0310);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, FadeClass, 0x0318);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, WindowManagerClass, 0x0320);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, KeyHelpClass, 0x0328);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, CmnInstallClass, 0x0330);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, TrialClearClass, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, UnknownData_LC19, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, CmnFade, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, LoadingScreen, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, CmnSystemIcon, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, CmnSystemDialog, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, InstallUI, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, WindowManager, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, KeyHelp, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, SystemUICmnInput, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, ImportantLog, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, StatusTable, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, UniqueDataList, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, CmnParticleResource, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, SupportActionInfo, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, SndManager, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, WorldMapInfo, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, ATMonitoring, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, VoicePlayer, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, BGMPlayer, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, PlatformFeatures, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, TrophyManager, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, PadVibrationManager, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, DLCManager, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, UnknownData_AB40, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, SoundLoader, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, XoneSignOutManager, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, ControllerConnection, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, MonitoringMouse, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, ScreenCapture, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, SyncTimer, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, DebugMenu, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, DebugManager, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, TrialClear, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_GameInstance, UnknownData_R2OR, 0x04B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_GameInstance, 0x04C0);
		}

		// class UAT_LightTowerEffectComponent : public UActorComponent
		TEST_METHOD(Class__AT__AT_LightTowerEffectComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, IsInitialized, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, UnknownData_C98H, 0x0101);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, MainQuestDestinationParticleSystem, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, MainQuestDestinationParticle, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, MainQuestDestinationDisappearParticleSystem, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, MainQuestDestinationDisappearParticle, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, SubQuestDestinationParticleSystem, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, SubQuestDestinationParticle, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, SubQuestDestinationDisappearParticleSystem, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, SubQuestDestinationDisappearParticle, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, UserLightTowerParticleSystem, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, UserLightTowerParticle, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, UserLightTowerDisappearParticleSystem, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, UserLightTowerDisappearParticle, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, ActiveParticle, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, TowerScaleCurve, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, MainQuestDestinationRef, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, SubQuestDestinationRef, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, UserLightTowerDestinationRef, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, UnknownData_6KQD, 0x01D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, DelayParticles, 0x01E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, UnknownData_4Q6M, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, DynamicMaterials, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, OriginalMaterials, 0x0218);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, TowerAlphaCurve, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, TowerDecalAlphaCurve, 0x0230);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, TowerDecalScaleCurve, 0x0238);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, TowerEndScaleCurve, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, LightTowerDecal, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, DynamicLightTowerDecal, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, LightTowerDecalActor, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, UnknownData_PB8B, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, LightTowerSettingTable, 0x0268);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, UnknownData_P9QS, 0x0270);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, bEnabledHalfParticle, 0x0280);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_LightTowerEffectComponent, UnknownData_TMK2, 0x0281);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_LightTowerEffectComponent, 0x0298);
		}

		// class AAT_Logo : public AActor
		TEST_METHOD(Class__AT__AT_Logo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Logo, BootLogoWidget, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Logo, UnknownData_EHCZ, 0x0340);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Logo, 0x0438);
		}

		// class UAT_LookAtInterface : public UInterface
		TEST_METHOD(Class__AT__AT_LookAtInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_LookAtInterface, 0x0028);
		}

		// class ANpcPawn : public APawn
		TEST_METHOD(Class__AT__NpcPawn)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ANpcPawn, 0x0398);
		}

		// class AAT_MobBase : public ANpcPawn
		TEST_METHOD(Class__AT__AT_MobBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_MobBase, UnknownData_FM7T, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_MobBase, Mesh, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_MobBase, NpcMovementComponent, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_MobBase, CapsuleComponent, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_MobBase, NpcActionComponent, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_MobBase, NpcComponent, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_MobBase, m_MobIconCmp, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_MobBase, ParticleManagerComponent, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_MobBase, MeshList, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_MobBase, UnknownData_IDIM, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_MobBase, bEnabledLipSync, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_MobBase, UnknownData_BWCJ, 0x03F9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_MobBase, 0x0400);
		}

		// class AAT_MobAnimalBase : public AAT_MobBase
		TEST_METHOD(Class__AT__AT_MobAnimalBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_MobAnimalBase, UnknownData_T20A, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_MobAnimalBase, AnimalID, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_MobAnimalBase, UnknownData_4TM6, 0x0429);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_MobAnimalBase, VariationName, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_MobAnimalBase, AnimalParameterTable, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_MobAnimalBase, UnknownData_C4BV, 0x0448);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_MobAnimalBase, 0x0450);
		}

		// class AAT_MobBase_Static : public AAT_MobBase
		TEST_METHOD(Class__AT__AT_MobBase_Static)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_MobBase_Static, StaticMesh, 0x0400);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_MobBase_Static, 0x0408);
		}

		// class AAT_MobCharacter : public ACharacter
		TEST_METHOD(Class__AT__AT_MobCharacter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_MobCharacter, UnknownData_5HBX, 0x0748);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_MobCharacter, 0x0750);
		}

		// class UAT_MonitoringMouse : public UObject
		TEST_METHOD(Class__AT__AT_MonitoringMouse)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_MonitoringMouse, UnknownData_PEWG, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_MonitoringMouse, 0x0038);
		}

		// class UAT_MotionMetaData : public UAnimMetaData
		TEST_METHOD(Class__AT__AT_MotionMetaData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_MotionMetaData, FacialOff, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_MotionMetaData, FootIKOff, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_MotionMetaData, UnknownData_034V, 0x002A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_MotionMetaData, NormalFaceMontage, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_MotionMetaData, TransformFaceMontage, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_MotionMetaData, 0x0048);
		}

		// class AAT_Opening : public AActor
		TEST_METHOD(Class__AT__AT_Opening)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Opening, UnknownData_LZE2, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Opening, 0x0340);
		}

		// class UAT_ProjectileMovementComponent : public UProjectileMovementComponent
		TEST_METHOD(Class__AT__AT_ProjectileMovementComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_ProjectileMovementComponent, m_homing_power, 0x0200);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_ProjectileMovementComponent, m_homing_accel, 0x0204);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_ProjectileMovementComponent, m_homing_rate, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_ProjectileMovementComponent, UnknownData_SFIV, 0x020C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_ProjectileMovementComponent, 0x0220);
		}

		// class AAT_Title : public AActor
		TEST_METHOD(Class__AT__AT_Title)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Title, UIXcmnAgreementClass, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Title, AgreementDialog, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Title, UnknownData_Q5F9, 0x0348);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Title, 0x0448);
		}

		// class AAT_TownCharacter : public AAT_MobBase
		TEST_METHOD(Class__AT__AT_TownCharacter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_TownCharacter, UnknownData_F7Z4, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_TownCharacter, CharacterType, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_TownCharacter, UnknownData_X5TG, 0x04B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_TownCharacter, NpcTalkComponent, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_TownCharacter, LipSyncComponent, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_TownCharacter, FieldSphereComponent, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_TownCharacter, RestrictProjectileSphereComponent, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_TownCharacter, LookAtComponent, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_TownCharacter, CharacterAuraComponent, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_TownCharacter, LookAtCalculator, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_TownCharacter, TownCharacterCostumeChanger, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_TownCharacter, AnimInst, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_TownCharacter, UniqueId, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_TownCharacter, bInitializedUniqueId, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_TownCharacter, UnknownData_33DG, 0x0509);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_TownCharacter, PreviewMesh, 0x0509);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_TownCharacter, bAdjustCapsuleHalfHeight, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_TownCharacter, UnknownData_VKV3, 0x0539);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_TownCharacter, speakerID, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_TownCharacter, UnknownData_RWWH, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_TownCharacter, LookAtTargetActor, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_TownCharacter, UnknownData_2ANI, 0x05A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_TownCharacter, 0x05C0);
		}

		// class UAT_TPSSkillComponent : public UActorComponent
		TEST_METHOD(Class__AT__AT_TPSSkillComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_TPSSkillComponent, UnknownData_J4L2, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_TPSSkillComponent, TargetActor, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_TPSSkillComponent, Owner, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_TPSSkillComponent, UITPSSkill, 0x0158);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_TPSSkillComponent, 0x0160);
		}

		// class UAT_TriggerStaticActorInterface : public UInterface
		TEST_METHOD(Class__AT__AT_TriggerStaticActorInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_TriggerStaticActorInterface, 0x0028);
		}

		// class UAT_UI3DCaptureOptional : public UObject
		TEST_METHOD(Class__AT__AT_UI3DCaptureOptional)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UI3DCaptureOptional, UnknownData_USMG, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UI3DCaptureOptional, 0x0170);
		}

		// class UATUIUserWidget : public UCFUIUserWidget
		TEST_METHOD(Class__AT__ATUIUserWidget)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATUIUserWidget, UnknownData_71WC, 0x0370);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATUIUserWidget, 0x03B0);
		}

		// class UAT_UI3DCaptureWidget : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UI3DCaptureWidget)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UI3DCaptureWidget, OnModelLoaded, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UI3DCaptureWidget, ModelRotationSpeedHorizontal, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UI3DCaptureWidget, UnknownData_PZV8, 0x03C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UI3DCaptureWidget, DefaultCaptureSetParam, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UI3DCaptureWidget, CaptureSet, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UI3DCaptureWidget, RenderTargets, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UI3DCaptureWidget, code, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UI3DCaptureWidget, Manually, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UI3DCaptureWidget, CompZPostProcess, 0x0489);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UI3DCaptureWidget, NeedSkelMesh, 0x048A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UI3DCaptureWidget, NeedLight, 0x048B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UI3DCaptureWidget, PostProcessLocation, 0x048C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UI3DCaptureWidget, LoadingIcon, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UI3DCaptureWidget, ModelImage, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UI3DCaptureWidget, AnimationAsset, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UI3DCaptureWidget, AnimMontage, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UI3DCaptureWidget, UnknownData_NMGF, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UI3DCaptureWidget, OptionalModelList, 0x06D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UI3DCaptureWidget, 0x06E0);
		}

		// class UAT_UIBattleCond : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIBattleCond)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCond, AutoOutTime, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCond, UnknownData_GX1W, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCond, AllNut, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCond, AnimIn, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCond, AnimOut, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCond, ImgBaseFad, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCond, TxtTitle00, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCond, TxtCond00, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCond, TxtCond01, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCond, TxtCond02, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCond, Pnl_Battle_Cond01, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCond, Pnl_Battle_Cond02, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCond, UnknownData_3MB5, 0x0408);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleCond, 0x0420);
		}

		// class UAT_UIBattleCutin : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIBattleCutin)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutin, UnknownData_L03U, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutin, CutinInstance, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutin, CanvasAll_Nut, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutin, CurrentAnimType, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutin, UnknownData_Z2YY, 0x0391);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutin, ResultStartTime, 0x0394);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleCutin, 0x0398);
		}

		// class UAT_UIBattleCutinChild : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIBattleCutinChild)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutinChild, bIsRequestResultAnim, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutinChild, UnknownData_XRUJ, 0x0371);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutinChild, ResultAnimStartTime, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutinChild, StarScaleFinishStartTimeLimit, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutinChild, UnknownData_ICS3, 0x037C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutinChild, CanvasAll_Nut, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutinChild, CanvasAll_Eff, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutinChild, CanvasBattle, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutinChild, CanvasFinish, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutinChild, CanvasBackattack, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutinChild, CanvasEscape, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutinChild, CanvasSsFinish, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutinChild, AnimAry, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutinChild, ParentBattleCutin, 0x03C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleCutinChild, 0x03D0);
		}

		// class UAT_UIBattleCutinSkill : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIBattleCutinSkill)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutinSkill, EnsureDisplaySec, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutinSkill, DisplaySec, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutinSkill, All_Nut, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutinSkill, Txt_Detail, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutinSkill, WA_In, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutinSkill, WA_Out, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutinSkill, InsQte, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleCutinSkill, UnknownData_ALUW, 0x03E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleCutinSkill, 0x03E8);
		}

		// class UAT_UIBattleHudEnemy : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIBattleHudEnemy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, OneGaugeParamDataTable, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, SkipFrame, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, AlertRate, 0x03BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, FineGaugeNumMaterial, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, FineGaugeEffMaterial, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, CautionGaugeEffMaterial, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, CautionGaugeNumMaterial, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, DangerGaugeEffMaterial, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, DangerGaugeNumMaterial, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, SubClassSimpleHud, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, WL_AllNut, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, WL_TxtNameChar, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, WL_TxtLv, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, WL_InsChariconD, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, WL_InsCharFad, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, WL_TxtNumHp, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, WL_TxtNumHpShadow, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, WL_TxtBreak, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, WL_TxtBreakShadow, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, WL_InsNumHpNum100, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, WL_InsNumHpNum10, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, WL_InsNumHpNum1, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, WL_InsNumHpNumX, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, WL_InsNumHpEff100, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, WL_InsNumHpEff10, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, WL_InsNumHpEff1, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, WL_InsNumHpEffX, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, WL_StateIcon, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, WL_BattleGaugeBreak, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, WL_BattleGaugeHpE, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, WL_SimpleHudCtn, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, WL_SkillName, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, WA_AnimCtn, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, HpTxtDynamicMat, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, PlayerIns, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, TargetEnemy, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, PrevTargetEnemy, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, LoadIconTargetEnemy, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, UnknownData_ICFQ, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, EnemyIconMap, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, NameOverwriteList, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, EnemyHpGaugeNum, 0x0600);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, EvtBattleMng, 0x0650);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, BattleMng, 0x0658);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, UiBattleMng, 0x0660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, SkillMng, 0x0668);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, UnknownData_OV1I, 0x0670);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, PL_StatusCmp, 0x06B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, PL_GaugeHp, 0x06C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, PL_GaugeBreak, 0x06C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, PL_HealthCmp, 0x06D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemy, UnknownData_G91G, 0x06D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleHudEnemy, 0x06E0);
		}

		// class UAT_UIBattleHudGaugeBase : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIBattleHudGaugeBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeBase, UnknownData_0D77, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeBase, OneGaugeDecreaseSpeedRate, 0x03CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeBase, OneGaugeIncreaseSpeedRate, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeBase, DmgFlashSec, 0x03D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeBase, DmgFlashAlpha, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeBase, UnknownData_18QA, 0x03DC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleHudGaugeBase, 0x0428);
		}

		// class UAT_UIBattleHudGaugePlayerHp : public UAT_UIBattleHudGaugeBase
		TEST_METHOD(Class__AT__AT_UIBattleHudGaugePlayerHp)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHp, WL_InsGaugeHp00, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHp, WL_InsGaugeHp01, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHp, WL_MatGaugeHudLight, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHp, WL_MatGaugeHudLight_B, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHp, WL_InsGaugeRecover, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHp, WL_InsGaugeMarkFull, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHp, WA_MaxRecovery, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHp, WA_ContinuousRecovery, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHp, WA_OneShotRecovery, 0x0468);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleHudGaugePlayerHp, 0x0470);
		}

		// class UAT_UIBattleHudGaugePlayerSp : public UAT_UIBattleHudGaugeBase
		TEST_METHOD(Class__AT__AT_UIBattleHudGaugePlayerSp)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerSp, WL_InsGaugeSp, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerSp, WL_MatGaugeHudLight, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerSp, WL_InsGaugeRecover, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerSp, WL_InsGaugeMarkFull, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerSp, WA_MaxRecovery, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerSp, WA_ContinuousRecovery, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerSp, WA_OneShotRecovery, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerSp, UnknownData_C0AO, 0x0460);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleHudGaugePlayerSp, 0x0468);
		}

		// class UAT_UIBattleHudGaugePlayerHeatUp : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIBattleHudGaugePlayerHeatUp)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHeatUp, HeatUpAnimAdjustThreshold, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHeatUp, SparkEffStartThreshold, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHeatUp, GaugeMaxTimingAdjust, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHeatUp, UnknownData_4SH2, 0x03BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHeatUp, WL_XefGaugeEff, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHeatUp, WL_InsGaugeHeat, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHeatUp, WL_Ins_Heat_Eff00_00, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHeatUp, WL_Ins_Heat_Eff02, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHeatUp, WL_Ins_Xef_Fire00_04, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHeatUp, WL_Ins_Xef_Fire00_05, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHeatUp, WL_Pnl_Xef_Gauge_Eff, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHeatUp, WL_Ins_Heat_Eff00_01, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHeatUp, WL_Ins_Heat_Gauge_Eff03, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHeatUp, WA_GaugeHeat, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHeatUp, WA_LoopFull, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHeatUp, WA_GaugeCharge, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHeatUp, UnknownData_6A6N, 0x0420);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleHudGaugePlayerHeatUp, 0x0448);
		}

		// class UAT_UIBattleHudGaugePlayerHeatUpTipEffect : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIBattleHudGaugePlayerHeatUpTipEffect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHeatUpTipEffect, WA_Start, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHeatUpTipEffect, WA_Start01, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugePlayerHeatUpTipEffect, UnknownData_9H08, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleHudGaugePlayerHeatUpTipEffect, 0x03C8);
		}

		// class UAT_UIBattleHudGaugeDurable : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIBattleHudGaugeDurable)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeDurable, Ins_Gauge_Durable, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeDurable, HeadOffsetFromTarget, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeDurable, GaugeSlowdownSpeedValue, 0x03BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeDurable, UnknownData_ETHD, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeDurable, TargetActor, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeDurable, WA_In, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeDurable, WA_Out, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeDurable, WA_Success, 0x03E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleHudGaugeDurable, 0x03F0);
		}

		// class UAT_UIBattleHudGaugeEnemyHp : public UAT_UIBattleHudGaugeBase
		TEST_METHOD(Class__AT__AT_UIBattleHudGaugeEnemyHp)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyHp, CautionRate, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyHp, DengerRate, 0x042C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyHp, WL_InsGaugeHp00, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyHp, WL_InsGaugeHp01, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyHp, WL_MatGaugeHudLight, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyHp, WL_InsGaugeRecover, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyHp, WL_InsGaugeMarkFull, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyHp, WL_InsGaugeHudLight01, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyHp, WA_MaxRecovery, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyHp, WA_ContinuousRecovery, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyHp, WA_OneShotRecovery, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyHp, UnknownData_E4FB, 0x0478);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleHudGaugeEnemyHp, 0x0488);
		}

		// class UAT_UIBattleHudGaugeEnemyBreak : public UAT_UIBattleHudGaugeBase
		TEST_METHOD(Class__AT__AT_UIBattleHudGaugeEnemyBreak)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyBreak, BreakPartsOffsetSizeX, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyBreak, BreakPartsOffsetSizeY, 0x042C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyBreak, WA_MaxRecovery, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyBreak, WL_InsGaugeBreak, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyBreak, WL_InsGaugeBreakEff, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyBreak, WL_InsGaugeHudLight, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyBreak, WL_MatGaugeHudLight, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyBreak, WL_BreakParts, 0x0458);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleHudGaugeEnemyBreak, 0x0460);
		}

		// class UAT_UIBattleHudGaugeEnemyBreakParts : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIBattleHudGaugeEnemyBreakParts)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyBreakParts, BreakPartsLarge, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyBreakParts, BreakPartsMiddle, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyBreakParts, BreakPartsSmall, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyBreakParts, RandRotateMin, 0x03BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyBreakParts, RandRotateMax, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyBreakParts, UnknownData_9XZA, 0x03C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyBreakParts, WL_AllBreakParts, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyBreakParts, WA_BreakL, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyBreakParts, WA_BreakM, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudGaugeEnemyBreakParts, WA_BreakS, 0x03E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleHudGaugeEnemyBreakParts, 0x03E8);
		}

		// class UAT_UIBattleHudEnemySimple : public UAT_UIBattleHudGaugeBase
		TEST_METHOD(Class__AT__AT_UIBattleHudEnemySimple)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemySimple, SkipFrame, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemySimple, HudOffset, 0x042C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemySimple, CautionRate, 0x0434);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemySimple, DengerRate, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemySimple, UnknownData_4KAL, 0x043C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemySimple, WL_InsGaugeHp00, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemySimple, WL_InsGaugeHp01, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemySimple, WL_AllBattleHudSimple, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemySimple, WL_TxtLv, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemySimple, WL_TxtNumGauge, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemySimple, WA_In, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemySimple, WA_Out, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemySimple, WA_Down, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemySimple, TxtNumGaugeMat, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemySimple, UnknownData_9I3F, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemySimple, TargetEnemy, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemySimple, PL_GaugeHp, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudEnemySimple, UnknownData_39WC, 0x04A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleHudEnemySimple, 0x04B8);
		}

		// class UAT_UIBattleHudPlayer : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIBattleHudPlayer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, HeatUpChargeAnimPlayBackSpped, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, GuardAnnounceOn, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, UnknownData_Y2JN, 0x03B5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, GuardAnnounceHitTriggerCount, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, GuardAnnounceComboRangeTime, 0x03BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, GuardAnnounceDispTime, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, UnknownData_P4UG, 0x03C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, GuardAnnouncePeriodQuestId, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, WL_All_Battle_Hud, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, WL_PlayerIcon, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, WL_BattleHudSpo00, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, WL_BattleHudSpo01, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, WL_TxtNameChar, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, WL_TxtLv, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, WL_TxtLvEff00, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, WL_TxtLvEff01, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, WL_TxtNumHp, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, WL_TxtNumHpShadow, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, WL_TxtNumSp, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, WL_TxtNumSpShadow, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, WL_InsChariconF00, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, WL_Ins_Char_Fad, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, WL_XefHudEff, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, WL_BattleGaugeHp, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, WL_BattleGaugeSp, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, WL_BattleGaugeHeat, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, WA_AnimCtn, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, UnknownData_PBNE, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, CharIcon, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, PL_PlayerIns, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, PL_StatusCmp, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, PL_SparkingCmp, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, PL_GaugeHp, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, PL_GaugeSp, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, PL_GaugeHeatUp, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, UICommandPltIns, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, EnemyHud, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, HpTxtDynamicMat, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, PartyIns, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, ItemMng, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, UiQteIns, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, LoadHashMap, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, CharIconMap, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayer, UnknownData_56O2, 0x05B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleHudPlayer, 0x05E0);
		}

		// class UAT_UIBattleHudPlayerSpo : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIBattleHudPlayerSpo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, TickSkipFrame, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, TickAssistGaugeSpeed, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, UnknownData_0DLR, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, WL_TxtLvEff00, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, WL_TxtLvEff01, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, WL_InsIconSpo, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, WL_AllBattleHudPSpo, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, WL_InsSpoFad01, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, WL_DmyChariconD, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, WL_InsSpoGauge00, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, WL_InsGaugeSpoIcon, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, WL_InsSpoEff02, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, WL_PlayerIcon, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, WA_UpLv, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, WA_InBattle, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, WA_OutBattle, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, WA_InChange, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, WA_OutChange, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, WA_FullSkill, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, WA_FullSupport, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, WA_OutSupport, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, AssistGaugeAnimFrameSpeed, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, UnknownData_EZN3, 0x0454);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, TargetChar, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, UICommandPltIns, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, PL_StatusCmp, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, PL_SupportSkillGauge, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, PL_SupportAssistGauge, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, UnknownData_KBPF, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, LoadHashMap, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleHudPlayerSpo, CharIcon, 0x0508);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleHudPlayerSpo, 0x0510);
		}

		// class UBaseObject : public UObject
		TEST_METHOD(Class__AT__BaseObject)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBaseObject, UnknownData_LXUJ, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBaseObject, 0x0030);
		}

		// class UAT_UIBattleManager : public UBaseObject
		TEST_METHOD(Class__AT__AT_UIBattleManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, UnknownData_KHR2, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, SubLockonCursor, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, SubSkillEnemyIconClass, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, SubBattleMsgBreakClass, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, SubBattleMsgCounterClass, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, SubBattleMsgJustDodgeClass, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, SubDamagePopClass, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, SubBattleCutinManagerClass, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, SubBattleCondClass, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, SubBattleResultClass, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, SubBattleHudPlayerClass, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, SubBattleHudEnemyClass, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, SubSkillChainClass, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, SubTotalDamageClass, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, SubBattleRescueClass, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, SubCommandPaletteClass, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, SubTPSSkillCursorTypeA, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, SubTPSSkillCursorTypeB, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, SubQteClass, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, SubQteBarrageClass, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, SubCmnFade, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, SubGaugeDurable, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, SubCutinSkill, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, LockonCursor, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, SkillEnemyIcon, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, TPSSkillCursorTypeA, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, TPSSkillCursorTypeB, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, TPSSkill, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, TPSSkillLockonCursor, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, BattleMsgBreak, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, BattleMsgCounter, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, BattleMsgJustDodge, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, DamagePopMng, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, BattleCutinManager, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, BattleCond, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, BattleResult, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, BattleHudPlayer, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, BattleHudEnemy, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, SkillChain, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, TotalDamage, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, BattleRescue, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, CommandPalette, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, QteChase, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, QteBarrage, 0x01C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, BattleFade, 0x01D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, GaugeDurable, 0x01D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, CutinSkill, 0x01E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleManager, UnknownData_1ILA, 0x01E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleManager, 0x03C8);
		}

		// class UAT_UIBattleMsgBreak : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIBattleMsgBreak)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleMsgBreak, WidgetAllNut, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleMsgBreak, WidgetLang, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleMsgBreak, UnknownData_ITGR, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleMsgBreak, 0x03D8);
		}

		// class UAT_UIBattleMsgBreak_Lang : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIBattleMsgBreak_Lang)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleMsgBreak_Lang, AnimStart, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleMsgBreak_Lang, UnknownData_OPM5, 0x03B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleMsgBreak_Lang, 0x03C0);
		}

		// class UAT_UIBattleMsgCounter : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIBattleMsgCounter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleMsgCounter, AllNutWidgetName, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleMsgCounter, MainWidgetName, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleMsgCounter, DrawOffset, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleMsgCounter, Anim_In, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleMsgCounter, AllNutWidget, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleMsgCounter, MainWidget, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleMsgCounter, TargetCharacter, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleMsgCounter, UnknownData_8LMU, 0x03A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleMsgCounter, 0x03C8);
		}

		// class UAT_UIBattleMsgJustDodge : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIBattleMsgJustDodge)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleMsgJustDodge, AllNutWidget, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleMsgJustDodge, MainWidget, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleMsgJustDodge, Anim_In, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleMsgJustDodge, TexLang, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleMsgJustDodge, UnknownData_REV4, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleMsgJustDodge, ImageLangJustDodge, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleMsgJustDodge, UnknownData_9PSF, 0x03E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleMsgJustDodge, 0x0408);
		}

		// class UAT_UIBattleRescueParts : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIBattleRescueParts)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleRescueParts, AllNut, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleRescueParts, AnimStart, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleRescueParts, LangRescue, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleRescueParts, InsCharMask, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleRescueParts, TexLangRescue, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleRescueParts, HashTexLangRescue, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleRescueParts, UnknownData_NI9B, 0x03DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleRescueParts, TexInsCharMask, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleRescueParts, HashTexInsCharMask, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleRescueParts, bIsEndStartAnim, 0x03EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleRescueParts, bIsLoadedCharIcon, 0x03ED);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleRescueParts, UnknownData_E4LJ, 0x03EE);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleRescueParts, 0x03F0);
		}

		// class UAT_UIBattleRescue : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIBattleRescue)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleRescue, Battle_Assist_Parts01, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleRescue, Battle_Assist_Parts00, 0x03B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleRescue, 0x03C0);
		}

		// class UAT_UIBattleResult : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIBattleResult)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleResult, CounterCtn, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleResult, CloudAnim, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleResult, RankAnimCtn, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleResult, AllNut, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleResult, AllResult, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleResult, RateIcon, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleResult, RateLowIcon, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleResult, RateIconEff, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleResult, SunIcon, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleResult, PnlEff, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleResult, PnlSun, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleResult, PnlSprk, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleResult, PnlLight, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleResult, bIsEndResult, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleResult, UnknownData_UCG5, 0x03E9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleResult, ImgLangExp, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleResult, UnknownData_4DML, 0x03F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleResult, 0x0490);
		}

		// class UAT_UIBattleRushSpeedCore : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIBattleRushSpeedCore)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleRushSpeedCore, RootPanel, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleRushSpeedCore, EvalIns, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleRushSpeedCore, Xcmn_Btn_Plat, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleRushSpeedCore, InputRing, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleRushSpeedCore, InputRingEff, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleRushSpeedCore, SuccessRing, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleRushSpeedCore, SuccessRingEff, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleRushSpeedCore, InAnim, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleRushSpeedCore, OutAnim, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleRushSpeedCore, UnknownData_ZR70, 0x03B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleRushSpeedCore, 0x03D8);
		}

		// class UAT_UIBattleTipsList : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIBattleTipsList)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsList, Txt_Btn, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsList, Txt_Operat, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleTipsList, 0x0380);
		}

		// class UAT_UIBattleTipsTutorial : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIBattleTipsTutorial)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsTutorial, DT_KeyGuideList, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsTutorial, DeadZoneRange, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsTutorial, AutoInSec, 0x03BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsTutorial, NonOpeCheckSec, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsTutorial, AfterBattleWaitRate, 0x03C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsTutorial, AfterDemoWaitRate, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsTutorial, UnknownData_VBTL, 0x03CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsTutorial, BattleTutorialPeriodQuestId, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsTutorial, Offset, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsTutorial, UnknownData_N9QT, 0x03DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsTutorial, PlayerIns, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsTutorial, UnknownData_D9O4, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsTutorial, RideMng, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsTutorial, UiTargetCursor, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsTutorial, UiFieldRide, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsTutorial, UnknownData_44L4, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsTutorial, WL_All_Nut, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsTutorial, WL_TxtShow, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsTutorial, WL_TipsList, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsTutorial, WL_Pnl_All_List, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsTutorial, WL_All_Tips_Tutorial01, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsTutorial, WA_In, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsTutorial, WA_Out, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsTutorial, WA_InAll, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsTutorial, WA_OutAll, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBattleTipsTutorial, UnknownData_THHD, 0x0580);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleTipsTutorial, 0x0588);
		}

		// class UAT_UIBootLogo : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIBootLogo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBootLogo, LogoMap, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBootLogo, DmyLogo, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBootLogo, UnknownData_EQ9O, 0x03C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBootLogo, 0x03F0);
		}

		// class UAT_UIChoiceCmd : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIChoiceCmd)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIChoiceCmd, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIChoiceCmd, TextBox_Choice, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIChoiceCmd, Anim_In, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIChoiceCmd, Anim_Loop, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIChoiceCmd, Anim_Out, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIChoiceCmd, HoverImage, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIChoiceCmd, LinkImage, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIChoiceCmd, ShadowImage, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIChoiceCmd, UnknownData_TVLD, 0x03B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIChoiceCmd, 0x03B8);
		}

		// class UAT_UIChoiceWin : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIChoiceWin)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIChoiceWin, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIChoiceWin, TextBox_Message, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIChoiceWin, UIChoiceCmd_Yes, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIChoiceWin, UIChoiceCmd_No, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIChoiceWin, Anim_In, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIChoiceWin, Anim_Out, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIChoiceWin, UnknownData_KGWR, 0x03A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIChoiceWin, 0x03A8);
		}

		// class UAT_UICloudUnder : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UICloudUnder)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICloudUnder, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICloudUnder, Anim_In, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICloudUnder, Anim_Loop, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICloudUnder, Anim_Out, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICloudUnder, UnknownData_VOQ0, 0x0390);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICloudUnder, 0x0398);
		}

		// class UAT_UIMenuListBase00 : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMenuListBase00)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase00, ListPlateNameCtn, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase00, ListPlateCtn, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase00, CanvasAllNut, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase00, ImgTitleBase, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase00, TxtTitle, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase00, TxtNum, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase00, ScrollBar, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase00, Image_Dmy_Space, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase00, InAnim, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase00, OutAnim, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase00, SelectCheakList, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase00, AllCurs, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase00, UnknownData_3NZ5, 0x0428);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMenuListBase00, 0x0478);
		}

		// class UAT_UICmn00MenuList11 : public UAT_UIMenuListBase00
		TEST_METHOD(Class__AT__AT_UICmn00MenuList11)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICmn00MenuList11, 0x0478);
		}

		// class UAT_UICmn00MenuList7 : public UAT_UIMenuListBase00
		TEST_METHOD(Class__AT__AT_UICmn00MenuList7)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmn00MenuList7, AnimActive, 0x0478);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICmn00MenuList7, 0x0480);
		}

		// class UAT_UICmn00MenuList9 : public UAT_UIMenuListBase00
		TEST_METHOD(Class__AT__AT_UICmn00MenuList9)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICmn00MenuList9, 0x0478);
		}

		// class UAT_UIMenuListBase01 : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMenuListBase01)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase01, ListPlateCtn, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase01, CanvasAllNut, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase01, TxtTitle, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase01, TxtNum, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase01, ScrollBar, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase01, InAnim, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase01, OutAnim, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase01, InFadeAnim, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase01, OutFadeAnim, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase01, AllCurs, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase01, UnknownData_W99N, 0x03C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMenuListBase01, 0x03E8);
		}

		// class UAT_UICmn01MenuList05Detail : public UAT_UIMenuListBase01
		TEST_METHOD(Class__AT__AT_UICmn01MenuList05Detail)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmn01MenuList05Detail, TextBox_CaptionDetail, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmn01MenuList05Detail, TextBox_Detail, 0x03F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICmn01MenuList05Detail, 0x03F8);
		}

		// class UAT_UICmn01MenuList09 : public UAT_UIMenuListBase01
		TEST_METHOD(Class__AT__AT_UICmn01MenuList09)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICmn01MenuList09, 0x03E8);
		}

		// class UAT_UIMenuBarBase03 : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMenuBarBase03)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuBarBase03, ListPlateCtn, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuBarBase03, CanvasAllNut, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuBarBase03, ScrollBar, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuBarBase03, InAnim, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuBarBase03, OutAnim, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuBarBase03, UnknownData_H643, 0x03A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMenuBarBase03, 0x03C0);
		}

		// class UAT_UICmn03MenuBar10 : public UAT_UIMenuBarBase03
		TEST_METHOD(Class__AT__AT_UICmn03MenuBar10)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICmn03MenuBar10, 0x03C0);
		}

		// class UAT_UIMenuListBase03 : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMenuListBase03)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase03, ListPlateCtn, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase03, CanvasAllNut, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase03, TxtTitle, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase03, ScrollBar, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase03, InAnim, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase03, OutAnim, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase03, UnknownData_QMYT, 0x03A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMenuListBase03, 0x03C8);
		}

		// class UAT_UICmn03MenuList10 : public UAT_UIMenuListBase03
		TEST_METHOD(Class__AT__AT_UICmn03MenuList10)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICmn03MenuList10, 0x03C8);
		}

		// class UAT_UIMenuListBase06 : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMenuListBase06)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase06, ListPlateCtn, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase06, TxtTitle, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase06, ImgTitleBase, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase06, QuestMenuCtn, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase06, InAnim, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase06, OutAnim, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase06, ScrollBar, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase06, CanvasAllNut, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuListBase06, UnknownData_AKZU, 0x0400);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMenuListBase06, 0x0428);
		}

		// class UAT_UICmn06MenuList09 : public UAT_UIMenuListBase06
		TEST_METHOD(Class__AT__AT_UICmn06MenuList09)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICmn06MenuList09, 0x0428);
		}

		// class UAT_UICmnActionPopUp : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UICmnActionPopUp)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnActionPopUp, NutCanvas, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnActionPopUp, AllCanvas, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnActionPopUp, CoreAction, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnActionPopUp, UnknownData_KP16, 0x0388);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICmnActionPopUp, 0x0400);
		}

		// class UAT_UICmnActionPopUpCore : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UICmnActionPopUpCore)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnActionPopUpCore, ActionBtn00, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnActionPopUpCore, ActionBtn01, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnActionPopUpCore, ActionBtn02, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnActionPopUpCore, ActionBtn03, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnActionPopUpCore, Stk_Nut_L, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnActionPopUpCore, ActionBorder, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnActionPopUpCore, ActionPanelMain, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnActionPopUpCore, BtnImageMain, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnActionPopUpCore, ActionTxtMain, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnActionPopUpCore, ActionPanelSub, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnActionPopUpCore, BtnImageSub, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnActionPopUpCore, ActionTxtSub, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnActionPopUpCore, AnimIn, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnActionPopUpCore, AnimOut, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnActionPopUpCore, UnknownData_JN62, 0x04A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICmnActionPopUpCore, 0x0580);
		}

		// class UAT_UIUseItemEffect : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIUseItemEffect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIUseItemEffect, StartAnim, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIUseItemEffect, UnknownData_YPYT, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIUseItemEffect, 0x0380);
		}

		// class UAT_UICmnFade : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UICmnFade)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnFade, FadeImage, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnFade, UnknownData_R49D, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICmnFade, 0x03F8);
		}

		// class UAT_UICmnInput : public UObject
		TEST_METHOD(Class__AT__AT_UICmnInput)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnInput, UnknownData_3TDF, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICmnInput, 0x03B0);
		}

		// class UAT_UILoadingScreen : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UILoadingScreen)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILoadingScreen, TipsSwitchingSeconds, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILoadingScreen, UnknownData_SAYA, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILoadingScreen, AllNut, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILoadingScreen, TxtPanel, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILoadingScreen, TxtTitle, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILoadingScreen, TxtDetail, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILoadingScreen, LoadingBar, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILoadingScreen, DmyImg, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILoadingScreen, TipsPanel, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILoadingScreen, TipsTitleText, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILoadingScreen, TipsDetailText, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILoadingScreen, ChangeTipsAnimation, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILoadingScreen, ChapterDataTable, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILoadingScreen, TipsDataTable, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILoadingScreen, WA_BgIn, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILoadingScreen, WA_BgOut, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILoadingScreen, WA_Out, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILoadingScreen, BgTexture, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILoadingScreen, UnknownData_8146, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILoadingScreen, OnFadeEnd, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILoadingScreen, UnknownData_6BX8, 0x04B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UILoadingScreen, 0x04C0);
		}

		// class UAT_UICmnLoadingBar : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UICmnLoadingBar)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnLoadingBar, AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnLoadingBar, ProgressBar, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnLoadingBar, LangImg, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnLoadingBar, InAnim, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnLoadingBar, LoopAnim, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnLoadingBar, OutAnim, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnLoadingBar, UnknownData_LP8V, 0x03A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICmnLoadingBar, 0x0400);
		}

		// class UAT_UICmnTab : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UICmnTab)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnTab, CmnTabIconClass, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnTab, ArrawCtn, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnTab, IconBox, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnTab, CategoryIconCtn, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnTab, UnknownData_03WK, 0x03A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICmnTab, 0x03A8);
		}

		// class UAT_UICmnTabIcon : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UICmnTabIcon)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnTabIcon, IconCtn, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnTabIcon, OffIconGroup, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnTabIcon, OnIconGroup, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnTabIcon, IconGroupEff, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICmnTabIcon, UnknownData_S485, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICmnTabIcon, 0x03B0);
		}

		// class UAT_UICommandPalette : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UICommandPalette)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, RootCommandBtn1, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, RootCommandBtn2, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, RootCommandBtn3, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, RootCommandBtn4, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, ChildCommandBtn1, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, ChildCommandBtn2, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, ChildCommandBtn3, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, ChildCommandBtn4, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, ChangeListLeftBtn, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, ChangeListRightBtn, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, SkillCoopBtn, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, UnSetText, 0x05C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, WL_AllNut, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, WL_Img_Base_Title, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, WL_Title00, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, WL_Title01, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, WL_Title02, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, WL_Btn_Plat00, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, WL_Btn_Plat01, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, WL_SkillCoopBar, 0x0600);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, WL_CommandRootPnl, 0x0608);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, WL_CommandRootCtn, 0x0610);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, WL_CommandChildPnl, 0x0630);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, WL_CommandChildCtn, 0x0638);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, WL_SupportCtnPnl, 0x0658);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, WL_SupportCtn, 0x0660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, WA_AnimCtn, 0x0670);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, WL_SkillName, 0x0700);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, OwnerChar, 0x0708);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, SkillCmp, 0x0710);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, SkillMngIns, 0x0718);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, PartyIns, 0x0720);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, ItemMngIns, 0x0728);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, UnknownData_GA78, 0x0730);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, IconCtn, 0x0770);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPalette, UnknownData_0U8Z, 0x07F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICommandPalette, 0x0C58);
		}

		// class UAT_UICommandPaletteSkillCoopBar : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UICommandPaletteSkillCoopBar)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteSkillCoopBar, UnknownData_FNNG, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteSkillCoopBar, WL_AllNut, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteSkillCoopBar, WL_TextList, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteSkillCoopBar, WL_Btn_Plat00, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteSkillCoopBar, WL_Pnl_Btn, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteSkillCoopBar, WA_Enter, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteSkillCoopBar, WA_Loop, 0x03E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICommandPaletteSkillCoopBar, 0x03E8);
		}

		// class UAT_UICommandPaletteBar : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UICommandPaletteBar)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteBar, WL_AllNut, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteBar, WL_InsBaseList01, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteBar, WL_TxtList, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteBar, WL_Btn_Plat00, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteBar, WL_Pnl_Btn, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteBar, WL_PnlIcon, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteBar, WL_InsBaseIconSkill, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteBar, WL_IconSkill, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteBar, WL_TxtNumCost, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteBar, WL_IconItem, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteBar, WA_Enter, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteBar, WA_Enter01, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteBar, UnknownData_EXUI, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteBar, CostFontDynamicMat, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteBar, TxtListFontDynamicMat, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteBar, TxtListOutlineDynamicMat, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteBar, WL_InsIconRare00, 0x0438);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICommandPaletteBar, 0x0440);
		}

		// class UAT_UICommandPaletteBarSpo : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UICommandPaletteBarSpo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteBarSpo, WL_PnlIconChar, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteBarSpo, WL_InsMaskCharSpo, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteBarSpo, WL_PnlNameSpo, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteBarSpo, WL_TxtNameSpo, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteBarSpo, WL_InsBaseNameSpo, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteBarSpo, WL_BattleCommandList00, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteBarSpo, WL_BattleCommandList01, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommandPaletteBarSpo, SupportFontDynamicMat, 0x03E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICommandPaletteBarSpo, 0x03F0);
		}

		// class UAT_UICommuLv : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UICommuLv)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommuLv, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommuLv, Image_Group, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommuLv, Image_Gauge, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommuLv, TextBox_Level, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommuLv, TextBox_LevelMax, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommuLv, Widget_New, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommuLv, UnknownData_0V4K, 0x03A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICommuLv, 0x03C0);
		}

		// class UAT_UICommunityBoard : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UICommunityBoard)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, UnknownData_5GOO, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, EditCursorSpeed, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, PanelScaleNormal, 0x03CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, PanelScaleLeader, 0x03D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, LineYScale, 0x03DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, bAsyncFrameScale, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, BaseCategory, 0x03E1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, UnknownData_MJ1H, 0x03E2);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, GridIntervalCooking, 0x03E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, GridIntervalTraining, 0x03EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, GridIntervalDevelop, 0x03F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, GridIntervalGods, 0x03FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, GridIntervalAdult, 0x0404);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, GridIntervalAdventure, 0x040C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, GridIntervalZfighters, 0x0414);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, FrameAverageScale, 0x041C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, CursorAdjust, 0x0424);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, FramePadding, 0x042C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, HitRange, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, LeaderHitRange, 0x0434);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, HitBaseOffset, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, LeaderHitBaseOffset, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, DT_LinkBonusVoice, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, DT_LinkBonusVoiceProgress, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, WL_AllNut, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, WL_XcmnTab, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, WL_PnlCurs, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, WL_XcmnEmb00, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, WL_BrdFrame, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, WL_XmenuBg, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, WL_CommuBrdDetail, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, WA_In, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, WA_Out, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, WA_ChangeIn, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, WA_ChangeOut, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, WL_Ins_Win_Bg00, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, WL_Dmy_Bg, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, UnknownData_6HKF, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, TargetCommBoradIns, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, LinkBonusSubtitles, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, UnknownData_4KHA, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, GameMode, 0x05B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, MenuMngIns, 0x05C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, CommMngIns, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, UICommMngIns, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, TargetBoard, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, KeyHelpIns, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, StartTopIns, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, UICmnInputIns, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, UICmnHeaderIns, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, EmbDetailIns, 0x0600);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, LinkBonusVoiceWait, 0x0608);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard, UnknownData_IFT1, 0x060C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICommunityBoard, 0x0668);
		}

		// class UAT_UICommunityBoard_Panel : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UICommunityBoard_Panel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, UnknownData_UXL7, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, LeaderLinkPlusScale, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, PointerCenterOffset, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WL_Emb_Pedestal, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WL_Emb_Pedestal_L, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WL_Emblem, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WL_Emb_Eff_Connect, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WL_Emb_Eff_LinkBonusRing, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WL_Emb_Eff_LinkBonusWellUp, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WL_Lv, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WL_Plus_Lv, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WL_Ins_Emb_Pedestal_Eff00_L, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WA_Pedestal_Connect_In, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WA_Pedestal_Connect_Loop, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WA_Pedestal_Connect_Out, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WA_Pedestal_LinkBounus_In, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WA_Pedestal_LinkBounus_Loop, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WA_Pedestal_LinkBounus_Out, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WA_LvNumIn, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WA_LvNumOut, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WA_BonusNumIn, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WA_BonusNumOut, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WA_PedestalIn, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WA_PedestalAndEmbIn, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WA_PedestalAndEmbLinkIn, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WA_EmbSet, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WA_EmbOut, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WA_Release, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WL_Img_Emb_Shdw00, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WL_Ins_Emb_Columns00_01, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WL_Pnl_Panel_Eff, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WL_Ins_Xef_Fad10_01, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WL_Img_Emblem_Shdw, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WL_Ins_Icon_Group, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WL_Pnl_Pedestal_Cmn, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WL_Pnl_Pedestal_Leader, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, WL_Ins_Icon_Leader, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, UnknownData_87FG, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, PanelLinkInfo, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, UnknownData_0AQ8, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, ActiveAnim, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_Panel, UnknownData_YMGM, 0x0548);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICommunityBoard_Panel, 0x0558);
		}

		// class UAT_UICommunityBoard_LinkLine : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UICommunityBoard_LinkLine)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_LinkLine, WL_Eff_AllPanel, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_LinkLine, WL_Pnl_Eff, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_LinkLine, WL_Eff_In00, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_LinkLine, WL_Eff_Com00, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_LinkLine, WL_Eff_ConnNormal, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_LinkLine, WL_Eff_ConnLink, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_LinkLine, WL_LineIns, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_LinkLine, WA_BaseIn, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_LinkLine, WA_BaseOut, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_LinkLine, WA_ConnNormalIn, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_LinkLine, WA_ConnNormalOut, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_LinkLine, WA_ConnLinkIn, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_LinkLine, WA_ConnLinkOut, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_LinkLine, WA_ConnLinkOnNormIn, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_LinkLine, WA_ConnLinkOnNormOut, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_LinkLine, WL_Ins_Xef_Sprk02_R, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_LinkLine, WL_Ins_Xef_Sprk02_L, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_LinkLine, WL_Ins_Xef_Sprk03_R, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_LinkLine, WL_Ins_Xef_Sprk03_L, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_LinkLine, WL_Ins_Xef_Elc_Anm00, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_LinkLine, UnknownData_LPL3, 0x0450);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICommunityBoard_LinkLine, 0x0490);
		}

		// class UAT_UICommunityBoard_PanelFrame : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UICommunityBoard_PanelFrame)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, UnknownData_TKQZ, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, CurRangeAdjustZfighters, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, CurRangeAdjustCooking, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, CurRangeAdjustTraining, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, CurRangeAdjustDevelop, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, CurRangeAdjustGods, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, CurRangeAdjustAdult, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, CurRangeAdjustAdventure, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, CurTraningInPosAdjust, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, CurTraningOutToCookPosAdjust, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, CurTraningOutToDevPosAdjust, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, CurAdjustFromList, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, PanelOffsetCooking, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, PanelOffsetTraining, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, PanelOffsetDevelop, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, PanelOffsetGods, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, PanelOffsetAdult, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, PanelOffsetAdventure, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, PanelOffsetZfighters, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, UnknownData_XYAB, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, bDebugPrint, 0x04F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, UnknownData_US8B, 0x04F5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, WL_Pnl_Contents, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, WL_Pnl_Contents_Parts, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, WL_PanelBase, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, WL_ConnectionLineBase, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, WL_ConnectionLineBaseSlot, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, WL_PanelTbl, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, WL_ConnLineCtrlIns, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, WL_PanelCursor, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, WL_Img_Curs_Fing00, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, WL_Img_Curs_Fing01, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, WL_EmbCursorFrame, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, WL_BgImg, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, WL_BgImgList, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, WA_BgIn, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, WA_BgOut, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, WA_EmbChange, 0x05B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, WA_EmbSet, 0x05C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, WA_EmbGet, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, CommMngIns, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, SelectBrdIns, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, LinkBonusIns, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, OwnerWidget, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, UnknownData_WWIU, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, LoadBgImgMap, 0x0840);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoard_PanelFrame, UnknownData_KEX5, 0x0890);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICommunityBoard_PanelFrame, 0x0930);
		}

		// class UAT_UICommunityBoardDetail : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UICommunityBoardDetail)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, GaugeBlendExp, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, GaugeAnimTime, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, WL_Ins_Icon_Group00, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, WL_Ins_Gauge_Cmn00, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, WL_Pnl_Panle_Eff, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, WL_Txt_Titl00, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, WL_Txt_Level_Num00, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, WL_Txt_Level_Num01, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, WL_Pnl_R_Num00_01, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, WL_Txt_Rank, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, WL_Txt_Rank_Num00_00, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, WL_Txt_Rank_Num00_01, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, WL_Brd_Activ_Skill00, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, WL_Brd_Activ_Skill01, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, WL_Brd_Activ_Skill02, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, WL_GaugeMat, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, WL_Txt_Level00, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, WL_Txt_Level01, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, WL_Txt_Skill_Header00, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, WL_Txt_Skill_Header01, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, WL_SkillParts, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, WA_RankUp, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, WA_RankDown, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, WA_RankLoop, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, UnknownData_0OAD, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, CommMng, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, TargetBrd, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetail, UnknownData_WVJX, 0x04C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICommunityBoardDetail, 0x05C8);
		}

		// class UAT_UICommunityBoardDetailSkillParts : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UICommunityBoardDetailSkillParts)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetailSkillParts, WL_Pnl_Skill, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetailSkillParts, WL_Txt_Skill, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetailSkillParts, WL_Pnl_Skill_Act, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetailSkillParts, WL_Txt_Skill_Act, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetailSkillParts, WL_Pnl_Num, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetailSkillParts, WL_Txt_Num, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetailSkillParts, WL_Pnl_Num_Act, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetailSkillParts, WL_Txt_Num_Act, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetailSkillParts, WL_Pnl_Eff, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetailSkillParts, WA_On, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetailSkillParts, WA_Off, 0x0400);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICommunityBoardDetailSkillParts, 0x0408);
		}

		// class UAT_UICommunityBoardDetailActiveSkillParts : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UICommunityBoardDetailActiveSkillParts)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetailActiveSkillParts, WL_Txt_Activ_Skill, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetailActiveSkillParts, WA_In, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityBoardDetailActiveSkillParts, WA_Out, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICommunityBoardDetailActiveSkillParts, 0x03C8);
		}

		// class UAT_UICommunityManager : public UBaseObject
		TEST_METHOD(Class__AT__AT_UICommunityManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityManager, UnknownData_PJOR, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityManager, UICommBrdIns, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityManager, UIEmbListIns, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityManager, CommSysMng, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityManager, SoulEmInsList, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityManager, MenuSoulEmListIns, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityManager, MenuCommunityBrdIns, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityManager, XCmnEmbGetIns, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityManager, LoadMapEmbToP_D, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityManager, LoadMapPtoEmb_D, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityManager, LoadMapEmbToP_Ev, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityManager, LoadMapPtoEmb_Ev, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityManager, IconMapD, 0x01D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityManager, IconMapEv, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityManager, UnknownData_2CMG, 0x0278);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityManager, UILoaderAsset, 0x0290);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityManager, UITextureLoader, 0x0298);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityManager, UnknownData_W0CE, 0x02A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICommunityManager, 0x02B8);
		}

		// class UAT_UICommunityStart : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UICommunityStart)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart, UnknownData_6LC2, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart, EmbList, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart, CanvasAllNut, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart, AnimIn, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart, AnimLoop, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart, AnimOut, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart, ImageCurrentPage, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart, ImageMaxPage, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart, WidgetArrowR, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart, WidgetArrowL, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart, WidgetHeader, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart, AllXcmnHeader, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart, UnknownData_HXFH, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart, XcmnBgL, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart, XcmnBgR, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart, UICommMngIns, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart, UnknownData_W6B3, 0x0400);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICommunityStart, 0x0410);
		}

		// class UAT_UICommunityStart_EmbList : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UICommunityStart_EmbList)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart_EmbList, AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart_EmbList, EmbAry, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart_EmbList, AnimInR, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart_EmbList, AnimOutR, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart_EmbList, AnimInL, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart_EmbList, AnimOutL, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart_EmbList, UnknownData_W3TX, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart_EmbList, PageChangeType, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart_EmbList, UnknownData_OMVY, 0x03C9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart_EmbList, SoulEmblemAry, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart_EmbList, CommunityManager, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityStart_EmbList, UnknownData_GKXW, 0x03E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICommunityStart_EmbList, 0x03F0);
		}

		// class UAT_UICompZPartsBase : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UICompZPartsBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZPartsBase, 0x0370);
		}

		// class UAT_UICompZBgm : public UAT_UICompZPartsBase
		TEST_METHOD(Class__AT__AT_UICompZBgm)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZBgm, TextBox_Contents, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZBgm, ListController, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZBgm, 0x0380);
		}

		// class UAT_UICompZCds : public UAT_UICompZPartsBase
		TEST_METHOD(Class__AT__AT_UICompZCds)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZCds, CardAnimationTime, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZCds, CardAnimationExp, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZCds, CardVerticalAngle, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZCds, CardHorizontalAngle, 0x037C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZCds, CardPremiumName, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZCds, UnknownData_3LJR, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZCds, ItemList, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZCds, ParamList, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZCds, TextBoxCaterory, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZCds, PnlAllChoice, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZCds, CompZListCardChoice, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZCds, PnlDetail, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZCds, TxtTitleDetail, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZCds, TxtDetail, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZCds, UICompZCurs, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZCds, InChoice, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZCds, OutChoice, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZCds, PairPage, 0x0460);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZCds, 0x0468);
		}

		// class UAT_UICompZCurs : public UAT_UICompZPartsBase
		TEST_METHOD(Class__AT__AT_UICompZCurs)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZCurs, Canvas_Full, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZCurs, Canvas_Half, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZCurs, Anim_In, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZCurs, Anim_Loop, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZCurs, Anim_Out, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZCurs, UnknownData_GXUN, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZCurs, 0x03A0);
		}

		// class UAT_UICompZDemo : public UAT_UICompZPartsBase
		TEST_METHOD(Class__AT__AT_UICompZDemo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZDemo, UnknownData_KV86, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZDemo, TextBox_Contents, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZDemo, Item_List, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZDemo, Param_List, 0x03B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZDemo, 0x03C0);
		}

		// class UAT_UICompZItems : public UAT_UICompZPartsBase
		TEST_METHOD(Class__AT__AT_UICompZItems)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZItems, TextBox_Contents, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZItems, TextBox_Items, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZItems, ListController, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZItems, All_Category01, 0x0388);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZItems, 0x0390);
		}

		// class UAT_UICompZList : public UAT_UICompZPartsBase
		TEST_METHOD(Class__AT__AT_UICompZList)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZList, UnknownData_MZ90, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZList, Canvas_Cursor, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZList, Image_Icon, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZList, Image_UnderScore, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZList, TextBox_Label, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZList, TextBox_Num, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZList, Widget_New, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZList, Anim_Loop, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZList, Anim_Enter, 0x03B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZList, 0x03B8);
		}

		// class UAT_UICompZListController : public UObject
		TEST_METHOD(Class__AT__AT_UICompZListController)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListController, UnknownData_1T7U, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListController, Item_List, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListController, Param_List, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZListController, 0x0050);
		}

		// class UAT_UICompZListBgm : public UAT_UICompZPartsBase
		TEST_METHOD(Class__AT__AT_UICompZListBgm)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListBgm, UnknownData_B39X, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListBgm, Canvas_Cursor, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListBgm, Image_Speaker, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListBgm, Image_Playing, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListBgm, Image_UnderScore, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListBgm, TextBox_Label, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListBgm, Widget_New, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListBgm, Anim_Loop, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListBgm, Anim_Enter, 0x03B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZListBgm, 0x03B8);
		}

		// class UAT_UICompZListBgmController : public UObject
		TEST_METHOD(Class__AT__AT_UICompZListBgmController)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListBgmController, UnknownData_EHP8, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListBgmController, Item_List, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListBgmController, Param_List, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZListBgmController, 0x0050);
		}

		// class UAT_UICompZListCds : public UAT_UICompZPartsBase
		TEST_METHOD(Class__AT__AT_UICompZListCds)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListCds, EffSlaAnimationIntervalTimeMin, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListCds, EffSlaAnimationIntervalTimeMax, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListCds, UnknownData_AL2K, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListCds, PnlListCds, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListCds, PnlEffect, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListCds, DmyCard, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListCds, ImageLock, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListCds, ImageLine, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListCds, ImageLineEffect00, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListCds, ImageLineEffect01, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListCds, WidgetNew, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListCds, WidgetLoading, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListCds, InsEffCdsShadow, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListCds, UICompZCurs, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListCds, EnterAnimation, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListCds, EffSla, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListCds, EffSlaSide, 0x0468);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZListCds, 0x0470);
		}

		// class UAT_UICompZListDemo : public UAT_UICompZPartsBase
		TEST_METHOD(Class__AT__AT_UICompZListDemo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListDemo, UnknownData_LCQ9, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListDemo, Canvas_Chapter, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListDemo, Canvas_Episode, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListDemo, Image_Lock, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListDemo, Image_Scene, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListDemo, Image_Play, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListDemo, Image_Cursor, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListDemo, TextBox_Chapter, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListDemo, TextBox_Episode, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListDemo, Widget_New, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListDemo, Widget_Loading, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListDemo, UICompZCurs, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListDemo, Anim_Loop, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZListDemo, Anim_Enter, 0x0430);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZListDemo, 0x0438);
		}

		// class UAT_UICompZPageBase : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UICompZPageBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageBase, UnknownData_EH34, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageBase, RenderTarget, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageBase, Panel_Page, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageBase, UICompZCurs, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageBase, AnimateParts_List, 0x0420);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZPageBase, 0x0430);
		}

		// class UAT_UICompZPageDetailBase : public UAT_UICompZPageBase
		TEST_METHOD(Class__AT__AT_UICompZPageDetailBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageDetailBase, m_AllNut, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageDetailBase, m_Name, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageDetailBase, m_Category, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageDetailBase, m_Cursor, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageDetailBase, UnknownData_3NQZ, 0x0450);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZPageDetailBase, 0x0460);
		}

		// class UAT_UICompZPage3D : public UAT_UICompZPageDetailBase
		TEST_METHOD(Class__AT__AT_UICompZPage3D)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPage3D, MaxPitch, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPage3D, RotateSpeed, 0x0464);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPage3D, m_Capture, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPage3D, m_Dummy, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPage3D, UnknownData_H1DA, 0x0478);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZPage3D, 0x04C8);
		}

		// class UAT_UICompZPageBgm : public UAT_UICompZPageBase
		TEST_METHOD(Class__AT__AT_UICompZPageBgm)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageBgm, UnknownData_FJDB, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageBgm, UICompZBgm, 0x0438);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZPageBgm, 0x0440);
		}

		// class UAT_UICompZPageCds : public UAT_UICompZPageBase
		TEST_METHOD(Class__AT__AT_UICompZPageCds)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageCds, UnknownData_FQQ9, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageCds, UICompZCds, 0x0438);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZPageCds, 0x0440);
		}

		// class UAT_UICompZPageContents : public UAT_UICompZPageBase
		TEST_METHOD(Class__AT__AT_UICompZPageContents)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageContents, TextBox_Title, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageContents, ListController, 0x0438);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZPageContents, 0x0440);
		}

		// class UPanelCharacter : public UObject
		TEST_METHOD(Class__AT__PanelCharacter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPanelCharacter, CharacterPanel, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPanelCharacter, TextNameChar, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPanelCharacter, CloudPanel, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPanelCharacter, 0x0040);
		}

		// class URelatedLine : public UObject
		TEST_METHOD(Class__AT__RelatedLine)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::URelatedLine, LineNameText, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URelatedLine, 0x0030);
		}

		// class UAT_UICompZPageCorrelationBase : public UAT_UICompZPageBase
		TEST_METHOD(Class__AT__AT_UICompZPageCorrelationBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageCorrelationBase, ZoomTime, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageCorrelationBase, MoveSpeed, 0x0434);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageCorrelationBase, ZoomRate, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageCorrelationBase, MoveLimitAreaMin, 0x043C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageCorrelationBase, MoveLimitAreaMax, 0x0444);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageCorrelationBase, UnknownData_X1PY, 0x044C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageCorrelationBase, Category, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageCorrelationBase, LangChapLogo, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageCorrelationBase, LangChapDummy, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageCorrelationBase, LangIconVs, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageCorrelationBase, LangIconVs00, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageCorrelationBase, LangIconVs01, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageCorrelationBase, CompZPartsTempL, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageCorrelationBase, BookActor, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageCorrelationBase, PanelCharacterMap, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageCorrelationBase, RelatedLineMap, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageCorrelationBase, VSIconPath, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageCorrelationBase, EpisodeLogoPath, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageCorrelationBase, UnknownData_JV2G, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageCorrelationBase, TimerHandle, 0x0580);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZPageCorrelationBase, 0x0588);
		}

		// class UAT_UICompZPageCorrelationBuu : public UAT_UICompZPageCorrelationBase
		TEST_METHOD(Class__AT__AT_UICompZPageCorrelationBuu)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZPageCorrelationBuu, 0x0588);
		}

		// class UAT_UICompZPageCorrelationCell : public UAT_UICompZPageCorrelationBase
		TEST_METHOD(Class__AT__AT_UICompZPageCorrelationCell)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZPageCorrelationCell, 0x0588);
		}

		// class UAT_UICompZPageCorrelationFreeza : public UAT_UICompZPageCorrelationBase
		TEST_METHOD(Class__AT__AT_UICompZPageCorrelationFreeza)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZPageCorrelationFreeza, 0x0588);
		}

		// class UAT_UICompZPageCorrelationSaiyan : public UAT_UICompZPageCorrelationBase
		TEST_METHOD(Class__AT__AT_UICompZPageCorrelationSaiyan)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZPageCorrelationSaiyan, 0x0588);
		}

		// class UAT_UICompZPageDemo : public UAT_UICompZPageBase
		TEST_METHOD(Class__AT__AT_UICompZPageDemo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageDemo, UnknownData_ZJJ1, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageDemo, UICompZDemo, 0x0438);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZPageDemo, 0x0440);
		}

		// class UAT_UICompZPageDetail : public UAT_UICompZPageDetailBase
		TEST_METHOD(Class__AT__AT_UICompZPageDetail)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageDetail, m_Detail, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageDetail, UnknownData_GDRD, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageDetail, m_VoiceUI, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageDetail, UnknownData_ZUNX, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageDetail, VoiceWindowClass, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageDetail, MinimumVoicePlayTime, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageDetail, UnknownData_03HP, 0x04AC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZPageDetail, 0x04B0);
		}

		// class UAT_UICompZPageImg : public UAT_UICompZPageDetailBase
		TEST_METHOD(Class__AT__AT_UICompZPageImg)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageImg, m_Loading, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageImg, m_Image, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageImg, m_ImageMemory, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageImg, UnknownData_P0E7, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageImg, TargetID, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageImg, ImageTex, 0x0488);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZPageImg, 0x0490);
		}

		// class UAT_UICompZPageItems : public UAT_UICompZPageBase
		TEST_METHOD(Class__AT__AT_UICompZPageItems)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageItems, UnknownData_KPPH, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageItems, UICompZItems, 0x0438);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZPageItems, 0x0440);
		}

		// class UAT_UICompZPageMemo : public UAT_UICompZPageBase
		TEST_METHOD(Class__AT__AT_UICompZPageMemo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageMemo, UnknownData_291T, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageMemo, VBox_List, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageMemo, TextBox_Title, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageMemo, TextBox_Memo, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageMemo, ListController, 0x0450);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZPageMemo, 0x0458);
		}

		// class UAT_UICompZPartsDetail : public UAT_UICompZPartsBase
		TEST_METHOD(Class__AT__AT_UICompZPartsDetail)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPartsDetail, m_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPartsDetail, m_Title, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPartsDetail, m_Text, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPartsDetail, m_TextCond, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPartsDetail, m_New, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPartsDetail, m_Key, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZPartsDetail, 0x03A0);
		}

		// class UAT_UICompZPartsIconNavi : public UAT_UICompZPartsBase
		TEST_METHOD(Class__AT__AT_UICompZPartsIconNavi)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPartsIconNavi, m_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPartsIconNavi, m_InAnim, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZPartsIconNavi, 0x0380);
		}

		// class UAT_UICompZPartsName : public UAT_UICompZPartsBase
		TEST_METHOD(Class__AT__AT_UICompZPartsName)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPartsName, m_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPartsName, m_Name, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPartsName, m_Icon, 0x0380);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZPartsName, 0x0388);
		}

		// class UAT_UICompZPartsTempL : public UAT_UICompZPartsBase
		TEST_METHOD(Class__AT__AT_UICompZPartsTempL)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPartsTempL, m_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPartsTempL, m_Text, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZPartsTempL, 0x0380);
		}

		// class UAT_UICompZPageTempL : public UAT_UICompZPageBase
		TEST_METHOD(Class__AT__AT_UICompZPageTempL)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICompZPageTempL, UICompZTempL, 0x0430);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICompZPageTempL, 0x0438);
		}

		// class UAT_UICookingComplete : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UICookingComplete)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingComplete, WL_AllNut, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingComplete, WL_Xcmn_Fade_Black, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingComplete, WL_Text, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingComplete, WL_CompCmn, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingComplete, WL_All_Comp00, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingComplete, WL_All_Comp00_Eff, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingComplete, WL_All_S_Comp00, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingComplete, WL_All_S_Comp00_Eff, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingComplete, WL_CompAnim, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingComplete, WL_SpCompAnim, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingComplete, ActiveAnim, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingComplete, WL_All_Eff, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingComplete, WL_Deco_Cook, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingComplete, WL_Deco_Dev, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingComplete, WL_Pnl_Training, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingComplete, NormalCompleteTitleImage, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingComplete, NormalCompleteEffectImage, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingComplete, SuperCompletePrefixImage, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingComplete, SuperCompletePrefixEffectImage, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingComplete, SuperCompleteTitleImage, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingComplete, SuperCompleteTitleEffectImage, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingComplete, UnknownData_LSES, 0x0458);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICookingComplete, 0x0688);
		}

		// class UAT_UICookingEffect : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UICookingEffect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffect, RedMatInsS, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffect, RedMatInsM, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffect, RedMatInsL, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffect, BlueMatInsS, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffect, BlueMatInsM, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffect, BlueMatInsL, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffect, GreenMatInsS, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffect, GreenMatInsM, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffect, GreenMatInsL, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffect, PurpleMatInsS, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffect, PurpleMatInsM, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffect, PurpleMatInsL, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffect, ArrowWidgetS, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffect, ArrowWidgetM, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffect, ArrowWidgetL, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffect, WL_All_Nut, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffect, WL_All_Cook_Eff, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffect, WL_ArrowS, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffect, WL_ArrowM, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffect, WL_ArrowL, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffect, UnknownData_IXXF, 0x0528);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICookingEffect, 0x0708);
		}

		// class UAT_UICookingEffectArrow : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UICookingEffectArrow)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffectArrow, UnknownData_O1GW, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffectArrow, WL_Owner, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffectArrow, WL_AllNut, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffectArrow, WL_ArrowImg, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffectArrow, WL_Txt_Eff_R, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffectArrow, WL_Txt_Eff_B, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffectArrow, WL_Txt_Eff_G, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffectArrow, WL_Txt_Eff_P, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffectArrow, WL_Txt_Eff_Shdw, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingEffectArrow, WA_AllowAnim, 0x03F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICookingEffectArrow, 0x0400);
		}

		// class UAT_UICookingMenu : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UICookingMenu)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, CloseDelegate, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, UnknownData_8XAC, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, Ins_Icon_Rare00, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, WL_AnimMenuIn, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, WL_AnimMenuOut, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, WL_Xmenu_Arrow_L_StartAnim, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, WL_Xmenu_Arrow_R_StartAnim, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, Xmenu_Bg, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, All_Shop_Cook, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, Xcmn_Tab, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, Xmenu_Arrow_L, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, Xmenu_Arrow_R, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, WL_Xcmn_Icon, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, WL_Xcmn_Icon_PnlOn_Tbl, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, WL_PlayerCommunityRankStar, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, WL_PlayerCommunityRankNum, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, WL_CookingComp, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, WL_CookingEffect, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, WL_CookingResult, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, WL_CookingTop, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, Txt_Cap04, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, Start_Item_Win00, 0x0600);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, GameMode, 0x0608);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, UnknownData_IGAP, 0x0610);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, CookMenuList, 0x0650);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, UnknownData_J90V, 0x0658);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, RecipeImgTbl, 0x06A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, RecipeMasterIdList, 0x06F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenu, UnknownData_R7L1, 0x0708);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICookingMenu, 0x0738);
		}

		// class UAT_UICookingMenuShopList : public UObject
		TEST_METHOD(Class__AT__AT_UICookingMenuShopList)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenuShopList, GameMode, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenuShopList, WL_Owner, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenuShopList, WL_Shop_Cmn_List, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenuShopList, WL_Shop_Cmn_List_All_Nut, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenuShopList, WL_Shop_Cmn_List_AnimIn, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenuShopList, WL_Shop_Cmn_List_AnimOut, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenuShopList, WL_Txt_GenreTitle, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenuShopList, UnknownData_U8AJ, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenuShopList, WL_CookWin_Cap_Title, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenuShopList, WL_CookWin_Cap_Icon, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenuShopList, WL_CookWin_Cap_Effect, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenuShopList, WL_CookWin_Cap_EffectTime, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenuShopList, WL_CookWin_Cap_Food, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenuShopList, WL_CookWin_Detail_Effect, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenuShopList, WL_CookWin_Detail_PerpetualBuff, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenuShopList, WL_CookWin_Detail_EffectTime, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenuShopList, WL_CookWin_Detail_Description, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenuShopList, WL_CookWin_Cook_Img, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenuShopList, WL_Ins_Icon_Rare00, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenuShopList, UnknownData_ROQS, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenuShopList, WL_ScrollBar, 0x05C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingMenuShopList, UnknownData_USAR, 0x05C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICookingMenuShopList, 0x0800);
		}

		// class UAT_UICookingResult : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UICookingResult)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingResult, AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingResult, AnmCtn, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingResult, TextBoxCtn, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICookingResult, UnknownData_6Q80, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICookingResult, 0x03B8);
		}

		// class UAT_UICutinLevelUp : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UICutinLevelUp)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICutinLevelUp, CanvasAllNut, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICutinLevelUp, CutinLevelUp_Lang, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICutinLevelUp, HashCutinLevelUp_Lang, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICutinLevelUp, UnknownData_HBC3, 0x03C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICutinLevelUp, PathCutinLevelUp_Lang, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICutinLevelUp, HudInfo, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICutinLevelUp, BeforeLevel, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICutinLevelUp, UnknownData_KO5L, 0x03E4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICutinLevelUp, 0x0408);
		}

		// class UAT_UICutinLevelUp_Lang : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UICutinLevelUp_Lang)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICutinLevelUp_Lang, AnimStart, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICutinLevelUp_Lang, XefShine00, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICutinLevelUp_Lang, XefShine01, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICutinLevelUp_Lang, UnknownData_UUDU, 0x03C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICutinLevelUp_Lang, 0x03E8);
		}

		// class UAT_UIDamagePop : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIDamagePop)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIDamagePop, DAMAGE_HIT_DISP_DIRECTION, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIDamagePop, UnknownData_FY5A, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIDamagePop, WL_All_Nut, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIDamagePop, WL_Num_Dmg_Img, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIDamagePop, WL_Num_Dmg_Eff_Img, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIDamagePop, PlayerHitMat, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIDamagePop, EnemyHitMat, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIDamagePop, CriticalHitMat, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIDamagePop, WL_Img_Lang_Critical, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIDamagePop, WL_Ins_Lang_Critical, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIDamagePop, UnknownData_P0ZA, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIDamagePop, NumMaterialCtn, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIDamagePop, AnimCtn, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIDamagePop, UnknownData_LFK4, 0x04B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIDamagePop, 0x04F0);
		}

		// class UAT_UIDamagePopManager : public UBaseObject
		TEST_METHOD(Class__AT__AT_UIDamagePopManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIDamagePopManager, DamagePopList, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIDamagePopManager, DamagePopListOverflowSave, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIDamagePopManager, UnknownData_NOBA, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIDamagePopManager, 0x0088);
		}

		// class UAT_UIDebug : public UObject
		TEST_METHOD(Class__AT__AT_UIDebug)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIDebug, UnknownData_0UYW, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIDebug, UICtn, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIDebug, UIExCtn, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIDebug, UnknownData_T55D, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIDebug, FieldMng, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIDebug, BtlMng, 0x0260);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIDebug, 0x0268);
		}

		// class UAT_UIDemoSkipDialog : public UObject
		TEST_METHOD(Class__AT__AT_UIDemoSkipDialog)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIDemoSkipDialog, UnknownData_5WUP, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIDemoSkipDialog, 0x0058);
		}

		// class UAT_UIEncEmo : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIEncEmo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncEmo, UnknownData_3IER, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncEmo, WL_All_Nut, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncEmo, WL_Pnl_All_Enc_Emo, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncEmo, WL_Img_Enc_Emo, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncEmo, WL_Img_Enc_Emo_Add, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncEmo, WL_Img_Enc_Emo_Eff00, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncEmo, WL_Img_Enc_Emo_Eff01, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncEmo, WL_Pnl_All_Enc_Emo_Slot, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncEmo, WL_Img_Enc_Emo_Slot, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncEmo, AnimCtn, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncEmo, ActiveAnim, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncEmo, HudInfo, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncEmo, UnknownData_V861, 0x0418);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIEncEmo, 0x0430);
		}

		// class UAT_UIEncEmoManager : public UBaseObject
		TEST_METHOD(Class__AT__AT_UIEncEmoManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncEmoManager, EncEmoInstance, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIEncEmoManager, 0x0080);
		}

		// class UChildWidgetControlData : public UObject
		TEST_METHOD(Class__AT__ChildWidgetControlData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UChildWidgetControlData, IsChangedPosition, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChildWidgetControlData, UnknownData_51NA, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChildWidgetControlData, WorkPosition, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChildWidgetControlData, NewPosition, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChildWidgetControlData, IsChangedRotation, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChildWidgetControlData, UnknownData_H3OH, 0x003D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChildWidgetControlData, NewRotation, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChildWidgetControlData, IsChangedVisibility, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChildWidgetControlData, bNewBodyVisible, 0x0045);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChildWidgetControlData, IsChangedArrowVisibility, 0x0046);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChildWidgetControlData, bNewArrowVisible, 0x0047);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChildWidgetControlData, IsChangedDistance, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChildWidgetControlData, UnknownData_EZWB, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChildWidgetControlData, NewDistance, 0x004C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UChildWidgetControlData, 0x0050);
		}

		// class UAT_UIEncounterDirection : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIEncounterDirection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterDirection, CanvasTarget, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterDirection, Length, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterDirection, NearLength, 0x03BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterDirection, ChildWidgetClass, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterDirection, ChildWidgetAry_Enemy, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterDirection, ChildWidgetCtrlAry_Enemy, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterDirection, CollisionInRangeAry, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterDirection, UnknownData_DBRA, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterDirection, HitTestRectCtn, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterDirection, UnknownData_N2DI, 0x0410);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIEncounterDirection, 0x0448);
		}

		// class UAT_UIEncounterDirectionChild : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIEncounterDirectionChild)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterDirectionChild, ChildRotateTarget, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterDirectionChild, ChildTextTarget, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterDirectionChild, ArrowMaterialAry, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterDirectionChild, ArrowImageName, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterDirectionChild, InFadeTime, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterDirectionChild, OutFadeTime, 0x039C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterDirectionChild, InitDirectionType, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterDirectionChild, FadeFlag, 0x03A1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterDirectionChild, UnknownData_RQII, 0x03A2);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterDirectionChild, Alpha, 0x03A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterDirectionChild, UnknownData_QSF7, 0x03A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIEncounterDirectionChild, 0x03B0);
		}

		// class UAT_UIEncounterHud : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIEncounterHud)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterHud, SubHudCoreClass, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterHud, AllNut, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterHud, AllBase, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterHud, HudIconCtn, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterHud, UnknownData_1NJ4, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIEncounterHud, 0x03F0);
		}

		// class UAT_UIEncounterHudCore : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIEncounterHudCore)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterHudCore, CharaIconCtn, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterHudCore, InAnim, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterHudCore, OutAnim, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterHudCore, LoopAnim, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterHudCore, CharacterIconPanel00, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterHudCore, CharacterIconPanel01, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterHudCore, CharacterIconPanel03, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterHudCore, Txt_Level, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterHudCore, ParentWidget, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterHudCore, UnknownData_MNVA, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIEncounterHudCore, 0x03E8);
		}

		// class UAT_UIEncounterCharaIcon : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIEncounterCharaIcon)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterCharaIcon, CharaIcon, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterCharaIcon, CharaNum, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEncounterCharaIcon, UnknownData_OBB4, 0x0380);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIEncounterCharaIcon, 0x0388);
		}

		// class UAT_UIStateIconCtnBase : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStateIconCtnBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStateIconCtnBase, UnknownData_K603, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStateIconCtnBase, WL_StateIcon, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStateIconCtnBase, WL_StateIconSlot, 0x0600);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStateIconCtnBase, WL_All_Icon_State, 0x0688);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStateIconCtnBase, bSelfTimerOn, 0x0690);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStateIconCtnBase, UnknownData_5YJO, 0x0691);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStateIconCtnBase, 0x0728);
		}

		// class UAT_UIEnemyStateIcon : public UAT_UIStateIconCtnBase
		TEST_METHOD(Class__AT__AT_UIEnemyStateIcon)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEnemyStateIcon, bNativeTickForceTrue, 0x0728);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEnemyStateIcon, UnknownData_YRP0, 0x0729);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIEnemyStateIcon, 0x0738);
		}

		// class UAT_UIEvaluation : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIEvaluation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEvaluation, EvalImage, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEvaluation, EvalImageEff, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEvaluation, AnimCtn, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIEvaluation, UnknownData_P2Y0, 0x03E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIEvaluation, 0x03F0);
		}

		// class UAT_UIFieldBGM : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIFieldBGM)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldBGM, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldBGM, TextBox_Area, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldBGM, Anim_InBGM, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldBGM, Anim_OutBGM, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldBGM, Anim_ChangeBGM, 0x0390);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIFieldBGM, 0x0398);
		}

		// class UAT_UIFieldCursor : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIFieldCursor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldCursor, UnknownData_PRLL, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldCursor, AllNut, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldCursor, AllFieldCurs, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldCursor, InAnim, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldCursor, OutAnim, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldCursor, DisableCursorAreaName, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldCursor, StandCursorOffset, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldCursor, FloatCursorOffset, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldCursor, UnknownData_7Y0I, 0x03D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIFieldCursor, 0x03D8);
		}

		// class UAT_UIFieldFishing : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIFieldFishing)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldFishing, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldFishing, Image_Gauge, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldFishing, Anim_In, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldFishing, Anim_Out, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldFishing, UnknownData_NJ4P, 0x0390);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIFieldFishing, 0x0398);
		}

		// class AAT_UIFieldIconActor : public AActor
		TEST_METHOD(Class__AT__AT_UIFieldIconActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_UIFieldIconActor, UnknownData_XQ8X, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_UIFieldIconActor, BillboardIconComponent, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_UIFieldIconActor, UnknownData_SF1A, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_UIFieldIconActor, UserComponent, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_UIFieldIconActor, UnknownData_3MTW, 0x03D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_UIFieldIconActor, 0x03D8);
		}

		// class UAT_UIFieldIconManager : public UBaseObject
		TEST_METHOD(Class__AT__AT_UIFieldIconManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, UnknownData_JDHN, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, IconActorArray, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, UnknownData_4UD8, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, IconTextureArray, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, UnknownData_3BWI, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, IconBaseHeight, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, IconFishingPointHeight, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, IconFrontDistance, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, ClerkIconVisibleDistanceFar, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, ClerkIconTraceAdustLength, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, PersonIconAppearScalingCurve, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, PersonIconDisappearScalingCurve, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, PersonIconFloatingMotionHeight, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, UnknownData_A022, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, PersonIconFloatingMotionRatioCurve, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, PersonIconVisibleDistanceNear, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, PersonIconVisibleDistanceFar, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, PersonIconScalingMinScale, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, PersonIconScalingMinDistance, 0x0144);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, PersonIconScalingMaxScale, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, PersonIconScalingMaxDistance, 0x014C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, ShopIconAppearScalingCurve, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, ShopIconDisappearScalingCurve, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, ShopIconFloatingMotionHeight, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, UnknownData_7ZOA, 0x0164);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, ShopIconFloatingMotionRatioCurve, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, ShopIconVisibleDistanceNear, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, ShopIconVisibleDistanceFar, 0x0174);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, ShopIconScalingMinScale, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, ShopIconScalingMinDistance, 0x017C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, ShopIconScalingMaxScale, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, ShopIconScalingMaxDistance, 0x0184);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, SpotIconAppearScalingCurve, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, SpotIconDisappearScalingCurve, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, SpotIconFloatingMotionHeight, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, UnknownData_ZIDG, 0x019C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, SpotIconFloatingMotionRatioCurve, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, SpotIconVisibleDistanceNear, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, SpotIconVisibleDistanceFar, 0x01AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, SpotIconScalingMinScale, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, SpotIconScalingMinDistance, 0x01B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, SpotIconScalingMaxScale, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, SpotIconScalingMaxDistance, 0x01BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, GuideIconAppearScalingCurve, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, GuideIconDisappearScalingCurve, 0x01C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, GuideIconFloatingMotionHeight, 0x01D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, UnknownData_54JH, 0x01D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, GuideIconFloatingMotionRatioCurve, 0x01D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, GuideIconVisibleDistanceNear, 0x01E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, GuideIconVisibleDistanceFar, 0x01E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, GuideIconScalingMinScale, 0x01E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, GuideIconScalingMinDistance, 0x01EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, GuideIconScalingMaxScale, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, GuideIconScalingMaxDistance, 0x01F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, QuestIconAppearScalingCurve, 0x01F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, QuestIconDisappearScalingCurve, 0x0200);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, QuestIconFloatingMotionHeight, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, UnknownData_U2ZC, 0x020C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, QuestIconFloatingMotionRatioCurve, 0x0210);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, QuestIconVisibleDistanceNear, 0x0218);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, QuestIconVisibleDistanceFar, 0x021C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, QuestIconScalingMinScale, 0x0220);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, QuestIconScalingMinDistance, 0x0224);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, QuestIconScalingMaxScale, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, QuestIconScalingMaxDistance, 0x022C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldIconManager, UnknownData_FHLP, 0x0230);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIFieldIconManager, 0x0440);
		}

		// class UAT_UIFieldManager : public UBaseObject
		TEST_METHOD(Class__AT__AT_UIFieldManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, BattlePowerUpperLimitValue, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, BattlePowerTextDataArray, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, EncounterDirectionEnemyClass, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, FieldSearchClass, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, EncEmoClass, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, MiniMapRadarClass, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, AreaMapClass, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, MiniMapWorldClass, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, MapWorldClass, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, CookingMenuClass, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, EncounterHudClass, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, FieldTalkWinClass, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, FieldNaviWinClass, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, QuestMainStartClass, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, QuestMainClearClass, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, SubQuestNavigationClass, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, QuestRetryInfoClass, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, InfoLogClass, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, InfoLog02Class, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, ActionPopUpClass, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, FieldFishingClass, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, CmnHeaderClass, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, CmnMiniHeaderClass, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, CmnFadeBlurClass, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, StartTopClass, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, FieldRideClass, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, MiniGamePopClass, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, ShopTopClass, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, ShopTop01Class, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, ShopCommonClass, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, CutinLevelUpClass, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, QuestSubClass, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, InfoAreaSubClass, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, FieldTalkFreeSubClass, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, CommunityDetailSubClass, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, InfoNameSubClass, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, TipsSubClass, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, GameoverSubClass, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, FieldCursorClass, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, ShopInfoClass, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, QuestImgClass, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, FieldIconManagerClass, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, BattleTipsTutorialClass, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, ShopTrainingClass, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, ZCWCompletionClass, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, ZCWNavigationClass, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, DemoSkipDialogClass, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, TelopManagerClass, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, QuestMainLogoClass, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, XcmnIconOperationClass, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, FieldBGMClass, 0x01C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, InfoZOrbLogClass, 0x01D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, InfoEndAreaClass, 0x01D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, InfoLevelUpClass, 0x01E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, MinigameEnemiesBaseGaugeClass, 0x01E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, FieldMemoryClass, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, EncounterDirection, 0x01F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, FieldSearch, 0x0200);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, EncEmoMng, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, MapMng, 0x0210);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, MapWorld, 0x0218);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, CookingMenu, 0x0220);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, EncounterHud, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, FieldTalkWin, 0x0230);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, FieldNaviWin, 0x0238);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, QuestMainStart, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, QuestMainClear, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, QuestNavigation, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, QuestRetryInfo, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, InfoLog, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, InfoLog02, 0x0268);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, DemoSkipDialog, 0x0270);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, ActionPopUp, 0x0278);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, FieldFishing, 0x0280);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, CmnHeader, 0x0288);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, CmnMiniHeader, 0x0290);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, CmnFadeBlur, 0x0298);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, StartTop, 0x02A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, FieldRide, 0x02A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, MiniGameHunt, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, MiniGameHunt_Gauge, 0x02B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, MiniGameEnemiesBase_Gauge, 0x02C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, MiniGamePop, 0x02C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, ShopTop, 0x02D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, ShopTop01, 0x02D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, ShopCommon, 0x02E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, MiniGameTop, 0x02E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, MiniGameWin00, 0x02F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, MiniGameFishing, 0x02F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, MiniGameResult, 0x0300);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, CutinLevelUp, 0x0308);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, QuestSub, 0x0310);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, InfoArea, 0x0318);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, FieldTalkFree, 0x0320);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, CommunityDetail, 0x0328);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, InfoName, 0x0330);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, Tips, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, Gameover, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, FieldCursor, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, ShopInfo, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, QuestImg, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, FieldIconManager, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, ShopTraining, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, ShopTraining00, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, ShopTraining01, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, ShopTraining02, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, ZCWCompletion, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, ZCWNavigation, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, BattleTipsTutorial, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, TelopManager, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, QuestMainLogo, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, XcmnIconOperation, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, FieldBGM, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, InfoZOrbLog, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, InfoEndArea, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, InfoLevelUp, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, TrialClear, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, FieldMemory, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, BannedSkill, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldManager, UnknownData_3NWC, 0x03F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIFieldManager, 0x05E8);
		}

		// class UAT_UIFieldMemory : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIFieldMemory)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldMemory, All_Nut, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldMemory, Ins_Mask_Img_Memory, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldMemory, Ins_Base_Bg02_00, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldMemory, Img_Arrow, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldMemory, Txt_Msg, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldMemory, Txt_Title, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldMemory, WA_In, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldMemory, WA_Out, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldMemory, UnknownData_9MH3, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldMemory, CollectionIns, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldMemory, UICmnInputIns, 0x0420);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIFieldMemory, 0x0428);
		}

		// class UAT_UIFieldNaviWin : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIFieldNaviWin)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldNaviWin, ReducedTime, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldNaviWin, UnknownData_097H, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldNaviWin, Canvas_AllNut, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldNaviWin, Border_FieldNaviWin, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldNaviWin, Image_Char, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldNaviWin, Image_Arrow, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldNaviWin, TextBox_Name, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldNaviWin, TextBox_Message, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldNaviWin, Anim_NaviIn, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldNaviWin, Anim_NaviLoop, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldNaviWin, Anim_NaviOut, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldNaviWin, Anim_ChangeIn, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldNaviWin, Anim_ChangeOut, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldNaviWin, UnknownData_XIPC, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldNaviWin, dispTime, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldNaviWin, bWaitButtonPressed, 0x041C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldNaviWin, UnknownData_JBBI, 0x041D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIFieldNaviWin, 0x04E0);
		}

		// class UAT_UIFieldRide : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIFieldRide)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRide, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRide, Pnl_Icon, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRide, Border_Gauge, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRide, Border_Select, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRide, Image_Gauge, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRide, UIXcmnArrowL, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRide, UIXcmnArrowR, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRide, UIFieldRideIconL, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRide, UIFieldRideIconC, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRide, UIFieldRideIconR, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRide, WL_Ins_Icon_Ride01, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRide, Anim_GaugeIn, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRide, Anim_GaugeOut, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRide, Anim_SelectIn, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRide, Anim_SelectOut, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRide, Anim_MoveL, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRide, Anim_MoveR, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRide, Anim_Decide, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRide, Anim_Charge_Full, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRide, UnknownData_G568, 0x0408);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIFieldRide, 0x0440);
		}

		// class UAT_UIFieldRideIcon : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIFieldRideIcon)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRideIcon, IconActiveColor, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRideIcon, IconBanColor, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRideIcon, Canvas_AllNut, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRideIcon, Image_IconBase, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRideIcon, Image_Icon, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRideIcon, Image_Gauge, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRideIcon, Image_Icon_Ban, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldRideIcon, UnknownData_ZZED, 0x03B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIFieldRideIcon, 0x03C0);
		}

		// class UAT_UIFieldSearch : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIFieldSearch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearch, FieldSearchCoreClass, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearch, AllNut, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearch, IconInfoAry, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearch, IdCount, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearch, IdxCreateCount, 0x0394);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearch, CircleRange, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearch, CircleCenterPosition, 0x039C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearch, NextCheckPointLocation, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearch, PlayerLocation, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearch, CirclRadius, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearch, UnknownData_B41N, 0x03C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearch, ChildAry, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearch, IconMax, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearch, UnknownData_EDTU, 0x03DC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIFieldSearch, 0x03E0);
		}

		// class UAT_UIFieldSearchCore : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIFieldSearchCore)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearchCore, AnimIn, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearchCore, AnimOut, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearchCore, RaceAnimIn, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearchCore, RaceAnimOut, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearchCore, AllNut, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearchCore, XCmnDistance, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearchCore, WL_Pnl_Race, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearchCore, WL_All_Race_Arrow, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearchCore, WL_Ins_Arrow_Fad, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearchCore, WL_Ins_Race_Arrow, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearchCore, XCmnDistance_Race, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearchCore, ImageInsItem, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearchCore, Position3D, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearchCore, bIsVisible, 0x03DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearchCore, bRootVisible, 0x03DD);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearchCore, bOutRequest, 0x03DE);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearchCore, UnknownData_2U5P, 0x03DF);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIFieldSearchCore, 0x03E0);
		}

		// class UAT_UIFieldSearchInfo : public UObject
		TEST_METHOD(Class__AT__AT_UIFieldSearchInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearchInfo, Position3D, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearchInfo, icon, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearchInfo, UnknownData_JCP2, 0x0035);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearchInfo, MyId, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldSearchInfo, DistCircle, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIFieldSearchInfo, 0x0040);
		}

		// class UAT_UIFieldTalkFree : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIFieldTalkFree)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFree, AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFree, FreeTalkWidgetAry, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFree, UnknownData_UW3Z, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFree, SubClassFreeTalk, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFree, LimitTalkWidget, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFree, LimitEventWidget, 0x03BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFree, AreaMin, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFree, AreaMax, 0x03C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFree, LifeTimeLimit, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFree, InstanceId, 0x03CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFree, VisibleEventSpeakCount, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFree, UnknownData_XH75, 0x03D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFree, EventSpeechWidgetArray, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFree, UnknownData_71N6, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFree, SpeakerIconMap, 0x04A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIFieldTalkFree, 0x04F0);
		}

		// class UAT_UIFieldTalkFreeCore : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIFieldTalkFreeCore)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFreeCore, AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFreeCore, NormalFrameBorder, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFreeCore, NomalFrameLeftImage, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFreeCore, NomalFrameRightImage, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFreeCore, SpecialFrameBorder, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFreeCore, SpecialFrameLeftPanel, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFreeCore, SpecialFrameRightImage, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFreeCore, SpecialIconImage, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFreeCore, TextBorder, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFreeCore, TextBox, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFreeCore, AnimIn, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFreeCore, AnimOut, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFreeCore, TextBoxTranslationDefault, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFreeCore, TextBoxScale, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFreeCore, WindowWidthOffset, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFreeCore, WindowSlideRangeLimitOffset, 0x03E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFreeCore, AdjustSpecialTextBoxRight, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFreeCore, NormalTextOutlineColor, 0x03EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFreeCore, SpecialTextOutlineColor, 0x03FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFreeCore, UnknownData_UH09, 0x040C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFreeCore, RequestTexture, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkFreeCore, UnknownData_BFV2, 0x0458);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIFieldTalkFreeCore, 0x04C0);
		}

		// class UAT_UIFieldTalkWin : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIFieldTalkWin)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkWin, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkWin, Canvas_FieldTalkWin, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkWin, TextBox_Name, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkWin, TextBox_Message, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkWin, Image_Arrow, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkWin, Anim_TalkIn, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkWin, Anim_TalkOut, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkWin, Anim_Loop, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkWin, Anim_TalkChangeIn, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkWin, Anim_TalkChangeOut, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIFieldTalkWin, UnknownData_8EES, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIFieldTalkWin, 0x0428);
		}

		// class UAT_UIGameover : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIGameover)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameover, RootPanel, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameover, TitleImage, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameover, AppearAnimation, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameover, DisappearAnimation, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameover, SelectionWidgetArray, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameover, ShowGameOverTime, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameover, UnknownData_MMPB, 0x03A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameover, DelegateGameoverEnd, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameover, CurrentSelectIndex, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameover, UnknownData_3OX0, 0x03BC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIGameover, 0x0438);
		}

		// class UAT_UIGameoverBar : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIGameoverBar)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameoverBar, DelegateGameoverBarEndAnimation, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameoverBar, RootPanel, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameoverBar, PnlCursEff, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameoverBar, TxtList, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameoverBar, AnimEnter, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIGameoverBar, 0x03A0);
		}

		// class UAT_UIGameTitle : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIGameTitle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitle, UnknownData_9RLE, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitle, Canvas_AllNut, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitle, Border_PressStart, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitle, LogoImage, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitle, CopyImage, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitle, TxtStart, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitle, TxtVersion, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitle, GameTitleList, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitle, UnknownData_AIW6, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitle, AnmCtn, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitle, WorldContextObject, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitle, ActorTitle, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitle, DeactiveColor, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitle, ScreenCapture, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitle, CmnFadeBlur, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitle, CmnFadeBlurClass, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitle, UnknownData_BDWI, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitle, OpenLoadMenuDelegate, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitle, OpenOptionMenuDelegate, 0x04E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIGameTitle, 0x04F8);
		}

		// class UAT_UIGameTitleList : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIGameTitleList)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitleList, TxtSelect, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitleList, TxtList, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitleList, ImgCursrLong, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitleList, InsBlinkEff, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitleList, TouchImage, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitleList, UnknownData_CY6L, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitleList, Anim_In, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitleList, Anim_Loop, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitleList, Anim_Out, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameTitleList, UnknownData_GXYT, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIGameTitleList, 0x03D8);
		}

		// class UAT_UIGameWindow : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIGameWindow)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, UnknownData_HE7G, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, Dmy_Img, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WindowMinY, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, PnlBaseImgPaddingTop, 0x0394);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, PnlBaseImgPaddingBottom, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, PnlBaseImgPaddingSide, 0x039C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, PnlBaseToDetailPaddingTop, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, PnlBaseToDetailPaddingBottom, 0x03A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, EntrySpacePadding, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, TxtDetailBottom, 0x03AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, ChoiceItemBottom, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, FeedMarkPadding, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, ChoiceCursorSideExSize, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, ChoiceCursorMarginX, 0x03BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, CookingBentoResultWindowImagePadding, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, CookingInsIconRare00ImagePadding, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, SubItemMenuClass, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, SubTextMenuClass, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, SubCmuIconClass, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, SubLinkListClass, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, SubStateClass, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, SubCheckClass, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, SubListStateClass, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_AllNut, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_AllWin01, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_PnlBase, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_PnlTitle, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_TxtTitle, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_TxtDetail, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_PnlList, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_PnlListFrame, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_PnlAllDetail, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_PnlAllDetailSlot, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_PnlDetail, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, Pnl_Detail_List, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_PnlTxtDetail, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_PnlTxtDetailItem, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_TxtDetailItem, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_ImgItem, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_InsScrollbar, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_XcmnFadeBlack, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_InsArrow, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_PnlTxtHelp, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_TxtHelp, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_WorkText, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_DetailReward, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, Ins_Icon_Rare00, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_ImgEntrySpaceTop, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_ImgEntrySpaceBtm, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_ImgFeedMarkSpace, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_ItemInfoCtn, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_SelectItemInfoCtn, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_TextInfoCtn, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_CmuInfoCtn, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_CheckInfoCtn, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_WishInfoCtn, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_LinkListInfoCtn, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_BannedSkillListInfoCtn, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_ItemPlateCtn, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_TextPlateCtn, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_TextCmuCtn, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_StatePlateCtn, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_CheckPlateCtn, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_LinkListPlateCtn, 0x05C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WL_StateListPlateCtn, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WA_In, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, WA_Out, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindow, UnknownData_Y644, 0x05F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIGameWindow, 0x0660);
		}

		// class UAT_UIGameWindowChoice : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIGameWindowChoice)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowChoice, ItemName, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowChoice, ItemNum, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowChoice, SelCursorPlate, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowChoice, ImgBarShadow, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowChoice, ImgXwin01List, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowChoice, ImgFil, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowChoice, ItemIcon, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowChoice, ImgEff, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowChoice, EnterAnim, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowChoice, IconClear, 0x03B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIGameWindowChoice, 0x03C0);
		}

		// class UAT_UIGameWindowCmuChoice : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIGameWindowCmuChoice)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowCmuChoice, UnknownData_P8EO, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowCmuChoice, WL_CharName, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowCmuChoice, WL_LevelTitle, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowCmuChoice, WL_CharIcon, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowCmuChoice, Ins_Icon_Group00, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowCmuChoice, Ins_Icon_Group01, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowCmuChoice, Ins_Icon_Group02, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowCmuChoice, Ins_Icon_Group03, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowCmuChoice, Ins_Icon_Group04, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowCmuChoice, Ins_Icon_Group05, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowCmuChoice, Ins_Icon_Group06, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowCmuChoice, WL_LvTextList, 0x03C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIGameWindowCmuChoice, 0x0400);
		}

		// class UAT_UISystemWindowState : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UISystemWindowState)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindowState, AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindowState, TxtList, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindowState, IconState, 0x0380);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UISystemWindowState, 0x0388);
		}

		// class UAT_UIGameWindowCheck : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIGameWindowCheck)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowCheck, CheckBox, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowCheck, TxtList, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowCheck, ImgBarShadow, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowCheck, ImgXwin01List, 0x0388);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIGameWindowCheck, 0x0390);
		}

		// class UAT_UIGameWindowDetailReward : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIGameWindowDetailReward)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowDetailReward, TxtReward, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowDetailReward, TxtName, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowDetailReward, TxtNum, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowDetailReward, ItemIcon, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowDetailReward, ClearIcon, 0x0390);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIGameWindowDetailReward, 0x0398);
		}

		// class UAT_UIGameWindowLinkList : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIGameWindowLinkList)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowLinkList, LinkNameText, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowLinkList, XcmnEmbList, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowLinkList, TextMat, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowLinkList, UnknownData_EIK0, 0x03B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIGameWindowLinkList, 0x03B8);
		}

		// class UAT_UIGameWindowListState : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIGameWindowListState)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowListState, All_Nut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowListState, Icon_State, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowListState, Txt_State, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowListState, Txt_Num00, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowListState, Txt_Num01, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIGameWindowListState, Icon_Curs00_00, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIGameWindowListState, 0x03A0);
		}

		// class UAT_UIHudInfo : public UObject
		TEST_METHOD(Class__AT__AT_UIHudInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIHudInfo, UnknownData_FGMQ, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIHudInfo, 0x0670);
		}

		// class UAT_UIIconClear : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIIconClear)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconClear, UnknownData_1MBL, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconClear, ClearAnimation, 0x03B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIIconClear, 0x03C0);
		}

		// class UAT_UIIconClearS : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIIconClearS)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconClearS, StartAnimation, 0x03B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIIconClearS, 0x03B8);
		}

		// class UAT_UIIconItem : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIIconItem)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconItem, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconItem, Image_Group, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconItem, Image_Item, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconItem, Image_ZOrb, 0x0388);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIIconItem, 0x0390);
		}

		// class UAT_UIIconLoad : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIIconLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconLoad, IconImage, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconLoad, UnknownData_2Q9R, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIIconLoad, 0x0380);
		}

		// class UAT_UIIconNewRecord : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIIconNewRecord)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconNewRecord, UnknownData_YAXM, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconNewRecord, AllNut, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconNewRecord, AnimIn, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconNewRecord, AnimOut, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconNewRecord, TitleImage, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconNewRecord, TitleEffectImage, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconNewRecord, UnknownData_1PZC, 0x03E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIIconNewRecord, 0x0498);
		}

		// class UAT_UIIconSave : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIIconSave)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconSave, AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconSave, SaveText, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconSave, AnmCtn, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconSave, UnknownData_TERN, 0x0390);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIIconSave, 0x0398);
		}

		// class UAT_UIImageIcon : public UImage
		TEST_METHOD(Class__AT__AT_UIImageIcon)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIImageIcon, 0x0200);
		}

		// class UAT_UIImportantLog : public UObject
		TEST_METHOD(Class__AT__AT_UIImportantLog)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIImportantLog, UnknownData_FF2N, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIImportantLog, 0x00F0);
		}

		// class UAT_UIInfoArea : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIInfoArea)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoArea, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoArea, TextBox_Area, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoArea, Anim_Start, 0x0380);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIInfoArea, 0x0388);
		}

		// class UAT_UIInfoEndArea : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIInfoEndArea)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoEndArea, RootPanel, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoEndArea, WarningText, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoEndArea, LeftIconImage, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoEndArea, AppearanceAnimation, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoEndArea, LoopAnimation, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoEndArea, DisappearanceAnimation, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoEndArea, UnknownData_WL17, 0x03E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIInfoEndArea, 0x03E8);
		}

		// class UAT_UIInfoLevelUp : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIInfoLevelUp)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLevelUp, StartWaitSeconds, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLevelUp, DisplayDuration, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLevelUp, RootPanel, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLevelUp, InfomationText, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLevelUp, LogItemArray, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLevelUp, AppearanceAnimation, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLevelUp, DisappearanceAnimation, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLevelUp, UnknownData_8XZE, 0x03E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIInfoLevelUp, 0x03F8);
		}

		// class UAT_UIInfoLog : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIInfoLog)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLog, RootPanel, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLog, BarAry, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLog, AnimStart, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLog, CurrentIdx, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLog, YSpeed, 0x03D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLog, InfoShowTime, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLog, StackUpdateTime, 0x03DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLog, UnknownData_V86H, 0x03E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIInfoLog, 0x0418);
		}

		// class UAT_UIInfoLog02 : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIInfoLog02)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLog02, RootPanel, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLog02, BarAry, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLog02, AnimStart, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLog02, CurrentIdx, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLog02, YSpeed, 0x03D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLog02, InfoShowTime, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLog02, StackUpdateTime, 0x03DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLog02, UnknownData_L8VR, 0x03E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIInfoLog02, 0x0418);
		}

		// class UAT_UIInfoLog02Bar : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIInfoLog02Bar)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLog02Bar, LevelUpColor, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLog02Bar, StandardColor, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLog02Bar, BaseImage, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLog02Bar, TextBox, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLog02Bar, IconSwitcher, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLog02Bar, ImageIconSkillTree, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLog02Bar, AnimIn, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLog02Bar, AnimOut, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLog02Bar, UnknownData_9WLT, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIInfoLog02Bar, 0x03D8);
		}

		// class UAT_UIInfoLogBar : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIInfoLogBar)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLogBar, ImageItem, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLogBar, ImageGroup, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLogBar, ImageInfo, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLogBar, ImageNew, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLogBar, TextBox, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLogBar, AnimIn, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLogBar, AnimOut, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLogBar, UnknownData_IJCH, 0x03A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIInfoLogBar, 0x03C0);
		}

		// class UAT_UIInfoLogBar01 : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIInfoLogBar01)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLogBar01, AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLogBar01, InfoScrText, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLogBar01, AnmCtn, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLogBar01, UnknownData_UKMA, 0x0390);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIInfoLogBar01, 0x0398);
		}

		// class UAT_UIInfoLogBar02 : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIInfoLogBar02)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLogBar02, AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoLogBar02, UnknownData_SGPZ, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIInfoLogBar02, 0x03A8);
		}

		// class UAT_UIInfoName : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIInfoName)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoName, AllNutPnl, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoName, InfoCoreCtn, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoName, UnknownData_HQ2T, 0x0388);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIInfoName, 0x0390);
		}

		// class UAT_UIInfoNameCore : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIInfoNameCore)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoNameCore, NameTxt, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoNameCore, PopularNameTxt, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoNameCore, EffPnl, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoNameCore, InAnim, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoNameCore, OutAnim, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoNameCore, UnknownData_RN28, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIInfoNameCore, 0x03B0);
		}

		// class UAT_UIInfoZOrbLogBar : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIInfoZOrbLogBar)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoZOrbLogBar, RootPanel, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoZOrbLogBar, IconImage, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoZOrbLogBar, NumberText, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoZOrbLogBar, AnimIn, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoZOrbLogBar, AnimOut, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoZOrbLogBar, UnknownData_1BOM, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIInfoZOrbLogBar, 0x0410);
		}

		// class UAT_UIInfoZOrbLogBase : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIInfoZOrbLogBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoZOrbLogBase, YSpeed, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoZOrbLogBase, AlphaSpeed, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoZOrbLogBase, InfoShowTime, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoZOrbLogBase, StackUpdateTime, 0x03BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoZOrbLogBase, ZOrbCountUpTime, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoZOrbLogBase, ZOrbLinearStepTime, 0x03C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoZOrbLogBase, RootPanel, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoZOrbLogBase, BarArray, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIInfoZOrbLogBase, UnknownData_MSCW, 0x03E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIInfoZOrbLogBase, 0x04A8);
		}

		// class UAT_UIItemMenu : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIItemMenu)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemMenu, InAnim, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemMenu, OutAnim, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemMenu, AnimInSelect, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemMenu, AnimOutSelect, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemMenu, Ins_Icon_Rare00, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemMenu, Start_Item_Win00, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemMenu, Ins_Arrow_Top, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemMenu, Ins_Arrow_Btm, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemMenu, All_Start_Item, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemMenu, Xmenu_Bg, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemMenu, Xmenu_List00, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemMenu, Xcmn_Tab, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemMenu, ImagePassForFirstPrivilegeItem, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemMenu, WL_Start_Party_Bars, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemMenu, IconTextureList, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemMenu, BentoTextureList, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemMenu, UnknownData_UZXG, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemMenu, RecipeImgTbl, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemMenu, UnknownData_ZYS8, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemMenu, ItemMng, 0x0678);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemMenu, invMng, 0x0680);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemMenu, UsedItemId, 0x0688);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIItemMenu, 0x0690);
		}

		// class UAT_UIItemPaletteCustomize : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIItemPaletteCustomize)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemPaletteCustomize, UnknownData_RTEK, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemPaletteCustomize, AllNutPnl, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemPaletteCustomize, titleTxt, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemPaletteCustomize, MsgTxt, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemPaletteCustomize, PaletteCtn, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemPaletteCustomize, InAnim, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemPaletteCustomize, OutAnim, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemPaletteCustomize, AnimInSelect, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemPaletteCustomize, AnimOutSelect, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemPaletteCustomize, UnknownData_91YO, 0x03C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIItemPaletteCustomize, 0x0408);
		}

		// class UAT_UIItemPaletteBar : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIItemPaletteBar)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemPaletteBar, Pnl_All_List, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemPaletteBar, Pnl_Curs_All, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemPaletteBar, Ins_Tex_Base03, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemPaletteBar, Txt_List, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemPaletteBar, Txt_Num, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemPaletteBar, Ins_Icon_Item, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemPaletteBar, Xcmn_Btn_Plat, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemPaletteBar, Img_Win01_Curs00, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemPaletteBar, EnterAnim, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemPaletteBar, IconBtnParam, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIItemPaletteBar, UnknownData_AJL7, 0x03E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIItemPaletteBar, 0x03F8);
		}

		// class UAT_UIKeyHelp : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIKeyHelp)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIKeyHelp, KeyHelpRightMargin, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIKeyHelp, KeyHelpItemGapX, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIKeyHelp, OnlyBtnItemGapX, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIKeyHelp, TextLimitPaddingLeft, 0x037C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIKeyHelp, MenuImageBaseAlpha, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIKeyHelp, OtherImageBaseAlpha, 0x0384);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIKeyHelp, UnknownData_HQBR, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIKeyHelp, WL_All_Nut, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIKeyHelp, WL_Nut_Helpmsg, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIKeyHelp, WL_Pnl_Helpmsg, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIKeyHelp, WL_Txt_Helpmsg_Main, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIKeyHelp, WL_Txt_Helpmsg_Main_Slot, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIKeyHelp, WL_Img_Base_Help, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIKeyHelp, WL_Img_Deco_Star, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIKeyHelp, WL_AllHelpmsg, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIKeyHelp, WA_In, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIKeyHelp, WA_Out, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIKeyHelp, WL_All_Keyhelpk, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIKeyHelp, WL_Nut_Keyhelp, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIKeyHelp, WL_Pnl_Txt_Keyhelp, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIKeyHelp, WL_Img_Base_KeyHelp, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIKeyHelp, UnknownData_5QSM, 0x0498);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIKeyHelp, 0x06F0);
		}

		// class UAT_UILinkBonus : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UILinkBonus)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILinkBonus, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILinkBonus, TextBox_Caption, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILinkBonus, TextBox_Level, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILinkBonus, UIXCmnEmb_List, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILinkBonus, TextMat, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UILinkBonus, 0x03A0);
		}

		// class UAT_UIListParts : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIListParts)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIListParts, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIListParts, TextBox_Name, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIListParts, TextBox_Num, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIListParts, Icon_Item, 0x0388);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIListParts, 0x0390);
		}

		// class UAT_UILockonCursor : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UILockonCursor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILockonCursor, CursorAnimCtn, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILockonCursor, AllNut, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILockonCursor, PanelSlot, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UILockonCursor, UnknownData_8Y0R, 0x0390);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UILockonCursor, 0x03B0);
		}

		// class UAT_UIMapIconFever : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMapIconFever)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapIconFever, AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapIconFever, ItemIcon, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapIconFever, mapIcon, 0x0380);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMapIconFever, 0x0388);
		}

		// class UAT_MapIconSwitchBase : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_MapIconSwitchBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_MapIconSwitchBase, UnknownData_V5G5, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_MapIconSwitchBase, Target, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_MapIconSwitchBase, UnknownData_CWHT, 0x0380);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_MapIconSwitchBase, 0x0398);
		}

		// class UAT_UIMapIconSwitch : public UAT_MapIconSwitchBase
		TEST_METHOD(Class__AT__AT_UIMapIconSwitch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapIconSwitch, WL_IconSwitcher, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMapIconSwitch, 0x03A0);
		}

		// class UAT_UIMapNaviIconSwitch : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMapNaviIconSwitch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapNaviIconSwitch, WL_Pnl_Map_Navi_Icon, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapNaviIconSwitch, WL_NaviBaseSwitcher, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapNaviIconSwitch, WL_NaviIconSwitcher, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapNaviIconSwitch, WL_Navi_Prgrs_Mark, 0x0388);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMapNaviIconSwitch, 0x0390);
		}

		// class UAT_UIMapQuestIconSwitch : public UAT_MapIconSwitchBase
		TEST_METHOD(Class__AT__AT_UIMapQuestIconSwitch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapQuestIconSwitch, WL_QuestIconSwitcher, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapQuestIconSwitch, WL_All_Fad, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapQuestIconSwitch, WL_Eff_Fad_00, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapQuestIconSwitch, WL_Eff_Fad_01, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapQuestIconSwitch, WL_Prgrs_Check, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapQuestIconSwitch, WL_Prgrs_Navi, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMapQuestIconSwitch, 0x03C8);
		}

		// class UAT_UIMapPlayerMarker : public UAT_MapIconSwitchBase
		TEST_METHOD(Class__AT__AT_UIMapPlayerMarker)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapPlayerMarker, WL_Pnl_Map_Icon_Cursor, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapPlayerMarker, WA_In, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapPlayerMarker, WA_Out, 0x03A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMapPlayerMarker, 0x03B0);
		}

		// class UAT_UIMapDetailTxt : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMapDetailTxt)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapDetailTxt, WL_Pnl_All_Details, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapDetailTxt, WL_Detail_Txt, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapDetailTxt, WA_InDetail, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapDetailTxt, WA_OutDetail, 0x0388);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMapDetailTxt, 0x0390);
		}

		// class UAT_UIMapListInfo : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMapListInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapListInfo, AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapListInfo, FeverCanvas, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapListInfo, DragonballImage, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapListInfo, ImageCtn, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapListInfo, UnknownData_FWSP, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapListInfo, TextBoxCtn, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapListInfo, AnmCtn, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapListInfo, UnknownData_AB8H, 0x03D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMapListInfo, 0x03D8);
		}

		// class UAT_UIMapM : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMapM)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, UnknownData_OU16, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, CursorBaseSpeed, 0x0404);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, IconCollisionSize, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, ChangeZoomScaleBase, 0x040C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, ZoomScaleMax, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, ZoomScaleMin, 0x0414);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, MapScrollLimit, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, DebugAreaName, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, BlinkCheckRenge, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, RelayInterval, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, FocusFixedSec, 0x043C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, MapBarSetting, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, MapIconOffsetGroupA, 0x06B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, MapIconOffsetValueA, 0x06C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, MapIconOffsetGroupB, 0x06C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, MapIconOffsetValueB, 0x06D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, MapIconClass, 0x06E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, MapQuestIconClass, 0x06E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, WL_All_Nut, 0x06F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, WL_Txt_Area, 0x06F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, WL_Txt_Name, 0x0700);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, WL_Map_M_Bar, 0x0708);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, WL_Map_Tex, 0x07D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, XmenuCloudBtm, 0x07E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, WL_PlayerIcon, 0x07E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, WL_PlayerMarker, 0x07F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, WL_MapIconList, 0x07F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, WL_MapIconSwList, 0x0808);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, WL_MapQuestIconSwList, 0x0A10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, WL_MapDetailTxt, 0x0A60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, WL_InsCurs, 0x0A68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, WL_Pnl_Detail00, 0x0A70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, WL_MapIconRoot, 0x0A78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, WL_Pnl_CurArea, 0x0A80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, WL_M_PnlWindRoad_N, 0x0A88);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, WL_Ins_Air_Curs_N, 0x0A90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, WL_Ins_Air_Icon_N, 0x0A98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, WL_Ins_Air_Point_N, 0x0AA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, WL_M_PnlWindRoad_R, 0x0AA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, WL_Ins_Air_Curs_R, 0x0AB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, WL_Ins_Air_Icon_R, 0x0AB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, WL_Ins_Air_Point_R, 0x0AC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, WL_InsQuestDetailTxt, 0x0AC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, InAnimation, 0x0AD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, OutAnimation, 0x0AD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, CoverOutAnimation, 0x0AE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, UnknownData_R6P6, 0x0AE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, BlinkIconCheckList, 0x0B08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, blinkList, 0x0B18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, UnknownData_CSEG, 0x0B28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, FocusTarget, 0x0C68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapM, UnknownData_7XMZ, 0x0C70);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMapM, 0x0C78);
		}

		// class UAT_UIMapManager : public UObject
		TEST_METHOD(Class__AT__AT_UIMapManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapManager, UnknownData_F9KD, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapManager, MinimapIns, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapManager, AreamapIns, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapManager, MinimapWorldIns, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapManager, UnknownData_YH6M, 0x0098);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMapManager, 0x00B0);
		}

		// class UAT_UIMapMBar : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMapMBar)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapMBar, UITxtIcon, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapMBar, UIMapIcon, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMapMBar, 0x0380);
		}

		// class UAT_UIMapMSWorld : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMapMSWorld)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapMSWorld, WA_In, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapMSWorld, WA_Out, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapMSWorld, Txt_Help, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapMSWorld, Ins_Btn_Color00, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapMSWorld, Xcmn_Btn_Plat, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapMSWorld, UnknownData_KBG7, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMapMSWorld, 0x03F0);
		}

		// class UAT_UIMapTex : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMapTex)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapTex, UnknownData_E5KZ, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapTex, RelayInterval, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapTex, NearRangeRate, 0x03A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapTex, LandMarkVisibleParam, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapTex, AllMapTex, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapTex, DmyMap, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapTex, AirRoadInsMap, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapTex, MapParam, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapTex, WL_M_PnlWindRoad_N, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapTex, WL_Ins_Air_Curs_N, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapTex, WL_Ins_Air_Icon_N, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapTex, WL_Ins_Air_Point_N, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapTex, WL_M_PnlWindRoad_R, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapTex, WL_Ins_Air_Curs_R, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapTex, WL_Ins_Air_Icon_R, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapTex, WL_Ins_Air_Point_R, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapTex, LandmarkList, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapTex, LandmarkPanelMap, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapTex, UnknownData_VB9X, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapTex, LoadItemList, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapTex, UnknownData_57HA, 0x05B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapTex, TexMap, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapTex, UnknownData_YZTN, 0x0648);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapTex, WindRoadInsMap, 0x0650);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMapTex, 0x06A0);
		}

		// class UAT_UIMapWinList : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMapWinList)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWinList, AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWinList, ImageCtn, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWinList, TextBoxCtn, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWinList, UnknownData_3ZVK, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMapWinList, 0x03A0);
		}

		// class UATWorldMapInfo : public UObject
		TEST_METHOD(Class__AT__ATWorldMapInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATWorldMapInfo, UnknownData_HJQM, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATWorldMapInfo, QuestWorldMapParamAnalyser, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATWorldMapInfo, 0x0038);
		}

		// class UAT_UIMapWorld : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMapWorld)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorld, MapWorldIconClass, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorld, WorldMapActiveParam, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorld, WorldMapSymbolPos, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorld, MouseMoveFactor, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorld, UnlockAndLookAtAreaTime, 0x0414);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorld, Map_World_Bg, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorld, All_Nut, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorld, All_Map_World, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorld, Pnl_Icon_Map, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorld, Pnl_Area_Name, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorld, Pnl_Medal, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorld, Info_Log_Bar01, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorld, Map_World_Win, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorld, Map_World_Curs, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorld, Map_World_Curs01, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorld, Ins_Icon_Item, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorld, Img_Bg_World_Back, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorld, MapInfoCtn, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorld, CmnTips, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorld, InfoIcon, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorld, WishLoader, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorld, AnmCtn, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorld, TextBoxCtn, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorld, UnknownData_IDDH, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorld, LoadMapIconCtn, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorld, UnknownData_N3WA, 0x0528);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMapWorld, 0x05D0);
		}

		// class UAT_UIMapWorldBG : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMapWorldBG)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldBG, RotateMin, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldBG, RotateMax, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldBG, All_Map_World_Bg, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldBG, Img_Bg_World, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldBG, Ins_Eff_Area00, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldBG, Ins_Eff_Area01, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldBG, Ins_Eff_Area02, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldBG, Ins_Eff_Area03, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldBG, Ins_Eff_Area04, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldBG, Ins_Eff_Area05, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldBG, Ins_Eff_Area06, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldBG, Ins_Eff_Area07, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldBG, Ins_Eff_Area08, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldBG, Ins_Eff_Area09, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldBG, Map_World_Eff_Story, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldBG, Map_World_Eff_StoryList, 0x0420);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMapWorldBG, 0x0430);
		}

		// class UAT_UIMapWorldBorder : public UObject
		TEST_METHOD(Class__AT__AT_UIMapWorldBorder)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldBorder, ActComponet, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldBorder, MaterialInstance, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldBorder, MaterialInstanceCtn, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldBorder, UnknownData_HO5K, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMapWorldBorder, 0x0050);
		}

		// class UAT_UIMapWorldCurs : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMapWorldCurs)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldCurs, AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldCurs, AnmCtn, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldCurs, UnknownData_E3X6, 0x0388);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMapWorldCurs, 0x0390);
		}

		// class UAT_UIMapWorldCurs01 : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMapWorldCurs01)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldCurs01, AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldCurs01, AnmCtn, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldCurs01, UnknownData_8TB3, 0x0388);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMapWorldCurs01, 0x0390);
		}

		// class UAT_UIMapWorldEffStory : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMapWorldEffStory)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldEffStory, Pnl_Story_Main, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldEffStory, Pnl_Story_Sub, 0x03B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMapWorldEffStory, 0x03C0);
		}

		// class UAT_UIMapWorldIcon : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMapWorldIcon)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldIcon, AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldIcon, Map_Icon_Fever, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldIcon, Img_Micon25, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldIcon, Ins_Icon_Item, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldIcon, Map_Icon_Switch, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldIcon, AnmCtn, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldIcon, ImageCtn, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldIcon, TextBoxCtn, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldIcon, UnknownData_17RE, 0x03C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMapWorldIcon, 0x03E8);
		}

		// class UAT_UIMapWorldWin : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMapWorldWin)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldWin, UnknownData_GJNH, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldWin, All_Nut, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldWin, Xmenu_Scrollbar_Custom, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldWin, WorldMapMaterialInfoTable, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldWin, CharaList, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldWin, MaterialList, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldWin, AnmCtn, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldWin, TextBoxCtn, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldWin, UnknownData_0SJM, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldWin, WishTable, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMapWorldWin, UnknownData_XR83, 0x0420);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMapWorldWin, 0x0430);
		}

		// class UAT_UIBar03Choice : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIBar03Choice)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBar03Choice, Volume, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBar03Choice, UnknownData_9ER9, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBar03Choice, CanvasBar00, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBar03Choice, CanvasBar01, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBar03Choice, CanvasMode, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBar03Choice, BorderGauge, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBar03Choice, CursorFade, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBar03Choice, Plate, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBar03Choice, FadeBlack, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBar03Choice, XlistBase, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBar03Choice, VolumMinIcon, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBar03Choice, VolumMaxIcon, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBar03Choice, NewIcon, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBar03Choice, Bar03Gauge, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBar03Choice, ModeText, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBar03Choice, ListText, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBar03Choice, EnterText, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBar03Choice, ArrowLeft, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBar03Choice, ArrowRight, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBar03Choice, ModeTextMaterial, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBar03Choice, ListTextMaterial, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBar03Choice, EnterTextMaterial, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBar03Choice, EnterListAnimation, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBar03Choice, EnterModeAnimation, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBar03Choice, CancelAnimation, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIBar03Choice, UnknownData_GQMP, 0x0430);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBar03Choice, 0x0438);
		}

		// class UAT_UIList00Choice : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIList00Choice)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList00Choice, NewIcon, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList00Choice, EquipmentMarkImage, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList00Choice, TxtNum, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList00Choice, TxtName, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList00Choice, AllTxtList, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList00Choice, Plate_Default, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList00Choice, EnterEffPnl, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList00Choice, PnlClear, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList00Choice, Image_List_Base, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList00Choice, Image_Bar_Shadow, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList00Choice, ImgIconLoop, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList00Choice, ImgEffLong, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList00Choice, EnterAnim, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList00Choice, TextListMaterial, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList00Choice, ListBaseMaterial, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList00Choice, ImageSkill, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList00Choice, PanelIcon, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList00Choice, ImageIcon, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList00Choice, GroupIcon, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList00Choice, CheckBox, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList00Choice, WL_Icon_ClearS, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList00Choice, UnknownData_IDVI, 0x0418);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIList00Choice, 0x0430);
		}

		// class UAT_UIList01Choice : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIList01Choice)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList01Choice, NewIcon, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList01Choice, ItemIcon, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList01Choice, PnlEffect, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList01Choice, TxtNum, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList01Choice, TxtName, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList01Choice, Plate, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList01Choice, FilEffect, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList01Choice, MatTxtNum, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList01Choice, MatTxtName, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList01Choice, EnterAnim, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList01Choice, ImgEff, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList01Choice, UnknownData_G529, 0x03C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIList01Choice, 0x03D0);
		}

		// class UAT_UIList03Choice : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIList03Choice)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList03Choice, UnknownData_XNWS, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList03Choice, EnterAnim, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList03Choice, Icon_New, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList03Choice, Pnl_Base, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList03Choice, Pnl_Eff_Enter, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList03Choice, Txt_List, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList03Choice, Img_List_Base, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList03Choice, TextListMaterial, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList03Choice, ListBaseMaterial, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList03Choice, UnknownData_VP2R, 0x03C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIList03Choice, 0x03D0);
		}

		// class UAT_UIList06Choice : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIList06Choice)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList06Choice, EnterAnim, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList06Choice, TxtList01, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList06Choice, TxtList01Material, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList06Choice, TxtList00, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList06Choice, TxtList00Material, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList06Choice, ImgListBase, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList06Choice, UIMapQuestIconSwitch, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList06Choice, InsIconItem, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList06Choice, ImgIconLoop, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList06Choice, NewIcon, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList06Choice, IconClearS, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList06Choice, ListBaseMaterial, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList06Choice, TxtProgress, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList06Choice, TxtReward, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIList06Choice, IconClear, 0x03E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIList06Choice, 0x03E8);
		}

		// class UAT_UIMenuWindow : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMenuWindow)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuWindow, SubChoiceMenuClass, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuWindow, SubTxtMenuClass, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuWindow, AllNut, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuWindow, FadeWidget, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuWindow, BasePnlSlot, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuWindow, DetailTxt, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuWindow, AllDetailVBox, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuWindow, ListVBox, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuWindow, ChoiceVBox, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuWindow, InAnim, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuWindow, OutAnim, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuWindow, MenuListCtn, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuWindow, ChoiceMenuCtn, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuWindow, UnknownData_75JF, 0x03E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMenuWindow, 0x0408);
		}

		// class UAT_UIMenuWindowChoice : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMenuWindowChoice)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuWindowChoice, ListTxt, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuWindowChoice, numTxt, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuWindowChoice, SelNumPanel, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuWindowChoice, NumDenomiTxt, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuWindowChoice, NumMoleTxt, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMenuWindowChoice, UnknownData_N9CZ, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMenuWindowChoice, 0x03A0);
		}

		// class UAT_UIMgameFishing : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMgameFishing)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMgameFishing, UnknownData_F394, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMgameFishing, CursorSpeed, 0x0384);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMgameFishing, CursorLapLimit, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMgameFishing, UnknownData_VN41, 0x038C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMgameFishing, Canvas_AllNut, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMgameFishing, Pnl_Gage, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMgameFishing, Xcmn_Btn_Plat_00, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMgameFishing, Image_Gauge, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMgameFishing, Image_Cursor, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMgameFishing, UIMgameTips, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMgameFishing, UIMgameTips01, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMgameFishing, UIBattleRushSpeedCore, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMgameFishing, Anim_In, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMgameFishing, Anim_Out, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMgameFishing, ActionBtn00, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMgameFishing, ActionBtn01, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMgameFishing, ActionBtn02, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMgameFishing, ActionBtn03, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMgameFishing, UnknownData_ZQDH, 0x04A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMgameFishing, 0x04C0);
		}

		// class UAT_UIMgameTips : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMgameTips)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMgameTips, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMgameTips, TextBox_Tips, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMgameTips, Anim_In, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMgameTips, Anim_Out, 0x0388);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMgameTips, 0x0390);
		}

		// class UAT_UIMiniGameBar00 : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMiniGameBar00)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBar00, WL_Icon_Clear_S, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBar00, WL_Txt_Conditions, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBar00, WL_Txt_Reword, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBar00, WL_Txt_Detail, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBar00, WL_Txt_Item, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBar00, WL_Ins_Icon_Item, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBar00, LoopIcon, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBar00, ClearAnimation, 0x03E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMiniGameBar00, 0x03F0);
		}

		// class UAT_UIMiniGameBar01 : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMiniGameBar01)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBar01, WL_Txt_Rank, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBar01, WL_Txt_Name, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBar01, WL_Txt_Name01, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBar01, WL_Txt_Pt, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBar01, WL_Txt_Pt01, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBar01, WL_Pnl_Base_Eff, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBar01, ChangeAnimation, 0x03A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMiniGameBar01, 0x03A8);
		}

		// class UAT_UIMiniGameBaseball : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMiniGameBaseball)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseball, AnimIn, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseball, AnimOut, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseball, AnimInInfo, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseball, AnimOutInfo, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseball, Border_Pnl_Info_Ball, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseball, Border_Pnl_Icon_Ball, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseball, TextBox_Ball, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseball, TextBox_Speed, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseball, Image_Ins_Icon_Ball_Array, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseball, UIEvaluation, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseball, UIMiniGameBaseballListArray, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseball, UIMiniGameBaseballCursor, 0x0418);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMiniGameBaseball, 0x0420);
		}

		// class UAT_UIMiniGameBaseballCircle : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMiniGameBaseballCircle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballCircle, NormalColor, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballCircle, JustMeetColor, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballCircle, AnimIn, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballCircle, AnimOut, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballCircle, CanvasPanel_Pnl_Ring, 0x03E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMiniGameBaseballCircle, 0x03E8);
		}

		// class UAT_UIMiniGameBaseballCursor : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMiniGameBaseballCursor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballCursor, UnknownData_TUQP, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballCursor, AnimIn, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballCursor, AnimOut, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballCursor, AnimOutFrame, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballCursor, AnimOutCurs, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballCursor, CanvasPanel_All_Cursor, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballCursor, CanvasPanel_Pnl_Succes_Ring, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballCursor, CanvasPanel_Pnl_Succes_Ring01, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballCursor, Image_Frame, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballCursor, UIMiniGameBaseballCircle, 0x0410);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMiniGameBaseballCursor, 0x0418);
		}

		// class UAT_UIMiniGameBaseballList : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMiniGameBaseballList)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballList, AnimIn, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballList, AnimOut, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballList, AnimInMeter, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballList, TextBox_Ball, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballList, TextBox_Meter, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballList, UnknownData_MYBS, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMiniGameBaseballList, 0x03E0);
		}

		// class UAT_UIMiniGameBaseballRecord : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMiniGameBaseballRecord)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballRecord, AnimIn_JustMeet, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballRecord, AnimOut_JustMeet, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballRecord, AnimIn_Normal, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballRecord, AnimOut_Normal, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballRecord, Image_Cutin, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballRecord, Image_Unit, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballRecord, NumberImageArray, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballRecord, TextBox_Msg, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballRecord, CutinTexture, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballRecord, UnknownData_GL4V, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballRecord, UnitTexture, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameBaseballRecord, UnknownData_8IBV, 0x0428);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMiniGameBaseballRecord, 0x0430);
		}

		// class UAT_UIMiniGameCutinBaseball : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMiniGameCutinBaseball)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameCutinBaseball, StartAnimation, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameCutinBaseball, FinishAnimation, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameCutinBaseball, Image_Lang_Ball_Start00, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameCutinBaseball, Image_Lang_Ball_Fin, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameCutinBaseball, UnknownData_BXDA, 0x0390);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMiniGameCutinBaseball, 0x03A0);
		}

		// class UAT_UIMiniGameCutinRace : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMiniGameCutinRace)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameCutinRace, Start_CountAnimation, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameCutinRace, StartAnimation, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameCutinRace, FaildInAnimation, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameCutinRace, FaildOutAnimation, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameCutinRace, GoalInAnimation, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameCutinRace, GoalOutAnimation, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameCutinRace, WL_All_Nut, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameCutinRace, WL_All_Cutin_Start, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameCutinRace, WL_All_Cutin_Finish, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameCutinRace, WL_All_Cutin_Faild, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameCutinRace, Image_CountDown1, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameCutinRace, Image_CountDown2, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameCutinRace, Image_CountDown3, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameCutinRace, Image_Go, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameCutinRace, Image_Go_Eff, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameCutinRace, Image_Goal, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameCutinRace, Image_Timeup, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameCutinRace, UnknownData_F013, 0x03F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMiniGameCutinRace, 0x0418);
		}

		// class UAT_UIMiniGameEnemiesBase_Gauge : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMiniGameEnemiesBase_Gauge)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameEnemiesBase_Gauge, HideWaitSec, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameEnemiesBase_Gauge, UnknownData_U9TT, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameEnemiesBase_Gauge, AllNut, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameEnemiesBase_Gauge, InAnim, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameEnemiesBase_Gauge, OutAnim, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameEnemiesBase_Gauge, GaugeMaterial, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameEnemiesBase_Gauge, PanelSlot, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameEnemiesBase_Gauge, ImgIconBaseE, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameEnemiesBase_Gauge, ImgIconBaseAirShip, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameEnemiesBase_Gauge, Children, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameEnemiesBase_Gauge, Subclass, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameEnemiesBase_Gauge, UnknownData_DHCD, 0x03C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMiniGameEnemiesBase_Gauge, 0x03E0);
		}

		// class UAT_UIMiniGameHunt : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMiniGameHunt)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameHunt, AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameHunt, InAnim, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameHunt, LoopAnim, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameHunt, OutAnim, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameHunt, WarningImage, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameHunt, Tips, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameHunt, UnknownData_R34Q, 0x03A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMiniGameHunt, 0x0400);
		}

		// class UAT_UIMiniGameHunt_Gauge : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMiniGameHunt_Gauge)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameHunt_Gauge, AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameHunt_Gauge, InAnim, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameHunt_Gauge, OutAnim, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameHunt_Gauge, GaugeMaterial, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameHunt_Gauge, PanelSlot, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameHunt_Gauge, Children, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameHunt_Gauge, Subclass, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameHunt_Gauge, UnknownData_46ZX, 0x03B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMiniGameHunt_Gauge, 0x03C8);
		}

		// class UAT_UIMiniGameManager : public UBaseObject
		TEST_METHOD(Class__AT__AT_UIMiniGameManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameManager, MinigameDataTableAccessor, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameManager, m_Loader, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameManager, UIMiniGameRace, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameManager, UIMiniGameCutinRace, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameManager, FieldSearchCore, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameManager, UIShopCmnMoney, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameManager, UIMiniGameBaseball, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameManager, UIMiniGameBaseballRecord, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameManager, UIMiniGameCutinBaseball, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameManager, UnknownData_H5I4, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMiniGameManager, 0x0080);
		}

		// class UAT_UIMiniGamePop : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMiniGamePop)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGamePop, AnimIn, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGamePop, AnimOut, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGamePop, AllNut, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGamePop, TextTitle, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGamePop, TextSub, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGamePop, UnknownData_PDUX, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMiniGamePop, 0x03A0);
		}

		// class UAT_UIMiniGameRace : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMiniGameRace)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameRace, InAnimation, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameRace, OutAnimation, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameRace, WL_All_Nut, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameRace, WL_Pnl_Check, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameRace, WL_Txt_Title, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameRace, WL_Txt_Num_Cp, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameRace, WL_Pnl_Speed, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameRace, WL_Txt_Speed, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameRace, WL_Txt_Num_Speed10, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameRace, WL_Txt_Num_Speed01, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameRace, WL_Mgame_Tips, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameRace, WL_Enc_Direction, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameRace, WL_Mgame_Race_List00, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameRace, WL_Mgame_Race_List01, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameRace, UnknownData_RNKK, 0x03E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMiniGameRace, 0x0460);
		}

		// class UAT_UIMiniGameRaceList : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMiniGameRaceList)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameRaceList, InAnimation, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameRaceList, OutAnimation, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameRaceList, BlinkAnimation, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameRaceList, WL_Txt_Title, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameRaceList, WL_Txt_Num_Time, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameRaceList, WL_Txt_Num_Time_Eff, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMiniGameRaceList, 0x03A0);
		}

		// class UAT_UIMiniGameResult : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMiniGameResult)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, UnknownData_N4B7, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, TrainingRoomItemPosition, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, UnknownData_XYSV, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, TrainingRoomItemSize, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, UnknownData_VZ63, 0x03AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, AllNut, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, AllDitail00, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, AllDitail01, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, AllDitail02, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, WL_All_Ditail03, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, InfoLogBarList, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, PnlEff, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, IconNewRecord, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, AnimIn, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, AnimOut, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, DmyLangResult, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, InsLangResultEff, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, InsIconpnt, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, InsIconpnt01, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, TexLangResult00, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, UnknownData_8LGF, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, TexLangResult01, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, UnknownData_VT2K, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, TxtCap00, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, TxtName, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, TxtCap01, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, TxtHeadRecord, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, TxtHeadBest, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, TxtNumRecord, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, TxtNumBest, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, WL_Ins_Icon_Skill, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, WL_Txt_Name_Char, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, WL_Txt_Name_Skll, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, WL_Txt_Detail, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, WL_Icon_Clear, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, WL_Txt_Cap04, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, WL_Ins_Iconpnt01_04, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, WL_Pnl_Base, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, MinigameDataTableAccessor, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, RaceMode, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, UnknownData_27L1, 0x04D1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, AreaName, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameResult, UnknownData_PSV5, 0x0508);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMiniGameResult, 0x0550);
		}

		// class UAT_UIMiniGameTime : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMiniGameTime)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTime, InAnimation, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTime, OutAnimation, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTime, BlinkAnimation, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTime, RecoveryAnimation, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTime, WL_Ins_Num_Line, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTime, WL_Ins_Nums_Prm00, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTime, WL_Ins_Nums_Prm01, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTime, WL_Ins_Num_Line_Eff, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTime, WL_Ins_Nums_Prm00_Eff, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTime, WL_Ins_Nums_Prm01_Eff, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTime, WL_Ins_Num_Cmn_Line00Material, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTime, WL_Ins_Num_Cmn_Line01Material, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTime, WL_Ins_Nums_Prm00Material, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTime, WL_Ins_Nums_Prm00_01Material, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTime, WL_Ins_Nums_Prm01Material, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTime, WL_Ins_Nums_Prm01_01Material, 0x0438);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMiniGameTime, 0x0440);
		}

		// class UAT_UIMiniGameTop : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMiniGameTop)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTop, AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTop, WidgetBG, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTop, WidgetCloud, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTop, ListBarCtn, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTop, AnmCtn, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTop, WL_Txt_Cap01, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTop, WL_Txt_List00, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTop, WL_Txt_List01, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTop, WL_Txt_Num_Runk, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTop, WL_Txt_Num_Pt, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTop, WL_Shop_Cmn_Money, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTop, MinigameDataTableAccessor, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameTop, UnknownData_6IRS, 0x03E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMiniGameTop, 0x0428);
		}

		// class UAT_UIMiniGameWin00 : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMiniGameWin00)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameWin00, WL_Pnl_List, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameWin00, WL_Ins_Iconpnt01, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameWin00, WL_Txt_Cap00, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameWin00, WL_Txt_Page, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameWin00, WL_Xmenu_Arrow_R, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameWin00, WL_Xmenu_Arrow_L, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameWin00, MinigameDataTableAccessor, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameWin00, NeedPlayerAnimationBar, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameWin00, AllWin, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameWin00, Xmenu_Bg, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameWin00, UnknownData_VH4H, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameWin00, InAnimation, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameWin00, OutAnimation, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameWin00, UIMiniGameBar00Class, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameWin00, UIMiniGameBar01Class, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameWin00, COMMON_MARGIN, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameWin00, Margin, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameWin00, Size, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameWin00, PositionInMinigameResult, 0x043C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniGameWin00, UnknownData_SKFJ, 0x0444);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMiniGameWin00, 0x0460);
		}

		// class UAT_UIMiniMapRadar : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIMiniMapRadar)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, UnknownData_BNZN, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, MapIconSwitchClass, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, MapNaviIconSwitchClass, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, MapQuestIconSwitchClass, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, RadarCircleHelfSize, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, BlinkCheckRenge, 0x03D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, UnknownData_JMNT, 0x03DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, InRoomExistArea, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_All_Nut, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, NorthFixed, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, UnknownData_VG9G, 0x03F9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, DebugAreaName, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, MapIconOffsetGroupA, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, MapIconOffsetValueA, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, MapIconOffsetGroupB, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, MapIconOffsetValueB, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_S_AllMapSS, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_S_TxtHelp, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_S_DmyBtn, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_S_InsBtnColor00, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, UnknownData_IUCY, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WA_S_In, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WA_S_Out, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WA_S_ChangeMapMS, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_M_AllMapMS, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_M_MapTex, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_M_MapIconSwitchOrigin, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_M_NaviIconSwitchOrigin, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_M_QuestIconSwitchOrigin, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_M_PnlNorth, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_M_PlayerIcon, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_M_ImgNorth, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_M_PnlMapIcon, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_M_PnlNaviIcon, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_M_PnlOutsideSubNormalNaviIcon, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_M_PnlOutsideSubMarkedNaviIcon, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_M_PnlOutsideMainNaviIcon, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_M_PnlOutsideMarkerNaviIcon, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_M_PnlMapCamRoll, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_M_PnlMapNotCamRoll, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_M_PnlMapCamRoll2, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_M_PnlMapNotCamRoll2, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_M_Pnl_Map_MiniGame, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WA_M_In, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WA_M_Out, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WA_M_ChangeMapS, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WA_M_CoverOut, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_AllDB, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WA_DBGetAnim, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WA_DBCompAnim, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, UnknownData_HSPV, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_ImgDecoMapGrid, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_RetainerPnlMap, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, WL_Img_Frame, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, UnknownData_TEUL, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, MapIconList, 0x0610);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, MapNaviIconList, 0x0818);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, PlayerMark, 0x0868);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, HudInfo, 0x0870);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, MapDBIns, 0x0878);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, UnknownData_MXV4, 0x0880);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, CurrentAreaName, 0x0888);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, UnknownData_O0G9, 0x0890);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, PlayerIns, 0x08E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, CameraMng, 0x08E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapRadar, UnknownData_TO5I, 0x08F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMiniMapRadar, 0x0908);
		}

		// class UAT_UIMiniMapSub_DB : public UObject
		TEST_METHOD(Class__AT__AT_UIMiniMapSub_DB)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapSub_DB, WL_Icon_Db, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapSub_DB, WL_Img_Ball_Off, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapSub_DB, WL_Img_Dragon_On, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapSub_DB, WL_Img_Ins_Eff_Add_BallEff00, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapSub_DB, WL_Pnl_Db_Eff01, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapSub_DB, WL_Pnl_Db_Eff00, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapSub_DB, WL_Pnl_Txt, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapSub_DB, DBGetAnim, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapSub_DB, DBCompAnim, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapSub_DB, MainWidget, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapSub_DB, DBGetText, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapSub_DB, WL_AllDB, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapSub_DB, UnknownData_2OAV, 0x00E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMiniMapSub_DB, 0x0100);
		}

		// class UAT_UIMiniMapIcon : public UObject
		TEST_METHOD(Class__AT__AT_UIMiniMapIcon)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapIcon, TargetActor, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapIcon, WL_Owner, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapIcon, WL_Parent, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapIcon, WL_ParantMapTex, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapIcon, WL_Icon_ImgSw, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapIcon, UnknownData_9AX4, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMiniMapIcon, 0x00A0);
		}

		// class UAT_UIMiniMapNaviIcon : public UAT_UIMiniMapIcon
		TEST_METHOD(Class__AT__AT_UIMiniMapNaviIcon)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapNaviIcon, WL_OutsideNormalParent, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapNaviIcon, WL_OutsideMarkedParent, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapNaviIcon, UnknownData_Y4GZ, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapNaviIcon, WL_QuestIconSw, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIMiniMapNaviIcon, WL_NaviIconSw, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMiniMapNaviIcon, 0x0108);
		}

		// class UAT_UINotificationManager : public UActorComponent
		TEST_METHOD(Class__AT__AT_UINotificationManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UINotificationManager, LevelUpLogStartWaitSeconds, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UINotificationManager, UnknownData_9MHM, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UINotificationManager, MinimapIns, 0x0218);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UINotificationManager, 0x0220);
		}

		// class UAT_UINumber : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UINumber)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UINumber, 0x0370);
		}

		// class UAT_UIPlayerStateIcon : public UAT_UIStateIconCtnBase
		TEST_METHOD(Class__AT__AT_UIPlayerStateIcon)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIPlayerStateIcon, bEnemyMode, 0x0728);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIPlayerStateIcon, UnknownData_MIJN, 0x0729);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIPlayerStateIcon, TargetPlayer, 0x0730);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIPlayerStateIcon, PlayerHud, 0x0738);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIPlayerStateIcon, SpoHud, 0x0740);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIPlayerStateIcon, UnknownData_GX9D, 0x0748);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIPlayerStateIcon, 0x0768);
		}

		// class UAT_UIPopularGage : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIPopularGage)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIPopularGage, GaugeUpdateTime, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIPopularGage, UnknownData_6GGF, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIPopularGage, Canvas_AllNut, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIPopularGage, Canvas_Effect, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIPopularGage, Border_Max, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIPopularGage, Border_Overlay, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIPopularGage, HBox_Popular, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIPopularGage, HBox_Overlay, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIPopularGage, Image_Gauge, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIPopularGage, Image_PopularList, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIPopularGage, Image_OverlayList, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIPopularGage, TextBox_Max, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIPopularGage, Anim_Achieve, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIPopularGage, PopMemory, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIPopularGage, UIRewardBar_List, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIPopularGage, UnknownData_03K0, 0x0408);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIPopularGage, 0x0458);
		}

		// class UAT_UIPopularGageMemory : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIPopularGageMemory)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIPopularGageMemory, Txt_Popular, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIPopularGageMemory, Img_Popular_Mark, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIPopularGageMemory, WA_Start, 0x0380);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIPopularGageMemory, 0x0388);
		}

		// class UAT_UIQteTingGauge : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIQteTingGauge)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQteTingGauge, Ins_Gauge, 0x03B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIQteTingGauge, 0x03B8);
		}

		// class UAT_UIQteChaseAttack : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIQteChaseAttack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQteChaseAttack, ChaseBtnParam, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQteChaseAttack, GuardBtnParam, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQteChaseAttack, WL_AllNut, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQteChaseAttack, WL_Ins_Base_Txt, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQteChaseAttack, WL_Ins_Xef_Fad01, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQteChaseAttack, WL_Dmy_Btn00, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQteChaseAttack, WL_Ins_Btn_Eff00, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQteChaseAttack, WL_TxtAction, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQteChaseAttack, WL_RingGauge, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQteChaseAttack, WL_IconChase, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQteChaseAttack, WL_IconGuard, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQteChaseAttack, WA_AnimCtn, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQteChaseAttack, UnknownData_ODIG, 0x0480);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIQteChaseAttack, 0x04A0);
		}

		// class UAT_UIQteBarrage : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIQteBarrage)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQteBarrage, WL_AllNut, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQteBarrage, WL_BtnEff, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQteBarrage, WL_Btn, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQteBarrage, WA_In, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQteBarrage, WA_Out, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQteBarrage, WA_Loop, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQteBarrage, InputBtnParam, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQteBarrage, UnknownData_A863, 0x0410);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIQteBarrage, 0x0418);
		}

		// class UAT_UIQteManager : public UActorComponent
		TEST_METHOD(Class__AT__AT_UIQteManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIQteManager, 0x0100);
		}

		// class UAT_UIQuestImg : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIQuestImg)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestImg, RootPanel, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestImg, QuestPicturePanel, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestImg, QuestPictureImage, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestImg, Before_Img_Quest, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestImg, NextPreviewBasePanel, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestImg, NextPreviewTitlePanel, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestImg, NextPreviewTitleImage, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestImg, NextPreviewTitleText, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestImg, NextPreviewDetailPanel, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestImg, NextPreviewDetailHeaderText, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestImg, NextPreviewDetailSubjectText, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestImg, SceneCapturePanel, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestImg, SceneCaptureImage, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestImg, CrossFadeTime, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestImg, PanTime, 0x03DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestImg, QuestImgAnimationCurve, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestImg, ImgTexture, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestImg, UnknownData_2RN5, 0x03F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIQuestImg, 0x04F8);
		}

		// class UAT_UIQuestMainClear : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIQuestMainClear)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClear, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClear, Canvas_DispArea, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClear, VBox_Result, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClear, UIScrollBar, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClear, UICloudBtm, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClear, UIQuestMainClearRank, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClear, UIClearBar_List, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClear, Anim_In, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClear, Anim_Out, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClear, UIXCmnHeader, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClear, UnknownData_V4G0, 0x03C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIQuestMainClear, 0x03F0);
		}

		// class UAT_UIQuestMainClearBar : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIQuestMainClearBar)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearBar, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearBar, Canvas_Result, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearBar, Border_Result, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearBar, Image_Rank, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearBar, Image_RankEffect, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearBar, Image_RankOverlay, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearBar, TextBox_Item, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearBar, Widget_Shine, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearBar, UIClearDetail_List, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearBar, Anim_StartRankS, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearBar, Anim_StartRankA, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearBar, Anim_StartRankB, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearBar, Anim_In, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearBar, Anim_DetailIn, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearBar, Anim_DetailOut, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearBar, UnknownData_2A5A, 0x03F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIQuestMainClearBar, 0x0430);
		}

		// class UAT_UIQuestMainClearDetail : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIQuestMainClearDetail)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearDetail, Canvas_Number, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearDetail, Image_Rank, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearDetail, Image_PercentageList, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearDetail, TextBox_Detail, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearDetail, UnknownData_7MA3, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIQuestMainClearDetail, 0x03F0);
		}

		// class UAT_UIQuestMainClearRank : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIQuestMainClearRank)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearRank, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearRank, Canvas_Sun, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearRank, Canvas_Spark, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearRank, Canvas_Effect, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearRank, Canvas_Light, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearRank, Image_Sun, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearRank, Image_Rank, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearRank, Image_RankEffect, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearRank, Image_RankOverlay, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearRank, Image_Total, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearRank, Anim_StartRankS, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearRank, Anim_StartRankA, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearRank, Anim_StartRankB, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearRank, Anim_EndRankS, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearRank, Anim_EndRankA, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearRank, Anim_EndRankB, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainClearRank, UnknownData_DFDL, 0x03F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIQuestMainClearRank, 0x04A8);
		}

		// class UAT_UIQuestMainLogo : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIQuestMainLogo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainLogo, RootPanel, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainLogo, ChapterTitleImage, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainLogo, AppearanceAnimation, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainLogo, DisappearanceAnimation, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainLogo, UnknownData_LQMU, 0x03D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIQuestMainLogo, 0x03E0);
		}

		// class UAT_UIQuestMainStart : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIQuestMainStart)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainStart, RootPanel, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainStart, TitleText, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainStart, AppearAnimation, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainStart, IdleAnimation, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainStart, DisappearAnimation, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainStart, QuestManager, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainStart, UnknownData_WWTW, 0x03E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIQuestMainStart, 0x03F0);
		}

		// class UAT_UIQuestMainTelop : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIQuestMainTelop)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainTelop, UnknownData_F9F0, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainTelop, AllNut, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainTelop, PnlTelopLTop, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainTelop, TelopTxtLTopList, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainTelop, PnlTelopRTop, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainTelop, TelopTxtRTopList, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainTelop, PnlTelopLBottom, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainTelop, TelopTxtLBottomList, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainTelop, PnlTelopRBottom, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainTelop, TelopTxtRBottomList, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainTelop, AnimIn, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainTelop, AnimOut, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainTelop, OriginLTopPos, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainTelop, OriginRTopPos, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainTelop, OriginLBottomPos, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestMainTelop, OriginRBottomPos, 0x0408);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIQuestMainTelop, 0x0410);
		}

		// class UAT_UIQuestNavigation : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIQuestNavigation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, WL_All_Nut, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, WL_All_Quest_Navi, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, WL_Caption_Title_Txt, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, WL_Caption_Detail_Txt, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, WL_Caption_ExMark, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, WL_Pnl_Quest_Title, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, WL_All_Title_Main, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, WL_All_Navi_Main_ListRoot, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, WL_Pnl_Navi_Main, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, WL_MainQuestListTitle, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, WL_Pnl_Eff_Main, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, WL_QuestListMain, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, WL_All_Title_Sub, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, WL_All_Navi_Sub_ListRoot, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, WL_Pnl_Navi_Sub, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, WL_SubQuestListTitle, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, WL_Pnl_Eff_Sub, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, WL_QuestListSub, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, WA_Main_Update, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, WA_Sub_Update, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, WA_Sub_Title, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, WA_Main_Out, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, WA_Sub_Out, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, WA_Main_Title, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, WA_Change_CompZ, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, WA_Change_Quest, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, MainVBox_ListExistBottom, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, MainVBox_ListNotExistBottom, 0x04A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, UnknownData_8FCR, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigation, CheckAnimationWait, 0x082C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIQuestNavigation, 0x0830);
		}

		// class UAT_UIQuestNavigationListItem : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIQuestNavigationListItem)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigationListItem, UnknownData_YQNE, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigationListItem, Base_LeftEndWidth, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigationListItem, Base_TextScrollWidth, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigationListItem, Base_TextScrollWidthMin, 0x03BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigationListItem, Base_CheckSpaceWidth, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigationListItem, Base_RightEndWidth, 0x03C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigationListItem, WL_QuestDetail, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigationListItem, WL_CollectionNum, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigationListItem, WL_Xmenu_Check, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigationListItem, WL_Img_Base, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigationListItem, UnknownData_WUV0, 0x03E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIQuestNavigationListItem, 0x0408);
		}

		// class UAT_UIQuestNavigationExMarkEff : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIQuestNavigationExMarkEff)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestNavigationExMarkEff, UnknownData_F64Q, 0x03B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIQuestNavigationExMarkEff, 0x03C0);
		}

		// class UAT_UIQuestRetry : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIQuestRetry)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, All_Nut, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Txt_Cap00, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Txt_Story_Main, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Txt_Cap01, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Txt_Story_Detail, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Txt_Cap03, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Txt_List_Battle00, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Txt_List_Battle01, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Txt_List_Battle02, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Txt_List_Battle03, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Ins_Rate_S00, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Ins_Rate_S01, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Ins_Rate_S02, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Ins_Rate_S03, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Ins_Rate_M, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Txt_Cap04, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Txt_Story_Main01, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Txt_Page, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Xmenu_Arrow_R, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Xmenu_Arrow_L, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Pnl_Story_Sub00, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Pnl_Story_Sub01, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Pnl_Story_Sub02, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Pnl_Story_Sub03, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Pnl_Story_Sub04, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Pnl_Story_Sub05, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Pnl_Story_Sub06, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Pnl_Story_Sub07, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Pnl_Story_Sub08, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Pnl_Story_Sub09, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Txt_Story_Sub00, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Txt_Story_Sub01, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Txt_Story_Sub02, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Txt_Story_Sub03, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Txt_Story_Sub04, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Txt_Story_Sub05, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Txt_Story_Sub06, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Txt_Story_Sub07, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Txt_Story_Sub08, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Txt_Story_Sub09, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Icon_Clear_S00, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Icon_Clear_S01, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Icon_Clear_S02, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Icon_Clear_S03, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Icon_Clear_S04, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Icon_Clear_S05, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Icon_Clear_S06, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Icon_Clear_S07, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Icon_Clear_S08, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Icon_Clear_S09, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Ins_Icon_Quest_Main00, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Ins_Icon_Quest_Main01, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Ins_Icon_Quest_Sub00, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Ins_Icon_Quest_Sub01, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Img_Lang_Total00, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Xlist_List07_Lay8, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Xmenu_Bg, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Anim_In, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Anim_Out, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Anim_Chage_Main, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Anim_Chage_Sub, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Pnl_Story_Sub_List, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Txt_Story_Sub_List, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Icon_Clear_S_List, 0x05B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Txt_List_Battle_List, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, Ins_Rate_S_List, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, UIXCmnHeader, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetry, UnknownData_PNPT, 0x05F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIQuestRetry, 0x0738);
		}

		// class UAT_UIQuestRetryBar : public UAT_UIList00Choice
		TEST_METHOD(Class__AT__AT_UIQuestRetryBar)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetryBar, All_Nut, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetryBar, Txt_List00, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetryBar, Txt_List01, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetryBar, Ins_Rate_M, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetryBar, TitleTextMaterial, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetryBar, EpisodeTextMaterial, 0x0458);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIQuestRetryBar, 0x0460);
		}

		// class UAT_UIQuestRetryInfo : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIQuestRetryInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetryInfo, AllNut, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetryInfo, TxtReplay00, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetryInfo, ReplayInAnimation, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetryInfo, ReplayOutAnimation, 0x03C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIQuestRetryInfo, 0x03D0);
		}

		// class UAT_UIQuestRetryList : public UAT_UIMenuListBase00
		TEST_METHOD(Class__AT__AT_UIQuestRetryList)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestRetryList, UnknownData_IUUY, 0x0478);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIQuestRetryList, 0x0498);
		}

		// class UAT_UIQuestSub : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIQuestSub)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, RewardClass, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, Canvas_AllNut, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, Canvas_PnlBg, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, Canvas_PnlQuest, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, Canvas_PnlChoice, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, Canvas_PnlStamp, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, Canvas_PnlClear, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, Canvas_PnlTitle, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, Image_DirectionQuest, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, Image_DirectionClear, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, Image_LevelList, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, TextBox_Title, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, TextBox_LevelCaption, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, TextBox_DetailTitle, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, TextBox_Detail, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, TextBox_RewardTitle, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, UIListParts_List, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, UIChoiceWin, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, Anim_StartIn, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, Anim_StartLoop, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, Anim_StartOut, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, Anim_Title, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, Anim_ClearTelop, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, Anim_ClearIn, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, Anim_ClearOut, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, UIXCmnHeader, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, UIReward, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, UnknownData_QNUQ, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSub, StoryTitleEffectActor, 0x0520);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIQuestSub, 0x0528);
		}

		// class UAT_UIQuestSubReward : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIQuestSubReward)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSubReward, Canvas_PnlSubReward, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSubReward, Canvas_PnlWin, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSubReward, Canvas_PnlWinDeco, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSubReward, Canvas_PnlAllContents, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSubReward, Image_RewardCaption, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSubReward, Image_RewardCaptionEffect, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSubReward, UIRewardWindow, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSubReward, Anim_RewardIn, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSubReward, Anim_RewardLoop, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSubReward, Anim_RewardOut, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIQuestSubReward, UnknownData_E6AN, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIQuestSubReward, 0x0468);
		}

		// class UAT_UIRewardBar : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIRewardBar)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIRewardBar, Ins_Icon_Item, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIRewardBar, Canvas_AllNut, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIRewardBar, Canvas_Popular, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIRewardBar, HBox_Popular, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIRewardBar, Image_UnderScore, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIRewardBar, Image_PopularList, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIRewardBar, TextBox_Max, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIRewardBar, TextBox_Reward, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIRewardBar, TextBox_Num, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIRewardBar, UnknownData_1FM0, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIRewardBar, 0x03D8);
		}

		// class UAT_UIRewardBarCommu : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIRewardBarCommu)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIRewardBarCommu, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIRewardBarCommu, Canvas_Popular, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIRewardBarCommu, HBox_Popular, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIRewardBarCommu, Image_UnderScore, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIRewardBarCommu, Image_PopularList, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIRewardBarCommu, TextBox_Max, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIRewardBarCommu, OutlineMat_TextBox_Max, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIRewardBarCommu, FontMat_TextBox_Max, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIRewardBarCommu, TextBox_Reward, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIRewardBarCommu, TextBox_Num, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIRewardBarCommu, Icon_Item, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIRewardBarCommu, Img_Icon_Popular, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIRewardBarCommu, UnknownData_GC2S, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIRewardBarCommu, 0x03F0);
		}

		// class UAT_UIScreenCapture : public UObject
		TEST_METHOD(Class__AT__AT_UIScreenCapture)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIScreenCapture, RequestSize, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIScreenCapture, ResultTexture, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIScreenCapture, PackingSize, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIScreenCapture, PackedArray, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIScreenCapture, UnknownData_L9DH, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIScreenCapture, 0x0068);
		}

		// class UAT_UIScrollBar : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIScrollBar)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIScrollBar, BarMargin, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIScrollBar, UnknownData_KF21, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIScrollBar, AllScrollBar, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIScrollBar, BarBase, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIScrollBar, ScrollBar, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIScrollBar, ScrollPanel, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIScrollBar, AnimIn, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIScrollBar, AnimOut, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIScrollBar, UnknownData_0ZW6, 0x03A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIScrollBar, 0x03D8);
		}

		// class UAT_UIScrollText : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIScrollText)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIScrollText, TextSize, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIScrollText, ScrollWait_ms, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIScrollText, UnknownData_JS7Z, 0x03B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIScrollText, 0x0408);
		}

		// class UAT_UIShopCmnMoney : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIShopCmnMoney)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCmnMoney, WL_Pnl_Mdl, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCmnMoney, WL_Icon_Item, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCmnMoney, WL_Txt_Mdl, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCmnMoney, WL_Pnl_Total, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCmnMoney, WL_Txt_Pay, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCmnMoney, WL_Txt_Num_Pay, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCmnMoney, WL_Txt_Num_Money, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCmnMoney, WL_Pnl_Money, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCmnMoney, InAnimation, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCmnMoney, OutAnimation, 0x03B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIShopCmnMoney, 0x03C0);
		}

		// class UAT_UIShopCommon : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIShopCommon)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCommon, UnknownData_Y1Y8, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCommon, UIXcmnBg, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCommon, WL_Xlist_Bar04, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCommon, WL_Txt_Title, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCommon, WL_Ins_Triangle00_01, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCommon, WL_Txt_Total, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCommon, WL_Txt_Num_Total, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCommon, WL_Txt_Num_Money, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCommon, WL_Txt_Cap01, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCommon, WL_Txt_Detail, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCommon, WL_Txt_Stock, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCommon, WL_Txt_Price, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCommon, WL_Txt_Num, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCommon, WL_Txt_Have, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCommon, WL_Txt_Cap00, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCommon, WL_Xmenu_Scrollbar, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCommon, UnknownData_QLQW, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCommon, InAnimation, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCommon, OutAnimation, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCommon, UnknownData_4R97, 0x04A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIShopCommon, 0x04D0);
		}

		// class UAT_UIShopCustomColorItem : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIShopCustomColorItem)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCustomColorItem, Border_Cursor, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCustomColorItem, Image_Color, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCustomColorItem, Anim_Enter, 0x0380);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIShopCustomColorItem, 0x0388);
		}

		// class UAT_UIShopCustomColor : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIShopCustomColor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCustomColor, Border_Balloon, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCustomColor, Border_Pallet, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCustomColor, TextBox_Caption, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCustomColor, TextBox_Name, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCustomColor, Image_CurrentColor, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCustomColor, UIColorItem_List, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCustomColor, Anim_In, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCustomColor, Anim_Out, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopCustomColor, UnknownData_Y5Z7, 0x03B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIShopCustomColor, 0x03D8);
		}

		// class UAT_UIShopDevelop : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIShopDevelop)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelop, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelop, Image_Icon, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelop, Ins_Icon_Rare00, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelop, Image_Machine, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelop, Image_Item, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelop, TextBox_CaptionName, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelop, TextBox_CaptionMaterial, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelop, TextBox_CaptionUnit, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelop, UIXcmnBg, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelop, UICmnTab, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelop, UIXlistItem, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelop, UIDevParam_List, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelop, UIDevMaterial_List, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelop, Anim_In, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelop, Anim_Out, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelop, UIXCmnHeader, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelop, UIShopDevelopResult, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelop, UIShopComplete, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelop, MenuManager, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelop, UnknownData_C3Z6, 0x0418);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIShopDevelop, 0x05D0);
		}

		// class UAT_UIShopDevelopCustom : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIShopDevelopCustom)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, Image_IconGroup, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, TextBox_Name, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, TextBox_Level, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, TextBox_Next, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, TextBox_Memory, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, TextBox_CaptionNext, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, TextBox_CaptionMemory, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, UIDevGauge_Next, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, UIDevGauge_Memory, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, UIXcmnBg, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, UI3DCapture_Mecha, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, UICmnTab, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, UIXlistEquip, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, UIXlistPowerUp, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, UIXlistParts, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, UIXlistColor, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, UIDevParam_List, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, Anim_In, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, Anim_Out, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, Anim_SubListIn, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, Anim_SubListOut, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, UIXCmnHeader, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, UIShopDevelopResult, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, UIShopComplete, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, MenuManager, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopCustom, UnknownData_JOMT, 0x0448);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIShopDevelopCustom, 0x0BE0);
		}

		// class UAT_UIShopDevelopResult : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIShopDevelopResult)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopResult, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopResult, Image_Machine, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopResult, Image_Item, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopResult, Ins_Icon_Rare00, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopResult, TextBox_Title, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopResult, TextBox_Message, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopResult, UIDevParam_List, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopResult, Anim_In, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopResult, Anim_Out, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopResult, Table_RobotLv, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopResult, Table_AirCarLv, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopResult, MenuManager, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevelopResult, UnknownData_IS0R, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIShopDevelopResult, 0x0438);
		}

		// class UAT_UIShopDevParam : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIShopDevParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevParam, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevParam, HBox_ParamS, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevParam, Image_Gauge, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevParam, Image_Rank, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevParam, Image_Arrow, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevParam, Image_RankUp, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevParam, Icon_LevelUp, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevParam, TextBox_Label, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevParam, TextBox_Before, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevParam, TextBox_ParamS, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevParam, TextBox_ParamL, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevParam, FontMat_ParamS, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevParam, OutlineMat_ParamS, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevParam, UnknownData_3LJM, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIShopDevParam, 0x0458);
		}

		// class UAT_UIShopDevGauge : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIShopDevGauge)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevGauge, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevGauge, Image_Gauge, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevGauge, Anim_Full, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevGauge, TextBox_Relation, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevGauge, UnknownData_1N3P, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevGauge, DefaultGaugeUpdateSeconds, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevGauge, UnknownData_E1GL, 0x03CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopDevGauge, GaugeUpdateSpeedThresholdTable, 0x03D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIShopDevGauge, 0x03E0);
		}

		// class UAT_UIShopInfo : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIShopInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopInfo, AllNut, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopInfo, AnimIn, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopInfo, AnimOut, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopInfo, ShopInfoParam, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopInfo, UnknownData_L8V6, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopInfo, TexDetail, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopInfo, WidgetBG, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopInfo, WL_Shop_Cmn_Money, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopInfo, ScrollBar, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopInfo, HeaderTitle, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopInfo, WL_Title, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopInfo, WL_Price, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopInfo, WL_Cap01, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopInfo, UnknownData_SVKN, 0x0430);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIShopInfo, 0x0490);
		}

		// class UAT_UIShopTop : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIShopTop)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTop, UnknownData_L9GD, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTop, All_Nut, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTop, Xmenu_Bg, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTop, Xmenu_Cloud_Btm, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTop, Xmenu_Commu, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTop, WidgetSkillList, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTop, WidgetSkillDetail, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTop, Shop_Cmn_Money, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTop, Pnl_Win, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTop, ListBarCtn, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTop, AnmCtn, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTop, UnknownData_FZYT, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTop, bCloseRequest, 0x0474);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTop, UnknownData_9ECG, 0x0475);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIShopTop, 0x0478);
		}

		// class UAT_UIShopTop01 : public UAT_UIShopTop
		TEST_METHOD(Class__AT__AT_UIShopTop01)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTop01, UnknownData_OFTY, 0x0478);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIShopTop01, 0x0490);
		}

		// class UAT_UIShopTraining : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIShopTraining)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, Img_Fade00, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, Img_Fade01, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, Img_Fade02, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, Owner, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, InAnimation, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, OutAnimation, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, ClearAnimation, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, Slide_R_InAnimation, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, Slide_R_OutAnimation, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, Slide_L_InAnimation, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, Slide_L_OutAnimation, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, Xlist_List05_Lay7, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, Txt_Cap01, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, Txt_Tab_L, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, Txt_Tab_R, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, Xmenu_Arrow_L, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, Xmenu_Arrow_R, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, Xlist_List00_Lay9, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, Txt_Recommend, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, Txt_Num_Lv, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, Start_Quest_Bar00_00, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, Start_Quest_Bar00_01, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, Pnl_All_Recommend, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, Txt_Cond, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, Icon_Clear, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, Img_Lang_Icon_Vs, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, TimeToStartFade, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, EndEventBattleFadeDuration, 0x0484);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, TrainingResultAnimationPathMap, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, UnknownData_GVZK, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, WL_TrainingDetailTask, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, WL_CaptureSkillDetail, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, TrainingDataTableAccessor, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining, UnknownData_R7LU, 0x05F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIShopTraining, 0x0800);
		}

		// class UAT_UIShopTraining00 : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIShopTraining00)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining00, UnknownData_MCPU, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining00, WL_Xlist_List04_Lay9, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining00, WL_Txt_Cap00, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining00, WL_Txt_Cond, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining00, Txt_Detail, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining00, Start_Quest_Bar00List, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining00, WL_Icon_Clear, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining00, Img_Fad00, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining00, Img_Fad01, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining00, InAnimation, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining00, OutAnimation, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining00, ClearAnimation, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining00, UnknownData_Q8EA, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining00, Loader_Map, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining00, UIShopComplete, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining00, UnknownData_677T, 0x0470);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIShopTraining00, 0x0480);
		}

		// class UAT_UIShopTraining01 : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIShopTraining01)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, InAnimation, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, OutAnimation, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, Slide_R_InAnimation, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, Slide_R_OutAnimation, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, Slide_L_InAnimation, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, Slide_L_OutAnimation, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Xlist_List05_Lay7, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Txt_Cap01, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Txt_Tab_L, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Txt_Tab_R, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Txt_Cap03, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Txt_Recommend, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Txt_Num_Lv, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Txt_Name_E00, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Txt_Lv_E00, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Ins_Mask_Char_E, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Img_Dmy_Charicon, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Txt_Name_E01, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Txt_Lv_E01, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Txt_Name_E02, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Txt_Lv_E02, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Txt_Task_Detail, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Txt_Cap00, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Xlist_Bar02_00, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Xlist_Bar02_01, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Txt_Cap04, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Ins_Icon_Skill, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Txt_Name_Skill, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Txt_Detail, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Icon_Clear, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Img_Fad00, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Img_Lang_Icon_Vs01, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Xmenu_Arrow_L, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, WL_Xmenu_Arrow_R, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining01, UnknownData_IMGP, 0x0490);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIShopTraining01, 0x0518);
		}

		// class UAT_UIShopTraining02 : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIShopTraining02)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, UnknownData_K0LK, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, InAnimation, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, OutAnimation, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Slide_R_InAnimation, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Slide_R_OutAnimation, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Slide_L_InAnimation, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Slide_L_OutAnimation, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Xlist_List05_Lay7, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Txt_Cap03, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Txt_Recommend, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Txt_Num_Lv, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Txt_Name_E00, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Txt_Lv_E00, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Txt_Name_E01, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Txt_Lv_E01, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Dmy_Charicon_D_00, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Txt_Task_Detail00, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Txt_Name_E02, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Txt_Lv_E02, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Dmy_Charicon_D_01, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Txt_Cap00, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Xlist_Bar02_00, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Xlist_Bar02_01, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Xlist_Bar02_02, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Xlist_Bar02_03, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Xlist_Bar02_04, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Txt_Detail, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Img_Lang_Icon_Vs01, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Img_Char_Fram_Spo_00, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIShopTraining02, Img_Char_Fram_Spo_01, 0x0540);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIShopTraining02, 0x0548);
		}

		// class UAT_UISkillChain : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UISkillChain)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillChain, Chain1_Threshold, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillChain, Chain2_Threshold, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillChain, Chain3_Threshold, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillChain, Chain4_Threshold, 0x03BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillChain, TotalInDelayTime, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillChain, UnknownData_8OWD, 0x03C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillChain, WL_AllChain, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillChain, WL_ImgLangChain00, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillChain, WL_InsLangChain01, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillChain, WL_InsLangChain02, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillChain, WL_InsNumChain1, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillChain, WL_InsNumChainEff1, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillChain, WL_InsNumChain10, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillChain, WL_InsNumChainEff10, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillChain, WL_InsNumChain100, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillChain, WL_InsNumChainEff100, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillChain, WA_Chain01, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillChain, WA_Chain02, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillChain, WA_Chain03, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillChain, WA_Chain04, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillChain, WA_ChainFinish, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillChain, WA_InChain, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillChain, BtlMng, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillChain, UnknownData_G8TE, 0x0450);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UISkillChain, 0x0470);
		}

		// class UAT_UISkillChainEffect : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UISkillChainEffect)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UISkillChainEffect, 0x0370);
		}

		// class UAT_UISkillCustomize : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UISkillCustomize)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, MenuBg, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, SkillListMenu, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, CharNameTxt, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, CategoryTitleTxt, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, CategoryLeftTxt, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, CategoryRightTxt, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, SkillDetailTxt, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, SkillNameTxt, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, SkillLevelTitleTxt, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, SkillLevelTxt, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, SkillCostTitleTxt, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, SkillSpTxt, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, MenuArrowL, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, MenuArrowR, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, CategoryPlateCtn, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, SkillDetailPnl, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, SkillDetailIconImg, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, SkillDetailFadeImg, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, InAnim, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, OutAnim, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, RInAnim, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, ROutAnim, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, LInAnim, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, LOutAnim, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, DetailInAnim, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, DetailOutAnim, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, pSkillMng, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, pSkillTree, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, Active1stGroupTitleText, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, Active2ndGroupTitleText, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomize, UnknownData_ZFQ7, 0x0468);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UISkillCustomize, 0x0730);
		}

		// class UAT_UISkillCustomizePlate : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UISkillCustomizePlate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomizePlate, SkillNameTxt, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomizePlate, SuperPassiveNameTxt, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomizePlate, SkillNameRegistrationTxt, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomizePlate, SkillIconImg, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomizePlate, BaseNormalImage, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomizePlate, BaseBlinkImage, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomizePlate, InvalidCoverImage, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomizePlate, SelectActiveBorder, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomizePlate, ButtonIconPanel, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomizePlate, ButtonIconImage, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomizePlate, RegistrationAnim, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomizePlate, SelectAnim, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomizePlate, CancelAnim, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomizePlate, ReleaseAnim, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillCustomizePlate, UnknownData_MXOD, 0x03E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UISkillCustomizePlate, 0x0400);
		}

		// class UAT_UISkillEnemyIcon : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UISkillEnemyIcon)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillEnemyIcon, AllNutWidget, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillEnemyIcon, AllNutWidgetName, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillEnemyIcon, MainWidget, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillEnemyIcon, MainWidgetName, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillEnemyIcon, Anim_In, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillEnemyIcon, Anim_Out, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillEnemyIcon, Anim_finish, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillEnemyIcon, ImageA, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillEnemyIcon, ImageB, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillEnemyIcon, TexNormal, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillEnemyIcon, TexBoss, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillEnemyIcon, TexNormalEff, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillEnemyIcon, TexBossEff, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillEnemyIcon, UnknownData_5M6Q, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillEnemyIcon, m_xBackCharacter, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillEnemyIcon, HudInfo, 0x03F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UISkillEnemyIcon, 0x03F8);
		}

		// class UAT_UISkillEnemySmallIcon : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UISkillEnemySmallIcon)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillEnemySmallIcon, IconImg, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillEnemySmallIcon, IconEffImg, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillEnemySmallIcon, InAnim, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillEnemySmallIcon, OutAnim, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillEnemySmallIcon, FinishAnim, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillEnemySmallIcon, IconTex, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillEnemySmallIcon, IconEffTex, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillEnemySmallIcon, UnknownData_ST2H, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UISkillEnemySmallIcon, 0x03E0);
		}

		// class UAT_UISkillName : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UISkillName)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillName, EnsureDisplaySec, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillName, DisplaySec, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillName, WL_All_Nut, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillName, WL_Txt_Skill_Name, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillName, WL_Ins_Icon_Skill01_Line, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillName, WL_Icon_Skill01_01, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillName, WL_InsIconRare00, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillName, WA_In, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillName, WA_Out, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillName, UnknownData_87MJ, 0x03F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UISkillName, 0x0410);
		}

		// class UAT_UISkillTree : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UISkillTree)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTree, Ins_Connect00, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTree, Skilltree_Panel, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTree, Skilltree_Panel_S, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTree, Skilltree_Cursor, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTree, All_Skilltree, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTree, Pnl_Contents_Parts, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTree, Ins_Fad_Blink01, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTree, CursorSmallScale, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTree, WL_ContentFrameSlot, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTree, WL_ContentPartsSlot, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTree, WL_PanelTbl, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTree, WL_LineTbl, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTree, PanelInterval, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTree, EndPointOffset, 0x0424);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTree, ZoomTimeSec, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTree, PanelFramePaddind, 0x042C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTree, LineSparkColor, 0x0434);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTree, LineSparkColorSuper, 0x0444);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTree, UnknownData_QBI1, 0x0454);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTree, WL_LineSpark, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTree, WA_Start, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTree, WA_In, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTree, UnknownData_J8QP, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTree, OwnerMenu, 0x1510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTree, UnknownData_WPEI, 0x1518);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UISkillTree, 0x1650);
		}

		// class UAT_UISkillTreeCursor : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UISkillTreeCursor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreeCursor, WA_In, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreeCursor, WA_Loop, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreeCursor, WA_Out, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreeCursor, WL_ImgIconMicon, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreeCursor, UnknownData_VJU7, 0x03D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UISkillTreeCursor, 0x03E8);
		}

		// class UAT_UISkillTreeMenu : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UISkillTreeMenu)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreeMenu, Xmenu_Bg, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreeMenu, UISkillTree, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreeMenu, Img_Icon_Spo, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreeMenu, Ins_Char_Mask, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreeMenu, Txt_Name, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreeMenu, All_Start_Skilltree, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreeMenu, Txt_Lv_Num, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreeMenu, Txt_Energy, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreeMenu, Txt_Energy_Num, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreeMenu, Ins_Icon_Skill, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreeMenu, Txt_Skillname, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreeMenu, Txt_Detail, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreeMenu, InAnim, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreeMenu, OutAnim, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreeMenu, MenuWindowIns, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreeMenu, WL_Skilltree_Zorb00, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreeMenu, UnknownData_ALV9, 0x0438);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UISkillTreeMenu, 0x04C8);
		}

		// class UAT_UISkillTreePanel : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UISkillTreePanel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreePanel, WA_Confirm, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreePanel, ConfirmSuperAnimation, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreePanel, In_SuperpassiveAnimation, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreePanel, WL_Ins_Panel_Base, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreePanel, WL_Ins_Panel_Cover, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreePanel, WL_Ins_Icon_Skill00, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreePanel, WL_Ins_Icon_Traning, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreePanel, WL_Ins_Icon_Rare00, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreePanel, WL_Pnl_Panel_Eff, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreePanel, WL_Pnl_Panel_Super_Eff, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreePanel, WL_Img_Panel_Shdw, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreePanel, WL_Ins_Xef_Fad12, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreePanel, Ins_Xef_Fad00, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreePanel, Ins_Xef_Fad01, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreePanel, child, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreePanel, Owner, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreePanel, UnknownData_M8L7, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreePanel, LineIns, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreePanel, UnknownData_VFAQ, 0x0438);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UISkillTreePanel, 0x0448);
		}

		// class UAT_UISkillTreeLine : public UObject
		TEST_METHOD(Class__AT__AT_UISkillTreeLine)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreeLine, UnknownData_KBB1, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreeLine, LineIns, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkillTreeLine, UnknownData_JIR9, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UISkillTreeLine, 0x0048);
		}

		// class UAT_UISkilltreeZorb : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UISkilltreeZorb)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkilltreeZorb, UnknownData_2T6M, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkilltreeZorb, Ins_Item, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISkilltreeZorb, Txt_Zorb_Num, 0x03C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UISkilltreeZorb, 0x03D0);
		}

		// class UAT_UIStartChar : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartChar)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartChar, InAnimation, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartChar, OutAnimation, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartChar, WL_Icon_Load, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartChar, WL_StartCharBarList, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartChar, WL_XmenuBg, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartChar, WL_Xmenu_Scrollbar, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartChar, Capture_Widget, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartChar, IconTextureList, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartChar, BarDataList, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartChar, CaptureParamList, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartChar, NowLoadingPathList, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartChar, UnknownData_RL04, 0x0410);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartChar, 0x0498);
		}

		// class UAT_UIStartCharBar : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartCharBar)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCharBar, EnterAnimation, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCharBar, BlinkAnimation, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCharBar, UnknownData_WZ13, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCharBar, Ins_Mask_Char, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCharBar, Txt_Lv, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCharBar, Txt_Name, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCharBar, Txt_Power, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCharBar, Txt_Power_Num, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCharBar, Txt_Power_Num_Eff, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCharBar, Pnl_None, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCharBar, Txt_None, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCharBar, Pnl_Curs_All, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCharBar, Img_Icon_Spo, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCharBar, Ins_Icon_Spo00, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCharBar, BaseImage, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCharBar, Img_Curs00, 0x03F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartCharBar, 0x03F8);
		}

		// class UAT_UIStartCommuDetail : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartCommuDetail)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, UnknownData_89EU, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, Canvas_AllNut, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, Canvas_Arrow, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, Canvas_Cloud, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, Blur_Bg, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, TextBox_Popular, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, TextBox_CommuLv, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, TextBox_LinkBonus, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, TextBox_LinkDetail, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, TextBox_CharName, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, TextBox_CharDetail, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, UIXcmnBg, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, UISoulEmblem, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, UIXcmnArrowL, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, UIXcmnArrowR, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, UIPopularGage, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, UICommuLv_List, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, UILinkBonus_List, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, UIRewardBar_List, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, PresentBtn, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, PnlCharWin00, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, Anim_In, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, Anim_Loop, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, Anim_Out, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, Anim_LSlideIn, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, Anim_LSlideOut, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, Anim_RSlideIn, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, Anim_RSlideOut, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, UIXCmnHeader, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, UnknownData_ON9M, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, NowSoulEmblem, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, NextSoulEmblem, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartCommuDetail, UnknownData_2UEQ, 0x0498);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartCommuDetail, 0x0508);
		}

		// class UAT_UICommunityDetailPresentButton : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UICommunityDetailPresentButton)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityDetailPresentButton, UnknownData_1J7P, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityDetailPresentButton, WL_Ins_Item, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityDetailPresentButton, WL_Txt_Btn00, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityDetailPresentButton, WL_Txt_Btn01, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityDetailPresentButton, WL_Img_Base_Button00, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityDetailPresentButton, WL_Img_Base_Button01, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityDetailPresentButton, WL_Pnl_Button00, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityDetailPresentButton, WL_Pnl_Button01, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityDetailPresentButton, WL_Pnl_Curs_All, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityDetailPresentButton, WA_Loop, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityDetailPresentButton, WA_Enter, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityDetailPresentButton, WA_In_None, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UICommunityDetailPresentButton, WA_In_Active, 0x03D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICommunityDetailPresentButton, 0x03D8);
		}

		// class UAT_UIStartDragonBallBtnWish : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartDragonBallBtnWish)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallBtnWish, All_Nut, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallBtnWish, Pnl_Curs_All, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallBtnWish, Ins_Base_Btn_Wish, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallBtnWish, Ins_Gauge_Eff00, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallBtnWish, Txt_Btn_Wish, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallBtnWish, InsDecoCloudList, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallBtnWish, MyDragonBallBtnWishState, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallBtnWish, UnknownData_87EE, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallBtnWish, UnknownData_AFJH, 0x03EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallBtnWish, AnimLoop, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallBtnWish, AnimOpen, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallBtnWish, AnimOpenLoop, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallBtnWish, AnimEnter, 0x0408);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartDragonBallBtnWish, 0x0410);
		}

		// class UAT_UIStartDragonBallMenu : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartDragonBallMenu)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, All_Nut, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, All_Start_Db, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, All_Msg, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, AnimIn, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, AnimInComp, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, AnimOut, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, AnimOutComp, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, WidgetBG, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, DbAll, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, DbList, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, DbOffList, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, UICmn00MenuList, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, DragonBallMenuBarList, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, WishInfoParam, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, PnlDbAll, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, TexDetail, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, DetailList, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, SelectDetailList, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, CompEffList, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, WishSelectState, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, UnknownData_CZTF, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, UnknownData_QC2B, 0x047C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, WishSelectList, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, SetWishText, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, WishDetailText, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, Txt_Msg00, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, Txt_Title, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, ImgFad, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, Start_Db_Btn_Wish, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, OneWishCountPositionY, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, TwoWishCountPositionY, 0x0504);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, ThreeWishCountPositionY, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenu, UnknownData_118F, 0x050C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartDragonBallMenu, 0x0558);
		}

		// class UAT_UIStartDragonBallMenuBar : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartDragonBallMenuBar)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenuBar, AllNut, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenuBar, AnimSet, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenuBar, AnimCancel, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenuBar, AnimLoop, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenuBar, AnimEnter, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenuBar, AnimSetCancel, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenuBar, TexWish, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenuBar, PnlCurs, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenuBar, Pnl_Curs_All, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenuBar, Ins_Base_List_Db, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenuBar, Ins_Cursor00_Eff01, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenuBar, MyWishBarSelectState, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenuBar, UnknownData_RZFK, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartDragonBallMenuBar, UnknownData_XJ9T, 0x040C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartDragonBallMenuBar, 0x0480);
		}

		// class UAT_UIStartItemWin00 : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartItemWin00)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartItemWin00, ChangOutAnimation, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartItemWin00, ChangInAnimation, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartItemWin00, WL_Txt_List, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartItemWin00, Pnl_List, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartItemWin00, IconStateList, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartItemWin00, Txt_Title, 0x03F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartItemWin00, 0x03F8);
		}

		// class UAT_UIStartOption : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartOption)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, OpenDelegate, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, CloseDelegate, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, Canvas_AllNut, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, Canvas_SingleHeader, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, Canvas_Arrow, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, Border_MultiHeader, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, TextBox_Title, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, TextBox_Category, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, TextBox_CategoryPrev, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, TextBox_CategoryNext, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, UIXlistOption, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, UIXcmnBg, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, UIXcmnArrowL, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, UIXcmnArrowR, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, Anim_In, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, Anim_Out, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, Anim_LSlideIn, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, Anim_LSlideOut, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, Anim_RSlideIn, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, Anim_RSlideOut, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, Table_OptionParam, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, Table_DisplayParam, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, Table_OptionSoundParam, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, UIXCmnHeader, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, UIXcmnAgreementClass, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, AgreementDialog, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartOption, UnknownData_63Z6, 0x0450);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartOption, 0x0798);
		}

		// class UAT_UIStartParty : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartParty)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartParty, InAnimation, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartParty, OutAnimation, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartParty, InWinAnimation, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartParty, OutWinAnimation, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartParty, WL_Xmenu_Bg, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartParty, WL_Start_Char_Bar, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartParty, WL_Xmenu_Scrollbar, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartParty, WL_Txt_Cap01, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartParty, WL_Start_Party_List, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartParty, m_pManager, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartParty, WL_Txt_Bonus_Cap00, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartParty, WL_Txt_Bonus_Party, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartParty, WL_Txt_Bonus_Detail, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartParty, WL_Pnl_Curs_All, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartParty, partySelectData, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartParty, UnknownData_96K0, 0x04A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartParty, 0x06A0);
		}

		// class UAT_UIStartPartyBarGauge : public UObject
		TEST_METHOD(Class__AT__AT_UIStartPartyBarGauge)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBarGauge, UnknownData_3BDQ, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBarGauge, Canvas_Parent, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBarGauge, Image_GaugeBack, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBarGauge, Image_GaugeFront, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBarGauge, TextBox_Number, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBarGauge, NumberTextMaterial, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBarGauge, IncreaseIcon, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartPartyBarGauge, 0x0080);
		}

		// class UAT_UIStartPartyBarStatus : public UObject
		TEST_METHOD(Class__AT__AT_UIStartPartyBarStatus)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBarStatus, Canvas_Parent, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBarStatus, UIStateIcon, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBarStatus, TextBox_Param, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBarStatus, TextBox_Increased, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBarStatus, IconCursor, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBarStatus, IconStatusIncreased, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBarStatus, bIsBuff, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBarStatus, UnknownData_YPJW, 0x0059);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartPartyBarStatus, 0x0060);
		}

		// class UAT_UIStartPartyBar : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartPartyBar)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, EnterAnimation, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, OutDownAnimation, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, InDownAnimation, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, InCursAnimation, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, SubToMainAnimation, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, MainToMainAnimation, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Enter01Animation, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, BlinkAnimation, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Gauge_HpGauge, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Gauge_SpGauge, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Status_HpGauge, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Status_SpGauge, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Status_List, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Param, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Pnl_All_Gauge, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Ins_Gauge_Hp00, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Ins_Gauge_Hp01, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Txt_Num_Hp, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Ins_Gauge_Sp00, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Txt_Num_Sp, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Pnl_All_Status, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Pnl_Gauge_Hp01, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Ins_Gauge_Hp02, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Txt_Num_Hp01, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Icon_Status02_Hp, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Pnl_Gauge_Sp01, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Ins_Gauge_Sp01, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Txt_Num_Sp01, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Icon_Status02_Sp, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Xef_Up_Param_00, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Xef_Up_Param_01, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Xef_Up_Param_02, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Xef_Up_Param_03, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Xef_Up_Param_04, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Pnl_List_Status00, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Pnl_List_Status01, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Pnl_List_Status02, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Pnl_List_Status03, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Pnl_List_Status04, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Img_Space, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Ins_Icon_Status_00, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Ins_Icon_Status_01, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Ins_Icon_Status_02, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Ins_Icon_Status_03, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Ins_Icon_Status_04, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Txt_Status_00_00, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Txt_Status_00_01, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Txt_Status_01_00, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Txt_Status_01_01, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Txt_Status_02_00, 0x05B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Txt_Status_02_01, 0x05C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Txt_Status_03_00, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Txt_Status_03_01, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Txt_Status_04_00, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Txt_Status_04_01, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Icon_Curs00_00, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Icon_Curs00_01, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Icon_Curs00_02, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Icon_Curs00_03, 0x0600);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Icon_Curs00_04, 0x0608);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Icon_Status02_00, 0x0610);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Icon_Status02_01, 0x0618);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Icon_Status02_02, 0x0620);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Icon_Status02_03, 0x0628);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Icon_Status02_04, 0x0630);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Pnl_Curs_All, 0x0638);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Ins_Mask_Char, 0x0640);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Txt_Lv, 0x0648);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Txt_Name, 0x0650);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Txt_Power, 0x0658);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Txt_Power_Num, 0x0660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Txt_Power_Num_Eff, 0x0668);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Pnl_None, 0x0670);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Txt_None, 0x0678);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Pnl_Detail, 0x0680);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Img_Fad_Black, 0x0688);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Pnl_Player, 0x0690);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Txt_Player, 0x0698);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Pnl_Suport, 0x06A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Txt_Suport, 0x06A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Ins_Icon_Skill_00, 0x06B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Ins_Icon_Skill_01, 0x06B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Txt_Skill_Spo00, 0x06C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Txt_Skill_Spo01, 0x06C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Ins_Icon_Spo00, 0x06D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Pnl_Gauge_Hp, 0x06D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Pnl_Gauge_Sp00, 0x06E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Pnl_Curs, 0x06E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Img_Icon_Spo, 0x06F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Img_Fil, 0x06F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, Ins_Curs_Eff01, 0x0700);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, IsSupportOnlyClass, 0x0708);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyBar, UnknownData_3J0K, 0x0709);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartPartyBar, 0x0740);
		}

		// class UAT_UIStartPartyList : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartPartyList)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyList, WL_Start_Party_Bar, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyList, InAnimation, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyList, OutAnimation, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartPartyList, UnknownData_4T74, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartPartyList, 0x03C8);
		}

		// class UAT_UIStartQuest : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartQuest)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, All_Change, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, All_Win_Story, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, All_Win_Task, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Img_Space_Task_Sub, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Cap04, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Cap00, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Map_Icon_Switch01, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_Story_Task00, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_Story_Task01, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_Story_Task02, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_Story_Task03, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_Story_Task04, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_Story_Task05, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_Story_Task06, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_Story_Task07, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_Story_Task08, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_Story_Task09, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_Story_Task10, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_Story_Task11, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_Story_Task12, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Story_Task00, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Story_Task01, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Story_Task02, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Story_Task03, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Story_Task04, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Story_Task05, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Story_Task06, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Story_Task07, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Story_Task08, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Story_Task09, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Story_Task10, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Story_Task11, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Story_Task12, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Xmenu_Check00, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Xmenu_Check01, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Xmenu_Check02, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Xmenu_Check03, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Xmenu_Check04, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Xmenu_Check05, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Xmenu_Check06, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Xmenu_Check07, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Xmenu_Check08, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Xmenu_Check09, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Xmenu_Check10, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Xmenu_Check11, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Xmenu_Check12, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_Cond, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_Icon, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Detail00, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Img_Space_Main, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_All_Char, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Cap03, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_Icon_Char00, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_Icon_Char01, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_Icon_Char02, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_Icon_Char03, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_Icon_Char04, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Dmy_Charicon_D00, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Dmy_Charicon_D01, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Dmy_Charicon_D02, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Dmy_Charicon_D03, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Dmy_Charicon_D04, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Img_Quest_Black, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Img_Reward_Black, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_Sub_Area, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Title_Area, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Area, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_Sub_Limit, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_Title_Limit, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Limit00, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Limit01, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Start_Quest_Bar00_00, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, All_Nut, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_Arrow, 0x05B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_Roll, 0x05C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Ins_Micon, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Ins_Icon_Item, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Ins_Emb_Mask01, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Img_Icon_Loop, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Recommend, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Progress, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Reward, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Cap01, 0x0600);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Tab_L, 0x0608);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Tab_R, 0x0610);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Quest_title, 0x0618);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Num_Lv, 0x0620);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Cap02, 0x0628);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Detail, 0x0630);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Task_Num00, 0x0638);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Task00, 0x0640);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Xlist_List06_Lay9, 0x0648);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Xmenu_Bg, 0x0650);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Xmenu_Arrow_L, 0x0658);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Xmenu_Arrow_R, 0x0660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Icon_Clear, 0x0668);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Quest_title01, 0x0670);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_All_Recommend, 0x0678);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Ins_Icon_Quest_Sub00, 0x0680);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Ins_Icon_Quest_Sub01, 0x0688);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, All_Change_Offset, 0x0690);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, UnknownData_YHJU, 0x0694);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, UIQuestTarget_List, 0x0698);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, UIRewardBar_List, 0x06A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Pnl_Story_Task_List, 0x06B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Story_Task_List, 0x06C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Txt_Story_Task_List_Material, 0x06D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Xmenu_Check_List, 0x06E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Anim_In, 0x06F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Anim_Out, 0x0700);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Anim_LSlideIn, 0x0708);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Anim_LSlideOut, 0x0710);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Anim_RSlideIn, 0x0718);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Anim_RSlideOut, 0x0720);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Anim_Chage_Task, 0x0728);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, Anim_Chage_Story, 0x0730);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, UIXCmnHeader, 0x0738);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, QuestMgr, 0x0740);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, PartyMgr, 0x0748);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuest, UnknownData_HLYS, 0x0750);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartQuest, 0x0A88);
		}

		// class UAT_UIStartQuestBar : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartQuestBar)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuestBar, NonDigitWidth, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuestBar, TwoDigitWidth, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuestBar, ThreeDigitWidth, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuestBar, FiveDigitWidth, 0x037C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuestBar, Canvas_AllNut, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuestBar, TextBox_Progress, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuestBar, WL_Txt_Num, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartQuestBar, UIXcmnCheckBox, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartQuestBar, 0x03A0);
		}

		// class UAT_UIStartSaveLoad : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartSaveLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoad, OpenDelegate, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoad, CloseDelegate, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoad, Canvas_AllNut, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoad, UIXcmnBg, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoad, UIScrollBar, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoad, UISaveLoadBar_List, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoad, Anim_In, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoad, Anim_Out, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoad, UIXCmnHeader, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoad, BarParam_List, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoad, UnknownData_I6QQ, 0x03E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartSaveLoad, 0x0400);
		}

		// class UAT_UIStartSaveLoadBar : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartSaveLoadBar)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, Canvas_Title, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, Canvas_Detail, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, Canvas_None, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, Border_Cursor, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, Image_Window, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, Image_TitlePlate, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, Image_TitleLine, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, Image_Capture, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, Image_Mask, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, Image_AutSave, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, TextBox_CaptionPlayTime, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, TextBox_CaptionNone, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, TextBox_Lost, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, TextBox_Title, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, TextBox_TimeStamp, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, TextBox_Level, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, TextBox_Name, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, TextBox_Summary, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, TextBox_Area, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, TextBox_PlayTime, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, Txt_Nodata, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, Anim_Enter, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, Anim_Reset, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, CapBaseAndLineColor, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, AutoCapBaseAndLineColor, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartSaveLoadBar, UnknownData_6XYU, 0x0450);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartSaveLoadBar, 0x0488);
		}

		// class UAT_UIStartStatus : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartStatus)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatus, InAnimation, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatus, OutAnimation, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatus, BlinkAnimation, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatus, WL_Txt_Title, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatus, WL_Txt_Num, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatus, WL_Txt_Lv, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatus, WL_Txt_Name, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatus, WL_Txt_Power, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatus, WL_Txt_Power_Num, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatus, WL_Txt_Power_Num_Eff, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatus, WL_Start_Char_Hud_Sp, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatus, WL_Start_Char_Hud_Hp, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatus, WL_Start_Char_List01, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatus, WL_Xmenu_Cloud_Btm, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatus, WL_Xmenu_Bg_L, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatus, WL_Xmenu_Bg_R, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatus, m_pManager, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatus, Capture_Widget, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatus, SupportIcon, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatus, InsIconSpo00, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatus, InsGaugeExp, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatus, GaugeMaterial, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatus, UnknownData_1923, 0x0440);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartStatus, 0x0590);
		}

		// class UAT_UIStartStatusGauge : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartStatusGauge)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusGauge, GaugeMaterial, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusGauge, GaugeRecoverMaterial, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusGauge, Anim_Full, 0x0380);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartStatusGauge, 0x0388);
		}

		// class UAT_UIStartStatusBarGauge : public UObject
		TEST_METHOD(Class__AT__AT_UIStartStatusBarGauge)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusBarGauge, UnknownData_HF64, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusBarGauge, Canvas_Parent, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusBarGauge, Image_GaugeBack, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusBarGauge, Image_GaugeFront, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusBarGauge, TextBox_Number, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartStatusBarGauge, 0x0070);
		}

		// class UAT_UIStartStatusHud : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartStatusHud)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusHud, AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusHud, TxtStatus, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusHud, TxtStatusNum, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusHud, TxtStatusNumMaterialList, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusHud, InsIconStatusList, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusHud, HpGauge, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusHud, SpGauge, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusHud, BeforeGaugeValue, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusHud, UnknownData_JQGT, 0x03CC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartStatusHud, 0x03D0);
		}

		// class UAT_UIStartStatusList00 : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartStatusList00)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusList00, WL_Ins_Icon_Skill, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusList00, WL_Txt_Skill, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartStatusList00, 0x0380);
		}

		// class UAT_UIStartStatusList01 : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartStatusList01)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusList01, AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusList01, WL_Ins_Icon_Status, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusList01, WL_Txt_Power, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusList01, WL_Txt_Power_Num, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusList01, PowerNumMaterial, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusList01, Icon_State, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusList01, InsIconStatusList, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusList01, TxtStatusList, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusList01, TxtStatusNumList, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusList01, TxtStatusNumMaterialList, 0x03D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartStatusList01, 0x03E0);
		}

		// class UAT_UIStartStatusList02 : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartStatusList02)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusList02, WL_Txt_Title, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartStatusList02, WL_Txt_Num, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartStatusList02, 0x0380);
		}

		// class UAT_UIStartTips : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartTips)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTips, ScrollPnlSizeX, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTips, UnknownData_99WW, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTips, Canvas_AllNut, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTips, Canvas_Arrow, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTips, TextBox_Category, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTips, TextBox_CategoryPrev, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTips, TextBox_CategoryNext, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTips, UIXlistTutorial, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTips, UIXcmnBg, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTips, UIXcmnArrowL, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTips, UIXcmnArrowR, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTips, Anim_In, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTips, Anim_Out, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTips, Anim_LSlideIn, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTips, Anim_LSlideOut, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTips, Anim_RSlideIn, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTips, Anim_RSlideOut, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTips, UIXCmnHeader, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTips, Table_TipsParam, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTips, UnknownData_W4VH, 0x0400);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartTips, 0x0A88);
		}

		// class UAT_UIStartTopListZ : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartTopListZ)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopListZ, Image_Icon, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopListZ, Image_UnderScore, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopListZ, TextBox_Number, 0x0380);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartTopListZ, 0x0388);
		}

		// class UAT_UIStartTop : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartTop)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, CursorRepeatWait, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, UnknownData_INDJ, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, All_Nut, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, Dmy_Char, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, Ins_Char_Eff00, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, Ins_Char_Shdw, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, Dmy_Char_Fad, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, Xmenu_Bg, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, Xmenu_Cloud_Btm, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, Shop_Cmn_Money, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, Start_Top_State, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, Txt_Open_CompZ, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, Start_Top_CompZ01, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, Img_Icon_CompZ, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, Ins_Sirc_CompZ00_01, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, UIStartTopList, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, UIStartTopList04_Sub, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, UIStartTopList06_Sub, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, UIStartTopAllList, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, UIStartTopListZ, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, Anim_In, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, Anim_Out, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, Anim_Enter_Commu, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, Anim_Close_Commu, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, Anim_Out_Commu, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, Anim_In_Commu, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, Anim_Enter_System, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, Anim_Close_System, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, Anim_Out_System, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, Anim_In_System, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, Anim_OpenCompZLoop, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, UIXCmnHeader, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTop, UnknownData_XCS7, 0x0490);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartTop, 0x05B8);
		}

		// class UAT_UIStartTopCloud : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartTopCloud)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopCloud, InAnim, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopCloud, OutAnim, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopCloud, LoopAnim, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopCloud, UnknownData_B0UB, 0x0388);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartTopCloud, 0x0390);
		}

		// class UAT_UIStartTopList : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartTopList)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopList, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopList, Image_Deco00, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopList, Image_Deco01, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopList, Image_Deco02, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopList, Image_Deco03, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopList, Image_Deco04, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopList, Image_CursTop, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopList, Image_CursBottom, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopList, Image_FontOn, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopList, Image_Font, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopList, Anim_In, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopList, Anim_Loop, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopList, Anim_Out, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopList, UnknownData_TY3H, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartTopList, 0x0490);
		}

		// class UAT_UIStartTopState : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStartTopState)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, UnknownData_S4KL, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Icon_List, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Base_Tips_Tutorial, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Pnl_List_State00, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Pnl_List_State01, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Pnl_List_State02, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Pnl_List_State03, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Pnl_List_State04, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Pnl_List_State05, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Pnl_List_State06, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Pnl_List_State07, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Pnl_List_State08, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Pnl_List_State09, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Icon_State_00, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Icon_State_01, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Icon_State_02, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Icon_State_03, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Icon_State_04, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Icon_State_05, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Icon_State_06, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Icon_State_07, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Icon_State_08, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Icon_State_09, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Txt_List_State_00, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Txt_List_State_01, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Txt_List_State_02, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Txt_List_State_03, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Txt_List_State_04, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Txt_List_State_05, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Txt_List_State_06, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Txt_List_State_07, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Txt_List_State_08, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStartTopState, Txt_List_State_09, 0x04B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStartTopState, 0x04C0);
		}

		// class UAT_UIStateIcon : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIStateIcon)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStateIcon, SlideMove, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStateIcon, MoveSpeed, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStateIcon, DisableCanCache, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStateIcon, UnknownData_AM6B, 0x0379);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStateIcon, AnimTbl, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStateIcon, WL_All_Nut, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStateIcon, WL_All_Icon_State, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStateIcon, WL_All_Icon_State_Slot, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStateIcon, WL_Ins_Base, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStateIcon, WL_Ins_Icon_St, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStateIcon, WL_Ins_Debuff_Eff, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStateIcon, WL_Ins_Base_Light, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStateIcon, WL_Ins_Eff_Light, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStateIcon, WL_Ins_Icon_Curs, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIStateIcon, UnknownData_CQMN, 0x0430);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIStateIcon, 0x04B8);
		}

		// class UAT_UISystemWindow : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UISystemWindow)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindow, UnknownData_6TGE, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindow, CursorAnimCtn, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindow, WindowBasePanelSlot, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindow, SubChoiceClass, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindow, AdjustWindowFormMargin, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindow, AdjustTiTleWindowFormMargin, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindow, AdjustTiTleChoiceMarginY, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindow, AdjustTextMinSizeY, 0x03BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindow, AdjustDetailMarginTitle, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindow, AdjustChoiceMsgMargin, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindow, AdjustChoicePanelMargin, 0x03D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindow, AdjustTitleToTxtMargin, 0x03E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindow, AdjustTitleWindowSize, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindow, UnknownData_X82S, 0x03EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindow, RootPanel, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindow, AllNut, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindow, TitlePanel, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindow, titleTxt, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindow, mainTxt, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindow, ChoiceBox, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindow, DetailBox, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindow, DetailBoxSlot, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindow, BackFade, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindow, InsArrow, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindow, ChoicePlateCtn, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindow, UnknownData_5EAL, 0x0450);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UISystemWindow, 0x0490);
		}

		// class UAT_UISystemWindowChoice : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UISystemWindowChoice)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindowChoice, ActiveColor, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindowChoice, DeactiveColor, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindowChoice, BasePanelSlot, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindowChoice, ChoiceTxt, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindowChoice, BasePlate, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UISystemWindowChoice, UnknownData_FOD1, 0x03A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UISystemWindowChoice, 0x03B0);
		}

		// class UAT_UITelopManager : public UBaseObject
		TEST_METHOD(Class__AT__AT_UITelopManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITelopManager, UnknownData_UKZS, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITelopManager, QuestMainTelopList, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITelopManager, TelopParam, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITelopManager, TargetCharacterNameID, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITelopManager, OffsetPos, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UITelopManager, 0x0080);
		}

		// class UAT_UITelopTxt : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UITelopTxt)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITelopTxt, AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITelopTxt, TxtCaption, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITelopTxt, SpaceCapL, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITelopTxt, SpaceCapR, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITelopTxt, TxtName, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITelopTxt, SpaceNameL, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITelopTxt, SpaceNameR, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITelopTxt, PnlLang00, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITelopTxt, TxtNameForeignLang00, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITelopTxt, SpaceLangL, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITelopTxt, SpaceLangR, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UITelopTxt, 0x03C8);
		}

		// class UAT_UITips : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UITips)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITips, InputWaitTime, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITips, InputWaitTimeFromMenu, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITips, NextInputWaitTime, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITips, UnknownData_GLT0, 0x037C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITips, Canvas_AllNut, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITips, Widget_Fade, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITips, UIXcmnArrowL, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITips, UIXcmnArrowR, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITips, UITipsWin_List, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITips, UIImageFull, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITips, UICloudBtm, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITips, Anim_In, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITips, Anim_Out, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITips, Anim_Change, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITips, UIXCmnHeader, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITips, Table_TipsParam, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITips, UnknownData_WR7Y, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITips, NextTipsIds, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITips, UnknownData_4S9C, 0x0468);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UITips, 0x04C0);
		}

		// class UAT_UITipsWin : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UITipsWin)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITipsWin, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITipsWin, Canvas_TextOnly, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITipsWin, Canvas_TextAndImage, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITipsWin, Canvas_KeyTips, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITipsWin, Canvas_BigImage, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITipsWin, Image_TextAndImage, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITipsWin, Image_Ctr, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITipsWin, Image_Big, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITipsWin, TextBox_Title, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITipsWin, TextBox_SubTitle, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITipsWin, TextBox_Page, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITipsWin, TextBox_TextOnly, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITipsWin, TextBox_TextAndImage, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITipsWin, TextBox_Detail03, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITipsWin, TextBox_KeyTips, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITipsWin, TextBox_KeyTips_Detail, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITipsWin, TextBox_KeyTips_Btn, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITipsWin, TextBox_KeyTips_Fad, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITipsWin, Anim_In, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITipsWin, Anim_Out, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITipsWin, Anim_LEnterIn, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITipsWin, Anim_LEnterOut, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITipsWin, Anim_REnterIn, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITipsWin, Anim_REnterOut, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITipsWin, Table_KeyTipsParam, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITipsWin, UnknownData_MQL9, 0x0480);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UITipsWin, 0x05D8);
		}

		// class UAT_UITotalDamage : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UITotalDamage)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITotalDamage, UnknownData_XFXT, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITotalDamage, AllNut, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITotalDamage, ImageNum, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITotalDamage, ImageNumEff, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITotalDamage, AnimStart, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITotalDamage, LangTotalDamage, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITotalDamage, HashLangTotalDamage, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITotalDamage, CurrentValue, 0x0404);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITotalDamage, AnimStartDelayTime, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITotalDamage, CurrentTimeCount, 0x040C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UITotalDamage, 0x0410);
		}

		// class UAT_UITPSSkill : public UBaseObject
		TEST_METHOD(Class__AT__AT_UITPSSkill)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITPSSkill, UnknownData_7X6V, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITPSSkill, TPSCursor_TypeA, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITPSSkill, TPSCursor_TypeB, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UITPSSkill, 0x0048);
		}

		// class UAT_UITPSSkillCursor : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UITPSSkillCursor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITPSSkillCursor, WL_AllNut, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITPSSkillCursor, WA_In, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITPSSkillCursor, WA_Out, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UITPSSkillCursor, 0x03C8);
		}

		// class UAT_UITPSSkillCursorTypeA : public UAT_UITPSSkillCursor
		TEST_METHOD(Class__AT__AT_UITPSSkillCursorTypeA)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITPSSkillCursorTypeA, SubClassLockOnMark, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITPSSkillCursorTypeA, EnemyMax, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITPSSkillCursorTypeA, UnknownData_7E5V, 0x03D4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UITPSSkillCursorTypeA, 0x0440);
		}

		// class UAT_UITPSLockOnMark : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UITPSLockOnMark)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITPSLockOnMark, WA_Out, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITPSLockOnMark, WA_In, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITPSLockOnMark, WA_Overlaid, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITPSLockOnMark, WA_Max, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITPSLockOnMark, WA_MaxOut, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITPSLockOnMark, WL_AllNut, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITPSLockOnMark, WL_ImgCursMini00, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITPSLockOnMark, WL_PnlCurs00, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITPSLockOnMark, WL_AllBattleLock00, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITPSLockOnMark, Target, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITPSLockOnMark, UnknownData_JER1, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UITPSLockOnMark, 0x03D0);
		}

		// class UAT_UITrialClear : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UITrialClear)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITrialClear, All_Nut, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITrialClear, Txt_Clear, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITrialClear, Txt_Sell, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITrialClear, Txt_Sell_Shadow, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITrialClear, AnimIn, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITrialClear, AnimOut, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITrialClear, OnPlayOutAnimDelegate, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITrialClear, AutoMoveTime, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UITrialClear, UnknownData_14HV, 0x03F4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UITrialClear, 0x03F8);
		}

		// class UAT_UIUtil : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__AT__AT_UIUtil)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIUtil, 0x0028);
		}

		// class UAT_UIWindowManager : public UObject
		TEST_METHOD(Class__AT__AT_UIWindowManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIWindowManager, SubSystemWindowClass, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIWindowManager, SubGameWindowClass, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIWindowManager, SubNumberWindowClass, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIWindowManager, SystemWindowCore, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIWindowManager, GameWindowCore, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIWindowManager, NumberWindowCore, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIWindowManager, UnknownData_AQSF, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIWindowManager, 0x0070);
		}

		// class UAT_UIWindRoad : public UObject
		TEST_METHOD(Class__AT__AT_UIWindRoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIWindRoad, UnknownData_BDYN, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIWindRoad, IconPos2D, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIWindRoad, ImageWidgetTbl, 0x0090);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIWindRoad, 0x00A0);
		}

		// class UAT_UIXcmnAgreement : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXcmnAgreement)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnAgreement, RootPanel, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnAgreement, FadeBlackWidget, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnAgreement, SubjectImage, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnAgreement, HeadImage, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnAgreement, UnknownData_F79Z, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnAgreement, LeftArrow, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnAgreement, RightArrow, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnAgreement, AppearAnimation, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnAgreement, DisappearAnimation, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnAgreement, UnknownData_DEDO, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnAgreement, ImageTextureMap, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnAgreement, UnknownData_XFUS, 0x0530);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXcmnAgreement, 0x05C0);
		}

		// class UAT_UIXcmnArrow : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXcmnArrow)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnArrow, BtnId, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnArrow, UnknownData_O73R, 0x0371);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnArrow, Canvas_AllNut, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnArrow, Image_Arrow, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnArrow, Image_Button, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnArrow, Anim_Start, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnArrow, Anim_Loop, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnArrow, UnknownData_WMPZ, 0x03A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXcmnArrow, 0x03B0);
		}

		// class UAT_UIXcmnBg : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXcmnBg)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnBg, UnknownData_AHLR, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnBg, Canvas_AllNut, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnBg, Anim_In, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnBg, Anim_Out, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnBg, UnknownData_IZ8H, 0x03B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXcmnBg, 0x03C0);
		}

		// class UAT_UIXcmnCheckBox : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXcmnCheckBox)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnCheckBox, AnimStrat, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnCheckBox, ImageCheck00, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnCheckBox, ImageCheck01, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnCheckBox, Img_Check_Base00, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnCheckBox, UnknownData_XRS3, 0x0390);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXcmnCheckBox, 0x0398);
		}

		// class UAT_UIXcmnCredit : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXcmnCredit)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnCredit, CreditTablePath, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnCredit, CreditTablePS4Path, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnCredit, dulation, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnCredit, goal_y_offset, 0x03D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnCredit, CategoryTextStyle, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnCredit, PostTextStyle, 0x03F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnCredit, NameTextStyle, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnCredit, SpaceStyle, 0x042C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnCredit, PoolNum, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnCredit, UnknownData_9TP9, 0x044C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnCredit, Txt_Credit, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnCredit, Pnl_Xcmn_Credit, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnCredit, TextClass, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnCredit, AnimIn, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnCredit, AnimOut, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnCredit, UnknownData_FFRF, 0x0478);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXcmnCredit, 0x04E0);
		}

		// class UAT_UIXCmnDistance : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXCmnDistance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnDistance, DistanceText, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnDistance, UnknownData_ADEW, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXCmnDistance, 0x0380);
		}

		// class UAT_UIXCmnEmb : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXCmnEmb)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb, ImageFrame, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb, ImageUnacquired, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb, ImageNew, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb, ImageFace, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb, HashImageFace, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb, UnknownData_JYGC, 0x0394);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb, ImageShadow, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb, ImageFrameBase00, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb, ImageIconGroup, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb, TextureLoadEndedFlag, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb, UnknownData_XATZ, 0x03B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb, ActiveTex, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb, StandbyTex, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXCmnEmb, 0x03C8);
		}

		// class UAT_UIXCmnEmb01 : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXCmnEmb01)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb01, WL_Pnl_Link_Frame, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb01, WL_CharIcon, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb01, WL_Ins_Frame, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb01, WL_SubQuestIcon, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb01, WL_Ins_Icon_New, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb01, WL_LinkFrame, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb01, WL_Img_Unacquired, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb01, UnknownData_X8M7, 0x03A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXCmnEmb01, 0x03B0);
		}

		// class UAT_UIXCmnEmb_Cursor : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXCmnEmb_Cursor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Cursor, Ins_Icon_Leader, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Cursor, Pnl_Commu, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Cursor, Ins_Icon_Group01, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Cursor, Txt_Commu, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Cursor, Icon_New, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Cursor, Ins_Icon_Group, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Cursor, Ins_Frame_Set, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Cursor, CanvasEffectA, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Cursor, CanvasEffectB, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Cursor, AnimIn, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Cursor, AnimLoop, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Cursor, AnimOut, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Cursor, AnimEnter, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Cursor, UIXCmnEmb, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Cursor, UnlockState, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Cursor, UnknownData_WRQN, 0x03E1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXCmnEmb_Cursor, 0x03E8);
		}

		// class UAT_UIXCmnEmb_Reality : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXCmnEmb_Reality)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Reality, UnknownData_F60F, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Reality, CanvasAllNut, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Reality, CanvasXefLight, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Reality, CanvasPnlEmbEff, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Reality, AnimLoop00, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Reality, AnimLoop01, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Reality, AnimFrameIn, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Reality, AnimLoopBound, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Reality, UIXCmnEmb, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Reality, InsIconGroup, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Reality, InsIconLeader, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Reality, InsFrameSet, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Reality, ActiveLoopAnim, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnEmb_Reality, UnknownData_W1S5, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXCmnEmb_Reality, 0x03E0);
		}

		// class UAT_UIXcmnEmbGet : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXcmnEmbGet)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnEmbGet, AnimIntervalWaitSec, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnEmbGet, OutAnimStartWaitSec, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnEmbGet, UnknownData_S3MQ, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnEmbGet, EmbParts, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnEmbGet, WA_In, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnEmbGet, WA_Out, 0x03F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXcmnEmbGet, 0x0400);
		}

		// class UAT_UIXcmnEmbGetParts : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXcmnEmbGetParts)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnEmbGetParts, Xcmn_Emb00, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnEmbGetParts, All_Nut, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnEmbGetParts, WA_In, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnEmbGetParts, WA_Out, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnEmbGetParts, UnknownData_4KZ7, 0x03D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXcmnEmbGetParts, 0x03D8);
		}

		// class UAT_UIXcmnFadeBlur : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXcmnFadeBlur)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnFadeBlur, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnFadeBlur, Image_ScreenCap, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnFadeBlur, Anim_In, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnFadeBlur, Anim_Out, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnFadeBlur, UnknownData_DZIT, 0x0390);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXcmnFadeBlur, 0x0398);
		}

		// class UAT_UIXCmnHeader : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXCmnHeader)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnHeader, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnHeader, Canvas_Header, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnHeader, Canvas_IconHeader, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnHeader, Image_HeaderFont, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnHeader, Image_IconFont, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnHeader, Image_Icon, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnHeader, Image_IconCaption, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnHeader, Anim_In, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnHeader, Anim_Loop, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnHeader, Anim_Out, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnHeader, Anim_IconIn, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnHeader, Anim_IconLoop, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnHeader, Anim_IconOut, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnHeader, UnknownData_T6TX, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXCmnHeader, 0x04E8);
		}

		// class UAT_UIXcmnHeaderS : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXcmnHeaderS)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnHeaderS, WA_PlayIn, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnHeaderS, WA_PlayLoop, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnHeaderS, WA_PlayOut, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnHeaderS, WL_Dmy_Header000, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnHeaderS, WL_All_Nut, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnHeaderS, UnknownData_83FB, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXcmnHeaderS, 0x03E0);
		}

		// class UAT_UIXcmnIconOperation : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXcmnIconOperation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnIconOperation, UnknownData_ZE9D, 0x03B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXcmnIconOperation, 0x03C0);
		}

		// class UAT_UIXcmnInstall : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXcmnInstall)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnInstall, AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnInstall, TextBoxCtn, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnInstall, AnmCtn, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnInstall, UnknownData_N89S, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXcmnInstall, 0x03B8);
		}

		// class UAT_UIXcmnMultiLineTextFitBox : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXcmnMultiLineTextFitBox)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnMultiLineTextFitBox, MinSize, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnMultiLineTextFitBox, DebugTextAreaVisible, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnMultiLineTextFitBox, UnknownData_GKU4, 0x0379);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnMultiLineTextFitBox, WL_WrapPanel, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnMultiLineTextFitBox, WL_Text, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnMultiLineTextFitBox, WL_DebugTextArea, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnMultiLineTextFitBox, UnknownData_XC4N, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXcmnMultiLineTextFitBox, 0x03A0);
		}

		// class UAT_UIXCmnPause : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXCmnPause)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnPause, AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnPause, LangPauseImg, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnPause, ListBarArray, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnPause, UIStartTips, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnPause, UITips, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnPause, UIXCmnHeader, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnPause, InAnim, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnPause, LoopAnim, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnPause, OutAnim, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnPause, Loader_Map, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXCmnPause, UnknownData_JO47, 0x0410);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXCmnPause, 0x04A8);
		}

		// class UAT_UIXcmnPlatBtn : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXcmnPlatBtn)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnPlatBtn, UnknownData_MDH2, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnPlatBtn, bUseTextureSize, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnPlatBtn, bUseShadow, 0x03A1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnPlatBtn, UnknownData_VRYA, 0x03A2);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnPlatBtn, KeyIdsForPad, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnPlatBtn, CurrentActionID, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnPlatBtn, CurrentDynamicAssignInputId, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnPlatBtn, CurrentKeyIds, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnPlatBtn, PathLoadIcon_DirectoryList, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnPlatBtn, PathLoadIcon_IconAssetNameList, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnPlatBtn, ImageSize, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnPlatBtn, UnknownData_QZ10, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnPlatBtn, Image_List, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnPlatBtn, Shadow_List, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnPlatBtn, Request_List, 0x0440);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXcmnPlatBtn, 0x0450);
		}

		// class UAT_UIXcmnSystemIcon : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXcmnSystemIcon)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnSystemIcon, AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnSystemIcon, BgPanel, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnSystemIcon, IconLoad, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnSystemIcon, IconSave, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnSystemIcon, BgAnimIn, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnSystemIcon, BgAnimOut, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnSystemIcon, UnknownData_LVUE, 0x03A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXcmnSystemIcon, 0x0408);
		}

		// class UAT_UIXcmnWin02 : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXcmnWin02)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02, UnknownData_Z0NI, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02, Canvas_AllNut, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02, Canvas_Separator, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02, Canvas_Text, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02, VBox_Parent, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02, VBox_Container, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02, Image_Window, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02, Widget_Fade, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02, TextBox_Caption, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02, TextBox_OldNum, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02, TextBox_NewNum, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02, UIListItem_Input, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02, UIChoice_List, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02, Relation_List, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02, Anim_In, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02, Anim_Out, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02, SubClass_UIListItem00, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02, SubClass_UIListItem01, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02, SubClass_UIChoice, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02, SubClass_UISpacer, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02, UnknownData_LZ95, 0x0430);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXcmnWin02, 0x0460);
		}

		// class UAT_UIXcmnWin02List00 : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXcmnWin02List00)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02List00, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02List00, Canvas_Fraction, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02List00, Image_MoleArrowUp, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02List00, Image_MoleArrowDown, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02List00, Image_DenomiArrowUp, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02List00, Image_DenomiArrowDown, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02List00, TextBox_Name, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02List00, TextBox_Num, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02List00, TextBox_Mole, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02List00, TextBox_Slash, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02List00, TextBox_Denomi, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02List00, ItemIconImage, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02List00, ItemNameText, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02List00, UnknownData_8222, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXcmnWin02List00, 0x03F0);
		}

		// class UAT_UIXcmnWin02List01 : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXcmnWin02List01)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02List01, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02List01, Image_Icon, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnWin02List01, TextBox_Name, 0x0380);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXcmnWin02List01, 0x0388);
		}

		// class UAT_UIXcmnSystemDialog : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXcmnSystemDialog)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnSystemDialog, UnknownData_XPO2, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnSystemDialog, AllNut, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnSystemDialog, BgPanel, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnSystemDialog, TextBox, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnSystemDialog, AnmCtn, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXcmnSystemDialog, UnknownData_J01J, 0x03B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXcmnSystemDialog, 0x03B8);
		}

		// class UAT_UIXefShine : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXefShine)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXefShine, WA_PlayIn, 0x03B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXefShine, 0x03B8);
		}

		// class UAT_UIXList_Detail00 : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXList_Detail00)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXList_Detail00, CanvasAllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXList_Detail00, TxtTitle, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXList_Detail00, TxtText, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXList_Detail00, AnimIn, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXList_Detail00, AnimOut, 0x0390);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXList_Detail00, 0x0398);
		}

		// class UAT_UIXlist_List05 : public UAT_UIList00Choice
		TEST_METHOD(Class__AT__AT_UIXlist_List05)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlist_List05, Ins_Icon_Skill, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlist_List05, Txt_Lv, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlist_List05, TxtLvMaterial, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlist_List05, Img_Icon_Loop, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlist_List05, Map_Icon_Switch, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlist_List05, Txt_Lv_Facility, 0x0458);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXlist_List05, 0x0460);
		}

		// class UAT_UIXmenuCurs00 : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXmenuCurs00)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXmenuCurs00, AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXmenuCurs00, AnmCtn, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXmenuCurs00, UnknownData_1G6Y, 0x0388);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXmenuCurs00, 0x0390);
		}

		// class UAT_UIXListBar01 : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXListBar01)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXListBar01, AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXListBar01, WL_Xlist_List03, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXListBar01, TextBoxCtn, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXListBar01, BgImage, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXListBar01, CursorWidget, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXListBar01, AnmCtn, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXListBar01, UnknownData_LECX, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXListBar01, TextListMaterial, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXListBar01, ListBaseMaterial, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXListBar01, UnknownData_40HS, 0x03F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXListBar01, 0x0450);
		}

		// class UAT_UIXlistBar04 : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXlistBar04)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar04, WL_Txt_List, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar04, WL_Ins_Cursor_Fad, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar04, WL_Ins_Icon_Item, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar04, WL_Icon_New, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar04, WL_Txt_Num_Price, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar04, WL_Txt_Num, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar04, WL_Txt_Num_Have, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar04, WL_Pnl_None, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar04, WL_Txt_Sold_Out, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar04, WL_Xmenu_Arrow01_L, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar04, WL_Xmenu_Arrow01_R, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar04, WL_Img_Fad_Black, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar04, WL_Ins_Win_Base, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar04, UnknownData_TV7X, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar04, EnterAnimation, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar04, InSoldOutAnimation, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar04, TxtListMaterial, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar04, TxtNumMaterial, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar04, TxtNumPriceMaterial, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar04, TxtNumHaveMaterial, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar04, CursorMaterial, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar04, UnknownData_DL42, 0x0418);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXlistBar04, 0x0420);
		}

		// class UAT_UIXlistBar05 : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXlistBar05)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar05, AllNut, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar05, TxtList, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar05, TxtNum, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar05, SelectCursor, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar05, IconNew, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar05, EnterAnim, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar05, InSoldOutAnim, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar05, SoldOutText, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar05, TxtListMaterial, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar05, TxtNumMaterial, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar05, CursorMaterial, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistBar05, UnknownData_Z6NA, 0x0408);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXlistBar05, 0x0418);
		}

		// class UAT_UIXlistCond : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXlistCond)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistCond, WL_Start_Quest_Bar00_00, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistCond, WL_Start_Quest_Bar00_01, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistCond, WL_Start_Quest_Bar00_02, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXlistCond, 0x03C8);
		}

		// class UAT_UIXlistCustom00Item : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXlistCustom00Item)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistCustom00Item, Border_Cursor, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistCustom00Item, Image_Base, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistCustom00Item, Image_Icon, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistCustom00Item, Image_Disable, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistCustom00Item, TextBox_Normal, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistCustom00Item, TextBox_Select, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistCustom00Item, FontMat_Normal, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistCustom00Item, OutlineMat_Normal, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistCustom00Item, Anim_Set, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistCustom00Item, Anim_Edit, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistCustom00Item, Anim_Remove, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistCustom00Item, Anim_Cancel, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistCustom00Item, UnknownData_K8QU, 0x03D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXlistCustom00Item, 0x03E8);
		}

		// class UAT_UIXlistCustom00 : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXlistCustom00)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistCustom00, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistCustom00, UIScrollBar, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistCustom00, Item_List, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistCustom00, Anim_In, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistCustom00, Anim_Out, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistCustom00, UnknownData_4KMT, 0x03A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXlistCustom00, 0x03C0);
		}

		// class UAT_UICustom00MenuList10 : public UAT_UIXlistCustom00
		TEST_METHOD(Class__AT__AT_UICustom00MenuList10)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UICustom00MenuList10, 0x03C0);
		}

		// class UAT_UIXlistList05Lay7 : public UAT_UIMenuListBase00
		TEST_METHOD(Class__AT__AT_UIXlistList05Lay7)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXlistList05Lay7, UnknownData_3ZW1, 0x0478);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXlistList05Lay7, 0x0488);
		}

		// class UAT_UIXmenuCommu : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXmenuCommu)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXmenuCommu, WL_CanvasAllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXmenuCommu, WL_ImageIcon, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXmenuCommu, WL_TextTitle, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXmenuCommu, WL_HBExpMole, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXmenuCommu, WL_ImageExpDenomiAry, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXmenuCommu, WL_HBRank, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXmenuCommu, WL_ImageStarAry, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXmenuCommu, WA_AnimIn, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXmenuCommu, WA_AnimOut, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXmenuCommu, CurRank, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXmenuCommu, ViewRank, 0x03CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXmenuCommu, RankChangeInterval, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXmenuCommu, RankChangeIntervalLimit, 0x03D4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXmenuCommu, 0x03D8);
		}

		// class UAT_UIIconStar : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIIconStar)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconStar, WA_AnimIn, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconStar, WA_AnimOut, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconStar, WA_AnimStarIn, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconStar, WA_AnimStarOut, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconStar, WA_AnimStarMax, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconStar, WL_ImageIconStar, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconStar, WL_CanvasAllNut, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIIconStar, UnknownData_MBU4, 0x03A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIIconStar, 0x03B0);
		}

		// class UAT_UIXtexPartsDb00 : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIXtexPartsDb00)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXtexPartsDb00, Canvas_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXtexPartsDb00, Image_DB, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIXtexPartsDb00, Anim_Loop, 0x0380);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIXtexPartsDb00, 0x0388);
		}

		// class UAT_UIZCWCompletion : public UATUIUserWidget
		TEST_METHOD(Class__AT__AT_UIZCWCompletion)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWCompletion, UnknownData_0E77, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWCompletion, m_AllNut, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWCompletion, m_InAnim, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWCompletion, m_OutAnim, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWCompletion, m_Message, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWCompletion, m_DisplayDelayTime, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWCompletion, m_DisplayTime, 0x03DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWCompletion, UnknownData_I5IY, 0x03E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIZCWCompletion, 0x0400);
		}

		// class UAT_UIZCWNaviMore : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIZCWNaviMore)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWNaviMore, m_Text, 0x0370);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIZCWNaviMore, 0x0378);
		}

		// class UAT_UIZCWNavigation : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIZCWNavigation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWNavigation, m_TextColorNormal, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWNavigation, m_TextColorComplete, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWNavigation, m_TextColorInvalid, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWNavigation, m_PressChangeButtonTime, 0x037C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWNavigation, m_AllNut, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWNavigation, m_Root, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWNavigation, m_DefaultAnim, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWNavigation, m_InAnim, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWNavigation, m_OutAnim, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWNavigation, m_Item, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWNavigation, m_More, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWNavigation, UnknownData_3DGQ, 0x03E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIZCWNavigation, 0x04E0);
		}

		// class UAT_UIZCWNaviItem : public UCFUIUserWidget
		TEST_METHOD(Class__AT__AT_UIZCWNaviItem)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWNaviItem, m_AllNut, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWNaviItem, m_InAnim, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWNaviItem, m_OutAnim, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWNaviItem, m_UpAnim, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWNaviItem, m_StayInAnim, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWNaviItem, m_StayOutAnim, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWNaviItem, m_ListItem, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWNaviItem, m_Icon, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWNaviItem, m_Title, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_UIZCWNaviItem, UnknownData_ME8Z, 0x03B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIZCWNaviItem, 0x03C0);
		}

		// class UAT_WaterNotifyState : public UAnimNotifyState
		TEST_METHOD(Class__AT__AT_WaterNotifyState)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_WaterNotifyState, PSTemplate, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_WaterNotifyState, ChangeEffect, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_WaterNotifyState, Attached, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_WaterNotifyState, UnknownData_HNXM, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_WaterNotifyState, LocationOffset, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_WaterNotifyState, RotationOffset, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_WaterNotifyState, UnknownData_YR3T, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_WaterNotifyState, SocketName, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_WaterNotifyState, Scale, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_WaterNotifyState, bDestroyAtEnd, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_WaterNotifyState, bDetachedAtEnd, 0x006D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_WaterNotifyState, UnknownData_NYZ3, 0x006E);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_WaterNotifyState, CachedParticle, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_WaterNotifyState, m_xSetparticle, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_WaterNotifyState, UnknownData_9FLC, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_WaterNotifyState, 0x0088);
		}

		// class UATActBase : public UObject
		TEST_METHOD(Class__AT__ATActBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActBase, IsEnableCancelableFlag, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActBase, CameraLongDist, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActBase, UnknownData_19CV, 0x002A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActBase, CameraLongDistDiff, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActBase, CameraDistMaxR, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActBase, UnknownData_8P1O, 0x0034);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActBase, 0x00B0);
		}

		// class UATActMontageId : public UATActBase
		TEST_METHOD(Class__AT__ATActMontageId)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActMontageId, MontageTbl, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActMontageId, UnknownData_0200, 0x00C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActMontageId, 0x00C8);
		}

		// class UATActAccessPointGet : public UATActMontageId
		TEST_METHOD(Class__AT__ATActAccessPointGet)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActAccessPointGet, 0x00C8);
		}

		// class UATActAccessPointLook : public UATActMontageId
		TEST_METHOD(Class__AT__ATActAccessPointLook)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActAccessPointLook, UnknownData_E6HZ, 0x00C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActAccessPointLook, 0x00D0);
		}

		// class UATActAccessPointMineralSearch : public UATActBase
		TEST_METHOD(Class__AT__ATActAccessPointMineralSearch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActAccessPointMineralSearch, UnknownData_16U8, 0x00B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActAccessPointMineralSearch, 0x00B8);
		}

		// class UATActAnimalCapture : public UATActMontageId
		TEST_METHOD(Class__AT__ATActAnimalCapture)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActAnimalCapture, MontageMove, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActAnimalCapture, MontageStop, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActAnimalCapture, MontageEnd, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActAnimalCapture, UnknownData_NHFI, 0x00E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActAnimalCapture, 0x0150);
		}

		// class UATActAuraWait_LP : public UATActMontageId
		TEST_METHOD(Class__AT__ATActAuraWait_LP)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActAuraWait_LP, 0x00C8);
		}

		// class UATActAuraWait_ST : public UATActMontageId
		TEST_METHOD(Class__AT__ATActAuraWait_ST)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActAuraWait_ST, 0x00C8);
		}

		// class UATActAvoid : public UATActBase
		TEST_METHOD(Class__AT__ATActAvoid)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActAvoid, SparkingUpValue, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActAvoid, UnknownData_KNTU, 0x00B4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActAvoid, 0x0148);
		}

		// class UATActBaseballBatter : public UATActBase
		TEST_METHOD(Class__AT__ATActBaseballBatter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActBaseballBatter, MontageWait, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActBaseballBatter, MontageSwingWait, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActBaseballBatter, MontageSwingMiss, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActBaseballBatter, MontageSwingStart, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActBaseballBatter, MontageSwingLoop, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActBaseballBatter, MontageSwingEnd, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActBaseballBatter, MontageWait_Aura, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActBaseballBatter, MontageSwingWait_Aura, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActBaseballBatter, MontageSwingMiss_Aura, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActBaseballBatter, MontageSwingStart_Aura, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActBaseballBatter, MontageSwingLoop_Aura, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActBaseballBatter, MontageSwingEnd_Aura, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActBaseballBatter, UnknownData_2DYM, 0x0110);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActBaseballBatter, 0x0170);
		}

		// class UATActBehindED : public UATActMontageId
		TEST_METHOD(Class__AT__ATActBehindED)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActBehindED, 0x00C8);
		}

		// class UATActBehindLP : public UATActMontageId
		TEST_METHOD(Class__AT__ATActBehindLP)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActBehindLP, 0x00C8);
		}

		// class UATActBehindST : public UATActMontageId
		TEST_METHOD(Class__AT__ATActBehindST)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActBehindST, 0x00C8);
		}

		// class UATActBlendSpaceTest : public UATActBase
		TEST_METHOD(Class__AT__ATActBlendSpaceTest)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActBlendSpaceTest, MontageST, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActBlendSpaceTest, MontageLP, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActBlendSpaceTest, MontageED, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActBlendSpaceTest, BlendSpace, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActBlendSpaceTest, UnknownData_BM01, 0x00D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActBlendSpaceTest, 0x0138);
		}

		// class UATActBurst : public UATActBase
		TEST_METHOD(Class__AT__ATActBurst)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActBurst, UnknownData_VIW6, 0x00B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActBurst, 0x0110);
		}

		// class UATActCharge : public UATActBase
		TEST_METHOD(Class__AT__ATActCharge)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCharge, MontageHeat, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCharge, ParticleHeat, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCharge, HeatCutInfo, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCharge, UnknownData_1CPR, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCharge, ParticleComp, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCharge, UnknownData_QACC, 0x0138);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCharge, 0x0140);
		}

		// class UATActSkillBase : public UATActBase
		TEST_METHOD(Class__AT__ATActSkillBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBase, SkillMoveDesignated, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBase, SkillMoveType, 0x00B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBase, SkillMoveTypeCut, 0x00B2);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBase, SkillMoveCheckType, 0x00B3);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBase, SparkingUpValue, 0x00B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBase, SparkingReceiveUpValue, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBase, UseDarkEffect, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBase, UnknownData_VMZU, 0x00BD);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBase, DarkEffectPower, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBase, DarkEffectDistance, 0x00C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBase, DarkEffectStartTime, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBase, DarkEffectEndTime, 0x00CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBase, DarkEffectFadein, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBase, DarkEffectFadeout, 0x00D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBase, UnknownData_44KV, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSkillBase, 0x00F8);
		}

		// class UATActHugeSkillBeam : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActHugeSkillBeam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillBeam, MontageCutin, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillBeam, MontageCharge, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillBeam, MontageShot, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillBeam, MontageRushFinish, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillBeam, ChargeLoopTime, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillBeam, ShotLoopTime, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillBeam, ShotLoopTimeWait, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillBeam, FinishChangeTime, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillBeam, UnknownData_6HIK, 0x0128);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActHugeSkillBeam, 0x0198);
		}

		// class UATActCpl002SkillMakoudan : public UATActHugeSkillBeam
		TEST_METHOD(Class__AT__ATActCpl002SkillMakoudan)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl002SkillMakoudan, BlendSpace, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl002SkillMakoudan, EnableMotBlend, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl002SkillMakoudan, UnknownData_H4XO, 0x01A1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl002SkillMakoudan, DirectionParamList, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl002SkillMakoudan, ShotParamList, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl002SkillMakoudan, UnknownData_F3NE, 0x01C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl002SkillMakoudan, 0x01E0);
		}

		// class UATActCpl002ZSkillStep : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl002ZSkillStep)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl002ZSkillStep, MontageST, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl002ZSkillStep, MontageLP, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl002ZSkillStep, MontageED, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl002ZSkillStep, UnknownData_UJRH, 0x0110);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl002ZSkillStep, 0x0168);
		}

		// class UATActCpl003BSkillSpecial : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl003BSkillSpecial)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecial, MontageST, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecial, MontageLPHigh, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecial, MontageLPLow, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecial, MontageED, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecial, RemainHPRate, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecial, LoopExecNumHigh, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecial, LoopExecNumLow, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecial, DirInterp, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecial, LastShotEndWaitTime, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecial, UnknownData_8CDG, 0x012C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl003BSkillSpecial, 0x0198);
		}

		// class UATActCpl003BSkillSpecialBoss : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl003BSkillSpecialBoss)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecialBoss, MontageST, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecialBoss, MontageLPHigh, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecialBoss, MontageLPLow, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecialBoss, MontageED, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecialBoss, RemainHPRate, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecialBoss, LoopExecNumHigh, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecialBoss, LoopExecNumLow, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecialBoss, DirInterp, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecialBoss, LastShotEndWaitTime, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecialBoss, UnknownData_MWCQ, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecialBoss, SubClassTeleport, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecialBoss, SubClasstBarrier, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecialBoss, SkillCameraParam, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecialBoss, UnknownData_OESH, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecialBoss, TeleportModule, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecialBoss, BarrierModule, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003BSkillSpecialBoss, UnknownData_CF5O, 0x0178);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl003BSkillSpecialBoss, 0x01D0);
		}

		// class UATActCpl003Makoho : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl003Makoho)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003Makoho, MontageCutin, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003Makoho, MontageCharge, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003Makoho, MontageShot, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003Makoho, ChargeLoopTime, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003Makoho, ShotLoopTime, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003Makoho, ShotLoopTimeWait, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003Makoho, DistToTarget, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003Makoho, DistToTargetHeight, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003Makoho, LoopFrequency, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003Makoho, SkillCameraParam, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl003Makoho, UnknownData_AL3Y, 0x0140);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl003Makoho, 0x01A8);
		}

		// class UATActSkillBasic : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActSkillBasic)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBasic, UseMove, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBasic, UnknownData_DB8Q, 0x00F9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBasic, MoveWaitMontage, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBasic, MoveWaitLoopTime, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBasic, MoveWaitLoopTimeHeatUpCancel, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBasic, MoveMontage, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBasic, MoveEndPermitTime, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBasic, MoveTargetDistance, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBasic, MoveLoopLength, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBasic, MoveLoopTime, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBasic, MoveLoopTimeSupportRatio, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBasic, MoveLoopTimeNextAttack, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBasic, MoveFizzleFlag, 0x012D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBasic, UnknownData_ARWC, 0x012E);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBasic, MoveCutinMontage, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBasic, ForceMoveCutin, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBasic, UnknownData_MPLA, 0x0139);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBasic, SkillMontage, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBasic, AttackHitMontage, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBasic, AttackHitGuardedNotChageState, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBasic, AttackHitProjectileNotChangeState, 0x0159);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBasic, UnknownData_79EJ, 0x015A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSkillBasic, 0x01D0);
		}

		// class UATActCpl005SkillDeathBullet : public UATActSkillBasic
		TEST_METHOD(Class__AT__ATActCpl005SkillDeathBullet)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathBullet, AttackHitWait, 0x01D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathBullet, UnknownData_Q2CU, 0x01D4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl005SkillDeathBullet, 0x01D8);
		}

		// class UATActCpl005SkillDeathSlicer : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl005SkillDeathSlicer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, MontageCutin, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, MontageCharge, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, MontageST, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, MontageLP, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, MontageED, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, ShotTargetDistance, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, ShotChargeTime, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, ShotLoopTime, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, ShotEndWaitTime, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, ShotProjectileRotationL, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, ShotProjectileRotationR, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, ShotCameraParam, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, ShotBarrierClass, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, ShotDirectionTable, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, AroundCameraBgnTime, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, AroundCameraEndTime, 0x017C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, AroundEndWaitTime, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, AroundCameraDistance, 0x0184);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, AroundCameraPitch, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, AroundCameraFOV, 0x018C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, AroundCameraInterp, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, AroundCameraBgnBlendTime, 0x0194);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, AroundCameraEndBlendTime, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, UnknownData_2R3X, 0x019C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, AroundBarrierClass, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, AroundProjectileClass, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, AroundProjectileScale, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, AroundSpawnDistance, 0x01B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, UnknownData_0KR3, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, AroundProjectileSetNum, 0x01C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, AroundProjectileNum, 0x01CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, AroundProjectileDelay, 0x01D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, AroundProjectileInterval, 0x01D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, AroundProjectileIntervalSet, 0x01D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, AroundProjectileShiftAngleMin, 0x01DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, AroundProjectileShiftAngleMax, 0x01E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, AroundProjectileShiftAngleSub, 0x01E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, ShotBarrier, 0x01E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, AroundBarrier, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicer, UnknownData_F849, 0x01F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl005SkillDeathSlicer, 0x0328);
		}

		// class UATActCpl005SkillDeathSlicerNormal : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl005SkillDeathSlicerNormal)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicerNormal, MontageST, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicerNormal, MontageLP, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicerNormal, MontageAttackR_1st, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicerNormal, MontageAttackR, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicerNormal, MontageAttackL, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicerNormal, MontageAttackLP, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicerNormal, MontageED, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicerNormal, AttackNum, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicerNormal, LoopTime, 0x0134);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicerNormal, AttackLoopTime, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicerNormal, AttackLoopTimeED, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillDeathSlicerNormal, UnknownData_TBK8, 0x0140);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl005SkillDeathSlicerNormal, 0x01A8);
		}

		// class UATActCpl005SkillHighSpeed : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl005SkillHighSpeed)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillHighSpeed, Montage, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillHighSpeed, LoopTimeMax, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillHighSpeed, AttackNum, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillHighSpeed, TargetOffDistance, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillHighSpeed, TargetOffAddTime, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillHighSpeed, UnknownData_MMYX, 0x0110);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl005SkillHighSpeed, 0x0180);
		}

		// class UATActCpl005SkillLongRangeA : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl005SkillLongRangeA)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillLongRangeA, MontageST, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillLongRangeA, MontageLP, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillLongRangeA, MontageED, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillLongRangeA, LoopExecNum, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillLongRangeA, DirInterp, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillLongRangeA, MoveLimitDistance, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillLongRangeA, UnknownData_1HJ7, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillLongRangeA, ProjectileParamList, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillLongRangeA, UnknownData_M649, 0x0130);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl005SkillLongRangeA, 0x0198);
		}

		// class UATActCpl005SkillLongRangeB : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl005SkillLongRangeB)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillLongRangeB, WaitMontage, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillLongRangeB, AttackMontage, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillLongRangeB, AttackWaitMontage, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillLongRangeB, EndMontage, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillLongRangeB, ChargeTimeMax, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillLongRangeB, LoopExecNum, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillLongRangeB, AttackWaitTime, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillLongRangeB, UnknownData_QZDU, 0x0124);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl005SkillLongRangeB, 0x0190);
		}

		// class UATActCpl005SkillShortRange : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl005SkillShortRange)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillShortRange, MontageST, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillShortRange, MontageLP, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillShortRange, MontageED, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillShortRange, LoopTimeMax, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillShortRange, LoopStopDist, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl005SkillShortRange, UnknownData_9CBV, 0x0118);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl005SkillShortRange, 0x0178);
		}

		// class UATActCpl012SkillDaysBreak : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl012SkillDaysBreak)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl012SkillDaysBreak, Montage, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl012SkillDaysBreak, UnknownData_IL0Z, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl012SkillDaysBreak, 0x0158);
		}

		// class UATActCpl012SkillDoubleSunday : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl012SkillDoubleSunday)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl012SkillDoubleSunday, MontageCutST, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl012SkillDoubleSunday, MontageCut, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl012SkillDoubleSunday, MontageShotST, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl012SkillDoubleSunday, MontageShotLP, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl012SkillDoubleSunday, MontageShotED, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl012SkillDoubleSunday, BarrierClass, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl012SkillDoubleSunday, BeamOrbitInfo, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl012SkillDoubleSunday, TargetDistance, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl012SkillDoubleSunday, OwnerHeightPos, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl012SkillDoubleSunday, TargetHeightOffset, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl012SkillDoubleSunday, SetMovePosStrength, 0x0144);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl012SkillDoubleSunday, SetAnglePower, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl012SkillDoubleSunday, SetRightVectorPower, 0x014C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl012SkillDoubleSunday, SetDistancePower, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl012SkillDoubleSunday, UnknownData_YG6E, 0x0154);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl012SkillDoubleSunday, Barrier, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl012SkillDoubleSunday, UnknownData_EP2V, 0x01B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl012SkillDoubleSunday, 0x01F0);
		}

		// class UATActCpl012SkillSaturdayCrash : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl012SkillSaturdayCrash)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl012SkillSaturdayCrash, MontageShotST, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl012SkillSaturdayCrash, MontageShotLP, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl012SkillSaturdayCrash, MontageShotED, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl012SkillSaturdayCrash, ShotMaxCount, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl012SkillSaturdayCrash, UnknownData_H6K3, 0x0114);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl012SkillSaturdayCrash, 0x0170);
		}

		// class UATActCpl013ShockWave : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl013ShockWave)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013ShockWave, MontageStart, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013ShockWave, MontageCharge, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013ShockWave, MontageShot_Cut_LP, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013ShockWave, MontageShot, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013ShockWave, MontageShot_LP, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013ShockWave, MontageShot_ED, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013ShockWave, CameraMoveTime, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013ShockWave, CameraDistance, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013ShockWave, CameraZOffset, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013ShockWave, PrevCameraSec, 0x0134);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013ShockWave, PrevCameraBlend, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013ShockWave, UnknownData_QSNP, 0x013C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl013ShockWave, 0x01B0);
		}

		// class UATActCpl013SkillBlazingStorm : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl013SkillBlazingStorm)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, MontageST, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, MontageLP, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, MontageCut, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, MontageChgLP, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, MontageShtST, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, MontageShtLP, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, MontageShtED, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, RiseSpeed, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, RiseSpeedAcc, 0x0134);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, RiseHeight, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, RiseTimeMin, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, RiseTimeMax, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, ChargeLoopTime, 0x0144);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, ShootLoopTime, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, TargetDistance, 0x014C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, TargetHeightLimit, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, ShootLoopDistanceMin, 0x0154);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, ShootLoopDistanceMax, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, CameraFov, 0x015C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, CameraLocateOffset, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, CameraLookAtOffset, 0x0164);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, CameraAngle, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, UnknownData_4K9Q, 0x016C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, CameraLocateCurve, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, CameraLookAtCurve, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, CameraRotateCurve, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillBlazingStorm, UnknownData_9Y0B, 0x0188);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl013SkillBlazingStorm, 0x01E8);
		}

		// class UATActCpl013SkillDeluxeBomber : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl013SkillDeluxeBomber)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillDeluxeBomber, MontageST, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillDeluxeBomber, MontageLP, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillDeluxeBomber, MontageShtST_R, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillDeluxeBomber, MontageShtST_L, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillDeluxeBomber, MontageShtED_R, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillDeluxeBomber, MontageShtED_L, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillDeluxeBomber, ChargeLoopTime, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillDeluxeBomber, LoopFrequency, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillDeluxeBomber, UnknownData_W8Y8, 0x0130);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl013SkillDeluxeBomber, 0x0190);
		}

		// class UATActCpl013SkillOverheadKick : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl013SkillOverheadKick)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillOverheadKick, MontageWait, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillOverheadKick, MontageAtk, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillOverheadKick, MoveTimeMax, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillOverheadKick, DashSpeed, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillOverheadKick, DashDistance, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillOverheadKick, DashSpeedNear, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillOverheadKick, UnknownData_J5MA, 0x0118);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl013SkillOverheadKick, 0x0170);
		}

		// class UATActCpl013SkillSuperPunch : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl013SkillSuperPunch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillSuperPunch, MontageWait, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillSuperPunch, MontageAtk, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillSuperPunch, MoveTimeMax, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillSuperPunch, DashSpeed, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillSuperPunch, DashDistance, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillSuperPunch, DashSpeedNear, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillSuperPunch, LoopFrequency, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl013SkillSuperPunch, UnknownData_P7KJ, 0x011C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl013SkillSuperPunch, 0x0180);
		}

		// class UATActCpl014SkillClawAttack : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl014SkillClawAttack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillClawAttack, MontageWait, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillClawAttack, MontageMoveAttack, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillClawAttack, MontageAttackLoopR, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillClawAttack, MontageAttackLoopL, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillClawAttack, MontageAttackEnd, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillClawAttack, MoveTimeMax, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillClawAttack, DashSpeed, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillClawAttack, DashDistance, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillClawAttack, DashSpeedNear, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillClawAttack, DashSpeedNearAttackSecond, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillClawAttack, JudgeAttackDistance, 0x0134);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillClawAttack, AttackLoopNum, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillClawAttack, UnknownData_39PU, 0x013C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl014SkillClawAttack, 0x01A0);
		}

		// class UATActCpl014SkillZibaku : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl014SkillZibaku)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillZibaku, MontageWait, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillZibaku, MontageMove, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillZibaku, MontageAttackSuccess, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillZibaku, MontageAttackFailed, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillZibaku, MontageAttackEscape, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillZibaku, MontageTargetLock, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillZibaku, MontageAttack, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillZibaku, MoveTimeMax, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillZibaku, ChaseTime, 0x0134);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillZibaku, DashSpeed, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillZibaku, LockSec, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillZibaku, SuccessWaitSec, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillZibaku, AttachOffsetPos, 0x0144);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillZibaku, AttachOffsetRot, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl014SkillZibaku, UnknownData_JQOL, 0x015C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl014SkillZibaku, 0x01D0);
		}

		// class UATActCpl018SkillHighSpeed : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl018SkillHighSpeed)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillHighSpeed, Montage, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillHighSpeed, WaitTime, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillHighSpeed, LoopTimeMax, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillHighSpeed, TargetOffDistance, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillHighSpeed, HitMoveDistance, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillHighSpeed, HitMoveSpeed, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillHighSpeed, HitNum, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillHighSpeed, AttachMontageName, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillHighSpeed, offsetLocation, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillHighSpeed, OffsetRotation, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillHighSpeed, DamageParamLP, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillHighSpeed, DamageParamED, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillHighSpeed, LoopFrequency, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillHighSpeed, UnknownData_A6JQ, 0x019C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl018SkillHighSpeed, 0x0220);
		}

		// class UATActCpl018SkillLongRange : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl018SkillLongRange)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillLongRange, Montage, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillLongRange, MontageWait, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillLongRange, WaitTime, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillLongRange, LoopTimeMax, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillLongRange, DirInterp, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillLongRange, LoopFrequency, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillLongRange, UnknownData_PRTJ, 0x0118);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl018SkillLongRange, 0x0178);
		}

		// class UATActCpl018SkillShortRange : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl018SkillShortRange)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillShortRange, Montage, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillShortRange, WaitTime, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillShortRange, LoopTimeMax, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillShortRange, LoopStopDist, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillShortRange, UnknownData_MA7A, 0x010C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl018SkillShortRange, 0x0170);
		}

		// class UATActCpl018SkillSpecial : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl018SkillSpecial)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillSpecial, Stage1_MontageCut, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillSpecial, Stage1_Montage, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillSpecial, Stage1_LoopTimeMaxCut, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillSpecial, Stage1_LoopTimeMax, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillSpecial, Stage1_ShotLoopTimeMax, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillSpecial, Stage1_ShotEndWaitTime, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillSpecial, Stage1_EndWaitTime, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillSpecial, Stage1_DirInterp, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillSpecial, Stage2_MontageCut, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillSpecial, Stage2_Montage_LP_R, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillSpecial, Stage2_Montage_LP_L, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillSpecial, Stage2_Montage_ED, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillSpecial, Stage2_ShotEndWaitTime, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillSpecial, Stage2_LastShotEndWaitTime, 0x0144);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillSpecial, Stage2_ForwardOffsetList, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillSpecial, TargetDistance, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillSpecial, SkillCameraParam, 0x015C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillSpecial, Test_Stage1_ProjectileMax, 0x0174);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillSpecial, Test_Stage2_ProjectileMax, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl018SkillSpecial, UnknownData_P4RG, 0x017C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl018SkillSpecial, 0x0200);
		}

		// class UATActCpl019BSkillHighSpeed : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl019BSkillHighSpeed)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillHighSpeed, Montage00, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillHighSpeed, Montage01, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillHighSpeed, Montage02, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillHighSpeed, Montage10, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillHighSpeed, Montage11, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillHighSpeed, Montage12, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillHighSpeed, MoveTimeMax, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillHighSpeed, DashDistNear, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillHighSpeed, MotionTime_Hit_01ST, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillHighSpeed, DashSpeed, 0x0134);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillHighSpeed, SlowSpeed, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillHighSpeed, MaxAttackTime, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillHighSpeed, LoopFrequency, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillHighSpeed, UnknownData_04LM, 0x0144);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl019BSkillHighSpeed, 0x01A8);
		}

		// class UATActCpl019BSkillLongRange : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl019BSkillLongRange)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillLongRange, Montage, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillLongRange, WaitTime, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillLongRange, LoopTimeMax, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillLongRange, DirectionOffset, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillLongRange, DirInterp, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillLongRange, UnknownData_UKOS, 0x0110);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl019BSkillLongRange, 0x0168);
		}

		// class UATActCpl019BSkillShortRange : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl019BSkillShortRange)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillShortRange, Montage, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillShortRange, JumpDegree, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillShortRange, JumpTimeMax, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillShortRange, JumpSpeed, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillShortRange, MoveTimeMax, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillShortRange, DashDistTarget, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillShortRange, DashDistNear, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillShortRange, DashSpeed, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillShortRange, UnknownData_IDW5, 0x011C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl019BSkillShortRange, 0x0180);
		}

		// class UATActCpl019BSkillSpecial : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl019BSkillSpecial)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillSpecial, Montage, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillSpecial, MontageIntro, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillSpecial, MontageFailure, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillSpecial, MontageFailureC003A, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillSpecial, MontageSuccess, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillSpecial, MontageSuccessC003A, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillSpecial, TargetDistance, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillSpecial, SkillCameraParam, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillSpecial, ChaseSpeed, 0x0144);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillSpecial, ChaseTime, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillSpecial, UnknownData_5PHT, 0x014C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillSpecial, SpecialProjectileClass, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillSpecial, TargetNearDistance, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillSpecial, FailureDistance, 0x015C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillSpecial, FailureCutLoopTime, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillSpecial, FailureCutEndLoopTime, 0x0164);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillSpecial, FailureCutZDistance, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillSpecial, DecalFadeTime, 0x016C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl019BSkillSpecial, UnknownData_KOB0, 0x0170);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl019BSkillSpecial, 0x01D8);
		}

		// class UATActCpl021SkillLongRange : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl021SkillLongRange)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillLongRange, Montage, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillLongRange, WaitTime, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillLongRange, LoopTimeMax, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillLongRange, DirectionOffset, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillLongRange, ChargeLoopTime, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillLongRange, ShotRotationStartTime, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillLongRange, ShotPattern, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillLongRange, ShotRotationLimitYaw, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillLongRange, ShotRotationLimitPitch, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillLongRange, DirInterp, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillLongRange, UnknownData_YIS2, 0x0124);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl021SkillLongRange, 0x0198);
		}

		// class UATActCpl021SkillShortRange : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl021SkillShortRange)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillShortRange, Montage, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillShortRange, PosingLoopTime, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillShortRange, MoveLoopTime, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillShortRange, MoveTimeMax, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillShortRange, StartDistTarget, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillShortRange, LeaveSpeed, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillShortRange, DashDistTarget, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillShortRange, DashDistNear, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillShortRange, DashSpeed, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillShortRange, LoopFrequency, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillShortRange, UnknownData_LCYP, 0x0124);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl021SkillShortRange, 0x0188);
		}

		// class UATActCpl021SkillSpecial : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl021SkillSpecial)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillSpecial, Stage1_MontageCut, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillSpecial, Stage1_Montage, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillSpecial, Stage1_LoopExecNum, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillSpecial, Stage1_DirInterp, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillSpecial, Stage1_TargetDistance, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillSpecial, Stage1_SkillCameraParam, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillSpecial, UnknownData_AJ48, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillSpecial, Stage2_MontageCut, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillSpecial, Stage2_Montage, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillSpecial, Stage2_StartWaitTime, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillSpecial, Stage2_LastShotEndWaitTime, 0x0144);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillSpecial, Stage2_TargetDistance, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillSpecial, Stage2_TargetHeight, 0x014C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillSpecial, Stage2_TargetLimitHeight, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillSpecial, Stage2_EndTargetHeight, 0x0154);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillSpecial, Stage2_SkillCameraParam, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillSpecial, UnknownData_SI4O, 0x0170);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl021SkillSpecial, 0x01D8);
		}

		// class UATActCpl021SkillWalking : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl021SkillWalking)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillWalking, MontageWalk, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillWalking, MontageAttack, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillWalking, MoveLoopTime, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillWalking, MoveTimeMax, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillWalking, WalkSpeed, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillWalking, DashStartDist, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillWalking, DashDistTarget, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillWalking, DashDistNear, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillWalking, DashSpeed, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillWalking, LoopExecNum, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl021SkillWalking, UnknownData_EB10, 0x0128);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl021SkillWalking, 0x0190);
		}

		// class UATActCpl024SkillOneShot : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl024SkillOneShot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl024SkillOneShot, WaitMontage, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl024SkillOneShot, AttackMontage, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl024SkillOneShot, WaitLoopTime, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl024SkillOneShot, LoopFrequency, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl024SkillOneShot, UnknownData_R0HL, 0x0110);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl024SkillOneShot, 0x0178);
		}

		// class UATActCpl024SkillShortRange : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl024SkillShortRange)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl024SkillShortRange, Montage, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl024SkillShortRange, LoopTimeMax, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl024SkillShortRange, UnknownData_4YO6, 0x0104);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl024SkillShortRange, 0x0160);
		}

		// class UATActCpl024SkillSpecial : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl024SkillSpecial)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl024SkillSpecial, MontageCut, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl024SkillSpecial, MontageWait, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl024SkillSpecial, MontageAttack, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl024SkillSpecial, MontageAttackWait, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl024SkillSpecial, LoopTimeMaxCut, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl024SkillSpecial, LoopTimeMax, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl024SkillSpecial, LastShotEndWaitTime, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl024SkillSpecial, ProjectileExecNum, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl024SkillSpecial, TargetDistance, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl024SkillSpecial, HomingTargetDelayTime, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl024SkillSpecial, HomingTargetMaxSpeed, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl024SkillSpecial, SkillCameraParam, 0x0134);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl024SkillSpecial, UnknownData_2NZB, 0x014C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl024SkillSpecial, 0x01C8);
		}

		// class UATActCpl029SkillEnergyAbsorb : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl029SkillEnergyAbsorb)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl029SkillEnergyAbsorb, Montage, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl029SkillEnergyAbsorb, LoopTimeMin, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl029SkillEnergyAbsorb, LoopTimeExtend, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl029SkillEnergyAbsorb, MontageEnd, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl029SkillEnergyAbsorb, UnknownData_31RS, 0x0110);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl029SkillEnergyAbsorb, 0x0170);
		}

		// class UATActCpl030SkillAbsorbModeStart : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl030SkillAbsorbModeStart)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillAbsorbModeStart, MontageCut, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillAbsorbModeStart, Montage, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillAbsorbModeStart, TestAlwaysCutin, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillAbsorbModeStart, UnknownData_MSAR, 0x0109);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl030SkillAbsorbModeStart, 0x0178);
		}

		// class UATActCpl030SkillEnergyAbsorb : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl030SkillEnergyAbsorb)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillEnergyAbsorb, Montage, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillEnergyAbsorb, UnknownData_V9S9, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl030SkillEnergyAbsorb, 0x0168);
		}

		// class UATActCpl030SkillEnergyDrain : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl030SkillEnergyDrain)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillEnergyDrain, Montage, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillEnergyDrain, MontageHit, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillEnergyDrain, MontageHit_Dmg, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillEnergyDrain, MontageHitLP, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillEnergyDrain, MontageHitLP_Dmg, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillEnergyDrain, MontageThrow, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillEnergyDrain, MontageThrow_Dmg, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillEnergyDrain, LoopTimeMax, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillEnergyDrain, LoopStopDist, 0x0134);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillEnergyDrain, SubClassTeleport, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillEnergyDrain, HitTeleportStartTime, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillEnergyDrain, HitLoopTime, 0x0144);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillEnergyDrain, HitLoopEndInputCount, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillEnergyDrain, HitLoopEndWaitTime, 0x014C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillEnergyDrain, HitLoopEndMoveSpeed, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillEnergyDrain, AbsorbRateEnergyDrain, 0x0154);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillEnergyDrain, AbsorbRateTargetMP, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillEnergyDrain, AbsorbLifeRateEnergyDrain, 0x015C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillEnergyDrain, DamageParam, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillEnergyDrain, UnknownData_JYNW, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillEnergyDrain, TeleportModule, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillEnergyDrain, UnknownData_V2PI, 0x01A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl030SkillEnergyDrain, 0x0308);
		}

		// class UATActCpl030SkillPhotonWave : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl030SkillPhotonWave)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillPhotonWave, Normal_MontageChg, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillPhotonWave, Normal_MontageSht, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillPhotonWave, Normal_LoopTimeMax, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillPhotonWave, Normal_ShotLoopTimeMax, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillPhotonWave, Normal_DirInterp, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillPhotonWave, UnknownData_XLI8, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillPhotonWave, Super_MontageChg, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillPhotonWave, Super_MontageSht, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillPhotonWave, Super_LoopTimeMax, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillPhotonWave, Super_ShotLoopTimeMax, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillPhotonWave, Super_DirInterp, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillPhotonWave, Super_ShotRotationSpeed, 0x0134);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillPhotonWave, Super_ShotTurnRotationSpeed, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillPhotonWave, Super_ShotStartOffsetRotation, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillPhotonWave, Super_StartTurnTime, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillPhotonWave, Super_ShotTurnAttenuationTime, 0x0144);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillPhotonWave, Super_ShotTurnWaitTime, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillPhotonWave, TargetDistance, 0x014C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillPhotonWave, SkillCameraParam, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillPhotonWave, TestFullPower, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillPhotonWave, UnknownData_AG8X, 0x0169);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillPhotonWave, LoopFrequency, 0x016C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl030SkillPhotonWave, UnknownData_X1WW, 0x0170);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl030SkillPhotonWave, 0x0208);
		}

		// class UATActCpl034SkillAbsorption : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl034SkillAbsorption)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillAbsorption, Montage_MV, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillAbsorption, MoveTime, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillAbsorption, UnknownData_T2F0, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillAbsorption, SubClassTeleport, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillAbsorption, Montage_ATK, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillAbsorption, AttackWaitTime, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillAbsorption, AttackDist, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillAbsorption, Montage_HIT, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillAbsorption, LockCharacterOffset, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillAbsorption, HitLoopTime, 0x0134);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillAbsorption, InputDecreaseRate, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillAbsorption, UnknownData_1LCV, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillAbsorption, TeleportModule, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillAbsorption, UnknownData_BJES, 0x0150);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl034SkillAbsorption, 0x01B0);
		}

		// class UATActCpl034SkillBarrier : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl034SkillBarrier)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillBarrier, MontageST, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillBarrier, MontageLP, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillBarrier, MontageED, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillBarrier, LoopTime, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillBarrier, UnknownData_HIBG, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillBarrier, BarrierSpawnClass, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillBarrier, AttachSocketName, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillBarrier, OffsetTime, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillBarrier, UnknownData_L2L9, 0x012C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl034SkillBarrier, 0x0198);
		}

		// class UATActCpl034SkillDeathBeam : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl034SkillDeathBeam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillDeathBeam, WaitMontage, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillDeathBeam, AttackMontage, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillDeathBeam, AttackWaitMontage, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillDeathBeam, EndMontage, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillDeathBeam, ChargeTimeMax, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillDeathBeam, LoopExecNum, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillDeathBeam, AttackWaitTime, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillDeathBeam, DirInterp, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillDeathBeam, UnknownData_8RNS, 0x0128);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl034SkillDeathBeam, 0x0190);
		}

		// class UATActCpl034SkillImpactSmash : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl034SkillImpactSmash)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillImpactSmash, Montage, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillImpactSmash, MaxMoveLoopTime, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillImpactSmash, DashEndDist, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillImpactSmash, MaxDashSpeed, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillImpactSmash, LoopFrequency, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillImpactSmash, UnknownData_STRF, 0x0110);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl034SkillImpactSmash, 0x0170);
		}

		// class UATActCpl034SkillPunishmentStorm : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl034SkillPunishmentStorm)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillPunishmentStorm, MontageST, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillPunishmentStorm, MontageED, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillPunishmentStorm, AttackList, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillPunishmentStorm, RotType, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillPunishmentStorm, UnknownData_M5PQ, 0x0119);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillPunishmentStorm, RotValidTime, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillPunishmentStorm, SkillCameraParam, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillPunishmentStorm, CameraBlendTime, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillPunishmentStorm, OffsetDistance, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillPunishmentStorm, BarrierClass, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillPunishmentStorm, UnknownData_SW5J, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillPunishmentStorm, Barrier, 0x0280);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillPunishmentStorm, UnknownData_03HN, 0x0288);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl034SkillPunishmentStorm, 0x0290);
		}

		// class UATActCpl034SkillSonicBlow : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl034SkillSonicBlow)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillSonicBlow, MontageStart, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillSonicBlow, MontageLP, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillSonicBlow, MontageAtk, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillSonicBlow, TeleportData, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillSonicBlow, UnknownData_E1L5, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillSonicBlow, TeleportModule, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl034SkillSonicBlow, UnknownData_PWYC, 0x0140);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl034SkillSonicBlow, 0x01B0);
		}

		// class UATActCpl040SkillCrossClaw : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl040SkillCrossClaw)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl040SkillCrossClaw, MontageCutin, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl040SkillCrossClaw, MontageST, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl040SkillCrossClaw, MontageLP, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl040SkillCrossClaw, MontageShotLR, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl040SkillCrossClaw, MontageShotFinish, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl040SkillCrossClaw, LoopTime, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl040SkillCrossClaw, ShotCountMax, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl040SkillCrossClaw, ShotInterval, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl040SkillCrossClaw, SubClasstBarrier, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl040SkillCrossClaw, SkillCameraParam, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl040SkillCrossClaw, BarrierModule, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl040SkillCrossClaw, UnknownData_PWIH, 0x0168);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl040SkillCrossClaw, 0x01C8);
		}

		// class UATActCpl040SkillEnergyAbsorb : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl040SkillEnergyAbsorb)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl040SkillEnergyAbsorb, Montage, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl040SkillEnergyAbsorb, LoopTimeMin, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl040SkillEnergyAbsorb, LoopTimeExtend, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl040SkillEnergyAbsorb, UnknownData_36BX, 0x0108);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl040SkillEnergyAbsorb, 0x0168);
		}

		// class UATActCpl041EDestroyBluster : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl041EDestroyBluster)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EDestroyBluster, MontageStart, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EDestroyBluster, MontageLoop, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EDestroyBluster, MontageAttack, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EDestroyBluster, MontageHit, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EDestroyBluster, MontageHit_Dmg, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EDestroyBluster, TargetNearDist, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EDestroyBluster, LoopTimeMax, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EDestroyBluster, LoopStopDist, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EDestroyBluster, HitNextStartTime, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EDestroyBluster, EndWaitTime, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EDestroyBluster, HitTargetOffset, 0x0134);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EDestroyBluster, UnknownData_PKGM, 0x0140);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl041EDestroyBluster, 0x01A0);
		}

		// class UATActCpl041EHomingKamehameha : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl041EHomingKamehameha)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EHomingKamehameha, Montage10, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EHomingKamehameha, Montage11, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EHomingKamehameha, Montage12, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EHomingKamehameha, WaitTime, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EHomingKamehameha, LoopTimeMax, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EHomingKamehameha, DirInterp, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EHomingKamehameha, UnknownData_3VXZ, 0x011C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl041EHomingKamehameha, 0x0178);
		}

		// class UATActCpl041ERushShot : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl041ERushShot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ERushShot, MontageST, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ERushShot, MontageLP, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ERushShot, MontageED, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ERushShot, LoopExecNum, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ERushShot, DirInterp, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ERushShot, LastShotEndWaitTime, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ERushShot, UnknownData_6CJF, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ERushShot, SubClassTeleport, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ERushShot, SubClasstBarrier, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ERushShot, SkillCameraParam, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ERushShot, UnknownData_KAL2, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ERushShot, TeleportModule, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ERushShot, BarrierModule, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ERushShot, UnknownData_3ZA2, 0x0168);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl041ERushShot, 0x01C0);
		}

		// class UATActCpl041ESkillHighSpeed : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl041ESkillHighSpeed)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ESkillHighSpeed, Montage10, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ESkillHighSpeed, Montage11, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ESkillHighSpeed, Montage12, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ESkillHighSpeed, Montage13, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ESkillHighSpeed, StartRotTime, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ESkillHighSpeed, VeeringCountMax, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ESkillHighSpeed, MoveTimeMax, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ESkillHighSpeed, MoveDistMax, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ESkillHighSpeed, DashSpeed, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ESkillHighSpeed, DashDistNear, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ESkillHighSpeed, BrakeTimeMax, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ESkillHighSpeed, UnknownData_C7OZ, 0x0134);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ESkillHighSpeed, DamageId, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ESkillHighSpeed, DamageType, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ESkillHighSpeed, UnknownData_HMB6, 0x0148);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl041ESkillHighSpeed, 0x01C0);
		}

		// class UATActCpl041ESkillLongRange : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl041ESkillLongRange)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ESkillLongRange, Montage10, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ESkillLongRange, Montage11, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ESkillLongRange, Montage12, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ESkillLongRange, WaitTime, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ESkillLongRange, LoopTimeMax, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ESkillLongRange, DirInterp, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041ESkillLongRange, UnknownData_UO8T, 0x011C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl041ESkillLongRange, 0x0178);
		}

		// class UATActCpl041EVanishingBall : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl041EVanishingBall)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EVanishingBall, MontageStart, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EVanishingBall, MontageLoop, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EVanishingBall, MontageSuccess, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EVanishingBall, MontageFailure, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EVanishingBall, EndWaitTimeSuccess, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EVanishingBall, EndWaitTimeFailure, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EVanishingBall, OffsetPosLoop, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EVanishingBall, OffsetPosSuccess, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EVanishingBall, OffsetPosSuccessAfter, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EVanishingBall, OffsetPosFailure, 0x0144);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EVanishingBall, CameraMoveTime, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EVanishingBall, CameraDistance, 0x0154);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EVanishingBall, CameraZOffset, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EVanishingBall, PrevCameraBlend, 0x015C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl041EVanishingBall, UnknownData_EV9N, 0x0160);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl041EVanishingBall, 0x01D0);
		}

		// class UATActCpl058FloatMine : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl058FloatMine)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl058FloatMine, WaitMontage, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl058FloatMine, AttackMontage, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl058FloatMine, WaitLoopTime, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl058FloatMine, AttackLoopNum, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl058FloatMine, UnknownData_NT1O, 0x0110);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl058FloatMine, 0x0168);
		}

		// class UATActDmgBase : public UATActBase
		TEST_METHOD(Class__AT__ATActDmgBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgBase, UnknownData_LQOE, 0x00B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgBase, 0x00D8);
		}

		// class UATActDmgDeathBlowoff : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgDeathBlowoff)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgDeathBlowoff, UnknownData_6IVR, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgDeathBlowoff, CharacterMatInsTbl, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgDeathBlowoff, ParticleComp, 0x00F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgDeathBlowoff, 0x00F8);
		}

		// class UATActCpl059DmgDeathBlowoff : public UATActDmgDeathBlowoff
		TEST_METHOD(Class__AT__ATActCpl059DmgDeathBlowoff)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl059DmgDeathBlowoff, 0x00F8);
		}

		// class UATActCpl059DmgDeathLP : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActCpl059DmgDeathLP)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl059DmgDeathLP, bEnableLocalCondition, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl059DmgDeathLP, UnknownData_5QEQ, 0x00D9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl059DmgDeathLP, EraseStartTime, 0x00DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl059DmgDeathLP, EraseCharacterTime, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl059DmgDeathLP, SubAlpha, 0x00E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl059DmgDeathLP, ExplosionPS, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl059DmgDeathLP, ExplosionScale, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl059DmgDeathLP, UnknownData_T1LI, 0x00FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl059DmgDeathLP, CharacterMatInsTbl, 0x0108);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl059DmgDeathLP, 0x0118);
		}

		// class UATActDmgDeathST : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgDeathST)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgDeathST, 0x00D8);
		}

		// class UATActCpl059DmgDeathST : public UATActDmgDeathST
		TEST_METHOD(Class__AT__ATActCpl059DmgDeathST)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl059DmgDeathST, 0x00D8);
		}

		// class UATActDmgOutrageBlowoff : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgOutrageBlowoff)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgOutrageBlowoff, UnknownData_XQN1, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgOutrageBlowoff, 0x0120);
		}

		// class UATActCpl059DmgOutrageBlowoff : public UATActDmgOutrageBlowoff
		TEST_METHOD(Class__AT__ATActCpl059DmgOutrageBlowoff)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl059DmgOutrageBlowoff, 0x0120);
		}

		// class UATActCpl065SkillShortRange : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActCpl065SkillShortRange)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl065SkillShortRange, Montage, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl065SkillShortRange, MoveLoopTime, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl065SkillShortRange, MoveTimeMax, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl065SkillShortRange, StartDistTarget, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl065SkillShortRange, LeaveSpeed, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl065SkillShortRange, DashDistTarget, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl065SkillShortRange, DashDistNear, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl065SkillShortRange, DashSpeed, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl065SkillShortRange, LoopFrequency, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl065SkillShortRange, UnknownData_CPIP, 0x0120);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl065SkillShortRange, 0x0180);
		}

		// class UATActCpl069SkillS003 : public UATActSkillBasic
		TEST_METHOD(Class__AT__ATActCpl069SkillS003)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl069SkillS003, 0x01D0);
		}

		// class UATActCpl071SkillB001 : public UATActSkillBasic
		TEST_METHOD(Class__AT__ATActCpl071SkillB001)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl071SkillB001, BarrierLifeRecoveryRate, 0x01D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl071SkillB001, BarrierDestroyStunTime, 0x01D4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl071SkillB001, 0x01D8);
		}

		// class UATActCpl071SkillB002 : public UATActSkillBasic
		TEST_METHOD(Class__AT__ATActCpl071SkillB002)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl071SkillB002, LimitHeightTop, 0x01D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl071SkillB002, LimitHeightBottom, 0x01D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActCpl071SkillB002, UnknownData_1QYQ, 0x01D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActCpl071SkillB002, 0x01E0);
		}

		// class UATActDmgBlindED : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgBlindED)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgBlindED, 0x00D8);
		}

		// class UATActDmgBlindLP : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgBlindLP)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgBlindLP, 0x00D8);
		}

		// class UATActDmgBlindST : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgBlindST)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgBlindST, UnknownData_8BMX, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgBlindST, 0x00E0);
		}

		// class UATActDmgBlowoff : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgBlowoff)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgBlowoff, UnknownData_VXU7, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgBlowoff, 0x00F8);
		}

		// class UATActDmgBlowoffBrake : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgBlowoffBrake)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgBlowoffBrake, UnknownData_JL6T, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgBlowoffBrake, 0x00E0);
		}

		// class UATActDmgBlowoffEnd : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgBlowoffEnd)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgBlowoffEnd, UnknownData_7QBD, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgBlowoffEnd, 0x00E0);
		}

		// class UATActDmgBlowoffLP : public UATActDmgBlowoff
		TEST_METHOD(Class__AT__ATActDmgBlowoffLP)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgBlowoffLP, 0x00F8);
		}

		// class UATActDmgBlowoffRecovery : public UATActBase
		TEST_METHOD(Class__AT__ATActDmgBlowoffRecovery)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgBlowoffRecovery, 0x00B0);
		}

		// class UATActDmgBlowoffRoll : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgBlowoffRoll)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgBlowoffRoll, UnknownData_JSAM, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgBlowoffRoll, 0x0178);
		}

		// class UATActDmgBlowSpin : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgBlowSpin)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgBlowSpin, UnknownData_J007, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgBlowSpin, 0x00E0);
		}

		// class UATActDmgBlowSpin_C034A_S_SKL002 : public UATActDmgBlowSpin
		TEST_METHOD(Class__AT__ATActDmgBlowSpin_C034A_S_SKL002)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgBlowSpin_C034A_S_SKL002, 0x00E0);
		}

		// class UATActDmgBlowSpin2 : public UATActDmgBlowSpin
		TEST_METHOD(Class__AT__ATActDmgBlowSpin2)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgBlowSpin2, 0x00E0);
		}

		// class UATActDmgBlowSpinEnd : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgBlowSpinEnd)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgBlowSpinEnd, UnknownData_GAM6, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgBlowSpinEnd, 0x00E0);
		}

		// class UATActDmgBlowSpin2End : public UATActDmgBlowSpinEnd
		TEST_METHOD(Class__AT__ATActDmgBlowSpin2End)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgBlowSpin2End, 0x00E0);
		}

		// class UATActDmgBlowSpinRecovery : public UATActBase
		TEST_METHOD(Class__AT__ATActDmgBlowSpinRecovery)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgBlowSpinRecovery, 0x00B0);
		}

		// class UATActDmgBreakED : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgBreakED)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgBreakED, 0x00D8);
		}

		// class UATActDmgBreakLP : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgBreakLP)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgBreakLP, UnknownData_I9MP, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgBreakLP, 0x00E0);
		}

		// class UATActDmgBreakST : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgBreakST)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgBreakST, 0x00D8);
		}

		// class UATActDmgCrashLand : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgCrashLand)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgCrashLand, 0x00D8);
		}

		// class UATActDmgCrashWall : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgCrashWall)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgCrashWall, 0x00D8);
		}

		// class UATActDmgCrashWallED : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgCrashWallED)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgCrashWallED, LeaveWallStartTime, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgCrashWallED, LeaveWallSpeed, 0x00DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgCrashWallED, RotateInterpStartTime, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgCrashWallED, RotateInterpSpeed, 0x00E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgCrashWallED, UnknownData_UFT3, 0x00E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgCrashWallED, 0x00F8);
		}

		// class UATActDmgCrashWallLP : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgCrashWallLP)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgCrashWallLP, bEnableLocalCondition, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgCrashWallLP, UnknownData_ER56, 0x00D9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgCrashWallLP, ExtinctionDeathActionEffectTime, 0x00DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgCrashWallLP, EraseCharacterTime, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgCrashWallLP, UnknownData_GO9L, 0x00E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgCrashWallLP, ExtinctionEffectComponent, 0x00E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgCrashWallLP, 0x00F0);
		}

		// class UATActDmgDeathBreak : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgDeathBreak)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgDeathBreak, UnknownData_T33W, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgDeathBreak, 0x0130);
		}

		// class UATActDmgDeathLP : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgDeathLP)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgDeathLP, bEnableLocalCondition, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgDeathLP, UnknownData_OEFJ, 0x00D9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgDeathLP, ExtinctionDeathActionEffectTime, 0x00DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgDeathLP, EraseStartTime, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgDeathLP, EraseCharacterTime, 0x00E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgDeathLP, SubAlpha, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgDeathLP, UnknownData_PLGI, 0x00EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgDeathLP, CharacterMatInsTbl, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgDeathLP, ParticleComp, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgDeathLP, UnknownData_LORU, 0x0120);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgDeathLP, 0x0178);
		}

		// class UATActDmgDeathFall : public UATActDmgDeathLP
		TEST_METHOD(Class__AT__ATActDmgDeathFall)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgDeathFall, UnknownData_KYZK, 0x0178);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgDeathFall, 0x0180);
		}

		// class UATActDmgDownED : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgDownED)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgDownED, 0x00D8);
		}

		// class UATActDmgDownLP : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgDownLP)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgDownLP, 0x00D8);
		}

		// class UATActDmgDyingED : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgDyingED)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgDyingED, 0x00D8);
		}

		// class UATActDmgDyingLP : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgDyingLP)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgDyingLP, UnknownData_8Q92, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgDyingLP, 0x00E0);
		}

		// class UATActDmgDyingST : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgDyingST)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgDyingST, 0x00D8);
		}

		// class UATActDmgGuard : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgGuard)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgGuard, UnknownData_6H81, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgGuard, 0x00E0);
		}

		// class UATActDmgGuardBreakED : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgGuardBreakED)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgGuardBreakED, 0x00D8);
		}

		// class UATActDmgGuardBreakLP : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgGuardBreakLP)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgGuardBreakLP, 0x00D8);
		}

		// class UATActDmgGuardBreakST : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgGuardBreakST)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgGuardBreakST, 0x00D8);
		}

		// class UATActDmgHoldBase : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgHoldBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgHoldBase, MontageStart, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgHoldBase, MontageLoop, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgHoldBase, MontageEnd, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgHoldBase, LoopTime, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgHoldBase, UnknownData_WEF5, 0x00F4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgHoldBase, 0x0158);
		}

		// class UATActDmgHold : public UATActDmgHoldBase
		TEST_METHOD(Class__AT__ATActDmgHold)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgHold, 0x0158);
		}

		// class UATActDmgHoldCpl024 : public UATActDmgHoldBase
		TEST_METHOD(Class__AT__ATActDmgHoldCpl024)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgHoldCpl024, InputSubTime, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgHoldCpl024, UnknownData_1OOM, 0x015C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgHoldCpl024, 0x0260);
		}

		// class UATActDmgHoldFaceTrigger : public UATActDmgHoldBase
		TEST_METHOD(Class__AT__ATActDmgHoldFaceTrigger)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgHoldFaceTrigger, 0x0158);
		}

		// class UATActDmgHoldNumb : public UATActDmgHoldCpl024
		TEST_METHOD(Class__AT__ATActDmgHoldNumb)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgHoldNumb, 0x0260);
		}

		// class UATActDmgHugeDown : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgHugeDown)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgHugeDown, UnknownData_8LSZ, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgHugeDown, 0x0138);
		}

		// class UATActDmgHugeNormalHeavy : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgHugeNormalHeavy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgHugeNormalHeavy, UnknownData_AKVS, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgHugeNormalHeavy, 0x00E0);
		}

		// class UATActDmgHugeNormalLight : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgHugeNormalLight)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgHugeNormalLight, UnknownData_ZZNC, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgHugeNormalLight, 0x00E0);
		}

		// class UATActDmgHugeNormalMidium : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgHugeNormalMidium)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgHugeNormalMidium, UnknownData_4BZG, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgHugeNormalMidium, 0x00E0);
		}

		// class UATActDmgJostleBeam : public UATActBase
		TEST_METHOD(Class__AT__ATActDmgJostleBeam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgJostleBeam, UnknownData_FOWL, 0x00B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgJostleBeam, 0x00C0);
		}

		// class UATActDmgLock : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgLock)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgLock, UnknownData_FLQ7, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgLock, 0x00E0);
		}

		// class UATActDmgLongBlowoff : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgLongBlowoff)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgLongBlowoff, UnknownData_AENT, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgLongBlowoff, 0x0168);
		}

		// class UATActDmgLongBlowoffDirection : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgLongBlowoffDirection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgLongBlowoffDirection, DefaultTrailParticle, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgLongBlowoffDirection, TrailParticleTable, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgLongBlowoffDirection, DefaultPenetrateParticle, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgLongBlowoffDirection, PenetrateParticleTable, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgLongBlowoffDirection, SlowTime, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgLongBlowoffDirection, SlowRate, 0x018C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgLongBlowoffDirection, UnknownData_HDR6, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgLongBlowoffDirection, TrailParticleComp, 0x01B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgLongBlowoffDirection, 0x01B8);
		}

		// class UATActDmgLongBlowoffEnd : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgLongBlowoffEnd)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgLongBlowoffEnd, UnknownData_WK2S, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgLongBlowoffEnd, 0x00E0);
		}

		// class UATActDmgLongBlowoffVertical : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgLongBlowoffVertical)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgLongBlowoffVertical, TrailParticleComp, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgLongBlowoffVertical, UnknownData_EO5Y, 0x00E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgLongBlowoffVertical, 0x00E8);
		}

		// class UATActDmgNormalBase : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgNormalBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgNormalBase, UnknownData_WIS5, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgNormalBase, 0x00E8);
		}

		// class UATActDmgNormalHeavy : public UATActDmgNormalBase
		TEST_METHOD(Class__AT__ATActDmgNormalHeavy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgNormalHeavy, 0x00E8);
		}

		// class UATActDmgNormalHigh : public UATActDmgNormalBase
		TEST_METHOD(Class__AT__ATActDmgNormalHigh)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgNormalHigh, 0x00E8);
		}

		// class UATActDmgNormalLow : public UATActDmgNormalBase
		TEST_METHOD(Class__AT__ATActDmgNormalLow)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgNormalLow, 0x00E8);
		}

		// class UATActDmgNormalMedium : public UATActDmgNormalBase
		TEST_METHOD(Class__AT__ATActDmgNormalMedium)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgNormalMedium, 0x00E8);
		}

		// class UATActDmgPukeED : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgPukeED)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgPukeED, 0x00D8);
		}

		// class UATActDmgPukeLP : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgPukeLP)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgPukeLP, 0x00D8);
		}

		// class UATActDmgPukeST : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgPukeST)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgPukeST, 0x00D8);
		}

		// class UATActDmgWinceED : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgWinceED)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgWinceED, 0x00D8);
		}

		// class UATActDmgStunED : public UATActDmgWinceED
		TEST_METHOD(Class__AT__ATActDmgStunED)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgStunED, 0x00D8);
		}

		// class UATActDmgWinceLP : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgWinceLP)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgWinceLP, 0x00D8);
		}

		// class UATActDmgStunLP : public UATActDmgWinceLP
		TEST_METHOD(Class__AT__ATActDmgStunLP)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgStunLP, 0x00D8);
		}

		// class UATActDmgWinceST : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActDmgWinceST)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgWinceST, 0x00D8);
		}

		// class UATActDmgStunST : public UATActDmgWinceST
		TEST_METHOD(Class__AT__ATActDmgStunST)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgStunST, 0x00D8);
		}

		// class UATActDmgVanish : public UATActBase
		TEST_METHOD(Class__AT__ATActDmgVanish)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActDmgVanish, UnknownData_3A2H, 0x00B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActDmgVanish, 0x0108);
		}

		// class UATActEncountBackAtk : public UATActMontageId
		TEST_METHOD(Class__AT__ATActEncountBackAtk)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActEncountBackAtk, 0x00C8);
		}

		// class UATActEncountBackAtkDmg : public UATActMontageId
		TEST_METHOD(Class__AT__ATActEncountBackAtkDmg)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActEncountBackAtkDmg, 0x00C8);
		}

		// class UATActEncountBackAtkDush : public UATActMontageId
		TEST_METHOD(Class__AT__ATActEncountBackAtkDush)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActEncountBackAtkDush, UnknownData_ZAIZ, 0x00C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActEncountBackAtkDush, 0x00D8);
		}

		// class UATActEncountBackAtkDushST : public UATActMontageId
		TEST_METHOD(Class__AT__ATActEncountBackAtkDushST)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActEncountBackAtkDushST, 0x00C8);
		}

		// class UATActEncountDushL : public UATActMontageId
		TEST_METHOD(Class__AT__ATActEncountDushL)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActEncountDushL, UnknownData_SQNH, 0x00C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActEncountDushL, 0x00D0);
		}

		// class UATActEncountDushR : public UATActMontageId
		TEST_METHOD(Class__AT__ATActEncountDushR)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActEncountDushR, UnknownData_MNM0, 0x00C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActEncountDushR, 0x00D0);
		}

		// class UATActEncountLook : public UATActMontageId
		TEST_METHOD(Class__AT__ATActEncountLook)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActEncountLook, 0x00C8);
		}

		// class UATActEncountSummon : public UATActBase
		TEST_METHOD(Class__AT__ATActEncountSummon)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActEncountSummon, UnknownData_UL7I, 0x00B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActEncountSummon, 0x0120);
		}

		// class UATActFieldShot : public UATActBase
		TEST_METHOD(Class__AT__ATActFieldShot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActFieldShot, Montage, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActFieldShot, Interval, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActFieldShot, PrevActionTime, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActFieldShot, DisableMoveTime, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActFieldShot, UnknownData_WZ86, 0x00C4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActFieldShot, 0x0140);
		}

		// class UATActFieldShotCharge : public UATActFieldShot
		TEST_METHOD(Class__AT__ATActFieldShotCharge)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActFieldShotCharge, 0x0140);
		}

		// class UATActFishing : public UATActMontageId
		TEST_METHOD(Class__AT__ATActFishing)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActFishing, UnknownData_ZWP6, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActFishing, FishinRippleEffectComponent, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActFishing, UnknownData_85VP, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActFishing, 0x0150);
		}

		// class UATActFishingBait : public UATActMontageId
		TEST_METHOD(Class__AT__ATActFishingBait)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActFishingBait, UnknownData_YBLV, 0x00C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActFishingBait, 0x00D8);
		}

		// class UATActFishingED : public UATActBase
		TEST_METHOD(Class__AT__ATActFishingED)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActFishingED, UnknownData_OQ5N, 0x00B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActFishingED, 0x00B8);
		}

		// class UATActFishingLP : public UATActMontageId
		TEST_METHOD(Class__AT__ATActFishingLP)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActFishingLP, 0x00C8);
		}

		// class UATActFishingST : public UATActMontageId
		TEST_METHOD(Class__AT__ATActFishingST)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActFishingST, 0x00C8);
		}

		// class UATActFishingWait : public UATActMontageId
		TEST_METHOD(Class__AT__ATActFishingWait)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActFishingWait, 0x00C8);
		}

		// class UATActGetFieldShot : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActGetFieldShot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActGetFieldShot, UnknownData_CAO7, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActGetFieldShot, 0x00E0);
		}

		// class UATActGuard : public UATActBase
		TEST_METHOD(Class__AT__ATActGuard)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActGuard, GuardStartTime, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActGuard, UnknownData_OZ97, 0x00B4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActGuard, 0x0110);
		}

		// class UATActGuardAround : public UATActBase
		TEST_METHOD(Class__AT__ATActGuardAround)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActGuardAround, Montage, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActGuardAround, MontageAtk, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActGuardAround, TeleportEffect, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActGuardAround, UnknownData_6AKP, 0x00C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActGuardAround, 0x0130);
		}

		// class UATActHeatupCut : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActHeatupCut)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHeatupCut, UnknownData_5JZG, 0x00F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActHeatupCut, 0x0150);
		}

		// class UATActHighBoost : public UATActBase
		TEST_METHOD(Class__AT__ATActHighBoost)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHighBoost, Montage, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHighBoost, WaitTime, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHighBoost, MoveTime, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHighBoost, MoveSpeed, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHighBoost, MoveAngleSpeed, 0x00C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHighBoost, TargetUpdateTime, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHighBoost, MoveAngleMax, 0x00CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHighBoost, MoveAngleMinDistance, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHighBoost, MoveAngleMaxDistance, 0x00D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHighBoost, SideAngleMin, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHighBoost, SideAngleMax, 0x00DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHighBoost, DamageParam, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHighBoost, DamageRadius, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHighBoost, UnknownData_LARA, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHighBoost, AttackCollision, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHighBoost, UnknownData_XS7W, 0x0128);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActHighBoost, 0x0188);
		}

		// class UATActHugeSkillJumpAttack : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActHugeSkillJumpAttack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillJumpAttack, MontageJumpST, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillJumpAttack, MontageJumpLP, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillJumpAttack, MontageFall, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillJumpAttack, MontageLand, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillJumpAttack, spawnclass, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillJumpAttack, AttackRangeDeleteWaitTime, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillJumpAttack, MaxDistance, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillJumpAttack, LoopTime, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillJumpAttack, JumpSpeed, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillJumpAttack, fallSpeed, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillJumpAttack, LandingCheckDistance, 0x0134);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillJumpAttack, UnknownData_7GIE, 0x0138);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActHugeSkillJumpAttack, 0x01A0);
		}

		// class UATActHugeSkillWildQuake : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActHugeSkillWildQuake)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillWildQuake, MontageList, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillWildQuake, spawnclass, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillWildQuake, UnknownData_F6RB, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillWildQuake, LoopTime, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillWildQuake, OffsetDist, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillWildQuake, JumpSpeed, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillWildQuake, homingTime, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillWildQuake, fallSpeed, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillWildQuake, LandingCheckDistance, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillWildQuake, landingTime, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillWildQuake, atkAreaTime, 0x0134);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillWildQuake, CameraMoveTime, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillWildQuake, CameraDistance, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillWildQuake, CameraZOffset, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillWildQuake, PrevCameraBlend, 0x0144);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActHugeSkillWildQuake, UnknownData_Z972, 0x0148);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActHugeSkillWildQuake, 0x01B0);
		}

		// class UATActIngameDemo : public UATActBase
		TEST_METHOD(Class__AT__ATActIngameDemo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActIngameDemo, UnknownData_KR3M, 0x00B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActIngameDemo, 0x00B8);
		}

		// class UATInputComponent : public UCFDynamicAssignInputComponent
		TEST_METHOD(Class__AT__ATInputComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATInputComponent, m_xOwner, 0x01E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATInputComponent, UnknownData_CX7Q, 0x01F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATInputComponent, 0x01F8);
		}

		// class UATActionInputComponent : public UATInputComponent
		TEST_METHOD(Class__AT__ATActionInputComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActionInputComponent, UnknownData_FCIY, 0x01F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActionInputComponent, 0x0238);
		}

		// class UATActLongBlowoffChase : public UATActBase
		TEST_METHOD(Class__AT__ATActLongBlowoffChase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActLongBlowoffChase, MontageInfo, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActLongBlowoffChase, CameraInfo, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActLongBlowoffChase, UnknownData_AUBT, 0x00D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActLongBlowoffChase, 0x0140);
		}

		// class UATActLongRangeCombo : public UATActBase
		TEST_METHOD(Class__AT__ATActLongRangeCombo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActLongRangeCombo, ComboInfo, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActLongRangeCombo, UseShotBlendSpace, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActLongRangeCombo, UnknownData_QIAK, 0x00C1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActLongRangeCombo, SparkingUpValue, 0x00C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActLongRangeCombo, SparkingReceiveUpValue, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActLongRangeCombo, UnknownData_M6M3, 0x00CC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActLongRangeCombo, 0x0150);
		}

		// class UATActMontage : public UATActBase
		TEST_METHOD(Class__AT__ATActMontage)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActMontage, MontageTbl, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActMontage, UnknownData_BR74, 0x00C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActMontage, 0x00C8);
		}

		// class UATActNoOxygen_UnderWater : public UATActBase
		TEST_METHOD(Class__AT__ATActNoOxygen_UnderWater)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActNoOxygen_UnderWater, Montage, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActNoOxygen_UnderWater, ActionTime, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActNoOxygen_UnderWater, UnknownData_XXRY, 0x00BC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActNoOxygen_UnderWater, 0x0128);
		}

		// class UATActNoOxygen_UpperWater : public UATActBase
		TEST_METHOD(Class__AT__ATActNoOxygen_UpperWater)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActNoOxygen_UpperWater, Montage, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActNoOxygen_UpperWater, ActionTime, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActNoOxygen_UpperWater, UnknownData_II8P, 0x00BC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActNoOxygen_UpperWater, 0x0118);
		}

		// class UATActOffsetBoost : public UATActBase
		TEST_METHOD(Class__AT__ATActOffsetBoost)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActOffsetBoost, UnknownData_S9E7, 0x00B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActOffsetBoost, 0x0118);
		}

		// class UATActRampage : public UATActBase
		TEST_METHOD(Class__AT__ATActRampage)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActRampage, UnknownData_A255, 0x00B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActRampage, 0x0110);
		}

		// class UATActReversal : public UATActBase
		TEST_METHOD(Class__AT__ATActReversal)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActReversal, UnknownData_GDON, 0x00B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActReversal, 0x0110);
		}

		// class UATActRideIn : public UATActMontageId
		TEST_METHOD(Class__AT__ATActRideIn)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActRideIn, UnknownData_98G1, 0x00C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActRideIn, 0x0180);
		}

		// class UATActRideInFriend : public UATActMontageId
		TEST_METHOD(Class__AT__ATActRideInFriend)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActRideInFriend, UnknownData_DALZ, 0x00C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActRideInFriend, 0x0158);
		}

		// class UATActRideInMachine : public UATActMontageId
		TEST_METHOD(Class__AT__ATActRideInMachine)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActRideInMachine, UnknownData_GWCO, 0x00C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActRideInMachine, 0x01A8);
		}

		// class UATActRideOut : public UATActMontageId
		TEST_METHOD(Class__AT__ATActRideOut)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActRideOut, UnknownData_H3LX, 0x00C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActRideOut, 0x0170);
		}

		// class UATActRideOutFriend : public UATActMontageId
		TEST_METHOD(Class__AT__ATActRideOutFriend)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActRideOutFriend, UnknownData_TUXX, 0x00C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActRideOutFriend, 0x0140);
		}

		// class UATActRideOutMachine : public UATActMontageId
		TEST_METHOD(Class__AT__ATActRideOutMachine)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActRideOutMachine, UnknownData_7QR9, 0x00C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActRideOutMachine, 0x0178);
		}

		// class UATActRiding : public UATActMontageId
		TEST_METHOD(Class__AT__ATActRiding)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActRiding, UnknownData_Q4IO, 0x00C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActRiding, 0x0130);
		}

		// class UATActSearch : public UATActBase
		TEST_METHOD(Class__AT__ATActSearch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSearch, Montage, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSearch, WaitTime, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSearch, YawRotSpeed, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSearch, PitchRotSpeed, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSearch, RotInterpPow, 0x00C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSearch, UnknownData_QSB8, 0x00C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSearch, 0x0130);
		}

		// class UATActSearchED : public UATActMontageId
		TEST_METHOD(Class__AT__ATActSearchED)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSearchED, 0x00C8);
		}

		// class UATActSearchLP : public UATActMontageId
		TEST_METHOD(Class__AT__ATActSearchLP)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSearchLP, 0x00C8);
		}

		// class UATActSearchST : public UATActMontageId
		TEST_METHOD(Class__AT__ATActSearchST)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSearchST, 0x00C8);
		}

		// class UATActShortRangeCombo : public UATActBase
		TEST_METHOD(Class__AT__ATActShortRangeCombo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActShortRangeCombo, MontageWait, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActShortRangeCombo, WaitTime, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActShortRangeCombo, UseDash, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActShortRangeCombo, UnknownData_RVYZ, 0x00BD);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActShortRangeCombo, MontageDash, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActShortRangeCombo, DashDistance, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActShortRangeCombo, DashTime, 0x00CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActShortRangeCombo, ComboInfo, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActShortRangeCombo, SparkingUpValue, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActShortRangeCombo, SparkingReceiveUpValue, 0x00E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActShortRangeCombo, bSetRotationTarget, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActShortRangeCombo, bGroundCombo, 0x00E9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActShortRangeCombo, UnknownData_LIQT, 0x00EA);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActShortRangeCombo, 0x01A8);
		}

		// class UATActSkillMove : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActSkillMove)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillMove, UnknownData_TDSX, 0x00F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSkillMove, 0x0100);
		}

		// class UATActSkillMoveTeleport : public UATActSkillMove
		TEST_METHOD(Class__AT__ATActSkillMoveTeleport)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillMoveTeleport, TeleportEffect, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillMoveTeleport, TeleportParamList, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillMoveTeleport, UnknownData_XVVD, 0x0118);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSkillMoveTeleport, 0x0178);
		}

		// class UATActSkillAssistTeleport : public UATActSkillMoveTeleport
		TEST_METHOD(Class__AT__ATActSkillAssistTeleport)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSkillAssistTeleport, 0x0178);
		}

		// class UATActSkillBasicNormal : public UATActSkillBasic
		TEST_METHOD(Class__AT__ATActSkillBasicNormal)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSkillBasicNormal, 0x01D0);
		}

		// class UATActSkillBasicLand : public UATActSkillBasic
		TEST_METHOD(Class__AT__ATActSkillBasicLand)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSkillBasicLand, 0x01D0);
		}

		// class UATActSkillBeam : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActSkillBeam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBeam, MontageCutin, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBeam, FormChangeCutinInfo, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBeam, MontageCharge, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBeam, MontageShot, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBeam, MontageRushFinish, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBeam, ChargeLoopTime, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBeam, ChargeLoopTimeHeatUpCancel, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBeam, ShotLoopTime, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBeam, ShotLoopTimeWait, 0x0134);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBeam, FinishChangeTime, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBeam, LoopFrequency, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillBeam, UnknownData_CXJE, 0x0140);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSkillBeam, 0x01B8);
		}

		// class UATActSkillCollectiveActionBase : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActSkillCollectiveActionBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCollectiveActionBase, OmenMontageST, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCollectiveActionBase, OmenMontageLP, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCollectiveActionBase, WarpMontage, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCollectiveActionBase, ChargeMontage, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCollectiveActionBase, AttackMontageH, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCollectiveActionBase, AttackMontageL, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCollectiveActionBase, AttackMontageS, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCollectiveActionBase, CancelMontage, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCollectiveActionBase, OmenLoopTime, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCollectiveActionBase, ChargeLoopTime, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCollectiveActionBase, AttackLoopTime, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCollectiveActionBase, UnknownData_WUM1, 0x0144);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSkillCollectiveActionBase, 0x0168);
		}

		// class UATActSkillCollectiveActionBeam : public UATActSkillCollectiveActionBase
		TEST_METHOD(Class__AT__ATActSkillCollectiveActionBeam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCollectiveActionBeam, UnknownData_I53L, 0x0168);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSkillCollectiveActionBeam, 0x01C0);
		}

		// class UATActSkillCollectiveActionSpark : public UATActSkillCollectiveActionBase
		TEST_METHOD(Class__AT__ATActSkillCollectiveActionSpark)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCollectiveActionSpark, UnknownData_6NH5, 0x0168);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSkillCollectiveActionSpark, 0x01C0);
		}

		// class UQuestAttachment : public UActorComponent
		TEST_METHOD(Class__AT__QuestAttachment)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestAttachment, CachedSocketName, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestAttachment, TargetActor, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestAttachment, CachedMeshComp, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestAttachment, AttachPosition, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestAttachment, AttachRotator, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestAttachment, OffsYaw, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestAttachment, OffsRoll, 0x0134);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestAttachment, OffsPos, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestAttachment, UnknownData_6L53, 0x0144);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestAttachment, 0x0148);
		}

		// class UQuestBalloonTalk : public UActorComponent
		TEST_METHOD(Class__AT__QuestBalloonTalk)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestBalloonTalk, BalloonTalkGroupId, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestBalloonTalk, HeightOffset, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestBalloonTalk, UnknownData_77C3, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestBalloonTalk, TalkIdPrev, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestBalloonTalk, UnknownData_B298, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestBalloonTalk, CurrentIconId, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestBalloonTalk, MaxRange, 0x0134);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestBalloonTalk, MinRange, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestBalloonTalk, ActorToPlayerLength, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestBalloonTalk, UnknownData_O9NO, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestBalloonTalk, CachedFieldTalkFree, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestBalloonTalk, UnknownData_0HSG, 0x0150);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestBalloonTalk, 0x0170);
		}

		// class AQuestCharacter : public AAT_CharacterBase
		TEST_METHOD(Class__AT__QuestCharacter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, UnknownData_NI1S, 0x08B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, UnknownData_WPBU, 0x08C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, CostumeInitializedDelegate, 0x0960);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, OnBeginPlayedCallback, 0x0970);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, UnknownData_E8SS, 0x0980);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, CharacterAuraSMC, 0x0988);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, CharacterMovmentComponent, 0x0990);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, ATFacialComponent, 0x0998);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, ParticleManageComponent, 0x09A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, AT_LightTowerEffectComponent, 0x09A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, ShopComponent, 0x09B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, ShopInfoComponent, 0x09B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, MiniGameComponent, 0x09C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, QuestBalloonTalk, 0x09C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, NpcTalkComponent, 0x09D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, MobIconComponent, 0x09D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, FieldSphereComponent, 0x09E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, LipSyncComponent, 0x09E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, LookAtComponent, 0x09F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, QuestCostumeChanger, 0x09F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, NpcAutoMoveComponent, 0x0A00);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, bAdjustCapsuleHalfHeight, 0x0A08);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, bEnableHiddenInEvents, 0x0A09);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, bEnableHiddenOnJoinedSupport, 0x0A0A);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, bIgnoreHiddenAbsenceObserver, 0x0A0B);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, UnknownData_STQ0, 0x0A0C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, RestrictProjectileSphereComponent, 0x0A10);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, CharacterAuraComponent, 0x0A18);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, CurrentHiddenType, 0x0A20);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, UnknownData_GQBW, 0x0A24);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, UniqueId, 0x0A38);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, bMovable, 0x0A40);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, bInitializedUniqueId, 0x0A41);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, UnknownData_5XXQ, 0x0A42);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, OverrideAnimations, 0x0A48);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, PreviewMesh, 0x0A58);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, UnknownData_RT87, 0x0A80);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, bUniquenessEnabled, 0x0A9C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, bCostumeInitialized, 0x0A9D);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, UnknownData_UT2A, 0x0A9E);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, AttachedMeshes, 0x0B68);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, UnknownData_VUWN, 0x0B78);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, bBeginPlayed, 0x0BE1);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, bDisabledBalloonTalkWhenHidden, 0x0BE2);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacter, UnknownData_R2L9, 0x0BE3);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuestCharacter, 0x0BF0);
		}

		// class UQuestCharacterAnimationSwitcher : public UActorComponent
		TEST_METHOD(Class__AT__QuestCharacterAnimationSwitcher)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestCharacterAnimationSwitcher, UnknownData_82K2, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestCharacterAnimationSwitcher, StandingAnimation, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestCharacterAnimationSwitcher, WalkingAnimation, 0x0110);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestCharacterAnimationSwitcher, 0x0118);
		}

		// class UQuestCharacterAnimatorCpl002 : public UActorComponent
		TEST_METHOD(Class__AT__QuestCharacterAnimatorCpl002)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestCharacterAnimatorCpl002, UnknownData_YAYK, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestCharacterAnimatorCpl002, State, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestCharacterAnimatorCpl002, UnknownData_SAET, 0x0141);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestCharacterAnimatorCpl002, CurrentDuration, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestCharacterAnimatorCpl002, CameraAnimationCountMax, 0x0184);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestCharacterAnimatorCpl002, CurrentCameraAnimationCount, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestCharacterAnimatorCpl002, UnknownData_5ZWU, 0x018C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestCharacterAnimatorCpl002, 0x0190);
		}

		// class UQuestCostumeChanger : public UActorComponent
		TEST_METHOD(Class__AT__QuestCostumeChanger)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestCostumeChanger, CombineMeshComponent, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestCostumeChanger, bEnableCostume, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestCostumeChanger, UnknownData_94ZD, 0x0109);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestCostumeChanger, UniqueId, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestCostumeChanger, UnknownData_RE9U, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestCostumeChanger, bInitializedVariationParts, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestCostumeChanger, bInitializedFormParts, 0x0161);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestCostumeChanger, bInitializedFacialParts, 0x0162);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestCostumeChanger, UnknownData_FS77, 0x0163);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestCostumeChanger, OverrideAttachedMeshArray, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestCostumeChanger, bFinished, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestCostumeChanger, UnknownData_7DIO, 0x0179);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestCostumeChanger, 0x0180);
		}

		// class AQuestDirector : public AActor
		TEST_METHOD(Class__AT__QuestDirector)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestDirector, FindList, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestDirector, UnknownData_FCYC, 0x0340);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuestDirector, 0x0380);
		}

		// class UQuestDistanceObserver : public UActorComponent
		TEST_METHOD(Class__AT__QuestDistanceObserver)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestDistanceObserver, PlayerDistance, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestDistanceObserver, UnknownData_PIF5, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestDistanceObserver, SubjectList, 0x0108);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestDistanceObserver, 0x0118);
		}

		// class UQuestEventObservable : public UInterface
		TEST_METHOD(Class__AT__QuestEventObservable)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestEventObservable, 0x0028);
		}

		// class UQuestHiddenSwitcher : public UActorComponent
		TEST_METHOD(Class__AT__QuestHiddenSwitcher)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestHiddenSwitcher, bInitialEnabled, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestHiddenSwitcher, UnknownData_7BNX, 0x0101);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestHiddenSwitcher, ReceivedQuestId, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestHiddenSwitcher, bReceivedEnbaled, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestHiddenSwitcher, UnknownData_CHR3, 0x0111);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestHiddenSwitcher, CompletedQuestId, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestHiddenSwitcher, bCompletedEnabled, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestHiddenSwitcher, UnknownData_3ZXG, 0x0121);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestHiddenSwitcher, 0x0130);
		}

		// class UQuestPhaseBase : public UBaseObject
		TEST_METHOD(Class__AT__QuestPhaseBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhaseBase, CurrentQuestId, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhaseBase, UnknownData_C0MP, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhaseBase, bChildPhase, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhaseBase, UnknownData_20O3, 0x0051);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestPhaseBase, 0x0060);
		}

		// class UQuestPhase_Blur : public UQuestPhaseBase
		TEST_METHOD(Class__AT__QuestPhase_Blur)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhase_Blur, UnknownData_BUHF, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestPhase_Blur, 0x0070);
		}

		// class UQuestPhase_Camping : public UQuestPhaseBase
		TEST_METHOD(Class__AT__QuestPhase_Camping)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhase_Camping, UnknownData_CIJ3, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhase_Camping, BonfireActor, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestPhase_Camping, 0x0078);
		}

		// class UQuestPhase_ChangeCharacter : public UQuestPhaseBase
		TEST_METHOD(Class__AT__QuestPhase_ChangeCharacter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhase_ChangeCharacter, UnknownData_ZPF6, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestPhase_ChangeCharacter, 0x0078);
		}

		// class UQuestPhase_Community : public UQuestPhaseBase
		TEST_METHOD(Class__AT__QuestPhase_Community)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhase_Community, UnknownData_NCA5, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestPhase_Community, 0x0080);
		}

		// class UQuestPhase_DestroyEnemiesBase : public UQuestPhaseBase
		TEST_METHOD(Class__AT__QuestPhase_DestroyEnemiesBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhase_DestroyEnemiesBase, UnknownData_ZVM7, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestPhase_DestroyEnemiesBase, 0x0070);
		}

		// class UQuestPhase_Door : public UQuestPhaseBase
		TEST_METHOD(Class__AT__QuestPhase_Door)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhase_Door, UnknownData_U4IX, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestPhase_Door, 0x0068);
		}

		// class UQuestPhase_Empty : public UQuestPhaseBase
		TEST_METHOD(Class__AT__QuestPhase_Empty)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhase_Empty, UnknownData_HUPD, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestPhase_Empty, 0x0068);
		}

		// class UQuestPhase_Loading : public UQuestPhaseBase
		TEST_METHOD(Class__AT__QuestPhase_Loading)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhase_Loading, UnknownData_K91Y, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestPhase_Loading, 0x0070);
		}

		// class UQuestPhase_Minigame : public UQuestPhaseBase
		TEST_METHOD(Class__AT__QuestPhase_Minigame)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhase_Minigame, UnknownData_4M4M, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhase_Minigame, MinigameName, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhase_Minigame, TargetActorName, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhase_Minigame, UnknownData_4IU4, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestPhase_Minigame, 0x0080);
		}

		// class UQuestPhase_Reward : public UQuestPhaseBase
		TEST_METHOD(Class__AT__QuestPhase_Reward)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhase_Reward, UnknownData_8YDN, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestPhase_Reward, 0x0068);
		}

		// class UQuestPhase_Selection : public UQuestPhaseBase
		TEST_METHOD(Class__AT__QuestPhase_Selection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhase_Selection, UnknownData_U13A, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhase_Selection, CachedSelectionItemComponent, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhase_Selection, UnknownData_0RZH, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestPhase_Selection, 0x0078);
		}

		// class UQuestPhase_Tutorial : public UQuestPhaseBase
		TEST_METHOD(Class__AT__QuestPhase_Tutorial)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhase_Tutorial, UnknownData_OQIG, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhase_Tutorial, bSkip, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhase_Tutorial, UnknownData_MU7R, 0x0069);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestPhase_Tutorial, 0x0070);
		}

		// class UQuestPhase_WindowClosed : public UQuestPhaseBase
		TEST_METHOD(Class__AT__QuestPhase_WindowClosed)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhase_WindowClosed, UnknownData_3FT0, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhase_WindowClosed, bMastering, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhase_WindowClosed, UnknownData_XQCA, 0x0091);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestPhase_WindowClosed, 0x0098);
		}

		// class UQuestPhase_WishDragonBall : public UQuestPhaseBase
		TEST_METHOD(Class__AT__QuestPhase_WishDragonBall)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestPhase_WishDragonBall, UnknownData_HYBQ, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestPhase_WishDragonBall, 0x0078);
		}

		// class AATQuestRetryActor : public AActor
		TEST_METHOD(Class__AT__ATQuestRetryActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATQuestRetryActor, bPossibleQuestRetryDebug, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATQuestRetryActor, UnknownData_AR96, 0x0339);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATQuestRetryActor, StateMachine, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATQuestRetryActor, MenuManager, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATQuestRetryActor, UnknownData_04DQ, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATQuestRetryActor, RetryNpcActor, 0x0358);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATQuestRetryActor, 0x0360);
		}

		// class UATQuestRetryManager : public UObject
		TEST_METHOD(Class__AT__ATQuestRetryManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATQuestRetryManager, Loader_Map, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATQuestRetryManager, UIChapterMenu, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATQuestRetryManager, UIEpisodeMenu, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATQuestRetryManager, TimemachineMenu, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATQuestRetryManager, UIXCmnHeader, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATQuestRetryManager, UnknownData_1ON3, 0x0098);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATQuestRetryManager, 0x00C0);
		}

		// class UATStateBase : public UObject
		TEST_METHOD(Class__AT__ATStateBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATStateBase, Owner, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATStateBase, 0x0030);
		}

		// class UATQuestRetryState_Base : public UATStateBase
		TEST_METHOD(Class__AT__ATQuestRetryState_Base)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATQuestRetryState_Base, UnknownData_JUKN, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATQuestRetryState_Base, 0x0040);
		}

		// class UATQuestRetryState_None : public UATQuestRetryState_Base
		TEST_METHOD(Class__AT__ATQuestRetryState_None)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATQuestRetryState_None, 0x0040);
		}

		// class UATQuestRetryState_Menu : public UATQuestRetryState_Base
		TEST_METHOD(Class__AT__ATQuestRetryState_Menu)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATQuestRetryState_Menu, 0x0040);
		}

		// class UATQuestRetryState_Direction : public UATQuestRetryState_Base
		TEST_METHOD(Class__AT__ATQuestRetryState_Direction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATQuestRetryState_Direction, 0x0040);
		}

		// class UATStateMachineBase : public UObject
		TEST_METHOD(Class__AT__ATStateMachineBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATStateMachineBase, UnknownData_SU9C, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATStateMachineBase, StateLists, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATStateMachineBase, UnknownData_3P2U, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATStateMachineBase, 0x0050);
		}

		// class UATQuestRetryStateMachine : public UATStateMachineBase
		TEST_METHOD(Class__AT__ATQuestRetryStateMachine)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATQuestRetryStateMachine, Manager, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATQuestRetryStateMachine, 0x0058);
		}

		// class UQuestSpawner : public UActorComponent
		TEST_METHOD(Class__AT__QuestSpawner)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuestSpawner, QuestSpawnDataTable, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuestSpawner, 0x0108);
		}

		// class UATQuestWorldMapParamAnalyzer : public UObject
		TEST_METHOD(Class__AT__ATQuestWorldMapParamAnalyzer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATQuestWorldMapParamAnalyzer, QuestWorldMapParameterTable, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATQuestWorldMapParamAnalyzer, QuestWorldMapLandmarkParameterTable, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATQuestWorldMapParamAnalyzer, 0x0038);
		}

		// class UATRestrictMoveControl : public UActorComponent
		TEST_METHOD(Class__AT__ATRestrictMoveControl)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATRestrictMoveControl, UnknownData_DXAK, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATRestrictMoveControl, 0x0118);
		}

		// class UATRideMenuInputComponent : public UCFDynamicAssignInputComponent
		TEST_METHOD(Class__AT__ATRideMenuInputComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATRideMenuInputComponent, 0x01E8);
		}

		// class AATRoomCharaManager : public AVolume
		TEST_METHOD(Class__AT__ATRoomCharaManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomCharaManager, m_NPCList, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomCharaManager, m_CompanionList, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomCharaManager, m_InDoor, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomCharaManager, UnknownData_KCB2, 0x0391);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomCharaManager, m_ExcludeCharacter, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomCharaManager, UnknownData_FN0D, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomCharaManager, m_TalkTable, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomCharaManager, UnknownData_Y22B, 0x0408);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATRoomCharaManager, 0x0428);
		}

		// class AATRoomCompanionPoint : public AActor
		TEST_METHOD(Class__AT__ATRoomCompanionPoint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomCompanionPoint, m_SupportCharacterType, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomCompanionPoint, m_AlwaysThere, 0x0339);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomCompanionPoint, UnknownData_PJG6, 0x033A);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomCompanionPoint, m_Animations, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomCompanionPoint, m_TalkID, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomCompanionPoint, m_AIParamBoost, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomCompanionPoint, m_AIParamFloat, 0x035C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomCompanionPoint, m_AIParamFloatHeightOffset, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomCompanionPoint, m_AIParamRun, 0x0364);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomCompanionPoint, m_AIParamWalk, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomCompanionPoint, UnknownData_RMPR, 0x036C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomCompanionPoint, m_Character, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomCompanionPoint, m_TownCharacter, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomCompanionPoint, m_RoomCharaManager, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomCompanionPoint, UnknownData_QR0O, 0x0388);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATRoomCompanionPoint, 0x03A8);
		}

		// class UATActSkillCooperation : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActSkillCooperation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, TeleportEffect, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, MontageMove, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, MontageAttackCut, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, MontageAttack, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, MontageAttackSupportWait, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, MontageAttackSupport, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, RushMontageInfo, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, MontageRushFinish, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, TargetTeleportDist, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, TargetAttackTeleportDist, 0x0144);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, TargetTeleportRot, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, StandbyTeleportDist, 0x014C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, StandbyTeleportRot, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, AttackTeleportDist, 0x0154);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, AttackTeleportRot, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, AttackWaitTeleportDist1, 0x015C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, AttackWaitTeleportRot1, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, AttackWaitTeleportDist2, 0x0164);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, AttackWaitTeleportRot2, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, MoveSpeed, 0x016C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, MoveDist, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, RushDist, 0x0174);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, RushCountMax, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, CamSt2Talk, 0x017C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, CamMove, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, CamRush, 0x01D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, CamAtk, 0x0200);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, CamAtk2, 0x022C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, OwnerTalkInfo, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, MemberTalkInfo, 0x0268);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, ExclusiveTalkInfo, 0x0278);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillCooperation, UnknownData_Q96K, 0x0288);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSkillCooperation, 0x0320);
		}

		// class UATActSkillHighSpeed : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActSkillHighSpeed)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillHighSpeed, Montage, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillHighSpeed, MontageWait, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillHighSpeed, LoopTimeMax, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillHighSpeed, TargetOffDistance, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillHighSpeed, TargetOffAddTime, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillHighSpeed, LoopFrequency, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillHighSpeed, UnknownData_3J63, 0x0118);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSkillHighSpeed, 0x0188);
		}

		// class UATActSkillMoveChase : public UATActSkillMove
		TEST_METHOD(Class__AT__ATActSkillMoveChase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillMoveChase, MontageDash, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillMoveChase, WaitTime, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillMoveChase, Around1Time, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillMoveChase, Around2Time, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillMoveChase, AroundPitch, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillMoveChase, AroundYawMin, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillMoveChase, AroundYawMax, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillMoveChase, DashTime, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillMoveChase, DashSpeed, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillMoveChase, DashAccel, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillMoveChase, UnknownData_IH8W, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillMoveChase, SkillEffect, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillMoveChase, UnknownData_EMCK, 0x0138);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSkillMoveChase, 0x01C8);
		}

		// class UATActSkillMoveDash : public UATActSkillMove
		TEST_METHOD(Class__AT__ATActSkillMoveDash)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillMoveDash, MontageLP, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillMoveDash, WaitTime, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillMoveDash, MoveTimeMax, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillMoveDash, MoveTimeSupportRatio, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillMoveDash, MoveSpeed, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillMoveDash, MoveTargetDistance, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillMoveDash, AuraEffect, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillMoveDash, UnknownData_KZBX, 0x011D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSkillMoveDash, 0x0178);
		}

		// class UATActSkillReady : public UATActMontageId
		TEST_METHOD(Class__AT__ATActSkillReady)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSkillReady, 0x00C8);
		}

		// class UATActSkillReplicateBody : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActSkillReplicateBody)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillReplicateBody, MontageCutin, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillReplicateBody, ProjectileClass, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillReplicateBody, AppearLocationTable, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillReplicateBody, AppearLocationRamdom, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillReplicateBody, AppearLocationScale, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillReplicateBody, AppearDelayTime, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillReplicateBody, UnknownData_HOY4, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillReplicateBody, AttackPatternTable, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillReplicateBody, LotteryArroundMax, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillReplicateBody, UnknownData_74QR, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillReplicateBody, BarrierClass, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillReplicateBody, CameraParam, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillReplicateBody, ParticleAfterimage, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillReplicateBody, UnknownData_O9TT, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillReplicateBody, BarrierActor, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillReplicateBody, ParticleAfterimageComp, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillReplicateBody, UnknownData_GKQF, 0x01B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSkillReplicateBody, 0x0208);
		}

		// class UATActSkillSlashWave : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActSkillSlashWave)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillSlashWave, MontageStart, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillSlashWave, MontageCharge, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillSlashWave, MontageEnd, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillSlashWave, ProjectileClass, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillSlashWave, ChargeTime, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillSlashWave, UnknownData_ITSC, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillSlashWave, LaunchPattern, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillSlashWave, LaunchIDPattern, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillSlashWave, UnknownData_AR4F, 0x0140);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSkillSlashWave, 0x01A0);
		}

		// class UATActSkillSparking : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActSkillSparking)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillSparking, Montage, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillSparking, MontageNoHit, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillSparking, MontageHeatUp, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillSparking, UnknownData_5FYY, 0x0110);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSkillSparking, 0x0170);
		}

		// class UATActSkillSuicide : public UATActSkillBasic
		TEST_METHOD(Class__AT__ATActSkillSuicide)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSkillSuicide, 0x01D0);
		}

		// class UATActSkillSummon : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActSkillSummon)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillSummon, Montage, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillSummon, SummonIndex, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillSummon, UnknownData_C5T3, 0x0101);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillSummon, VanishTime, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillSummon, UnknownData_NAZU, 0x0108);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSkillSummon, 0x0168);
		}

		// class UATActSkillTemporaryMesh : public UATActSkillBasic
		TEST_METHOD(Class__AT__ATActSkillTemporaryMesh)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTemporaryMesh, TemporaryMeshInfos, 0x01D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTemporaryMesh, Duration, 0x01E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTemporaryMesh, UnknownData_IL4Z, 0x01E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTemporaryMesh, EndEffect, 0x01E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTemporaryMesh, EndSeID, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTemporaryMesh, UnknownData_9YQW, 0x01F1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTemporaryMesh, DirInterp, 0x01F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTemporaryMesh, DirInterpSec, 0x01F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTemporaryMesh, UnknownData_U31G, 0x01FC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSkillTemporaryMesh, 0x0210);
		}

		// class UATActSkillTPS : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActSkillTPS)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS, MontageST_Cut, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS, MontageST, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS, MontageLP, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS, MontageED, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS, MontageLP_NonTPS, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS, StandbyTime, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS, ControlTime, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS, ControlSpeed, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS, SightRadius, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS, SightDistance, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS, UnknownData_FA8W, 0x0134);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSkillTPS, 0x0198);
		}

		// class UATActSkillTPS_A : public UATActSkillBase
		TEST_METHOD(Class__AT__ATActSkillTPS_A)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS_A, MontageST_Cut, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS_A, MontageST, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS_A, MontageLOCKON, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS_A, MontageLP, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS_A, MontageED, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS_A, MontageLP_NonTPS, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS_A, StandbyTime, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS_A, ControlTime, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS_A, ControlSpeed, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS_A, SightRadius, 0x0134);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS_A, SightDistance, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS_A, TargetLockonCountMax, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS_A, LockonCountMax, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS_A, LockonUpdateTime, 0x0144);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS_A, ShotNum, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS_A, SlowRate, 0x014C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS_A, SlowTime, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS_A, UnknownData_P7M1, 0x0154);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS_A, LockOnEnemyList, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSkillTPS_A, UnknownData_H663, 0x01C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSkillTPS_A, 0x01F0);
		}

		// class UATActSpecialMoveTeleport : public UATActBase
		TEST_METHOD(Class__AT__ATActSpecialMoveTeleport)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveTeleport, TeleportEffect, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveTeleport, UnknownData_QVC8, 0x00B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSpecialMoveTeleport, 0x0120);
		}

		// class UATActSpecialMoveTeleportTarget : public UATActSpecialMoveTeleport
		TEST_METHOD(Class__AT__ATActSpecialMoveTeleportTarget)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSpecialMoveTeleportTarget, 0x0120);
		}

		// class UATActSpecialMoveTeleportView : public UATActBase
		TEST_METHOD(Class__AT__ATActSpecialMoveTeleportView)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveTeleportView, TeleportEffect, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveTeleportView, UnknownData_WTK0, 0x00B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSpecialMoveTeleportView, 0x0118);
		}

		// class UATActSpecialMoveZigzag : public UATActBase
		TEST_METHOD(Class__AT__ATActSpecialMoveZigzag)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzag, Montage, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzag, WaitTime, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzag, FrontDistanceMin, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzag, FrontDistanceMax, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzag, SideDistanceMin, 0x00C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzag, SideDistanceMax, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzag, MoveSpeed, 0x00CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzag, MoveSpeedCurve, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzag, TurnCountMax, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzag, UnknownData_TGVF, 0x00DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzag, DamageParam, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzag, DamageRadius, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzag, UnknownData_H0SQ, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzag, AttackCollision, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzag, UnknownData_4D1Y, 0x0160);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSpecialMoveZigzag, 0x01B8);
		}

		// class UATActSpecialMoveZigzagTeleport : public UATActBase
		TEST_METHOD(Class__AT__ATActSpecialMoveZigzagTeleport)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzagTeleport, Montage, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzagTeleport, TeleportEffect, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzagTeleport, WaitTime, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzagTeleport, FrontDistanceMin, 0x00C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzagTeleport, FrontDistanceMax, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzagTeleport, SideDistanceMin, 0x00CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzagTeleport, SideDistanceMax, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzagTeleport, HeightDistanceMax, 0x00D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzagTeleport, TurnCountMax, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzagTeleport, HomingAngleH, 0x00DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzagTeleport, HomingAngleV, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzagTeleport, MoveWaitTime, 0x00E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzagTeleport, MoveAppearTime, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzagTeleport, MoveEraseTime, 0x00EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSpecialMoveZigzagTeleport, UnknownData_3GK6, 0x00F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSpecialMoveZigzagTeleport, 0x0178);
		}

		// class UATActStep : public UATActBase
		TEST_METHOD(Class__AT__ATActStep)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActStep, UnknownData_A462, 0x00B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActStep, 0x0110);
		}

		// class UATActSupportActionReady : public UATActBase
		TEST_METHOD(Class__AT__ATActSupportActionReady)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportActionReady, UnknownData_37KF, 0x00B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSupportActionReady, 0x0118);
		}

		// class UATActSupportBulletGuard : public UATActGuard
		TEST_METHOD(Class__AT__ATActSupportBulletGuard)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportBulletGuard, GuardTime, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportBulletGuard, UnknownData_SYRN, 0x0114);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSupportBulletGuard, 0x0118);
		}

		// class UATActSupportBulletGuardReady : public UATActSupportActionReady
		TEST_METHOD(Class__AT__ATActSupportBulletGuardReady)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportBulletGuardReady, DistanceRate, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportBulletGuardReady, DistanceMinTarget, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportBulletGuardReady, DistanceMinBullet, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportBulletGuardReady, UnknownData_REDO, 0x0124);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSupportBulletGuardReady, 0x0140);
		}

		// class UATActSupportComboAssistLong : public UATActLongRangeCombo
		TEST_METHOD(Class__AT__ATActSupportComboAssistLong)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSupportComboAssistLong, 0x0150);
		}

		// class UATActSupportComboAssistLongReady : public UATActSupportActionReady
		TEST_METHOD(Class__AT__ATActSupportComboAssistLongReady)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportComboAssistLongReady, TeleportDistance, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportComboAssistLongReady, TeleportAngle, 0x011C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSupportComboAssistLongReady, 0x0120);
		}

		// class UATActSupportComboAssistShort : public UATActShortRangeCombo
		TEST_METHOD(Class__AT__ATActSupportComboAssistShort)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSupportComboAssistShort, 0x01A8);
		}

		// class UATActSupportComboAssistShortReady : public UATActSupportActionReady
		TEST_METHOD(Class__AT__ATActSupportComboAssistShortReady)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportComboAssistShortReady, TeleportDistance, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportComboAssistShortReady, TeleportAngle, 0x011C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSupportComboAssistShortReady, 0x0120);
		}

		// class UATActSupportComboCut : public UATActBase
		TEST_METHOD(Class__AT__ATActSupportComboCut)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportComboCut, MontageDash, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportComboCut, DashDistance, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportComboCut, DashTime, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportComboCut, MontageFinish, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportComboCut, UnknownData_94O7, 0x00D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSupportComboCut, 0x0128);
		}

		// class UATActSupportComboCutReady : public UATActSupportActionReady
		TEST_METHOD(Class__AT__ATActSupportComboCutReady)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportComboCutReady, TeleportDistance, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportComboCutReady, TeleportAngle, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportComboCutReady, UnknownData_J9C8, 0x0120);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSupportComboCutReady, 0x0128);
		}

		// class UATActSupportProvocation : public UATActBase
		TEST_METHOD(Class__AT__ATActSupportProvocation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportProvocation, Montage, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportProvocation, UnknownData_BAWG, 0x00B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSupportProvocation, 0x0110);
		}

		// class UATActSupportPursue : public UATActBase
		TEST_METHOD(Class__AT__ATActSupportPursue)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportPursue, AttackMontage, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportPursue, UnknownData_WDLQ, 0x00C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSupportPursue, 0x0120);
		}

		// class UATActSupportPursueDamage : public UATActDmgBase
		TEST_METHOD(Class__AT__ATActSupportPursueDamage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSupportPursueDamage, 0x00D8);
		}

		// class UATActSupportRecoveryHp : public UATActBase
		TEST_METHOD(Class__AT__ATActSupportRecoveryHp)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSupportRecoveryHp, 0x00B0);
		}

		// class UATActSupportRecoveryMp : public UATActBase
		TEST_METHOD(Class__AT__ATActSupportRecoveryMp)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSupportRecoveryMp, 0x00B0);
		}

		// class UATActSupportSkillAssistReady : public UATActSupportActionReady
		TEST_METHOD(Class__AT__ATActSupportSkillAssistReady)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportSkillAssistReady, TeleportDistance, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportSkillAssistReady, TeleportAngle, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportSkillAssistReady, TeleportAngleV, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportSkillAssistReady, UnknownData_OPKS, 0x0124);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSupportSkillAssistReady, 0x0128);
		}

		// class UATActSupportSkillReady : public UATActSupportActionReady
		TEST_METHOD(Class__AT__ATActSupportSkillReady)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportSkillReady, TeleportDistance, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportSkillReady, TeleportAngle, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportSkillReady, TeleportAngleV, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActSupportSkillReady, UnknownData_ZDIG, 0x0124);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActSupportSkillReady, 0x0128);
		}

		// class UATActUseRadar : public UATActBase
		TEST_METHOD(Class__AT__ATActUseRadar)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActUseRadar, BeginMontage, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActUseRadar, EndMontage, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActUseRadar, Radar, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActUseRadar, WaitTime, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActUseRadar, UnknownData_K10C, 0x00CC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActUseRadar, 0x0130);
		}

		// class UATActWeakness : public UATActBase
		TEST_METHOD(Class__AT__ATActWeakness)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActWeakness, Montage, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActWeakness, EraseRageTime, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActWeakness, CutinTime, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATActWeakness, UnknownData_Q4EB, 0x00C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActWeakness, 0x0120);
		}

		// class UATActWorldMapDemo : public UATActMontageId
		TEST_METHOD(Class__AT__ATActWorldMapDemo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATActWorldMapDemo, 0x00C8);
		}

		// class UATAirCarInputComponent : public UATInputComponent
		TEST_METHOD(Class__AT__ATAirCarInputComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAirCarInputComponent, OwnerChara, 0x01F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAirCarInputComponent, OwnerMoveState, 0x0200);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAirCarInputComponent, OwnerVirtualController, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAirCarInputComponent, CameraManager, 0x0210);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAirCarInputComponent, UnknownData_VCGC, 0x0218);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAirCarInputComponent, 0x0268);
		}

		// class UATAIStatusLoader : public UObject
		TEST_METHOD(Class__AT__ATAIStatusLoader)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAIStatusLoader, UnknownData_2DCV, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAIStatusLoader, FriendLoaderMap, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAIStatusLoader, EnemyLoaderMap, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAIStatusLoader, BehavoprLoaderMap, 0x00D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAIStatusLoader, 0x0120);
		}

		// class AATAmbientSplineActor : public AActor
		TEST_METHOD(Class__AT__ATAmbientSplineActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATAmbientSplineActor, AmbientID, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATAmbientSplineActor, UnknownData_6QA4, 0x0339);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATAmbientSplineActor, EffectiveDistance, 0x033C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATAmbientSplineActor, LocationInterval, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATAmbientSplineActor, UnknownData_3ICE, 0x0344);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATAmbientSplineActor, RouteSplines, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATAmbientSplineActor, UnknownData_SEW9, 0x0358);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATAmbientSplineActor, 0x0370);
		}

		// class UATAnimNotify_ActionMontageCount : public UAnimNotify
		TEST_METHOD(Class__AT__ATAnimNotify_ActionMontageCount)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_ActionMontageCount, 0x0038);
		}

		// class UATAnimNotify_CharacterSetDraw : public UAnimNotify
		TEST_METHOD(Class__AT__ATAnimNotify_CharacterSetDraw)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_CharacterSetDraw, bEnableFlag, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_CharacterSetDraw, eEnableFlag, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_CharacterSetDraw, UnknownData_R36H, 0x003A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_CharacterSetDraw, BoneName, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_CharacterSetDraw, TargetCharacter, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_CharacterSetDraw, UnknownData_L4WV, 0x0049);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_CharacterSetDraw, 0x0050);
		}

		// class UATAnimNotify_CharacterSuperArmor : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotify_CharacterSuperArmor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_CharacterSuperArmor, SuperArmorEnableFlag, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_CharacterSuperArmor, UnknownData_CJ6N, 0x0031);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_CharacterSuperArmor, 0x0038);
		}

		// class UATAnimNotify_CharacterTargetMove : public UAnimNotify
		TEST_METHOD(Class__AT__ATAnimNotify_CharacterTargetMove)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_CharacterTargetMove, Speed, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_CharacterTargetMove, bIgnoreVertical, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_CharacterTargetMove, UseOwnerForwardVector, 0x003D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_CharacterTargetMove, UnknownData_HAZT, 0x003E);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_CharacterTargetMove, RotateOffset, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_CharacterTargetMove, UnknownData_FPAY, 0x004C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_CharacterTargetMove, 0x0050);
		}

		// class UATAnimNotify_CharacterTargetRotate : public UAnimNotify
		TEST_METHOD(Class__AT__ATAnimNotify_CharacterTargetRotate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_CharacterTargetRotate, bIgnorePitch, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_CharacterTargetRotate, UnknownData_48EO, 0x0039);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_CharacterTargetRotate, 0x0040);
		}

		// class UATAnimNotify_FlashColor : public UAnimNotify
		TEST_METHOD(Class__AT__ATAnimNotify_FlashColor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_FlashColor, Color, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_FlashColor, Duration, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_FlashColor, FadeOut, 0x004C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_FlashColor, 0x0050);
		}

		// class UATAnimNotify_LongBlowoffChase : public UAnimNotify
		TEST_METHOD(Class__AT__ATAnimNotify_LongBlowoffChase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_LongBlowoffChase, 0x0038);
		}

		// class UATAnimNotify_NimbusParticleActivate : public UAnimNotify
		TEST_METHOD(Class__AT__ATAnimNotify_NimbusParticleActivate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_NimbusParticleActivate, bActive, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_NimbusParticleActivate, UnknownData_TGTP, 0x0039);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_NimbusParticleActivate, 0x0040);
		}

		// class UATAnimNotify_PadVibration : public UAnimNotify
		TEST_METHOD(Class__AT__ATAnimNotify_PadVibration)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_PadVibration, VibrationForce, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_PadVibration, UnknownData_HJEE, 0x0039);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_PadVibration, 0x0040);
		}

		// class UATAnimNotify_PhotonDestroy : public UAnimNotify
		TEST_METHOD(Class__AT__ATAnimNotify_PhotonDestroy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_PhotonDestroy, SocketName, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_PhotonDestroy, 0x0040);
		}

		// class UATAnimNotify_PhotonSpawn : public UAnimNotify
		TEST_METHOD(Class__AT__ATAnimNotify_PhotonSpawn)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_PhotonSpawn, SocketName, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_PhotonSpawn, OffsetLcation, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_PhotonSpawn, OffsetRotation, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_PhotonSpawn, DamageRadius, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_PhotonSpawn, PhotonDestroyType, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_PhotonSpawn, UnknownData_48KK, 0x005D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_PhotonSpawn, PhotonDamageAmount, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_PhotonSpawn, UseOneFrameKill, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_PhotonSpawn, UnknownData_DFSE, 0x0065);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_PhotonSpawn, 0x0068);
		}

		// class UATAnimNotify_PlayParticleEffectCamera : public UAnimNotify_PlayParticleEffect
		TEST_METHOD(Class__AT__ATAnimNotify_PlayParticleEffectCamera)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_PlayParticleEffectCamera, 0x0090);
		}

		// class UATAnimNotify_PlayParticleEffectCustom : public UAnimNotify_PlayParticleEffect
		TEST_METHOD(Class__AT__ATAnimNotify_PlayParticleEffectCustom)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_PlayParticleEffectCustom, 0x0090);
		}

		// class UATAnimNotify_PlayParticleEffectExt : public UAnimNotify_PlayParticleEffect
		TEST_METHOD(Class__AT__ATAnimNotify_PlayParticleEffectExt)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_PlayParticleEffectExt, UseTargetCharacter, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_PlayParticleEffectExt, UnknownData_HJM5, 0x0091);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_PlayParticleEffectExt, 0x00A0);
		}

		// class UATAnimNotify_PlaySoundByVoiceID : public UAnimNotify
		TEST_METHOD(Class__AT__ATAnimNotify_PlaySoundByVoiceID)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_PlaySoundByVoiceID, VoiceID, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_PlaySoundByVoiceID, CharacterType, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_PlaySoundByVoiceID, Play2d, 0x003A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_PlaySoundByVoiceID, UnknownData_3XKG, 0x003B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_PlaySoundByVoiceID, StringID, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_PlaySoundByVoiceID, dispTime, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_PlaySoundByVoiceID, UnknownData_EXUY, 0x0054);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_PlaySoundByVoiceID, 0x0058);
		}

		// class UATAnimNotify_PoseSnapshot : public UAnimNotify
		TEST_METHOD(Class__AT__ATAnimNotify_PoseSnapshot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_PoseSnapshot, Opacity, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_PoseSnapshot, Duration, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_PoseSnapshot, FadeOut, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_PoseSnapshot, UnknownData_1SNC, 0x0044);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_PoseSnapshot, 0x0048);
		}

		// class UATAnimNotify_QuestMainBegin : public UAnimNotify
		TEST_METHOD(Class__AT__ATAnimNotify_QuestMainBegin)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_QuestMainBegin, DebugFunctionOFF, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_QuestMainBegin, UnknownData_0ATG, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_QuestMainBegin, DirectionName, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_QuestMainBegin, 0x0048);
		}

		// class UATAnimNotify_SetCharacterMontage : public UAnimNotify
		TEST_METHOD(Class__AT__ATAnimNotify_SetCharacterMontage)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SetCharacterMontage, Montage, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SetCharacterMontage, MontageId, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SetCharacterMontage, PlayRate, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SetCharacterMontage, UnknownData_JTR7, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SetCharacterMontage, StartSection, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_SetCharacterMontage, 0x0058);
		}

		// class UATAnimNotify_SetCharacterMoveCancelFlag : public UAnimNotify
		TEST_METHOD(Class__AT__ATAnimNotify_SetCharacterMoveCancelFlag)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_SetCharacterMoveCancelFlag, 0x0038);
		}

		// class UATAnimNotify_SetCharacterMoveFlag : public UAnimNotify
		TEST_METHOD(Class__AT__ATAnimNotify_SetCharacterMoveFlag)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SetCharacterMoveFlag, bMove, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SetCharacterMoveFlag, UnknownData_OFNZ, 0x0039);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_SetCharacterMoveFlag, 0x0040);
		}

		// class UATAnimNotify_SkillCamera : public UAnimNotify
		TEST_METHOD(Class__AT__ATAnimNotify_SkillCamera)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, CameraSide, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, UnknownData_ZWX2, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, CameraType, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, UnknownData_9MA5, 0x003D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, PreCameraBlend, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, NextCameraBlend, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, Duration, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, Continuous, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, UseCenter, 0x004D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, UnknownData_WT81, 0x004E);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, Center, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, CenterLimit, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, UseCenterBlend, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, CenterBlendFunc, 0x0059);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, UnknownData_BIW1, 0x005A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, CenterBlend, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, UseDistance, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, UnknownData_5VD5, 0x0061);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, Distance, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, UseDistanceBlend, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, DistanceBlendFunc, 0x0069);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, UnknownData_VRSC, 0x006A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, DistanceBlend, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, useRotation, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, RotationOwnerSync, 0x0071);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, UseFlipYaw, 0x0072);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, UnknownData_E972, 0x0073);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, Rotation, 0x0074);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, UseRotationBlend, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, RotationBlendFunc, 0x0081);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, UnknownData_0FZP, 0x0082);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, RotationBlend, 0x0084);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, UseLocation, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, UnknownData_97WZ, 0x0091);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, Location, 0x0094);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, UseLocationBlend, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, LocationBlendFunc, 0x00A1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, UnknownData_6BG5, 0x00A2);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, LocationBlend, 0x00A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, UseFov, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, UnknownData_RO64, 0x00B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, FOV, 0x00B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, UseFovBlend, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, FovBlendFunc, 0x00B9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, UnknownData_9XMO, 0x00BA);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_SkillCamera, FovBlend, 0x00BC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_SkillCamera, 0x00C0);
		}

		// class UATAnimNotify_TemporarySkeletalMesh : public UAnimNotify
		TEST_METHOD(Class__AT__ATAnimNotify_TemporarySkeletalMesh)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_TemporarySkeletalMesh, TemporaryMesh, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_TemporarySkeletalMesh, Duration, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_TemporarySkeletalMesh, UnknownData_DD2D, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_TemporarySkeletalMesh, EndEffect, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_TemporarySkeletalMesh, EndSeID, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_TemporarySkeletalMesh, UnknownData_G6CX, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_TemporarySkeletalMesh, EndWait, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_TemporarySkeletalMesh, TargetCharacter, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_TemporarySkeletalMesh, UnknownData_X2IC, 0x0059);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_TemporarySkeletalMesh, AnimNut, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_TemporarySkeletalMesh, AnimEnd, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_TemporarySkeletalMesh, 0x0070);
		}

		// class UATAnimNotifyState_AcceptCommand : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_AcceptCommand)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_AcceptCommand, 0x0030);
		}

		// class UATAnimNotifyState_ActionInterruptTiming : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_ActionInterruptTiming)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_ActionInterruptTiming, 0x0030);
		}

		// class UATAnimNotifyState_AnimInterporationType : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_AnimInterporationType)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_AnimInterporationType, InterpType, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_AnimInterporationType, UnknownData_MW32, 0x0031);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_AnimInterporationType, 0x0040);
		}

		// class UATAnimNotifyState_CameraShake : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_CameraShake)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CameraShake, ShakeType, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CameraShake, FadeOut, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CameraShake, Acting, 0x0032);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CameraShake, UnknownData_VNFL, 0x0033);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_CameraShake, 0x0038);
		}

		// class UATAnimNotifyState_CancelFlag : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_CancelFlag)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CancelFlag, Flag, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CancelFlag, UnknownData_A1G5, 0x0034);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_CancelFlag, 0x0038);
		}

		// class UATAnimNotifyState_CharacterInputMove : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_CharacterInputMove)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterInputMove, Speed, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterInputMove, SpeedAccel, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterInputMove, EndSpeedKeep, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterInputMove, UseRotate, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterInputMove, UnknownData_OJ8L, 0x003A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterInputMove, RotateOffset, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterInputMove, InputRange, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterInputMove, UseVertical, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterInputMove, UseDistanceRate, 0x004D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterInputMove, UnknownData_6VQ1, 0x004E);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterInputMove, MaxDistance, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterInputMove, MinDistance, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterInputMove, MinDistanceRate, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterInputMove, UnknownData_ZG7C, 0x005C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_CharacterInputMove, 0x0070);
		}

		// class UATAnimNotifyState_CharacterSetDraw : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_CharacterSetDraw)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterSetDraw, bEnableFlag, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterSetDraw, eEnableFlag, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterSetDraw, UnknownData_HVJ2, 0x0032);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterSetDraw, BoneName, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterSetDraw, TargetCharacter, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterSetDraw, bCharacterMeshOnly, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterSetDraw, bAuraEffect, 0x0042);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterSetDraw, UseArgumentMesh, 0x0043);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterSetDraw, UnknownData_8H8Z, 0x0044);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_CharacterSetDraw, 0x0050);
		}

		// class UATAnimNotifyState_CharacterTargetMove : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_CharacterTargetMove)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterTargetMove, Speed, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterTargetMove, SpeedAccel, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterTargetMove, bIgnoreVertical, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterTargetMove, EndSpeedKeep, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterTargetMove, OwnerRotateSync, 0x003A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterTargetMove, UseOwnerForwardVector, 0x003B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterTargetMove, RotateOffset, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterTargetMove, UseDistanceRate, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterTargetMove, UnknownData_LOG4, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterTargetMove, MaxDistance, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterTargetMove, MinDistance, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterTargetMove, MinDistanceRate, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterTargetMove, UnknownData_VOQU, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_CharacterTargetMove, 0x0060);
		}

		// class UATAnimNotifyState_CharacterTargetRotate : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_CharacterTargetRotate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterTargetRotate, AdjustPower, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterTargetRotate, bIgnorePitch, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterTargetRotate, UnknownData_OQ27, 0x0035);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_CharacterTargetRotate, 0x0038);
		}

		// class UATAnimNotifyState_CharacterTargetRotatePivotBone : public UATAnimNotifyState_CharacterTargetRotate
		TEST_METHOD(Class__AT__ATAnimNotifyState_CharacterTargetRotatePivotBone)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterTargetRotatePivotBone, AxisBoneName, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_CharacterTargetRotatePivotBone, UnknownData_EN8W, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_CharacterTargetRotatePivotBone, 0x0058);
		}

		// class UATAnimNotifyState_DisableCharacterFootIK : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_DisableCharacterFootIK)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_DisableCharacterFootIK, DisableFootType, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_DisableCharacterFootIK, UnknownData_IH49, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_DisableCharacterFootIK, UnknownData_SMFN, 0x0034);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_DisableCharacterFootIK, 0x0038);
		}

		// class UATAnimNotifyState_DisableSparking : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_DisableSparking)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_DisableSparking, TargetFormChangeId, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_DisableSparking, Effect, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_DisableSparking, EffectSocket, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_DisableSparking, EffectOffset, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_DisableSparking, UnknownData_PBV4, 0x005C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_DisableSparking, 0x0078);
		}

		// class UATAnimNotifyState_EnergyDrain : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_EnergyDrain)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_EnergyDrain, DamageParam, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_EnergyDrain, Interval, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_EnergyDrain, LifeRate, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_EnergyDrain, MPRate, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_EnergyDrain, UnknownData_CKWG, 0x006C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_EnergyDrain, 0x0088);
		}

		// class UATAnimNotifyState_FaceTrigger : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_FaceTrigger)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_FaceTrigger, TriggerEffect, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_FaceTrigger, AttachSocket, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_FaceTrigger, EffectScale, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_FaceTrigger, WaitTime, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_FaceTrigger, GaugeRate, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_FaceTrigger, UnknownData_6HB5, 0x004C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_FaceTrigger, 0x0058);
		}

		// class UATAnimNotifyState_Fade : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_Fade)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_Fade, FadeColor, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_Fade, UnknownData_SLGW, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_Fade, FadeOutTime, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_Fade, FadeInTime, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_Fade, UnknownData_IKCH, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_Fade, 0x0040);
		}

		// class UAnimNotifyState_PlayParticleEffect : public UAnimNotifyState
		TEST_METHOD(Class__AT__AnimNotifyState_PlayParticleEffect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleEffect, PSTemplate, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleEffect, LocationOffset, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleEffect, RotationOffset, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleEffect, SocketName, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleEffect, UnknownData_I1XT, 0x0059);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleEffect, EndAction, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleEffect, UnknownData_4SOL, 0x005D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleEffect, FloatParam, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleEffect, UseAttackSuccessEffect, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleEffect, UnknownData_WO0T, 0x0071);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_PlayParticleEffect, 0x00C8);
		}

		// class UAnimNotifyState_FieldShotChargeEffect : public UAnimNotifyState_PlayParticleEffect
		TEST_METHOD(Class__AT__AnimNotifyState_FieldShotChargeEffect)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_FieldShotChargeEffect, 0x00C8);
		}

		// class UATAnimNotifyState_FresnelColor : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_FresnelColor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_FresnelColor, SetColor, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_FresnelColor, UnknownData_DC42, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_FresnelColor, Influence, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_FresnelColor, power, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_FresnelColor, Color, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_FresnelColor, Restore, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_FresnelColor, UnknownData_O3I1, 0x0049);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_FresnelColor, 0x0050);
		}

		// class UATAnimNotifyState_Invincible : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_Invincible)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_Invincible, 0x0030);
		}

		// class UATAnimNotifyState_LookAtTarget : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_LookAtTarget)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_LookAtTarget, 0x0030);
		}

		// class UATAnimNotifyState_NimbusRoll : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_NimbusRoll)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_NimbusRoll, AnimActorClass, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_NimbusRoll, SocketName, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_NimbusRoll, NimbusAttachBoneName, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_NimbusRoll, RootBoneName, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_NimbusRoll, m_AnimActor, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_NimbusRoll, m_OwnerNimbus, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_NimbusRoll, m_DummyMeshComp, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_NimbusRoll, 0x0068);
		}

		// class UATAnimNotifyState_OutlineColor : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_OutlineColor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_OutlineColor, SetColor, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_OutlineColor, UnknownData_BHRM, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_OutlineColor, Color, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_OutlineColor, Restore, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_OutlineColor, UnknownData_STHU, 0x0041);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_OutlineColor, 0x0048);
		}

		// class UATAnimNotifyState_PadVibration : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_PadVibration)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_PadVibration, VibrationForce, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_PadVibration, UnknownData_U8ST, 0x0031);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_PadVibration, 0x0038);
		}

		// class UAnimNotifyState_PlayParticleEffectAdjustHeight : public UAnimNotifyState_PlayParticleEffect
		TEST_METHOD(Class__AT__AnimNotifyState_PlayParticleEffectAdjustHeight)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleEffectAdjustHeight, StandardHeight, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleEffectAdjustHeight, UnknownData_4M96, 0x00CC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_PlayParticleEffectAdjustHeight, 0x00D0);
		}

		// class UAnimNotifyState_PlayParticleEffectCamera : public UAnimNotifyState
		TEST_METHOD(Class__AT__AnimNotifyState_PlayParticleEffectCamera)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleEffectCamera, PSTemplate, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleEffectCamera, LocationOffset, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleEffectCamera, RotationOffset, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleEffectCamera, UnknownData_OG3H, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleEffectCamera, EndAction, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_PlayParticleEffectCamera, UnknownData_85SE, 0x0055);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_PlayParticleEffectCamera, 0x0068);
		}

		// class UAnimNotifyState_PlayParticleEffectCustom : public UAnimNotifyState_PlayParticleEffect
		TEST_METHOD(Class__AT__AnimNotifyState_PlayParticleEffectCustom)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_PlayParticleEffectCustom, 0x00C8);
		}

		// class UATAnimNotifyState_PlaySkeletalAnim : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_PlaySkeletalAnim)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_PlaySkeletalAnim, AnimActorClass, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_PlaySkeletalAnim, SocketName, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_PlaySkeletalAnim, AttachTarget, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_PlaySkeletalAnim, UnknownData_X2XJ, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_PlaySkeletalAnim, AnimActor, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_PlaySkeletalAnim, 0x0050);
		}

		// class UATAnimNotifyState_PoseSnapshot : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_PoseSnapshot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_PoseSnapshot, Opacity, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_PoseSnapshot, Duration, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_PoseSnapshot, FadeOut, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_PoseSnapshot, Interval, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_PoseSnapshot, UnknownData_E4FW, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_PoseSnapshot, 0x0048);
		}

		// class UATAnimNotifyState_PostOutlineParam : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_PostOutlineParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_PostOutlineParam, StartTime, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_PostOutlineParam, ThickWidth, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_PostOutlineParam, ThinWidth, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_PostOutlineParam, DepthWidth, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_PostOutlineParam, NormalWidth, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_PostOutlineParam, TextureWidth, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_PostOutlineParam, UnknownData_LBKB, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_PostOutlineParam, 0x0070);
		}

		// class UATAnimNotifyState_RestrictMovement : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_RestrictMovement)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_RestrictMovement, ForTarget, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_RestrictMovement, DisableVerticalMove, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_RestrictMovement, DisableHolizontalMove, 0x0032);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_RestrictMovement, UnknownData_Z41N, 0x0033);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_RestrictMovement, LimitDistance, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_RestrictMovement, LimitDistanceNear, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_RestrictMovement, RotateAdjustCamera, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_RestrictMovement, UnknownData_QSEV, 0x003D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_RestrictMovement, 0x0040);
		}

		// class UATAnimNotifyState_SkillCutin : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_SkillCutin)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_SkillCutin, EnableLockTarget, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_SkillCutin, UseAttachSocket, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_SkillCutin, UnknownData_JS66, 0x0032);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_SkillCutin, TargetAttachSocket, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_SkillCutin, UseSafetyPoint, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_SkillCutin, ProjectileDestroyType, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_SkillCutin, ActorPauseType, 0x0042);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_SkillCutin, ActorPauseActionReset, 0x0043);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_SkillCutin, UnknownData_0T7I, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_SkillCutin, CutinCameraAnim, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_SkillCutin, CutinCameraFlip, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_SkillCutin, SkipEndProcess, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_SkillCutin, UseCustomStencil, 0x0052);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_SkillCutin, OwnerEnableInvincible, 0x0053);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_SkillCutin, UnknownData_2TN2, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_SkillCutin, CameraInst, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_SkillCutin, UnknownData_IA13, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_SkillCutin, 0x0080);
		}

		// class UATAnimNotifyState_Sparking : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_Sparking)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_Sparking, DamageParam, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_Sparking, DamageRadius, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_Sparking, UnknownData_ZGN2, 0x0064);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_Sparking, 0x0078);
		}

		// class UATAnimNotifyState_Subtitle : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_Subtitle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_Subtitle, SubtitleID, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_Subtitle, 0x0038);
		}

		// class UATAnimNotifyState_WhiteEye : public UAnimNotifyState
		TEST_METHOD(Class__AT__ATAnimNotifyState_WhiteEye)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_WhiteEye, WhiteRate, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_WhiteEye, LineScale, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_WhiteEye, Restore, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_WhiteEye, UseOutlineSetting, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_WhiteEye, UnknownData_22CD, 0x003A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_WhiteEye, Outline_Lenth_R, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_WhiteEye, Outline_Slider_R, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_WhiteEye, UnknownData_D8OM, 0x0044);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_WhiteEye, 0x0048);
		}

		// class UATAnyButtonInputComponent : public UATInputComponent
		TEST_METHOD(Class__AT__ATAnyButtonInputComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnyButtonInputComponent, 0x01F8);
		}

		// class UATAsyncLoader : public UObject
		TEST_METHOD(Class__AT__ATAsyncLoader)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAsyncLoader, requests, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAsyncLoader, loadedInstances, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAsyncLoader, UnknownData_OSO3, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAsyncLoader, 0x0050);
		}

		// class UATAtrociousManager : public UActorComponent
		TEST_METHOD(Class__AT__ATAtrociousManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAtrociousManager, PhaseMap, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAtrociousManager, UnknownData_PPHY, 0x0150);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAtrociousManager, 0x01A0);
		}

		// class UATAtrociousPhaseFunctionBase : public UObject
		TEST_METHOD(Class__AT__ATAtrociousPhaseFunctionBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAtrociousPhaseFunctionBase, 0x0028);
		}

		// class UATAtrociousPhaseBase : public UObject
		TEST_METHOD(Class__AT__ATAtrociousPhaseBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAtrociousPhaseBase, FirstPhaseClasses, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAtrociousPhaseBase, AfterPhaseClasses, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAtrociousPhaseBase, UnknownData_2B55, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAtrociousPhaseBase, PreBattleFunction, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAtrociousPhaseBase, BattleFunction, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAtrociousPhaseBase, ConditionFunction, 0x00F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAtrociousPhaseBase, 0x00F8);
		}

		// class UATAtrociousBattleBase : public UATAtrociousPhaseFunctionBase
		TEST_METHOD(Class__AT__ATAtrociousBattleBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAtrociousBattleBase, 0x0028);
		}

		// class UATAtrociousEncountBattle : public UATAtrociousBattleBase
		TEST_METHOD(Class__AT__ATAtrociousEncountBattle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAtrociousEncountBattle, LoadLevels, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAtrociousEncountBattle, TargetParty, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAtrociousEncountBattle, UnknownData_XWOU, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAtrociousEncountBattle, 0x0118);
		}

		// class UATAtrociousEventBattle : public UATAtrociousBattleBase
		TEST_METHOD(Class__AT__ATAtrociousEventBattle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAtrociousEventBattle, LoadLevels, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAtrociousEventBattle, QuestId, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAtrociousEventBattle, UnknownData_I4HS, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAtrociousEventBattle, 0x00A0);
		}

		// class UATAtrociousCondition : public UATAtrociousPhaseFunctionBase
		TEST_METHOD(Class__AT__ATAtrociousCondition)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAtrociousCondition, ProgressID, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAtrociousCondition, Conditions, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAtrociousCondition, 0x0040);
		}

		// class UATAtrociousPreBattleBase : public UATAtrociousPhaseFunctionBase
		TEST_METHOD(Class__AT__ATAtrociousPreBattleBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAtrociousPreBattleBase, 0x0028);
		}

		// class UATAtrociousSubQuest : public UATAtrociousPreBattleBase
		TEST_METHOD(Class__AT__ATAtrociousSubQuest)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAtrociousSubQuest, LoadLevels, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAtrociousSubQuest, QuestId, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAtrociousSubQuest, UnknownData_UR7Q, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAtrociousSubQuest, 0x00B0);
		}

		// class UATAttachParticleComponent : public UActorComponent
		TEST_METHOD(Class__AT__ATAttachParticleComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAttachParticleComponent, ParameterTbl, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAttachParticleComponent, AttachmentTbl, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAttachParticleComponent, UnknownData_WSFG, 0x0160);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAttachParticleComponent, 0x0170);
		}

		// class ATriggerStaticActor : public ATriggerSphere
		TEST_METHOD(Class__AT__TriggerStaticActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ATriggerStaticActor, UnknownData_C3YV, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::ATriggerStaticActor, QuestActorFindListComponent, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ATriggerStaticActor, bTouch, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::ATriggerStaticActor, UnknownData_HYY0, 0x0351);
			CHEAT_GEAR_CHECK_OFFSET(CG::ATriggerStaticActor, CollisionProfileName, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::ATriggerStaticActor, UnknownData_UWDY, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::ATriggerStaticActor, bNoCollision, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::ATriggerStaticActor, UnknownData_MEGL, 0x0381);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATriggerStaticActor, 0x0388);
		}

		// class AAutoMoveTrigger : public ATriggerStaticActor
		TEST_METHOD(Class__AT__AutoMoveTrigger)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAutoMoveTrigger, TriggerId, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAutoMoveTrigger, UnknownData_SEGT, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAutoMoveTrigger, 0x03A0);
		}

		// class UATBaseballGameInputComponent : public UATInputComponent
		TEST_METHOD(Class__AT__ATBaseballGameInputComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBaseballGameInputComponent, 0x01F8);
		}

		// class UATBattleAI : public UObject
		TEST_METHOD(Class__AT__ATBattleAI)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAI, UnknownData_2LJ4, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAI, BehaviorClasses, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAI, ConditionJudgement, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAI, UnknownData_74K0, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAI, 0x00D8);
		}

		// class UATBattleAIBehaviorBase : public UObject
		TEST_METHOD(Class__AT__ATBattleAIBehaviorBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorBase, UnknownData_CX0I, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorBase, 0x0038);
		}

		// class UATBattleAIBehavior_Template : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehavior_Template)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehavior_Template, 0x0038);
		}

		// class UATBattleAIBehaviorAttack : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorAttack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorAttack, UnknownData_KGJH, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorAttack, 0x0098);
		}

		// class UATBattleAIBehaviorBlowoffBrake : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorBlowoffBrake)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorBlowoffBrake, UnknownData_GDES, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorBlowoffBrake, 0x0090);
		}

		// class UATBattleAIBehaviorBurst : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorBurst)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorBurst, UnknownData_VWCC, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorBurst, 0x0090);
		}

		// class UATBattleAIBehaviorCharge : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorCharge)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorCharge, UnknownData_REOK, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorCharge, 0x0040);
		}

		// class UATBattleAIBehaviorCounterSkill : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorCounterSkill)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorCounterSkill, UnknownData_8IVH, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorCounterSkill, 0x0098);
		}

		// class UATBattleAIBehaviorFormation : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorFormation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorFormation, UnknownData_UOS2, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorFormation, 0x00B8);
		}

		// class UATBattleAIBehaviorGuard : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorGuard)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorGuard, 0x0038);
		}

		// class UATBattleAIBehaviorHighBoost : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorHighBoost)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorHighBoost, UnknownData_KR95, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorHighBoost, 0x0090);
		}

		// class UATBattleAIBehaviorHugeStep : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorHugeStep)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorHugeStep, UnknownData_9RY9, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorHugeStep, 0x0098);
		}

		// class UATBattleAIBehaviorHugeStepF : public UATBattleAIBehaviorHugeStep
		TEST_METHOD(Class__AT__ATBattleAIBehaviorHugeStepF)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorHugeStepF, 0x0098);
		}

		// class UATBattleAIBehaviorHugeStepB : public UATBattleAIBehaviorHugeStep
		TEST_METHOD(Class__AT__ATBattleAIBehaviorHugeStepB)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorHugeStepB, 0x0098);
		}

		// class UATBattleAIBehaviorHugeTurnAngle : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorHugeTurnAngle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorHugeTurnAngle, UnknownData_XHXT, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorHugeTurnAngle, 0x0098);
		}

		// class UATBattleAIBehaviorHugeTurnTarget : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorHugeTurnTarget)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorHugeTurnTarget, UnknownData_6IKQ, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorHugeTurnTarget, 0x0090);
		}

		// class UATBattleAIBehaviorHugeWalkTarget : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorHugeWalkTarget)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorHugeWalkTarget, UnknownData_UVHT, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorHugeWalkTarget, 0x0098);
		}

		// class UATBattleAIBehaviorHugeWeakness : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorHugeWeakness)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorHugeWeakness, UnknownData_IMS8, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorHugeWeakness, 0x0098);
		}

		// class UATBattleAIBehaviorMove : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorMove)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorMove, 0x0038);
		}

		// class UATBattleAIBehaviorMoveF : public UATBattleAIBehaviorMove
		TEST_METHOD(Class__AT__ATBattleAIBehaviorMoveF)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorMoveF, 0x0038);
		}

		// class UATBattleAIBehaviorMoveB : public UATBattleAIBehaviorMove
		TEST_METHOD(Class__AT__ATBattleAIBehaviorMoveB)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorMoveB, 0x0038);
		}

		// class UATBattleAIBehaviorMoveL : public UATBattleAIBehaviorMove
		TEST_METHOD(Class__AT__ATBattleAIBehaviorMoveL)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorMoveL, 0x0038);
		}

		// class UATBattleAIBehaviorMoveR : public UATBattleAIBehaviorMove
		TEST_METHOD(Class__AT__ATBattleAIBehaviorMoveR)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorMoveR, 0x0038);
		}

		// class UATBattleAIBehaviorMoveAdjustHeight : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorMoveAdjustHeight)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorMoveAdjustHeight, 0x0038);
		}

		// class UATBattleAIBehaviorMoveApproach : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorMoveApproach)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorMoveApproach, 0x0038);
		}

		// class UATBattleAIBehaviorMoveApproachBoost : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorMoveApproachBoost)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorMoveApproachBoost, 0x0038);
		}

		// class UATBattleAIBehaviorMoveApproachBoostL : public UATBattleAIBehaviorMoveApproachBoost
		TEST_METHOD(Class__AT__ATBattleAIBehaviorMoveApproachBoostL)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorMoveApproachBoostL, 0x0038);
		}

		// class UATBattleAIBehaviorMoveApproachBoostR : public UATBattleAIBehaviorMoveApproachBoost
		TEST_METHOD(Class__AT__ATBattleAIBehaviorMoveApproachBoostR)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorMoveApproachBoostR, 0x0038);
		}

		// class UATBattleAIBehaviorMoveBoost : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorMoveBoost)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorMoveBoost, UnknownData_EM0L, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorMoveBoost, 0x0040);
		}

		// class UATBattleAIBehaviorMoveBoostU : public UATBattleAIBehaviorMoveBoost
		TEST_METHOD(Class__AT__ATBattleAIBehaviorMoveBoostU)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorMoveBoostU, 0x0040);
		}

		// class UATBattleAIBehaviorMoveBoostD : public UATBattleAIBehaviorMoveBoost
		TEST_METHOD(Class__AT__ATBattleAIBehaviorMoveBoostD)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorMoveBoostD, 0x0040);
		}

		// class UATBattleAIBehaviorMoveLeave : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorMoveLeave)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorMoveLeave, 0x0038);
		}

		// class UATBattleAIBehaviorMoveLeaveBoost : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorMoveLeaveBoost)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorMoveLeaveBoost, 0x0038);
		}

		// class UATBattleAIBehaviorMoveStep : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorMoveStep)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorMoveStep, 0x0038);
		}

		// class UATBattleAIBehaviorMoveStepF : public UATBattleAIBehaviorMoveStep
		TEST_METHOD(Class__AT__ATBattleAIBehaviorMoveStepF)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorMoveStepF, 0x0038);
		}

		// class UATBattleAIBehaviorMoveStepB : public UATBattleAIBehaviorMoveStep
		TEST_METHOD(Class__AT__ATBattleAIBehaviorMoveStepB)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorMoveStepB, 0x0038);
		}

		// class UATBattleAIBehaviorMoveStepL : public UATBattleAIBehaviorMoveStep
		TEST_METHOD(Class__AT__ATBattleAIBehaviorMoveStepL)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorMoveStepL, 0x0038);
		}

		// class UATBattleAIBehaviorMoveStepR : public UATBattleAIBehaviorMoveStep
		TEST_METHOD(Class__AT__ATBattleAIBehaviorMoveStepR)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorMoveStepR, 0x0038);
		}

		// class UATBattleAIBehaviorRage : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorRage)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorRage, UnknownData_YF35, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorRage, 0x0098);
		}

		// class UATBattleAIBehaviorRampage : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorRampage)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorRampage, UnknownData_KMRS, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorRampage, 0x0090);
		}

		// class UATBattleAIBehaviorRecoveryLongBlowoff : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorRecoveryLongBlowoff)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorRecoveryLongBlowoff, UnknownData_PAAB, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorRecoveryLongBlowoff, 0x00A0);
		}

		// class UATBattleAIBehaviorReversal : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorReversal)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorReversal, UnknownData_3BSB, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorReversal, 0x0098);
		}

		// class UATBattleAIBehaviorShot : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorShot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorShot, UnknownData_T35H, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorShot, 0x0098);
		}

		// class UATBattleAIBehaviorShotMove : public UATBattleAIBehaviorShot
		TEST_METHOD(Class__AT__ATBattleAIBehaviorShotMove)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorShotMove, 0x0098);
		}

		// class UATBattleAIBehaviorShotMoveL : public UATBattleAIBehaviorShotMove
		TEST_METHOD(Class__AT__ATBattleAIBehaviorShotMoveL)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorShotMoveL, 0x0098);
		}

		// class UATBattleAIBehaviorShotMoveR : public UATBattleAIBehaviorShotMove
		TEST_METHOD(Class__AT__ATBattleAIBehaviorShotMoveR)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorShotMoveR, 0x0098);
		}

		// class UATBattleAIBehaviorShotMoveB : public UATBattleAIBehaviorShotMove
		TEST_METHOD(Class__AT__ATBattleAIBehaviorShotMoveB)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorShotMoveB, 0x0098);
		}

		// class UATBattleAIBehaviorSkill : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSkill)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorSkill, UnknownData_YLJP, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSkill, 0x0098);
		}

		// class UATBattleAIBehaviorSkill_RR : public UATBattleAIBehaviorSkill
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSkill_RR)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSkill_RR, 0x0098);
		}

		// class UATBattleAIBehaviorSkill_RU : public UATBattleAIBehaviorSkill
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSkill_RU)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSkill_RU, 0x0098);
		}

		// class UATBattleAIBehaviorSkill_RL : public UATBattleAIBehaviorSkill
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSkill_RL)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSkill_RL, 0x0098);
		}

		// class UATBattleAIBehaviorSkill_RD : public UATBattleAIBehaviorSkill
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSkill_RD)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSkill_RD, 0x0098);
		}

		// class UATBattleAIBehaviorSkill_LR : public UATBattleAIBehaviorSkill
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSkill_LR)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSkill_LR, 0x0098);
		}

		// class UATBattleAIBehaviorSkill_LU : public UATBattleAIBehaviorSkill
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSkill_LU)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSkill_LU, 0x0098);
		}

		// class UATBattleAIBehaviorSkill_LL : public UATBattleAIBehaviorSkill
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSkill_LL)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSkill_LL, 0x0098);
		}

		// class UATBattleAIBehaviorSkill_LD : public UATBattleAIBehaviorSkill
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSkill_LD)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSkill_LD, 0x0098);
		}

		// class UATBattleAIBehaviorSkillReady : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSkillReady)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorSkillReady, UnknownData_VFZG, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSkillReady, 0x0098);
		}

		// class UATBattleAIBehaviorSkillSlot : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSkillSlot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorSkillSlot, UnknownData_3RPL, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSkillSlot, 0x0098);
		}

		// class UATBattleAIBehaviorSparking : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSparking)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorSparking, UnknownData_QSWM, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSparking, 0x0090);
		}

		// class UATBattleAIBehaviorSpecialMoveTeleport : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSpecialMoveTeleport)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorSpecialMoveTeleport, UnknownData_6NTF, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSpecialMoveTeleport, 0x0098);
		}

		// class UATBattleAIBehaviorSpecialMoveTeleportF : public UATBattleAIBehaviorSpecialMoveTeleport
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSpecialMoveTeleportF)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSpecialMoveTeleportF, 0x0098);
		}

		// class UATBattleAIBehaviorSpecialMoveTeleportB : public UATBattleAIBehaviorSpecialMoveTeleport
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSpecialMoveTeleportB)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSpecialMoveTeleportB, 0x0098);
		}

		// class UATBattleAIBehaviorSpecialMoveTeleportL : public UATBattleAIBehaviorSpecialMoveTeleport
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSpecialMoveTeleportL)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSpecialMoveTeleportL, 0x0098);
		}

		// class UATBattleAIBehaviorSpecialMoveTeleportR : public UATBattleAIBehaviorSpecialMoveTeleport
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSpecialMoveTeleportR)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSpecialMoveTeleportR, 0x0098);
		}

		// class UATBattleAIBehaviorSpecialMoveTeleportU : public UATBattleAIBehaviorSpecialMoveTeleport
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSpecialMoveTeleportU)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSpecialMoveTeleportU, 0x0098);
		}

		// class UATBattleAIBehaviorSpecialMoveTeleportD : public UATBattleAIBehaviorSpecialMoveTeleport
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSpecialMoveTeleportD)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSpecialMoveTeleportD, 0x0098);
		}

		// class UATBattleAIBehaviorSpecialMoveTeleportTargetF : public UATBattleAIBehaviorSpecialMoveTeleport
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSpecialMoveTeleportTargetF)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSpecialMoveTeleportTargetF, 0x0098);
		}

		// class UATBattleAIBehaviorSpecialMoveTeleportTargetB : public UATBattleAIBehaviorSpecialMoveTeleport
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSpecialMoveTeleportTargetB)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSpecialMoveTeleportTargetB, 0x0098);
		}

		// class UATBattleAIBehaviorSpecialMoveTeleportTargetL : public UATBattleAIBehaviorSpecialMoveTeleport
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSpecialMoveTeleportTargetL)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSpecialMoveTeleportTargetL, 0x0098);
		}

		// class UATBattleAIBehaviorSpecialMoveTeleportTargetR : public UATBattleAIBehaviorSpecialMoveTeleport
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSpecialMoveTeleportTargetR)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSpecialMoveTeleportTargetR, 0x0098);
		}

		// class UATBattleAIBehaviorSpecialMoveTeleportView : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSpecialMoveTeleportView)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorSpecialMoveTeleportView, UnknownData_VBX0, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSpecialMoveTeleportView, 0x0098);
		}

		// class UATBattleAIBehaviorSpecialMoveZigzag : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSpecialMoveZigzag)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorSpecialMoveZigzag, UnknownData_TLR6, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSpecialMoveZigzag, 0x0090);
		}

		// class UATBattleAIBehaviorSpecialMoveZigzagBack : public UATBattleAIBehaviorSpecialMoveZigzag
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSpecialMoveZigzagBack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSpecialMoveZigzagBack, 0x0090);
		}

		// class UATBattleAIBehaviorSpecialMoveZigzagTeleport : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSpecialMoveZigzagTeleport)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorSpecialMoveZigzagTeleport, UnknownData_KY4F, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSpecialMoveZigzagTeleport, 0x0090);
		}

		// class UATBattleAIBehaviorSpecialMoveZigzagTeleportBack : public UATBattleAIBehaviorSpecialMoveZigzagTeleport
		TEST_METHOD(Class__AT__ATBattleAIBehaviorSpecialMoveZigzagTeleportBack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorSpecialMoveZigzagTeleportBack, 0x0090);
		}

		// class UATBattleAIBehaviorVanish : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorVanish)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorVanish, UnknownData_OQRR, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorVanish, 0x0098);
		}

		// class UATBattleAIBehaviorWait : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorWait)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorWait, UnknownData_XHGY, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorWait, 0x0040);
		}

		// class UATBattleAIBehaviorWeakness : public UATBattleAIBehaviorBase
		TEST_METHOD(Class__AT__ATBattleAIBehaviorWeakness)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIBehaviorWeakness, UnknownData_KDVA, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIBehaviorWeakness, 0x0098);
		}

		// class UATBattleAIConditionJudgement : public UObject
		TEST_METHOD(Class__AT__ATBattleAIConditionJudgement)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAIConditionJudgement, UnknownData_ID6U, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAIConditionJudgement, 0x0040);
		}

		// class UATBattleDeathActionManager : public UObject
		TEST_METHOD(Class__AT__ATBattleDeathActionManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleDeathActionManager, UnknownData_IYDI, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleDeathActionManager, 0x00E0);
		}

		// class UATBattleGroupAI : public UObject
		TEST_METHOD(Class__AT__ATBattleGroupAI)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleGroupAI, UnknownData_K2V2, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleGroupAI, GroupAIInfo, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleGroupAI, UnknownData_B0CH, 0x00F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleGroupAI, 0x0108);
		}

		// class UBattleGroupAIInfo : public UObject
		TEST_METHOD(Class__AT__BattleGroupAIInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattleGroupAIInfo, EntryConditionTable, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattleGroupAIInfo, BreakConditionTable, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattleGroupAIInfo, MemberConditionTable, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattleGroupAIInfo, PhaseTable, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattleGroupAIInfo, BehaviorTable, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattleGroupAIInfo, CharacterMap, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattleGroupAIInfo, 0x00A0);
		}

		// class UATBattleHateManager : public UObject
		TEST_METHOD(Class__AT__ATBattleHateManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleHateManager, UnknownData_TN1H, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleHateManager, 0x00D0);
		}

		// class UATBillboardComponent : public UActorComponent
		TEST_METHOD(Class__AT__ATBillboardComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBillboardComponent, 0x0100);
		}

		// class AATBillboardStaticMeshActor : public AStaticMeshActor
		TEST_METHOD(Class__AT__ATBillboardStaticMeshActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBillboardStaticMeshActor, UnknownData_YCYJ, 0x0348);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBillboardStaticMeshActor, 0x0350);
		}

		// class AATBulletAnimationActor : public ASkeletalMeshActor
		TEST_METHOD(Class__AT__ATBulletAnimationActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBulletAnimationActor, AttachSocketName, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBulletAnimationActor, 0x03C8);
		}

		// class UATC_CharacterActionManager : public UActorComponent
		TEST_METHOD(Class__AT__ATC_CharacterActionManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATC_CharacterActionManager, DefaultActionClassTable, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATC_CharacterActionManager, SkillActionTable, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATC_CharacterActionManager, SkillActionHardRef, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATC_CharacterActionManager, UnknownData_QAXT, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATC_CharacterActionManager, ActionTable, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATC_CharacterActionManager, RegistMontageTable, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATC_CharacterActionManager, UnknownData_AOQ4, 0x01F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATC_CharacterActionManager, 0x01F8);
		}

		// class UCharacterActionClassTable : public UObject
		TEST_METHOD(Class__AT__CharacterActionClassTable)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterActionClassTable, ActionMap, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterActionClassTable, MontageMap, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterActionClassTable, CommonActionMap, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterActionClassTable, CommonMontageMap, 0x0118);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacterActionClassTable, 0x0168);
		}

		// class ACapturedParticle : public AActor
		TEST_METHOD(Class__AT__CapturedParticle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ACapturedParticle, UnknownData_CPV7, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACapturedParticle, 0x0348);
		}

		// class ACapturedSkelMesh : public AActor
		TEST_METHOD(Class__AT__CapturedSkelMesh)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ACapturedSkelMesh, UnknownData_SFL9, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACapturedSkelMesh, 0x0348);
		}

		// class ACapturedStaticMesh : public AActor
		TEST_METHOD(Class__AT__CapturedStaticMesh)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ACapturedStaticMesh, UnknownData_OZ3G, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACapturedStaticMesh, 0x0348);
		}

		// class AAT_CapturedCharacter : public ACharacter
		TEST_METHOD(Class__AT__AT_CapturedCharacter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CapturedCharacter, UnknownData_VYQH, 0x0748);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CapturedCharacter, UnknownData_U0P2, 0x0750);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CapturedCharacter, Type, 0x0758);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CapturedCharacter, variation, 0x0759);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CapturedCharacter, form, 0x075A);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CapturedCharacter, UnknownData_KTRU, 0x075B);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CapturedCharacter, ExternalAttachObjects, 0x0760);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CapturedCharacter, VariationOptions, 0x0770);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CapturedCharacter, FormMeshs, 0x0780);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CapturedCharacter, FormOptions, 0x0790);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CapturedCharacter, VariationAttachObjects, 0x07A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CapturedCharacter, FormAttachObjects, 0x07B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CapturedCharacter, VariationDynamicMaterials, 0x07C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CapturedCharacter, FormDynamicMaterials, 0x07D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CapturedCharacter, SkeletalMeshComponentPool, 0x07E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_CapturedCharacter, UnknownData_94VC, 0x07F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_CapturedCharacter, 0x0800);
		}

		// class UATCapturedActorManager : public UBaseObject
		TEST_METHOD(Class__AT__ATCapturedActorManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCapturedActorManager, SpawnedActors, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCapturedActorManager, SpawnCharacter, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCapturedActorManager, 0x0088);
		}

		// class UATCharacterAnimInstance : public UAT_AnimInstance
		TEST_METHOD(Class__AT__ATCharacterAnimInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, UnknownData_KYLU, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, OwnerChara, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, OwnerMoveState, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, UnknownData_1TSW, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, GeneralBlendSpace, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, UnknownData_FJS1, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, SkeletonType, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, StandWaitVariationType, 0x0421);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, UnknownData_QTA7, 0x0422);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, StandWaitVariationStartWait, 0x0424);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, UnknownData_7R0U, 0x042C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, StandWaitVariationLoopOrder, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, UnknownData_5U5K, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, BattleFloatVariationStartTime, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, UnknownData_EXZX, 0x048C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, bEnableLipSync, 0x04BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, bEnableUpperFaceAnimation, 0x04BD);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, bEnableRotatePelvisBone, 0x04BE);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, bEnableRotateSpineBone, 0x04BF);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, bEnableRotateHeadBone, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, UnknownData_HK8S, 0x04C1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, ClampAnglePelvisBone, 0x04C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, ClampAngleSpineBone, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, ClampAngleHeadBone, 0x04CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, ClampAngleHeadBoneUpDown, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, ClampAnglePelvisField, 0x04D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, ClampAngleSpineField, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, ClampAngleHeadField, 0x04DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, ClampAngleHeadUpDownField, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, BlendTimeLookAt, 0x04E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, BlendTimeLookAtCancel, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, BlendTimeLookAtField, 0x04EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, InterpolationBlendType, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, UnknownData_8ETR, 0x04F1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, TriggerThreasholdLookAt, 0x04F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, UnknownData_S3TP, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, AttackSlotBlendWeight, 0x04FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, StopAngleBodyLateral, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, StopAngleBodyLongitudinal, 0x0504);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, LookAtRootNo, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, PreviousLookAtRootNo, 0x050C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, LookAtTargetLocation, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, UnknownData_D4S4, 0x051C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, OwnerLipSync, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAnimInstance, UnknownData_1O2C, 0x0528);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterAnimInstance, 0x0560);
		}

		// class UATCharacterAttributeComponentBase : public UActorComponent
		TEST_METHOD(Class__AT__ATCharacterAttributeComponentBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAttributeComponentBase, StatusInstance, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterAttributeComponentBase, UnknownData_BBTZ, 0x0108);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterAttributeComponentBase, 0x0128);
		}

		// class UATPlayerAttributeComponent : public UATCharacterAttributeComponentBase
		TEST_METHOD(Class__AT__ATPlayerAttributeComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATPlayerAttributeComponent, 0x0128);
		}

		// class UATMainPlayerAttributeComponent : public UATPlayerAttributeComponent
		TEST_METHOD(Class__AT__ATMainPlayerAttributeComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMainPlayerAttributeComponent, OwnerChara, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMainPlayerAttributeComponent, OxygenGauge, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMainPlayerAttributeComponent, UnknownData_X2YR, 0x0138);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMainPlayerAttributeComponent, 0x0180);
		}

		// class UATSupportPlayerAttributeComponent : public UATPlayerAttributeComponent
		TEST_METHOD(Class__AT__ATSupportPlayerAttributeComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATSupportPlayerAttributeComponent, OwnerChara, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATSupportPlayerAttributeComponent, SupportSkillGauge, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATSupportPlayerAttributeComponent, RecastGauge, 0x0138);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATSupportPlayerAttributeComponent, 0x0140);
		}

		// class UATEnemyAttributeComponent : public UATCharacterAttributeComponentBase
		TEST_METHOD(Class__AT__ATEnemyAttributeComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATEnemyAttributeComponent, 0x0128);
		}

		// class UATAtrociousAttributeComponent : public UATCharacterAttributeComponentBase
		TEST_METHOD(Class__AT__ATAtrociousAttributeComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAtrociousAttributeComponent, AtrociousAuraParticle, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAtrociousAttributeComponent, UnknownData_380S, 0x0130);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAtrociousAttributeComponent, 0x0138);
		}

		// class UATCharacterCancelFlagComponent : public UActorComponent
		TEST_METHOD(Class__AT__ATCharacterCancelFlagComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterCancelFlagComponent, UnknownData_ZJWN, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterCancelFlagComponent, 0x0108);
		}

		// class UATCookResourceLoader : public UObject
		TEST_METHOD(Class__AT__ATCookResourceLoader)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCookResourceLoader, UnknownData_R2FO, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCookResourceLoader, ResourceLoaderMap, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCookResourceLoader, 0x0098);
		}

		// class UATCharacterDamageCollision : public USceneComponent
		TEST_METHOD(Class__AT__ATCharacterDamageCollision)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterDamageCollision, DamageCollision, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterDamageCollision, UnknownData_TQD6, 0x0258);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterDamageCollision, 0x0260);
		}

		// class UATUniqueCharacterTable : public UObject
		TEST_METHOD(Class__AT__ATUniqueCharacterTable)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATUniqueCharacterTable, VariationMeshKey, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATUniqueCharacterTable, FacialKey, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATUniqueCharacterTable, FormMeshKey, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATUniqueCharacterTable, VariationData, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATUniqueCharacterTable, WearEffectColor, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATUniqueCharacterTable, 0x0070);
		}

		// class UATUniqueCharacterDataList : public UObject
		TEST_METHOD(Class__AT__ATUniqueCharacterDataList)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATUniqueCharacterDataList, UniqueDataMap, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATUniqueCharacterDataList, 0x0078);
		}

		// class UATCharacterEffectControlComponent : public UActorComponent
		TEST_METHOD(Class__AT__ATCharacterEffectControlComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterEffectControlComponent, bIsPlaying, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterEffectControlComponent, bAutoStart, 0x0101);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterEffectControlComponent, UnknownData_ALKX, 0x0102);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterEffectControlComponent, CharacterEffectTableIDSetAry, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterEffectControlComponent, TargetParticleAry, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterEffectControlComponent, TargetMesh, 0x0128);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterEffectControlComponent, 0x0130);
		}

		// class UATCharacterFactory : public UCFObject
		TEST_METHOD(Class__AT__ATCharacterFactory)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterFactory, UnknownData_OL9N, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterFactory, CharacterPartsManager, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterFactory, CharacterLoader, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterFactory, VariationPartsLoader, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterFactory, FormPartsLoader, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterFactory, FacialPartsLoader, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterFactory, BattleAILoader, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterFactory, StatusAILoader, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterFactory, CookResourceLoader, 0x0088);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterFactory, 0x0090);
		}

		// class UATCharacterFlashEffectComponent : public UActorComponent
		TEST_METHOD(Class__AT__ATCharacterFlashEffectComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterFlashEffectComponent, ColorTable, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterFlashEffectComponent, UnknownData_48HI, 0x0120);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterFlashEffectComponent, 0x0148);
		}

		// class UATCharacterFlashEffectManager : public UActorComponent
		TEST_METHOD(Class__AT__ATCharacterFlashEffectManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterFlashEffectManager, UnknownData_D8C7, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterFlashEffectManager, 0x01D0);
		}

		// class UATCharacterFootIKManager : public UObject
		TEST_METHOD(Class__AT__ATCharacterFootIKManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterFootIKManager, UnknownData_K3U1, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterFootIKManager, DisableFootIKMontages, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterFootIKManager, UnknownData_9UY6, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterFootIKManager, 0x00B8);
		}

		// class UATCharacterGaugeBase : public UObject
		TEST_METHOD(Class__AT__ATCharacterGaugeBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterGaugeBase, UnknownData_V9VB, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterGaugeBase, 0x00A8);
		}

		// class UATCharacterGaugeBreak : public UATCharacterGaugeBase
		TEST_METHOD(Class__AT__ATCharacterGaugeBreak)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterGaugeBreak, UnknownData_7VMI, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterGaugeBreak, 0x0110);
		}

		// class UATCharacterGaugeGuardBreak : public UATCharacterGaugeBase
		TEST_METHOD(Class__AT__ATCharacterGaugeGuardBreak)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterGaugeGuardBreak, UnknownData_BTCJ, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterGaugeGuardBreak, 0x0208);
		}

		// class UATCharacterGaugeLife : public UATCharacterGaugeBase
		TEST_METHOD(Class__AT__ATCharacterGaugeLife)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterGaugeLife, UnknownData_RDMB, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterGaugeLife, 0x00B0);
		}

		// class UATCharacterGaugeMagic : public UATCharacterGaugeBase
		TEST_METHOD(Class__AT__ATCharacterGaugeMagic)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterGaugeMagic, UnknownData_SSIS, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterGaugeMagic, 0x00B0);
		}

		// class UATCharacterGaugeOxygen : public UATCharacterGaugeBase
		TEST_METHOD(Class__AT__ATCharacterGaugeOxygen)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterGaugeOxygen, UnknownData_KGB4, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterGaugeOxygen, 0x00B0);
		}

		// class UATCharacterGaugeSparking : public UATCharacterGaugeBase
		TEST_METHOD(Class__AT__ATCharacterGaugeSparking)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterGaugeSparking, UnknownData_N1OQ, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterGaugeSparking, 0x00F0);
		}

		// class UATCharacterGaugeSupport : public UATCharacterGaugeBase
		TEST_METHOD(Class__AT__ATCharacterGaugeSupport)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterGaugeSupport, UnknownData_AJLI, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterGaugeSupport, 0x00B0);
		}

		// class UATCharacterGaugeSupportRecast : public UATCharacterGaugeBase
		TEST_METHOD(Class__AT__ATCharacterGaugeSupportRecast)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterGaugeSupportRecast, UnknownData_KR4R, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterGaugeSupportRecast, 0x00D0);
		}

		// class UATCharacterGaugeSupportSkill : public UATCharacterGaugeBase
		TEST_METHOD(Class__AT__ATCharacterGaugeSupportSkill)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterGaugeSupportSkill, 0x00A8);
		}

		// class UATCharacterLoader : public UObject
		TEST_METHOD(Class__AT__ATCharacterLoader)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterLoader, CharaLoaderMap, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterLoader, 0x0078);
		}

		// class UCharacterLocationUpdator : public UActorComponent
		TEST_METHOD(Class__AT__CharacterLocationUpdator)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterLocationUpdator, TargetActor, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterLocationUpdator, DistanceRate, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterLocationUpdator, IgnoreDistance, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterLocationUpdator, CachedPlayerPosition, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCharacterLocationUpdator, UnknownData_EFTS, 0x011C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCharacterLocationUpdator, 0x0158);
		}

		// class UATCharacterMovementComponent : public UCharacterMovementComponent
		TEST_METHOD(Class__AT__ATCharacterMovementComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMovementComponent, MAX_STEP_SIDE_Z, 0x0730);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMovementComponent, VERTICAL_SLOPE_NORMAL_Z, 0x0734);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMovementComponent, GRAVITY_SWEEP_EDGE_REJECT_DISTANCE, 0x0738);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMovementComponent, MaxFootIKHeight, 0x073C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMovementComponent, UnknownData_9002, 0x0740);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMovementComponent, MovementUpdatedDelegate, 0x0770);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMovementComponent, UnknownData_I39A, 0x0780);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMovementComponent, OwnerChara, 0x07A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMovementComponent, bEnablePushByHitEvent, 0x07B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMovementComponent, UnknownData_J4VJ, 0x07B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMovementComponent, PushPriority, 0x07B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMovementComponent, PushSolver, 0x07B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterMovementComponent, 0x07C0);
		}

		// class UATCharacterMoveParam : public UObject
		TEST_METHOD(Class__AT__ATCharacterMoveParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, WalkInputValue, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, RunInputValue, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, DashInputValue, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, StandFirstAccel, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, StandFirstDecel, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, StandFirstSpeed, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, StandFirstYawRate, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, StandSecondAccel, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, StandSecondDecel, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, StandSecondSpeed, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, StandSecondYawRate, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, StandDashAccel, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, StandDashDecel, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, StandDashSpeed, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, StandDashYawRate, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, StandBoostSpeed, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, StandBoostInitAngleMin, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, StandBoostInitAngleMax, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, StandBoostHoldTime, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, StandBoostChargeTime, 0x0074);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatFirstInputValue, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatSecondInputValue, 0x007C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatFirstAccel, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatFirstDecel, 0x0084);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatFirstSpeed, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatFirstGroundSpeed, 0x008C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatFirstYawRate, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatFirstYawRateST, 0x0094);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatFirstYawRateSTDuration, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatFirstPitchRate, 0x009C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatFirstPitchMin, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatFirstPitchMax, 0x00A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatFirstPitchIgnoreUpAngle, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatFirstPitchIgnoreDownAngle, 0x00AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatFirstLandingDistance, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatSecondAccel, 0x00B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatSecondDecel, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatSecondSpeedBase, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatSecondGroundSpeed, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatSecondSpeedUpMin, 0x00C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatSecondSpeedDownMax, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatSecondSpeedBasePitch, 0x00CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatSecondYawRate, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatSecondYawRateST, 0x00D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatSecondYawRateSTDuration, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatSecondPitchRate, 0x00DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatSecondPitchMin, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatSecondPitchMax, 0x00E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatSecondPitchIgnoreUpAngle, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatSecondPitchIgnoreDownAngle, 0x00EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatSecondLandingPitch, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatSecondLandingDistance, 0x00F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatSecondLandingTime, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatSecondDamageRadius, 0x00FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostAccel, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostSpeed, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostSpeedBlocked, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostYawRate, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostYawPower, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostPitchRate, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostPitchMin, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostPitchMax, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostLandingDistance, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostSTLandingDistance, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostInputPitchMax, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostInputPitchMin, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostInputPitchAccel, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostDamageRadius, 0x0134);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostIgnoreNoInputTime, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostChargeTime, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostChargeTimeFromBraking, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostChargeTimeFromTargetFloat, 0x0144);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostChargeTimeFromFloatMove, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostChangeSecondMotionTime, 0x014C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostVerticalChargeTime, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostLandingPitch, 0x0154);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostVerticalUpSpeed, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostVerticalDownSpeed, 0x015C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostVerticalPitchRate, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostShort_InputPower, 0x0164);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostShort_InputTime, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostShort_Speed, 0x016C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostSlideCameraWaitTime, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostSlideBackCameraWaitTime, 0x0174);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostSlideBoostTime, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostSlideSecondTurnTime, 0x017C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostSlideTurningTime, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostSlideNoInputTime, 0x0184);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostBrakingDuration, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatBoostBrakingChainTime, 0x018C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatMoveUpAngleRate, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatMoveDownAngleRate, 0x0194);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatMoveInputPitchMax, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatMoveInputPitchMin, 0x019C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatMoveInputPitchAccel, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatMoveLookForwardAngle, 0x01A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatVerticalMoveUpDownAccel, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatVerticalMoveUpDownSpeed, 0x01AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatVerticalMoveSideAccel, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatVerticalMoveSideSpeed, 0x01B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatRoll_SecondSpeed, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatRoll_ThirdSpeed, 0x01BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatRoll_ChainBeginTime, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FloatRoll_ChainEndTime, 0x01C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, TargetFloatMaxDistance, 0x01C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, TargetFloatAccel, 0x01CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, TargetFloatSpeed, 0x01D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, TargetFloatHorizontalValue, 0x01D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, TargetFloatVerticalValue, 0x01D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, TargetFloatCurveRatio, 0x01DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, TargetFloatHeight, 0x01E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, TargetFloatAutoMoveTime, 0x01E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, TargetFloatPositionShiftSpeed, 0x01E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, TargetFloatMoveCancelDistanceBeforeBlock, 0x01EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, TargetFloatYawAccel, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, TargetFloatYawMaxSpeed, 0x01F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, TargetFloatPitchAccel, 0x01F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, TargetFloatPitchMaxSpeed, 0x01FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, TargetFloatPitchMin, 0x0200);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, TargetFloatPitchMax, 0x0204);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, WindRoadIgnoreTimeByBoost, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, WindRoadAfterAutoMoveTime, 0x020C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, WindRoadAfterAutoMoveLockTime, 0x0210);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, JumpHeight, 0x0214);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, JumpInitSpeed, 0x0218);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, JumpAccel, 0x021C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, JumpWalkSpeed, 0x0220);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, JumpRunSpeed, 0x0224);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, JumpYawRate, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, SecondJumpHeight, 0x022C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, SecondJumpInitSpeed, 0x0230);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, SecondJumpAccel, 0x0234);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, SecondJumpWalkSpeed, 0x0238);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, SecondJumpRunSpeed, 0x023C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, SecondJumpYawRate, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, ThirdJumpHeight, 0x0244);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, ThirdJumpInitSpeed, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, ThirdJumpAccel, 0x024C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, ThirdJumpWalkSpeed, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, ThirdJumpRunSpeed, 0x0254);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, ThirdJumpYawRate, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, ThirdJumpRollingBeginHeight, 0x025C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, ThirdJumpRollingHeightFromGround, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, UnknownData_WFEZ, 0x0261);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, HighJumpHeight, 0x0264);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, HighJumpInitSpeed, 0x0268);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, HighJumpAccel, 0x026C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, HighJumpRunSpeed, 0x0270);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, HighJumpYawRate, 0x0274);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, JumpChainTime, 0x0278);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FallGravity, 0x027C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FallGravityInterpTime, 0x0280);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, FallDisableFloatHeight, 0x0284);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, BattleStanceAccel, 0x0288);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, BattleStanceSpeed, 0x028C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, BattleStandMoveAccel, 0x0290);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, BattleStandMoveDecel, 0x0294);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, BattleStandMoveSpeed, 0x0298);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, BattleStandStepAccel, 0x029C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, BattleStandStepDecel, 0x02A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, BattleStandStepSpeed, 0x02A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, BattleStandStepTime, 0x02A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, BattleStandStepAccelTime, 0x02AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, BattleStandTurnTime, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, BattleStepAccel, 0x02B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, BattleStepStartSpeed, 0x02B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, BattleStepLoopSpeed, 0x02BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, BattleStepEndSpeed, 0x02C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, BattleStepTime, 0x02C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, BattleStepDodgeTime, 0x02C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, BattleStepStartWaitTime, 0x02CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, BattleStepStartWaitRate, 0x02D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, BattleStepEndWaitTime, 0x02D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, BattleStepDamageParam, 0x02D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, BattleStepDamageRadius, 0x0308);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusFirstPitchIgnoreAngle, 0x030C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusSecondAccel, 0x0310);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusSecondDecel, 0x0314);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusSecondSpeed, 0x0318);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusSecondYawRate, 0x031C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusSecondYawPower, 0x0320);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusSecondPitchRate, 0x0324);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusSecondPitchMin, 0x0328);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusSecondPitchMax, 0x032C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusSecondRollRate, 0x0330);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusSecondRollMax, 0x0334);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusMoveLookForwardSpeed, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusMoveLookForwardAccel, 0x033C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusMoveLookForwardAngle, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusMoveLookForwardActorPitchRate, 0x0344);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusMoveChangeAttitudeDuration, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusMoveInputPitchMax, 0x034C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusMoveInputPitchMin, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusMoveInputPitchAccel, 0x0354);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusWaitTurnYawRate, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusLandingDistance, 0x035C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusOnWaterDistance, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusJumpHeight, 0x0364);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusJumpInitSpeed, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusRoll_MaxSpeed, 0x036C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusRoll_MaxSpeed2, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusRoll_MaxSpeed2Accel, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusRoll_BeginAccelTime, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusRoll_DashInputBeginTime, 0x037C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusRoll_DashInputEndTime, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusRoll_CameraWaitTime, 0x0384);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusDash_EffectiveTime, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, NimbusDash_MaxSpeedBonus, 0x038C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AIFollowUpVeryFarDistance, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AIFollowUpFarDistance, 0x0394);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AIFollowUpMiddleDistance, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AIFollowUpParallelFlyingRate, 0x039C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AIFollowUpParallelFlyingRateRand, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AIFollowUpGoalRate, 0x03A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AIFollowUpTimeAttraction, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AIFollowUpTimeStayAttraction, 0x03AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AIFollowUpSpeedRate, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AIFollowUpSpeedRaisingLimit, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AIFollowUpChangeGoalLimitMin, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AIFollowUpChangeGoalLimitMax, 0x03BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AIFollowUpGoalPoint1, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AIFollowUpGoalPoint2, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AIFollowUpGoalPointBoost1, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AIFollowUpGoalPointBoost2, 0x03EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AIFollowUpDelayBoost, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AIFollowUpBoundSpeedStay, 0x03FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AIFollowUpBoundTimeResponse, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AIFollowUpChangeStateDelayMin, 0x0404);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AIFollowUpChangeStateDelayMax, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AILookAtSuccessRate, 0x040C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AILookAtEnableTime, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AILookAtDisableTime, 0x0414);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AILandFollowUpNearStop, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AIFollowUpEncountBackDistance, 0x041C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, AIFollowUpEncountSideDistance, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, MoveSpeedRateUnderWater, 0x0424);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, UseSearchModeCameraWhenFieldTargeting, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveParam, UnknownData_AW5Q, 0x0429);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterMoveParam, 0x0430);
		}

		// class UATCharacterMoveState : public UActorComponent
		TEST_METHOD(Class__AT__ATCharacterMoveState)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveState, MoveParamClass, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveState, UnknownData_90D4, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveState, OwnerChara, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveState, OwnerCharaMoveComp, 0x01F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveState, MoveParam, 0x0200);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveState, RestrictMove, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveState, m_FloatRoll_AnimActor, 0x0210);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveState, m_FloatRoll_AnimActorMesh, 0x0218);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveState, UnknownData_B1EO, 0x0220);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveState, StepDamageCollision, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveState, UnknownData_HXDF, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveState, HitPhoton, 0x0688);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterMoveState, UnknownData_TF1F, 0x0690);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterMoveState, 0x06C8);
		}

		// class AATVariationParts : public AActor
		TEST_METHOD(Class__AT__ATVariationParts)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATVariationParts, Parts, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATVariationParts, Options, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATVariationParts, AttachObjects, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATVariationParts, EnableParameterName, 0x0368);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATVariationParts, 0x0378);
		}

		// class AATFormParts : public AActor
		TEST_METHOD(Class__AT__ATFormParts)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATFormParts, Parts, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATFormParts, Options, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATFormParts, AttachObjects, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATFormParts, EnableParameterName, 0x0368);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATFormParts, 0x0378);
		}

		// class UATVariationPartsLoader : public UObject
		TEST_METHOD(Class__AT__ATVariationPartsLoader)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATVariationPartsLoader, UnknownData_XWW8, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATVariationPartsLoader, PartsLoaderMap, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATVariationPartsLoader, 0x0098);
		}

		// class UATFormPartsLoader : public UObject
		TEST_METHOD(Class__AT__ATFormPartsLoader)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFormPartsLoader, UnknownData_P7OO, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFormPartsLoader, PartsLoaderMap, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATFormPartsLoader, 0x0098);
		}

		// class UATFacialPartsLoader : public UObject
		TEST_METHOD(Class__AT__ATFacialPartsLoader)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFacialPartsLoader, UnknownData_088A, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFacialPartsLoader, PartsLoaderMap, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATFacialPartsLoader, 0x0098);
		}

		// class UATCharacterPartsManager : public UObject
		TEST_METHOD(Class__AT__ATCharacterPartsManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterPartsManager, VariationMap, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterPartsManager, FormMap, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterPartsManager, FacialMap, 0x00C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterPartsManager, 0x0118);
		}

		// class UATCharacterReactor : public UObject
		TEST_METHOD(Class__AT__ATCharacterReactor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterReactor, UnknownData_58O0, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterReactor, 0x0038);
		}

		// class UATHugeCharacterReactor : public UATCharacterReactor
		TEST_METHOD(Class__AT__ATHugeCharacterReactor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATHugeCharacterReactor, 0x0038);
		}

		// class AATCharacterRestrictGate : public AActor
		TEST_METHOD(Class__AT__ATCharacterRestrictGate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterRestrictGate, RestrictPreset, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterRestrictGate, DefaultInsideFirstExitRestrictPreset, 0x0339);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterRestrictGate, UnknownData_JFQ3, 0x033A);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterRestrictGate, RestrictTriggerList, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterRestrictGate, UnknownData_SROE, 0x0350);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterRestrictGate, 0x0358);
		}

		// class AATCharacterRestrictTrigger : public AActor
		TEST_METHOD(Class__AT__ATCharacterRestrictTrigger)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterRestrictTrigger, TriggerBox, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterRestrictTrigger, EnterArrow, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterRestrictTrigger, ExitArrow, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterRestrictTrigger, EnterText, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterRestrictTrigger, ExitText, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterRestrictTrigger, PresetText, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterRestrictTrigger, BelongActor, 0x0368);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterRestrictTrigger, 0x0370);
		}

		// class UATCharacterSparkingComponent : public UActorComponent
		TEST_METHOD(Class__AT__ATCharacterSparkingComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterSparkingComponent, UnknownData_RERB, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterSparkingComponent, 0x0150);
		}

		// class UATFightingPowerParam : public UObject
		TEST_METHOD(Class__AT__ATFightingPowerParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFightingPowerParam, CharacterID, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFightingPowerParam, HitPoint_Rate, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFightingPowerParam, MagicPoint_Rate, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFightingPowerParam, HitPointRecover_Rate, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFightingPowerParam, MagicPointRecover_Rate, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFightingPowerParam, ShortOffensivePow_Rate, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFightingPowerParam, LongOffensivePow_Rate, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFightingPowerParam, ShortDefensivePow_Rate, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFightingPowerParam, LongDefensivePow_Rate, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFightingPowerParam, CriticalRate_Rate, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFightingPowerParam, MoveSpeed_Rate, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFightingPowerParam, BreakGaugeValueMax_Rate, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFightingPowerParam, BreakOffensivePow_Rate, 0x005C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATFightingPowerParam, 0x0060);
		}

		// class UATCharacterStatusParam : public UObject
		TEST_METHOD(Class__AT__ATCharacterStatusParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterStatusParam, LevelInit, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterStatusParam, LevelMax, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterStatusParam, BaseStatus, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterStatusParam, StatusTable, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterStatusParam, ExpTable, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterStatusParam, EnemyExpTable, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterStatusParam, EnemyZOrbTable, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterStatusParam, FightingPowerParamClass, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterStatusParam, FightingPowerPhaseParamTable, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterStatusParam, FightingPowerParam, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterStatusParam, UnknownData_TS8Y, 0x00E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterStatusParam, 0x00F0);
		}

		// class UATCharacterStatusList : public UObject
		TEST_METHOD(Class__AT__ATCharacterStatusList)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterStatusList, StatusParamClass, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterStatusList, StatusParamClassAnother, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterStatusList, StatusParam, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterStatusList, StatusParamAnother, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterStatusList, 0x0410);
		}

		// class UATCharacterStatusComponent : public UActorComponent
		TEST_METHOD(Class__AT__ATCharacterStatusComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterStatusComponent, UnknownData_AUC5, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterStatusComponent, GaugeList, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterStatusComponent, UnknownData_T0V6, 0x0128);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterStatusComponent, 0x0140);
		}

		// class UATStatusInstanceBase : public UObject
		TEST_METHOD(Class__AT__ATStatusInstanceBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATStatusInstanceBase, UnknownData_ITII, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATStatusInstanceBase, 0x0328);
		}

		// class UATPlayerStatusInstance : public UATStatusInstanceBase
		TEST_METHOD(Class__AT__ATPlayerStatusInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPlayerStatusInstance, UnknownData_QPFA, 0x0328);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATPlayerStatusInstance, 0x0330);
		}

		// class UATEnemyStatus : public UATStatusInstanceBase
		TEST_METHOD(Class__AT__ATEnemyStatus)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemyStatus, UnknownData_ZJ98, 0x0328);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATEnemyStatus, 0x0338);
		}

		// class UATCharacterTeleport : public UObject
		TEST_METHOD(Class__AT__ATCharacterTeleport)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterTeleport, TeleportEffect, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterTeleport, TeleportEffectAttachBone, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterTeleport, TeleportStartTime, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterTeleport, TeleportWaitTime, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterTeleport, TeleportEndTime, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterTeleport, TargetDistance, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterTeleport, TargetPosType, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterTeleport, UnknownData_JBE4, 0x0049);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterTeleport, 0x00B0);
		}

		// class UATCharacterUnderWaterComponent : public UActorComponent
		TEST_METHOD(Class__AT__ATCharacterUnderWaterComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCharacterUnderWaterComponent, UnknownData_KR81, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCharacterUnderWaterComponent, 0x0120);
		}

		// class UATCheatManager : public UCheatManager
		TEST_METHOD(Class__AT__ATCheatManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCheatManager, DebugDemoType, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCheatManager, UnknownData_F0JB, 0x0079);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCheatManager, DebugDemoName, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCheatManager, DebugDemoId, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCheatManager, DebugProgressId, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCheatManager, LoadedActor, 0x0098);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCheatManager, 0x00A0);
		}

		// class AATCinemaDemoCharacter : public ASkeletalMeshActor
		TEST_METHOD(Class__AT__ATCinemaDemoCharacter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCinemaDemoCharacter, UpperMeshComponent, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCinemaDemoCharacter, LowerMeshComponent, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCinemaDemoCharacter, ExtraMeshComponent01, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCinemaDemoCharacter, UniqueTextureMark01, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCinemaDemoCharacter, CharacterType, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCinemaDemoCharacter, UnknownData_93CF, 0x03E1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCinemaDemoCharacter, 0x03E8);
		}

		// class UATDemoCtrlBase : public UObject
		TEST_METHOD(Class__AT__ATDemoCtrlBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDemoCtrlBase, UnknownData_R198, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDemoCtrlBase, Owner, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDemoCtrlBase, ResourceList, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDemoCtrlBase, 0x0048);
		}

		// class UATSequencerDemoCtrl : public UATDemoCtrlBase
		TEST_METHOD(Class__AT__ATSequencerDemoCtrl)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATSequencerDemoCtrl, SequenceActorMap, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATSequencerDemoCtrl, UnknownData_YKO3, 0x0098);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATSequencerDemoCtrl, 0x00D8);
		}

		// class UATCinemaDemoCtrl : public UATSequencerDemoCtrl
		TEST_METHOD(Class__AT__ATCinemaDemoCtrl)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCinemaDemoCtrl, 0x00D8);
		}

		// class UATClientSetting_PS4 : public UDeveloperSettings
		TEST_METHOD(Class__AT__ATClientSetting_PS4)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATClientSetting_PS4, AuthorizationCodeClientId, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATClientSetting_PS4, 0x0048);
		}

		// class UATCmnInputComponent : public UATInputComponent
		TEST_METHOD(Class__AT__ATCmnInputComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCmnInputComponent, UnknownData_4N9M, 0x01F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCmnInputComponent, 0x0218);
		}

		// class AATCmnParticleResource : public AActor
		TEST_METHOD(Class__AT__ATCmnParticleResource)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCmnParticleResource, 0x0338);
		}

		// class UATCombineMeshComponent : public UActorComponent
		TEST_METHOD(Class__AT__ATCombineMeshComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCombineMeshComponent, UnknownData_OBRC, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCombineMeshComponent, ExternalAttachObjects, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCombineMeshComponent, VariationOptions, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCombineMeshComponent, FormMeshs, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCombineMeshComponent, FormOptions, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCombineMeshComponent, VariationAttachObjects, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCombineMeshComponent, FormAttachObjects, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCombineMeshComponent, OwnerDynamicMaterials, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCombineMeshComponent, VariationDynamicMaterials, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCombineMeshComponent, FormDynamicMaterials, 0x0198);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCombineMeshComponent, 0x01A8);
		}

		// class UATComboManager : public UObject
		TEST_METHOD(Class__AT__ATComboManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATComboManager, UnknownData_LN3F, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATComboManager, 0x0050);
		}

		// class UCommandUpdater : public UActorComponent
		TEST_METHOD(Class__AT__CommandUpdater)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCommandUpdater, UnknownData_GLLM, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCommandUpdater, 0x0278);
		}

		// class UAT_ControllerConnection : public UObject
		TEST_METHOD(Class__AT__AT_ControllerConnection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAT_ControllerConnection, UnknownData_KQ6T, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_ControllerConnection, 0x0040);
		}

		// class UATCookingDemoInputComponent : public UATInputComponent
		TEST_METHOD(Class__AT__ATCookingDemoInputComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCookingDemoInputComponent, UnknownData_4RNY, 0x01F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCookingDemoInputComponent, 0x0200);
		}

		// class UATCookingMenuInputComponent : public UATInputComponent
		TEST_METHOD(Class__AT__ATCookingMenuInputComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCookingMenuInputComponent, UnknownData_FEOW, 0x01F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCookingMenuInputComponent, 0x0200);
		}

		// class UCostumeLoader : public UObject
		TEST_METHOD(Class__AT__CostumeLoader)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCostumeLoader, UnknownData_300Q, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCostumeLoader, 0x00D0);
		}

		// class UATCpl034CTeleport : public UATCharacterTeleport
		TEST_METHOD(Class__AT__ATCpl034CTeleport)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCpl034CTeleport, PosType, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCpl034CTeleport, DirectionType, 0x00B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCpl034CTeleport, UnknownData_E7HB, 0x00B2);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCpl034CTeleport, 0x00B8);
		}

		// class UATDamageManager : public UActorComponent
		TEST_METHOD(Class__AT__ATDamageManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDamageManager, UnknownData_6JJ8, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDamageManager, 0x0110);
		}

		// class UATDataAssetBase : public UDataAsset
		TEST_METHOD(Class__AT__ATDataAssetBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetBase, 0x0030);
		}

		// class UATDataAssetAI : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetAI)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetAI, BehaviorTree, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetAI, BlackboardData, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetAI, MoveForwardData, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetAI, MoveDistanceData, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetAI, MoveAroundData, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetAI, EnemyParameterList, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetAI, EnemyAppearTable, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetAI, EnemyParamDistRelation, 0x0148);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetAI, 0x0170);
		}

		// class UATDataAssetAsyncLoad : public UObject
		TEST_METHOD(Class__AT__ATDataAssetAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetAsyncLoad, UnknownData_EU6V, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetAsyncLoad, 0x0030);
		}

		// class UATDataAssetAIAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetAIAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetAIAsyncLoad, UnknownData_ICH6, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetAIAsyncLoad, loading_AIBehavior, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetAIAsyncLoad, loading_FriendBehavior, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetAIAsyncLoad, loading_Behavior, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetAIAsyncLoad, load_Encount, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetAIAsyncLoad, load_AIMove, 0x01E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetAIAsyncLoad, ref_AIBehavior, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetAIAsyncLoad, ref_FriendAIBehavior, 0x0270);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetAIAsyncLoad, ref_Behavior, 0x0280);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetAIAsyncLoad, ref_Encount, 0x0290);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetAIAsyncLoad, ref_AIMove, 0x02A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetAIAsyncLoad, UnknownData_Y2MM, 0x02C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetAIAsyncLoad, 0x02C8);
		}

		// class UATDataAssetBaseballGame : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetBaseballGame)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetBaseballGame, AssetInfo, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetBaseballGame, AssetCommonInfo, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetBaseballGame, 0x0978);
		}

		// class UATDataAssetBaseballGameAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetBaseballGameAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetBaseballGameAsyncLoad, UnknownData_0W93, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetBaseballGameAsyncLoad, LoadingAsset, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetBaseballGameAsyncLoad, loadingAsset_Common, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetBaseballGameAsyncLoad, ref, 0x09B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetBaseballGameAsyncLoad, ref_Common, 0x09B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetBaseballGameAsyncLoad, UnknownData_KIW2, 0x0B90);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetBaseballGameAsyncLoad, 0x0B98);
		}

		// class UATDataAssetBattleAI : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetBattleAI)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetBattleAI, AssetInfo, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetBattleAI, 0x0040);
		}

		// class UATDataAssetBattleGroupAI : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetBattleGroupAI)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetBattleGroupAI, AssetInfo, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetBattleGroupAI, 0x0040);
		}

		// class UATDataAssetBattleAIAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetBattleAIAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetBattleAIAsyncLoad, UnknownData_97DE, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetBattleAIAsyncLoad, Loading, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetBattleAIAsyncLoad, reference, 0x0090);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetBattleAIAsyncLoad, 0x00A0);
		}

		// class UATDataAssetBattleGroupAIAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetBattleGroupAIAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetBattleGroupAIAsyncLoad, UnknownData_PSOL, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetBattleGroupAIAsyncLoad, Loading, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetBattleGroupAIAsyncLoad, reference, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetBattleGroupAIAsyncLoad, 0x0070);
		}

		// class UATBattleAILoader : public UObject
		TEST_METHOD(Class__AT__ATBattleAILoader)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAILoader, UnknownData_DHN1, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAILoader, LoaderMap, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAILoader, UnknownData_IF2N, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBattleAILoader, GroupLoaderMap, 0x00E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBattleAILoader, 0x0138);
		}

		// class UATDataAssetCharacter : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetCharacter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetCharacter, AssetInfo, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetCharacter, 0x0040);
		}

		// class UATDataAssetCharacterAction : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetCharacterAction)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetCharacterAction, AssetInfo, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetCharacterAction, 0x0040);
		}

		// class UATDataAssetCharacterActionAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetCharacterActionAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetCharacterActionAsyncLoad, UnknownData_JU7L, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetCharacterActionAsyncLoad, LoadingAsset, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetCharacterActionAsyncLoad, ReferenceAsset, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetCharacterActionAsyncLoad, 0x0078);
		}

		// class UATDataAssetCharacterAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetCharacterAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetCharacterAsyncLoad, UnknownData_ZXO1, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetCharacterAsyncLoad, Loading, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetCharacterAsyncLoad, ref, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetCharacterAsyncLoad, 0x0070);
		}

		// class UATDataAssetVariationMesh : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetVariationMesh)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetVariationMesh, AssetInfo, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetVariationMesh, 0x0040);
		}

		// class UATDataAssetFormMesh : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetFormMesh)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetFormMesh, AssetInfo, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetFormMesh, 0x0040);
		}

		// class UATDataAssetVariationMeshAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetVariationMeshAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetVariationMeshAsyncLoad, UnknownData_EVQS, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetVariationMeshAsyncLoad, Loading, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetVariationMeshAsyncLoad, ref, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetVariationMeshAsyncLoad, 0x0090);
		}

		// class UATDataAssetFormMeshAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetFormMeshAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetFormMeshAsyncLoad, UnknownData_3ROE, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetFormMeshAsyncLoad, Loading, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetFormMeshAsyncLoad, ref, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetFormMeshAsyncLoad, 0x0090);
		}

		// class UATDataAssetCookingDemo : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetCookingDemo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetCookingDemo, AssetInfo, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetCookingDemo, 0x0040);
		}

		// class UATDataAssetCookingDemoAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetCookingDemoAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetCookingDemoAsyncLoad, LoadedAssets, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetCookingDemoAsyncLoad, LoadedAssetReferenceArray, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetCookingDemoAsyncLoad, 0x0050);
		}

		// class UATDataAssetCookingDemoCharacterResource : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetCookingDemoCharacterResource)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetCookingDemoCharacterResource, AssetInfo, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetCookingDemoCharacterResource, 0x0040);
		}

		// class UATDataAssetCookingDemoCharacterResourceAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetCookingDemoCharacterResourceAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetCookingDemoCharacterResourceAsyncLoad, UnknownData_QMCW, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetCookingDemoCharacterResourceAsyncLoad, Loading, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetCookingDemoCharacterResourceAsyncLoad, ref, 0x0328);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetCookingDemoCharacterResourceAsyncLoad, 0x03C0);
		}

		// class UATDataAssetCrossTalk : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetCrossTalk)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetCrossTalk, AssetInfo, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetCrossTalk, 0x0040);
		}

		// class UATDataAssetCrossTalkAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetCrossTalkAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetCrossTalkAsyncLoad, UnknownData_E4L9, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetCrossTalkAsyncLoad, Loading, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetCrossTalkAsyncLoad, ref, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetCrossTalkAsyncLoad, 0x0090);
		}

		// class UATDataAssetDamageType : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetDamageType)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetDamageType, AssetInfo, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetDamageType, 0x0040);
		}

		// class UATDataAssetDamageTypeAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetDamageTypeAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetDamageTypeAsyncLoad, UnknownData_E9U1, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetDamageTypeAsyncLoad, Loading, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetDamageTypeAsyncLoad, reference, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetDamageTypeAsyncLoad, 0x0070);
		}

		// class UATDataAssetEventBattle : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetEventBattle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetEventBattle, AssetInfo, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetEventBattle, EventBattlePostProcessEffectAssetInfo, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetEventBattle, 0x00B8);
		}

		// class UATDataAssetEventBattleAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetEventBattleAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetEventBattleAsyncLoad, UnknownData_C92Q, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetEventBattleAsyncLoad, Loading, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetEventBattleAsyncLoad, loadingPostEffect, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetEventBattleAsyncLoad, ref, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetEventBattleAsyncLoad, ref_PostEffect, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetEventBattleAsyncLoad, UnknownData_LLDC, 0x0110);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetEventBattleAsyncLoad, 0x0118);
		}

		// class UATDataAssetFacial : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetFacial)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetFacial, AssetInfo, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetFacial, 0x0040);
		}

		// class UATDataAssetFacialAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetFacialAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetFacialAsyncLoad, UnknownData_W7OJ, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetFacialAsyncLoad, Loading, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetFacialAsyncLoad, ref, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetFacialAsyncLoad, 0x0090);
		}

		// class UATDataAssetField : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetField)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetField, ParticleAssets, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetField, WorldMapMovementData, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetField, AirCarClass, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetField, TwinFootClass, 0x0108);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetField, 0x0130);
		}

		// class UATDataAssetFishGame : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetFishGame)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetFishGame, AssetInfo, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetFishGame, FishAnimationInfo, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetFishGame, FishCurveParamInfo, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetFishGame, FishParticleEffInfo, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetFishGame, CharaAnimationInfo, 0x0208);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetFishGame, 0x0218);
		}

		// class UATDataAssetFishGameAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetFishGameAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetFishGameAsyncLoad, UnknownData_4IO8, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetFishGameAsyncLoad, LoadingAsset, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetFishGameAsyncLoad, loadingAnimationAsset, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetFishGameAsyncLoad, loadingCurveParamAsset, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetFishGameAsyncLoad, loadingParticleEffAsset, 0x0238);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetFishGameAsyncLoad, loadingCharaAnimationAsset, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetFishGameAsyncLoad, ref, 0x0698);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetFishGameAsyncLoad, ref_Animation, 0x06A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetFishGameAsyncLoad, ref_CurveParam, 0x06D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetFishGameAsyncLoad, ref_ParticleEff, 0x06F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetFishGameAsyncLoad, ref_CharaAnimation, 0x0730);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetFishGameAsyncLoad, UnknownData_UR9B, 0x07D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetFishGameAsyncLoad, 0x07D8);
		}

		// class UATDataAssetGlobal : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetGlobal)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, AtrociousAdjustParam, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, AtrociousPhaseTable, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, UniqueCharacterDataTable, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, InteractiveActionParam, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CharacterDataTable, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CharacterStatusList, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CharacterBuffTable, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CharacterBoostTable, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, SkillDataTable, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, SkillTreeDataTable, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, SkillPaletteDataTable, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, SkillSparkingDataTable, 0x01E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, PassiveSkillTable, 0x0210);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, PassiveSkillSlotReleaseTable, 0x0238);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, PassiveSkillSlotReleaseConditionsTable, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, SupportActionInfo, 0x0288);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, SupportTeamBonusTable, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, StarScaleFinish, 0x02D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, StarScaleFinishArea, 0x0300);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, SkyDomeMaterial, 0x0328);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, SkyDomeMaterialParameter, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, TeleportEffect, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, EncountDataTable, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, PlayerCameraDataTable, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ViewActorPlayerMove, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CharacterCameraParam, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CameraConstParam, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, AirCarCameraConstParam, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, TwinFootCameraConstParam, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, PS_Radiation, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DefaultDamageEffect, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, LevelUpEffect, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, WearEffectColorTable, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, WearEffectAttach, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DefaultBoostAura, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DefaultBoostAuraBase, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DefaultBoostAuraMask, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DefaultHighBoostAura, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DefaultBoostBgn, 0x0620);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DefaultBoostEnd, 0x0648);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DefaultBoostWind, 0x0670);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DefaultBoostWindBgn, 0x0698);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DefaultBoostWindEnd, 0x06C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DefaultTrail, 0x06E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DefaultTrailMask, 0x0710);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FormChangeAuraKK1, 0x0738);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FormChangeAuraSS1, 0x0760);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FormChangeAuraSS2, 0x0788);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FormChangeAuraSS3, 0x07B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FormChangeAuraDK, 0x07D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FormChangeAuraAL, 0x0800);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FormChangeAuraDLC1, 0x0828);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FormChangeAuraDLC2, 0x0850);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FormChangeAuraDLC3, 0x0878);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FormChangeAuraLight, 0x08A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FormChangeAuraEnd, 0x08C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, HeatUpAuraDefault, 0x08F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, HeatUpAuraKK1, 0x0918);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, HeatUpAuraSS1, 0x0940);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, HeatUpAuraSS2, 0x0968);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, HeatUpAuraSS3, 0x0990);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, HeatUpAuraDK, 0x09B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, HeatUpAuraAL, 0x09E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, HeatUpAuraDLC1, 0x0A08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, HeatUpAuraDLC2, 0x0A30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, HeatUpAuraDLC3, 0x0A58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, HeatUpAuraLight, 0x0A80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, HeatUpAuraEnd, 0x0AA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, RageAuraDefault, 0x0AD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, RageAuraED, 0x0AF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ProvocationAuraBitST, 0x0B20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ProvocationAuraBitLP, 0x0B48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ProvocationAuraRobST, 0x0B70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ProvocationAuraRobLP, 0x0B98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ProvocationAuraHumST, 0x0BC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ProvocationAuraHumLP, 0x0BE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, GuardEffect, 0x0C10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, GuardBreakEffect, 0x0C38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, OutrageEffect, 0x0C60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, OutrageSpinEffect, 0x0C88);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, AtrociousAuraEffect, 0x0CB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, AtrociousMechaAuraEffect, 0x0CD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, AtrociousMechaBigAuraEffect, 0x0D00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, AtrociousYakonAuraEffect, 0x0D28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CameraDistanceCurve, 0x0D50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ShadowDistributionExponentCurve, 0x0D78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ShadowFadeoutFractionCurve, 0x0DA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ShadowTransitionFractionCurve, 0x0DC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ShadowResolutionCurve, 0x0DF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DynamicShadowDistanceCurve, 0x0E18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, RaytracedDistanceShadowCurve, 0x0E40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ShadowRadiusThresholdCurve, 0x0E68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CharacterDataMaterialParam, 0x0E90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, PostEffectMaterial, 0x0EB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DarkenMaterialPtr, 0x0EE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DarkenParamPtr, 0x0F08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, SilhouetteMaterial, 0x0F30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, SilhouetteParameter, 0x0F58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FlashEffectMaterial, 0x0F80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FlashEffectMaterialParameter, 0x0FA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FishShadowsMaterial, 0x0FD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FishShadowsParameter, 0x0FF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DeathWarningRadialMaterial, 0x1020);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DeathWarningRadialBlurParam, 0x1048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DeathWarningAlphaLpCurve, 0x1070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, EnemySearchMaterial, 0x1098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, EnemySearchParameter, 0x10C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, SkillPaletteMaterial, 0x10E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, AfterimageMaterial, 0x1110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ASpawnerFruitVolumeMaterial, 0x1138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ASpawnerFruitVolumeEffectIdle, 0x1160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ASpawnerFruitVolumeEffectGet, 0x1188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ASpawnerFruitVolumeEffectGet_000_003_01, 0x11B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ASpawnerFruitVolumeEffectHit, 0x11D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ASpawnerFruitVolumeEffectIdle_Rare, 0x1200);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ASpawnerFruitVolumeEffectGet_Rare, 0x1228);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ASpawnerFruitVolumeEffectHit_Rare, 0x1250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ASpawnerFruitVolumeEffectFruitTreeBlade, 0x1278);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ASpawnerFruitVolumeGetUpperLeftCurveVector, 0x12A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ASpawnerFruitVolumeGetBottomLeftCurveVector, 0x12C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ASpawnerFruitVolumeGetUpperRightCurveVector, 0x12F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ASpawnerFruitVolumeGetBottomRightCurveVector, 0x1318);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ASpawnerFruitVolumeGetUpperLeftCurveVectorGround, 0x1340);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ASpawnerFruitVolumeGetBottomLeftCurveVectorGround, 0x1368);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ASpawnerFruitVolumeGetUpperRightCurveVectorGround, 0x1390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ASpawnerFruitVolumeGetBottomRightCurveVectorGround, 0x13B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ASpawnerFruitVolumeGetItemMoveSpeedCurve, 0x13E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FruitParticleScaleCurve, 0x1408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, SpawnFruitParamTable, 0x1430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, SmallFishParticleSystemFC, 0x1458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CrossTalkConstant, 0x1480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, GeneralCrossTalkCondition, 0x14A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, IgnoreCrossTalkCompanionPoint, 0x14D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, AdjustConstValue, 0x14F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DataTableRecipeParam, 0x1520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DataTableFullCourceParam, 0x1548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DataTableSuccessProbabilityParam, 0x1570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DataTableEncountDemoManager, 0x1598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DataTableEncountManager, 0x15C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DataTableEncountManager02, 0x15E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DataTableDamageDataTable, 0x1610);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbEffectParticleSystemTypeYellow, 0x1638);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbEffectParticleSystemTypeRed, 0x1660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbEffectParticleSystemTypeBlue, 0x1688);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbEffectParticleSystem, 0x16B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbHitEffectParticleSystem, 0x16D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbEffectOpenParticleSystem, 0x1700);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbEffectOpenScale_S, 0x1728);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbEffectOpenScale_M, 0x172C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbEffectOpenScale_L, 0x1730);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, UnknownData_CAJN, 0x1734);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbStaticMeshTypeYellow, 0x1734);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbStaticMeshTypeRed, 0x1760);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbStaticMeshTypeBlue, 0x1788);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbStaticMeshTypeRed_S, 0x17B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbStaticMeshTypeRed_M, 0x17D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbStaticMeshTypeRed_L, 0x1800);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbStaticMeshTypeBlue_S, 0x1828);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbStaticMeshTypeBlue_M, 0x1850);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbStaticMeshTypeBlue_L, 0x1878);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbStaticMeshTypeGreen_S, 0x18A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbStaticMeshTypeGreen_M, 0x18C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbStaticMeshTypeGreen_L, 0x18F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbStaticMeshTypeRainbow, 0x1918);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbStaticMeshTypeWhite, 0x1940);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbStaticMeshTypePureWhite, 0x1968);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbEffectParticleSystemTypeRed_S, 0x1990);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbEffectParticleSystemTypeRed_M, 0x19B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbEffectParticleSystemTypeRed_L, 0x19E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbEffectParticleSystemTypeBlue_S, 0x1A08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbEffectParticleSystemTypeBlue_M, 0x1A30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbEffectParticleSystemTypeBlue_L, 0x1A58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbEffectParticleSystemTypeGreen_S, 0x1A80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbEffectParticleSystemTypeGreen_M, 0x1AA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbEffectParticleSystemTypeGreen_L, 0x1AD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbEffectParticleSystemTypeRainbow, 0x1AF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbEffectParticleSystemTypeWhite, 0x1B20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbEffectParticleSystemTypePureWhite, 0x1B48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, TimeOrbParticleSystem, 0x1B70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, TimeOrbAppearanceTable, 0x1B98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZOrbSettingParam, 0x1BC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, SoulEmblemCharacterTable, 0x1BE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, SoulEmblemItemPreference, 0x1C10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, LinkBonusTable, 0x1C38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CommunityCategoryTable, 0x1C60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CommunitySkillTable, 0x1C88);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CommunityBoardLayoutCooking, 0x1CB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CommunityBoardLayoutTraining, 0x1CD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CommunityBoardLayoutDevelop, 0x1D00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CommunityBoardLayoutGods, 0x1D28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CommunityBoardLayoutAdult, 0x1D50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CommunityBoardLayoutAdventure, 0x1D78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CommunityBoardLayoutZFighters, 0x1DA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CommunityBoardLinkInfoCooking, 0x1DC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CommunityBoardLinkInfoTraining, 0x1DF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CommunityBoardLinkInfoDevelop, 0x1E18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CommunityBoardLinkInfoGods, 0x1E40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CommunityBoardLinkInfoAdult, 0x1E68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CommunityBoardLinkInfoAdventure, 0x1E90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CommunityBoardLinkInfoZFighters, 0x1EB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CommunitySkillCooking, 0x1EE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CommunitySkillAdventure, 0x1F08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CommunitySkillTraining, 0x1F30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CommunitySkillAdult, 0x1F58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CommunitySkillZFighter, 0x1F80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CommunitySkillGods, 0x1FA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, EventBattleParam, 0x1FD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, EventBattleDropGroupTable, 0x1FF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DataTableCharacterUIParam, 0x2020);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, MineralStaticMesh, 0x2048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, PS_Idle, 0x2070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, PS_AutoGet, 0x2098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, PS_Hit, 0x20C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, KiraKiraPS, 0x20E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ExplosionPS, 0x2110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, PS_mg_mining_otakara01_area_01_00, 0x2138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, AMineralMiningPointRare_PS_Idle, 0x2160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, AMineralMiningPointRare_PS_Hit, 0x2188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, KiRadialMaterial, 0x21B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, KiParam, 0x21D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, RadialBlurParam, 0x2200);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, KiHighlightMaterial, 0x2228);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, KiHighlightParam, 0x2250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, SearchAuraScaleCurve, 0x2278);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, TrainingPointSearchAuraScaleCurve, 0x22A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, TreasureSearchAuraScaleCurve, 0x22C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DirCursorParticleSystem, 0x22F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ItemGetParticleMngParam, 0x2318);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ParticleMng_particle, 0x2340);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, EnemyParticleOffset, 0x2368);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DotToLinear, 0x2390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DistSetter, 0x23B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, Dotbias, 0x23E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DebugDistSetter, 0x2408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DebugDotbias, 0x2430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CameraDistSetter, 0x2458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, GlobalTerrainDecorateResources, 0x2480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, UserLightTowerParticleSystem, 0x24A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, TowerScaleCurve, 0x24D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, UserLightTowerDisappearParticleSystem, 0x24F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, MainQuestDestinationParticleSystem, 0x2520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, MainQuestDestinationHalfParticleSystem, 0x2548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, MainQuestDestinationDisappearParticleSystem, 0x2570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, SubQuestDestinationParticleSystem, 0x2598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, SubQuestDestinationHalfParticleSystem, 0x25C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, SubQuestDestinationDisappearParticleSystem, 0x25E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, TowerAlphaCurve, 0x2610);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, TowerDecalAlphaCurve, 0x2638);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, TowerDecalScaleCurve, 0x2660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, TowerEndScaleCurve, 0x2688);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, LightTowerSettingTable, 0x26B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, EnemyParticleSystemEncount, 0x26D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, EnemyParticleSystemQuest, 0x2700);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, WaterInParticle, 0x2728);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, WaterInParticleLongBlowoff, 0x2750);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, WaterInParticleLongBlowoffDirection, 0x2778);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, BoostOffsetParticle, 0x27A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DecalEffectOffsetCurve, 0x27C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ViewActorGetItemAutoPilotMaterial, 0x27F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, PS_hit_bodyblow_01, 0x2818);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DmgLongBlowoffVerticalTrailParticle, 0x2840);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DiffLevelCriticalAddParam, 0x2868);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, PS_cmn_golden_bird_01_00, 0x2890);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, PS_cmn_golden_bird_02_00, 0x28B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, PS_cmn_smove_01_00, 0x28E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, SupportActionLot, 0x2908);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, LightTowerDecal, 0x2930);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, EnemyParamDistRelation, 0x2958);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, StartPostSwhichCurve, 0x2980);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, EndPostSwhichCurve, 0x29A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, StartVignetteIntensityCurve, 0x29D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, EndVignetteIntensityCurve, 0x29F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, RadialBlurParamTable, 0x2A20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, AuraSearchEffectST, 0x2A48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, AuraSearchEffectLP, 0x2A70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, AuraSearchEffectED, 0x2A98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, EnemyDirectionEffectST, 0x2AC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, EnemyDirectionEffectLP, 0x2AE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, EnemyDirectionEffectED, 0x2B10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, EnemyDirectionConeScaleCurve, 0x2B38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, EnemyAuraEffectScaleCurve, 0x2B60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, BonfireSmokeEffectScaleCurve, 0x2B88);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, BonfireSmokeEffectAlphaCurve, 0x2BB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, UseItemCure, 0x2BD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, UseItemParticle, 0x2C00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ResultBonusTable, 0x2C50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, UIWindowManagerClass, 0x2C78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, UIKeyHelpClass, 0x2CA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, UILocalizedKeyboardMappingTable, 0x2CC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DefaultInputAssignParam, 0x2CF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, AIEncountTable, 0x2D18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, AtrociousEnemyParamTable, 0x2D40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, AtrociousConditionParamTable, 0x2D68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, TreasureSaveTable, 0x2D90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, WindRoadParam, 0x2DB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, RareWindRoadAppearanceTable, 0x2DE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ExtinctionDeathActionEffect, 0x2E08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ExplodeDeathActionEffect, 0x2E30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, bDeathActionEditCondition, 0x2E58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, UnknownData_BGZ1, 0x2E59);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ExtinctionDeathActionEffectTime, 0x2E5C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DeathActionEraseStartTime, 0x2E60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, DeathActionEraseCharacterTime, 0x2E64);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, AI_TPStable, 0x2E68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FishShadowTable, 0x2E90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FishShadowParamTable, 0x2EB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FishParamTable, 0x2EE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, BaitParamTable, 0x2F08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FishingConditionTable, 0x2F30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, MapInformationTable, 0x2F58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, WalkingMobTalk_C1, 0x2F80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, WalkingMobTalk_C2, 0x2FA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, WalkingMobTalk_C3, 0x2FD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, WalkingMobTalk_C4, 0x2FF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, MissionDataTable, 0x3020);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, MissionPhaseDataTable, 0x3048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, MissionHermitRewardDataTable, 0x3070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, MissionUpdateInfoIgnoreDataTable, 0x3098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, StartShadowFadeCurve, 0x30C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, EndShadowFadeCurve, 0x30E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ItemTblEffect, 0x3110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ItemTblBait, 0x3138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ItemTblBento, 0x3160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ItemTblChip, 0x3188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ItemTblDevelop, 0x31B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ItemTblHeal, 0x31D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ItemTblImportant, 0x3200);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ItemTblMaterial, 0x3228);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ItemTblPresent, 0x3250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ItemTblRecipe, 0x3278);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, RecipeTblDevelop, 0x32A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, RewardBonusTable, 0x32C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, RaceGameLoadLevelParam, 0x32F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FeverParams, 0x3318);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FeverAreaTable, 0x3340);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FeverDetailTable, 0x3368);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FeverIgnoreMainQuestTable, 0x3390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FeverIgnoreSubQuestTable, 0x33B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, WallHitEffect, 0x33E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, WallHitEffectDistance, 0x3408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, UnknownData_SBYC, 0x340C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, WorldMapLodingSequence, 0x340C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, QuestWorldMapParameterTable, 0x3438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, QuestWorldMapLandmarkParameterTable, 0x3460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, WorldMapActiveParam, 0x3488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, SpawnDragonballTable, 0x34B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, SpawnDragonballPointInfoTable, 0x34D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, SpawnDragonballGroupInfoTable, 0x3500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ItemTradeParameter, 0x3528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ItemTraderCondition, 0x3550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, TickIntervalTbl, 0x3578);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ActiveStateTbl, 0x35A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, NpcComponentActiveTbl, 0x35C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, QuestCharacterActiveTbl, 0x35F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, NpcMultipurposeTbl, 0x3618);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, NpcMontageTbl, 0x3640);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, NpcAreaSetTypeTbl, 0x3668);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, NpcPresetTbl, 0x3690);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, MobLookGroupTbl, 0x36B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, AnimalActionTbl, 0x36E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, MobCategoryStateTbl, 0x3708);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, TownMobParameterTbl, 0x3730);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FightingPowerParamTbl, 0x3758);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CarParameterGlobalTbl, 0x3780);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, IDConvertCharaType, 0x37A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, IDConvertAnimalID, 0x37D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, IDConvertFishID, 0x37F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, IDConvertBgmID, 0x3820);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZcwAnimal, 0x3848);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZcwBGM, 0x3870);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZcwChara, 0x3898);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZcwDemo, 0x38C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZcwItem, 0x38E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZcwStory, 0x3910);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZcwTerm, 0x3938);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZcwVehicle, 0x3960);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZcwWorld, 0x3988);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZcwDiagram, 0x39B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZcwReward, 0x39D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZcwCarddass, 0x3A00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZcwAreaNav, 0x3A28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZcwAreaNavRate, 0x3A50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ZcwPersonalId, 0x3A78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CommonFiles, 0x3AA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FieldBgmTable, 0x3AB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, BgmParamterTable, 0x3AD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, RideBGMConstant, 0x3B00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, SoundCue, 0x3B28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, CharacterAuraEffectTable, 0x3B38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, AuraSearchItemEffectParamTable, 0x3B60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, PlayerAuraMesh, 0x3B88);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, EnemyAuraMesh, 0x3BB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, SpawnerItemCollisionRadius, 0x3BD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, RideExclusion, 0x3C00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, WaterParamPtr, 0x3C28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, RootMenuInvalidDataTable, 0x3C50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, ReactionVoiceParamTbl, 0x3C78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FishingReactionVoiceParamTbl, 0x3CA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, BreakableObjectReactionVoiceParamTbl, 0x3CC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, EnemiesBaseParameter, 0x3CF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, EnemiesBaseCondition, 0x3D18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, FieldMemoriesParameter, 0x3D40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, StoryTitleEffectMaterial, 0x3D68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, StoryTitleEffectParameter, 0x3D90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, LoadedObject, 0x3DB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetGlobal, UnknownData_1AVU, 0x3DC8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetGlobal, 0x3EB8);
		}

		// class UATDataAssetItem : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetItem)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetItem, AssetInfo, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetItem, 0x0040);
		}

		// class UATDataAssetItemAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetItemAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetItemAsyncLoad, UnknownData_7D4P, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetItemAsyncLoad, Loading, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetItemAsyncLoad, ref, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetItemAsyncLoad, UnknownData_A02B, 0x0042);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetItemAsyncLoad, 0x0048);
		}

		// class UATDataAssetJostleBeam : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetJostleBeam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetJostleBeam, AssetInfo, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetJostleBeam, 0x0040);
		}

		// class UATDataAssetJostleBeamAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetJostleBeamAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetJostleBeamAsyncLoad, UnknownData_PZBU, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetJostleBeamAsyncLoad, Loading, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetJostleBeamAsyncLoad, reference, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetJostleBeamAsyncLoad, 0x0070);
		}

		// class AATDataAssetManager : public AActor
		TEST_METHOD(Class__AT__ATDataAssetManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, AlwaysDataAssets, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, CharacterAsset, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, CharacterActionAsset, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, VariationMeshAsset, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, FormMeshAsset, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, FacialAsset, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, EnemyAsset, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, ItemAsset, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, UiAsset, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, SoundAsset, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, ParticleAsset, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, StarScaleFinishAsset, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, QuestAsset, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, NpcMobAsset, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, MiniGameMobAsset, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, MechaDevAsset, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, EventBattleAsset, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, AIAsset, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, BattleAIAsset, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, BattleGroupAIAsset, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, CookingDemoAsset, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, CookingDemoCharacterResourceAsset, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, CrossTalkAsset, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, FishGameAsset, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, BaseballGameAsset, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, RaceGameAsset, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, MiniGameAsset, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, DamageTypeAsset, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, UiCaptureAsset, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, SupportCharacterTalkAsset, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, TalkAnimationAsset, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, CarParameterAreaAsset, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, JostleBeamAsset, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, TPSSkillViewCancelAsset, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, FieldAsset, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, CharacterLoader, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, CharacterActionLoader, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, EnemyLoader, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, ItemLoader, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, UILoader, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, SoundLoader, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, ParticleLoader, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, QuestLoader, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, NpcMobLoader, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, MiniGameMobLoader, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, MechaDevLoader, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, EventBattleLoader, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, CrossTalkLoader, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, BaseballGameLoader, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, RaceGameLoader, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, MiniGameLoader, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, DamageTypeLoader, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, SupportCharacterTalkLoader, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, AILoader, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDataAssetManager, UnknownData_NBLJ, 0x04E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATDataAssetManager, 0x0528);
		}

		// class UATDataAssetMechaDev : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetMechaDev)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetMechaDev, AssetInfo, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetMechaDev, 0x0040);
		}

		// class UATDataAssetMechaDevAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetMechaDevAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetMechaDevAsyncLoad, UnknownData_EI6R, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetMechaDevAsyncLoad, Loading, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetMechaDevAsyncLoad, reference, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetMechaDevAsyncLoad, 0x0070);
		}

		// class UATDataAssetMiniGame : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetMiniGame)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetMiniGame, AssetInfo, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetMiniGame, 0x0040);
		}

		// class UATDataAssetMiniGameAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetMiniGameAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetMiniGameAsyncLoad, UnknownData_77SP, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetMiniGameAsyncLoad, LoadingAsset, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetMiniGameAsyncLoad, ref, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetMiniGameAsyncLoad, 0x0070);
		}

		// class UATDataAssetMiniGameMob : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetMiniGameMob)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetMiniGameMob, AnimClass, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetMiniGameMob, NpcPresetTable, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetMiniGameMob, 0x0068);
		}

		// class UATDataAssetMiniGameMobAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetMiniGameMobAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetMiniGameMobAsyncLoad, UnknownData_G8DH, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetMiniGameMobAsyncLoad, loading_AnimBP, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetMiniGameMobAsyncLoad, loading_Mesh, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetMiniGameMobAsyncLoad, loading_NpcPresetTbl, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetMiniGameMobAsyncLoad, ref_AnimBP, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetMiniGameMobAsyncLoad, ref_Mesh, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetMiniGameMobAsyncLoad, ref_NpcPresetTbl, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetMiniGameMobAsyncLoad, UnknownData_JQGI, 0x0108);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetMiniGameMobAsyncLoad, 0x0110);
		}

		// class UATDataAssetNpcMob : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetNpcMob)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetNpcMob, AnimClass, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetNpcMob, TownMobClass, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetNpcMob, 0x0068);
		}

		// class UATDataAssetNpcMobAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetNpcMobAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetNpcMobAsyncLoad, UnknownData_KQW3, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetNpcMobAsyncLoad, loading_AnimBP, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetNpcMobAsyncLoad, loading_AnimMontage, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetNpcMobAsyncLoad, loading_Mesh, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetNpcMobAsyncLoad, loading_TownMobClass, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetNpcMobAsyncLoad, ref_AnimBP, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetNpcMobAsyncLoad, ref_AnimMontage, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetNpcMobAsyncLoad, ref_Mesh, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetNpcMobAsyncLoad, ref_TownMobClass, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetNpcMobAsyncLoad, UnknownData_W3EU, 0x0148);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetNpcMobAsyncLoad, 0x0150);
		}

		// class UATDataAssetParticle : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetParticle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetParticle, AssetInfo, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetParticle, 0x0040);
		}

		// class UATDataAssetParticleAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetParticleAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetParticleAsyncLoad, UnknownData_XP30, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetParticleAsyncLoad, Loading, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetParticleAsyncLoad, ref, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetParticleAsyncLoad, 0x0070);
		}

		// class UATDataAssetQuest : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetQuest)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetQuest, AssetInfo, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetQuest, DataAssetPair, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetQuest, QuestInstanceMap, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetQuest, LoadedDataTables, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetQuest, LoadedInstanceReferences, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetQuest, QuestDataTableList, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetQuest, QuestInstanceList, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetQuest, UnknownData_L5JR, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetQuest, CurrentProgress, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetQuest, UnknownData_WJ8B, 0x01A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetQuest, 0x01C0);
		}

		// class UATDataAssetQuestAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetQuestAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetQuestAsyncLoad, UnknownData_JMVD, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetQuestAsyncLoad, Loading, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetQuestAsyncLoad, ref, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetQuestAsyncLoad, 0x0070);
		}

		// class UATDataAssetRaceGame : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetRaceGame)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetRaceGame, AssetInfo, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetRaceGame, AssetCommonInfo, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetRaceGame, AssetAssistantInfo, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetRaceGame, 0x0090);
		}

		// class UATDataAssetRaceGameAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetRaceGameAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetRaceGameAsyncLoad, UnknownData_TW7C, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetRaceGameAsyncLoad, LoadingAsset, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetRaceGameAsyncLoad, loadingAsset_Common, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetRaceGameAsyncLoad, loadingAsset_Assistant, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetRaceGameAsyncLoad, ref, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetRaceGameAsyncLoad, ref_Common, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetRaceGameAsyncLoad, ref_Assistant, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetRaceGameAsyncLoad, UnknownData_36RN, 0x00F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetRaceGameAsyncLoad, 0x00F8);
		}

		// class UATDataAssetSound : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetSound)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetSound, AssetInfo, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetSound, 0x0040);
		}

		// class UATDataAssetSoundAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetSoundAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetSoundAsyncLoad, UnknownData_3O1C, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetSoundAsyncLoad, Loading, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetSoundAsyncLoad, ref, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetSoundAsyncLoad, UnknownData_HQMP, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetSoundAsyncLoad, 0x0078);
		}

		// class UATDataAssetStarScaleFinish : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetStarScaleFinish)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetStarScaleFinish, AssetInfo, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetStarScaleFinish, 0x0040);
		}

		// class UATDataAssetStarScaleFinishAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetStarScaleFinishAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetStarScaleFinishAsyncLoad, UnknownData_WO44, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetStarScaleFinishAsyncLoad, Loading, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetStarScaleFinishAsyncLoad, reference, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetStarScaleFinishAsyncLoad, 0x0070);
		}

		// class UATDataAssetSupportCharacterTalk : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetSupportCharacterTalk)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetSupportCharacterTalk, AssetInfo, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetSupportCharacterTalk, AlwaysLoadTable_Map, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetSupportCharacterTalk, 0x0090);
		}

		// class UATDataAssetSupportCharacterTalkAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetSupportCharacterTalkAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetSupportCharacterTalkAsyncLoad, UnknownData_DQPB, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetSupportCharacterTalkAsyncLoad, Loading, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetSupportCharacterTalkAsyncLoad, ref, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetSupportCharacterTalkAsyncLoad, SupportCharacterTalkAsset, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetSupportCharacterTalkAsyncLoad, 0x0078);
		}

		// class UATDataAssetTPSSkillViewCancel : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetTPSSkillViewCancel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetTPSSkillViewCancel, AssetInfo, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetTPSSkillViewCancel, 0x0040);
		}

		// class UATDataAssetTPSSkillViewCancelAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetTPSSkillViewCancelAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetTPSSkillViewCancelAsyncLoad, UnknownData_2KBJ, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetTPSSkillViewCancelAsyncLoad, Loading, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetTPSSkillViewCancelAsyncLoad, reference, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetTPSSkillViewCancelAsyncLoad, 0x0070);
		}

		// class UATDataAssetUi : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetUi)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetUi, AssetInfo, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetUi, TableInfo, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetUi, AlwaysLoadTable_Map, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetUi, 0x00A0);
		}

		// class UATDataAssetUiAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetUiAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetUiAsyncLoad, LoadingAsset, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetUiAsyncLoad, RefAssetIns, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetUiAsyncLoad, UiAsset, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetUiAsyncLoad, WorldContextObject, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetUiAsyncLoad, UnknownData_TP81, 0x00A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetUiAsyncLoad, 0x00B0);
		}

		// class UATDataAssetUiCapture : public UATDataAssetBase
		TEST_METHOD(Class__AT__ATDataAssetUiCapture)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetUiCapture, AssetInfo, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetUiCapture, 0x0040);
		}

		// class UATDataAssetUiCaptureAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDataAssetUiCaptureAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetUiCaptureAsyncLoad, UnknownData_MMVX, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetUiCaptureAsyncLoad, LoadingAsset, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetUiCaptureAsyncLoad, RefAssetIns, 0x0148);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetUiCaptureAsyncLoad, 0x0188);
		}

		// class UATDebugDataAssetParticesAsyncLoadFromPath : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__AT__ATDebugDataAssetParticesAsyncLoadFromPath)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDebugDataAssetParticesAsyncLoadFromPath, UnknownData_YDZY, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDebugDataAssetParticesAsyncLoadFromPath, AssetRef, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDebugDataAssetParticesAsyncLoadFromPath, LoadedAsset, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDebugDataAssetParticesAsyncLoadFromPath, UnknownData_ZI1U, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDebugDataAssetParticesAsyncLoadFromPath, 0x0130);
		}

		// class UATDebugInputComponent : public UATInputComponent
		TEST_METHOD(Class__AT__ATDebugInputComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDebugInputComponent, 0x01F8);
		}

		// class UATDebugMenuInputComponent : public UATInputComponent
		TEST_METHOD(Class__AT__ATDebugMenuInputComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDebugMenuInputComponent, 0x01F8);
		}

		// class UATDebugUICharaIconManager : public UObject
		TEST_METHOD(Class__AT__ATDebugUICharaIconManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDebugUICharaIconManager, UnknownData_42KC, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDebugUICharaIconManager, 0x0088);
		}

		// class AATDecalActor : public AActor
		TEST_METHOD(Class__AT__ATDecalActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDecalActor, Decal, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATDecalActor, 0x0340);
		}

		// class AATDemoDirectionCharacter : public ASkeletalMeshActor
		TEST_METHOD(Class__AT__ATDemoDirectionCharacter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATDemoDirectionCharacter, 0x03C0);
		}

		// class AATSceneCapture2D : public ASceneCapture2D
		TEST_METHOD(Class__AT__ATSceneCapture2D)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATSceneCapture2D, 0x0348);
		}

		// class AATDemoDirectionSceneCapture2D : public AATSceneCapture2D
		TEST_METHOD(Class__AT__ATDemoDirectionSceneCapture2D)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATDemoDirectionSceneCapture2D, 0x0348);
		}

		// class UATDemoInputComponent : public UATInputComponent
		TEST_METHOD(Class__AT__ATDemoInputComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDemoInputComponent, 0x01F8);
		}

		// class UATDemoManageComponent : public UActorComponent
		TEST_METHOD(Class__AT__ATDemoManageComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDemoManageComponent, DemoEventDelegate, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDemoManageComponent, DemoTimingDelegate, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDemoManageComponent, DemoCtrlMap, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDemoManageComponent, UnknownData_1Y7W, 0x0170);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDemoManageComponent, 0x01D0);
		}

		// class AATDemoRenderingHelper : public AActor
		TEST_METHOD(Class__AT__ATDemoRenderingHelper)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDemoRenderingHelper, RecaptureSkyEveryFrame, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDemoRenderingHelper, UnknownData_PUIH, 0x0339);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATDemoRenderingHelper, 0x0360);
		}

		// class AATDemoResource : public AActor
		TEST_METHOD(Class__AT__ATDemoResource)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDemoResource, UnknownData_KNUR, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATDemoResource, 0x0340);
		}

		// class UATDevelopManager : public UObject
		TEST_METHOD(Class__AT__ATDevelopManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDevelopManager, Loader_Map, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDevelopManager, UIShopTop, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDevelopManager, UIShopDevelop, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDevelopManager, UIShopDevelopCustom, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDevelopManager, UIShopDevelopResult, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDevelopManager, UIShopComplete, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDevelopManager, UIXCmnHeader, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDevelopManager, UnknownData_XS01, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDevelopManager, 0x0108);
		}

		// class UATDiffLevelCriticalAddParam : public UObject
		TEST_METHOD(Class__AT__ATDiffLevelCriticalAddParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDiffLevelCriticalAddParam, DiffLevelInfo, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDiffLevelCriticalAddParam, MaxDiffLevel, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDiffLevelCriticalAddParam, MaxCriticalAddValue, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDiffLevelCriticalAddParam, 0x0040);
		}

		// class AATDinosaurMoveAreaVolume : public AVolume
		TEST_METHOD(Class__AT__ATDinosaurMoveAreaVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATDinosaurMoveAreaVolume, 0x0370);
		}

		// class AATDirectionalLight : public ADirectionalLight
		TEST_METHOD(Class__AT__ATDirectionalLight)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDirectionalLight, LightType, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDirectionalLight, bAddManager, 0x0351);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDirectionalLight, bChangeHeightDistance, 0x0352);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDirectionalLight, UnknownData_VNO9, 0x0353);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDirectionalLight, SkyHeight, 0x0354);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDirectionalLight, GroundHeight, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDirectionalLight, SkyShadowDistance, 0x035C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDirectionalLight, GroundShadowDistance, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDirectionalLight, ShadowColor, 0x0364);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDirectionalLight, UnknownData_GGA8, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDirectionalLight, MP_LightVector, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDirectionalLight, DirectionalLightComponent, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDirectionalLight, PlayerCharacter, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDirectionalLight, UnknownData_ZXAZ, 0x0390);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATDirectionalLight, 0x0398);
		}

		// class UATDirectionalLightNotifyState : public UATAnimNotifyState_PlaySkeletalAnim
		TEST_METHOD(Class__AT__ATDirectionalLightNotifyState)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDirectionalLightNotifyState, DirectionalLightClass, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDirectionalLightNotifyState, DirectionalLight, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDirectionalLightNotifyState, 0x0060);
		}

		// class UATDirectionBase : public UObject
		TEST_METHOD(Class__AT__ATDirectionBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDirectionBase, UnknownData_KPW3, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDirectionBase, StopCtrlActors, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDirectionBase, StopDrawActors, 0x00C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDirectionBase, 0x0110);
		}

		// class AATDummyActor : public ASkeletalMeshActor
		TEST_METHOD(Class__AT__ATDummyActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATDummyActor, 0x03C0);
		}

		// class AATDirectionDummyActor : public AATDummyActor
		TEST_METHOD(Class__AT__ATDirectionDummyActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDirectionDummyActor, Montage, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDirectionDummyActor, CameraAnim, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDirectionDummyActor, bCameraLoop, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDirectionDummyActor, UnknownData_OHPA, 0x03D1);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDirectionDummyActor, CameraHitCheckLength, 0x03D4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATDirectionDummyActor, 0x03D8);
		}

		// class UATDirectionLock : public UATDirectionBase
		TEST_METHOD(Class__AT__ATDirectionLock)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDirectionLock, UnknownData_NWIK, 0x0110);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDirectionLock, 0x0168);
		}

		// class UATDirectionLongBlowoff : public UATDirectionBase
		TEST_METHOD(Class__AT__ATDirectionLongBlowoff)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDirectionLongBlowoff, UnknownData_QT0O, 0x0110);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDirectionLongBlowoff, 0x0168);
		}

		// class UATDirectionStarScaleFinish : public UATDirectionBase
		TEST_METHOD(Class__AT__ATDirectionStarScaleFinish)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDirectionStarScaleFinish, Sequencer, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDirectionStarScaleFinish, UnknownData_VX3P, 0x0118);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDirectionStarScaleFinish, 0x0188);
		}

		// class UATDirectionSupportPursue : public UATDirectionBase
		TEST_METHOD(Class__AT__ATDirectionSupportPursue)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDirectionSupportPursue, UnknownData_NYZ5, 0x0110);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDirectionSupportPursue, 0x0188);
		}

		// class UATDLCManager : public UBaseObject
		TEST_METHOD(Class__AT__ATDLCManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDLCManager, UnknownData_3AXF, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDLCManager, ElementDataTable, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDLCManager, UnknownData_06H1, 0x00E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDLCManager, 0x0278);
		}

		// class AATDoorVolume : public ATriggerBox
		TEST_METHOD(Class__AT__ATDoorVolume)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDoorVolume, DoorOpenCloseDelegate, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDoorVolume, AreaMessageId, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDoorVolume, ConfirmationMessageId, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDoorVolume, DoorName, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDoorVolume, AreaName, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDoorVolume, bUseDialog, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDoorVolume, FadeColor, 0x0379);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDoorVolume, UnknownData_Q4G4, 0x037A);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDoorVolume, fadeSecond, 0x037C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDoorVolume, CharacterResetState, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDoorVolume, UnknownData_OOI3, 0x0381);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDoorVolume, PlayerStartTransform, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDoorVolume, IgnoreClasses, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDoorVolume, IgnoreLevels, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDoorVolume, RestrictMoveControlPreset, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDoorVolume, RestrictMoveControlPresetPrev, 0x03E1);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDoorVolume, UnknownData_09MX, 0x03E2);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDoorVolume, HiddenLevels, 0x03E2);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDoorVolume, DestinationDoor, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATDoorVolume, UnknownData_HMM8, 0x0498);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATDoorVolume, 0x04E0);
		}

		// class ADragonballSpawner : public ATargetPoint
		TEST_METHOD(Class__AT__DragonballSpawner)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ADragonballSpawner, SpawnPointId, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADragonballSpawner, SpawnGroup, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADragonballSpawner, EnablePlayerLv, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADragonballSpawner, WorldMapLocation, 0x034C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADragonballSpawner, UnknownData_LBRD, 0x034D);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADragonballSpawner, RefActor, 0x0368);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADragonballSpawner, 0x0370);
		}

		// class UEasingMovement : public UActorComponent
		TEST_METHOD(Class__AT__EasingMovement)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEasingMovement, UnknownData_E225, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEasingMovement, TargetPoint, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEasingMovement, Duration, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEasingMovement, UnknownData_XFXO, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEasingMovement, bLoop, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEasingMovement, UnknownData_UKKQ, 0x011D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEasingMovement, SpeedCurve, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEasingMovement, UnknownData_PQ4V, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEasingMovement, LocationOffset, 0x0134);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEasingMovement, UnknownData_N5AG, 0x0140);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEasingMovement, 0x0150);
		}

		// class UEnable : public UInterface
		TEST_METHOD(Class__AT__Enable)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnable, 0x0028);
		}

		// class UATEnemiesBaseBehaviour : public UActorComponent
		TEST_METHOD(Class__AT__ATEnemiesBaseBehaviour)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, UnknownData_PAYN, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, DebriMesh, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, BreakParticleRoot, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, BreakParticleGround, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, GroundEffectRespawnInterval, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, ShakePower, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, WaitFracturingSeconds, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, FallSpeedScale, 0x0134);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, UnknownData_LBXQ, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, AttachedPSC, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, UnknownData_XZ3Y, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, EnemiesBaseId, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, FieldItemTableComponent, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, IdleMoveCurve, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, IdleRotateIntervalMin, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, IdleRotateIntervalMax, 0x0184);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, IdleRotateSpeedMin, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, IdleRotateSpeedMax, 0x018C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, IdleRotateAngleMin, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, IdleRotateAngleMax, 0x0194);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, UnknownData_ODWX, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, LoopEffect, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, LoopEffectScale, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, UnknownData_BLGI, 0x01C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, RemoveEffect, 0x01C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, RemoveEffectScale, 0x01D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, UnknownData_14JQ, 0x01DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, MoveEffect, 0x01E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, MoveEffectScale, 0x01E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, ItemTouchDistance, 0x01F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, ItemHideDistance, 0x01F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, ItemLocationZAdjust, 0x01FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, ItemLocationRadiusMin, 0x0200);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, ItemLocationRadiusMax, 0x0204);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, ItemLocationAngleMax, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, UnknownData_Y6I0, 0x020C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, UIGaugeDisplayOffset, 0x0220);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, MiniMapIcon, 0x0224);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, UnknownData_S1VQ, 0x0225);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, IdleSE, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, BreakSE, 0x0241);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnemiesBaseBehaviour, UnknownData_AKYE, 0x0242);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATEnemiesBaseBehaviour, 0x0248);
		}

		// class AATEnemiesBaseSpawner : public AActor
		TEST_METHOD(Class__AT__ATEnemiesBaseSpawner)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATEnemiesBaseSpawner, 0x0338);
		}

		// class UATEnvironmentEffectManager : public UActorComponent
		TEST_METHOD(Class__AT__ATEnvironmentEffectManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnvironmentEffectManager, RequestPriorityQueue, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnvironmentEffectManager, UnknownData_OSTW, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnvironmentEffectManager, ActiveDirectionalLights, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnvironmentEffectManager, UnknownData_2U0U, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnvironmentEffectManager, OldShadow, 0x0184);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnvironmentEffectManager, UnknownData_DO9D, 0x019C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnvironmentEffectManager, CameraDistanceCurve, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnvironmentEffectManager, ShadowDistributionExponentCurve, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnvironmentEffectManager, ShadowFadeoutFractionCurve, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnvironmentEffectManager, ShadowTransitionFractionCurve, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnvironmentEffectManager, ShadowResolutionCurve, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnvironmentEffectManager, DynamicShadowDistanceCurve, 0x01C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnvironmentEffectManager, RaytracedDistanceShadowCurve, 0x01D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnvironmentEffectManager, ShadowRadiusThresholdCurve, 0x01D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEnvironmentEffectManager, UnknownData_476L, 0x01E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATEnvironmentEffectManager, 0x01E8);
		}

		// class UATEventBattleFinishInputComponent : public UATInputComponent
		TEST_METHOD(Class__AT__ATEventBattleFinishInputComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEventBattleFinishInputComponent, UnknownData_5DN6, 0x01F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATEventBattleFinishInputComponent, 0x0200);
		}

		// class UATFacialAnimationInterface : public UInterface
		TEST_METHOD(Class__AT__ATFacialAnimationInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATFacialAnimationInterface, 0x0028);
		}

		// class UATFacialComponent : public UActorComponent
		TEST_METHOD(Class__AT__ATFacialComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFacialComponent, CurrentParts, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFacialComponent, CurrentFaceID, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFacialComponent, UnknownData_FFRS, 0x0109);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFacialComponent, CurrentMontage, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFacialComponent, FacialAnim, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFacialComponent, BlinkAnim, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFacialComponent, UnknownData_YVFA, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFacialComponent, FacialOffMontage, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFacialComponent, UnknownData_RIYM, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFacialComponent, FacialNut01, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFacialComponent, FacialNut02, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFacialComponent, FacialDmg01, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFacialComponent, FacialDmg02, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFacialComponent, FacialDmg03, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFacialComponent, FacialDying, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFacialComponent, FacialSurprise, 0x0198);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATFacialComponent, 0x01A0);
		}

		// class AATFacialParts : public AActor
		TEST_METHOD(Class__AT__ATFacialParts)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATFacialParts, FacialAnimMap, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATFacialParts, BlinkAnimMap, 0x0388);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATFacialParts, 0x03D8);
		}

		// class UATFeverManager : public UActorComponent
		TEST_METHOD(Class__AT__ATFeverManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFeverManager, UnknownData_6BAI, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATFeverManager, 0x0150);
		}

		// class UATFeverParamManager : public UObject
		TEST_METHOD(Class__AT__ATFeverParamManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFeverParamManager, UnknownData_PVLY, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATFeverParamManager, 0x00B0);
		}

		// class UATFieldInputComponent : public UATInputComponent
		TEST_METHOD(Class__AT__ATFieldInputComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFieldInputComponent, UnknownData_GG84, 0x01F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATFieldInputComponent, 0x0228);
		}

		// class UATFieldLightManager : public UActorComponent
		TEST_METHOD(Class__AT__ATFieldLightManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFieldLightManager, UnknownData_PP9N, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATFieldLightManager, 0x0108);
		}

		// class UATFieldManager : public UActorComponent
		TEST_METHOD(Class__AT__ATFieldManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFieldManager, UnknownData_64HG, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFieldManager, bDisabledItemHit, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFieldManager, UnknownData_L3PZ, 0x0111);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFieldManager, AllMineralMiningPointList, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFieldManager, UserLightTowerActor, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFieldManager, UnknownData_FGTH, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFieldManager, SpawnerDestructibleLandMineral, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFieldManager, UnknownData_2HZV, 0x0178);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATFieldManager, 0x01E8);
		}

		// class AFieldActionPointActor : public AActor
		TEST_METHOD(Class__AT__FieldActionPointActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AFieldActionPointActor, FieldActionPointRootComponent, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AFieldActionPointActor, ActionName, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AFieldActionPointActor, ActionPopUpUIOffset, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::AFieldActionPointActor, SphereRadius, 0x035C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AFieldActionPointActor, SphereComponent, 0x0360);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFieldActionPointActor, 0x0368);
		}

		// class AATFieldMemoriesActor : public AFieldActionPointActor
		TEST_METHOD(Class__AT__ATFieldMemoriesActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATFieldMemoriesActor, UnknownData_MBE5, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATFieldMemoriesActor, PlacementEffect, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATFieldMemoriesActor, CollectionId, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATFieldMemoriesActor, ItemId, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATFieldMemoriesActor, AutoCloseTimeSeconds, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATFieldMemoriesActor, UnknownData_3QEG, 0x0454);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATFieldMemoriesActor, ParticleComponent, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATFieldMemoriesActor, KiSearchComponent, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATFieldMemoriesActor, UnknownData_PNYK, 0x0468);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATFieldMemoriesActor, 0x0490);
		}

		// class UFieldMemoriesFetchingBehaviour : public UActorComponent
		TEST_METHOD(Class__AT__FieldMemoriesFetchingBehaviour)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UFieldMemoriesFetchingBehaviour, FieldMemoriesFindId, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFieldMemoriesFetchingBehaviour, Cost, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFieldMemoriesFetchingBehaviour, FetchedPoint, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFieldMemoriesFetchingBehaviour, UnknownData_OL51, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFieldMemoriesFetchingBehaviour, TalkParameter, 0x0118);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFieldMemoriesFetchingBehaviour, 0x0140);
		}

		// class UATFieldRideSelectInput : public UATInputComponent
		TEST_METHOD(Class__AT__ATFieldRideSelectInput)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFieldRideSelectInput, UnknownData_D4RX, 0x01F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATFieldRideSelectInput, 0x0210);
		}

		// class UATFishingInputComponent : public UATInputComponent
		TEST_METHOD(Class__AT__ATFishingInputComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATFishingInputComponent, 0x01F8);
		}

		// class UATFishingQteInputComponent : public UATInputComponent
		TEST_METHOD(Class__AT__ATFishingQteInputComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATFishingQteInputComponent, 0x01F8);
		}

		// class AATFloatRollLargeEffSkeletalMeshActor : public ASkeletalMeshActor
		TEST_METHOD(Class__AT__ATFloatRollLargeEffSkeletalMeshActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATFloatRollLargeEffSkeletalMeshActor, LocationOffset, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATFloatRollLargeEffSkeletalMeshActor, BaseRotation, 0x03CC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATFloatRollLargeEffSkeletalMeshActor, 0x03D8);
		}

		// class UATFlyingNimbus : public UActorComponent
		TEST_METHOD(Class__AT__ATFlyingNimbus)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, NimbusRoll_AnimActorClass, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, NimbusRoll_SocketName, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, NimbusRoll_NimbusAttachBoneName, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, NimbusRoll_RootBoneName, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, UnknownData_H1D6, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, NimbusSplineActorClass, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, NimbusParticleData, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, WindParticleData, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, NimbusMesh, 0x0200);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, NimbusMeshMaterial, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, NimbusOffset, 0x0210);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, NimbusCapsuleSize, 0x021C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, NimbusShadowMeshOffset, 0x0224);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, AdjustAddMeshZ, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, SplineRotationRate, 0x022C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, StandEntryMoveCurve, 0x0230);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, FloatEntryMoveCurve, 0x0238);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, ExitMoveCurve, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, FluffyCurve, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, EntryJumpSplineTime, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, FloatEntryAddPosZ, 0x0254);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, RideAdjustPositionDuration, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, RideAdjustRotateDuration, 0x025C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, RestartInterval, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, MoveCurveTimeRate, 0x0264);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, MoveCurveValueRate, 0x0268);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, CurveRateChangeSpeed, 0x026C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, FluffyResetDuration, 0x0270);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, AdjustFluffyDuration, 0x0274);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, ReturnFluffyDuration, 0x0278);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, UnknownData_VSQU, 0x027C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, AttachSocketName, 0x0280);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, bDrawDebug, 0x0288);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, UnknownData_HMV9, 0x0289);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, OwnerChara, 0x0290);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, NimbusStaticMesh, 0x0298);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, NimbusParticle, 0x02A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, WindParticle, 0x02A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, NimbusSplineActor, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, MoveSpline, 0x02B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, EntryMoveCurve, 0x02C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, m_NimbusRoll_AnimActor, 0x02C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, m_NimbusRoll_DummyMeshComp, 0x02D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFlyingNimbus, UnknownData_UKML, 0x02D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATFlyingNimbus, 0x0360);
		}

		// class AATFlyingNimbusSpline : public AActor
		TEST_METHOD(Class__AT__ATFlyingNimbusSpline)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATFlyingNimbusSpline, StandEntrySpline, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATFlyingNimbusSpline, FloatEntrySpline, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATFlyingNimbusSpline, ExitSpline, 0x0348);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATFlyingNimbusSpline, 0x0350);
		}

		// class UATFollowUpPoints : public UActorComponent
		TEST_METHOD(Class__AT__ATFollowUpPoints)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATFollowUpPoints, UnknownData_BTXE, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATFollowUpPoints, 0x0128);
		}

		// class UATGameFlowManager : public UBaseObject
		TEST_METHOD(Class__AT__ATGameFlowManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATGameFlowManager, UnknownData_S7IX, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATGameFlowManager, 0x0050);
		}

		// class AATGameMode : public AGameMode
		TEST_METHOD(Class__AT__ATGameMode)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameMode, RestrictPreset, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameMode, UnknownData_EW0M, 0x0421);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameMode, HudInfo, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameMode, BlurManager, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameMode, LevelManager, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameMode, QuestProgressTable, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameMode, DataAssetManager, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameMode, MechaDevManager, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameMode, QuestRetryManager, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameMode, FishMeshLoader, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameMode, UiCaptureLoader, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameMode, UiCaptureManager, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameMode, TalkAnimLoader, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameMode, QuestCostumeTable, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameMode, SubQuestCostumeTable, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameMode, UnknownData_Y4KZ, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameMode, ComponentSettings, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameMode, Components, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameMode, FieldLightManager, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameMode, ProceduralManager, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameMode, BreakableManager, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameMode, TerrainDecorateManagerClass, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameMode, TerrainDecorateManager, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameMode, SkillActivateSafetyInfoManager, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameMode, UnknownData_JEN9, 0x0550);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATGameMode, 0x05F8);
		}

		// class AATGameState : public ACFGameState
		TEST_METHOD(Class__AT__ATGameState)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameState, CharacterFactory, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGameState, TimerTickExecuterManager, 0x03D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATGameState, 0x03D8);
		}

		// class UATGeneralDemoAnimInstance : public UAnimSequencerInstance_AnimBP
		TEST_METHOD(Class__AT__ATGeneralDemoAnimInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATGeneralDemoAnimInstance, OwnerLipSync, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATGeneralDemoAnimInstance, LipSyncBlendSpace, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATGeneralDemoAnimInstance, UnknownData_IVTA, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATGeneralDemoAnimInstance, 0x03A0);
		}

		// class AATGeneralDemoCharacter : public AAT_CharacterBase
		TEST_METHOD(Class__AT__ATGeneralDemoCharacter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGeneralDemoCharacter, UpperMeshComponent, 0x08B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGeneralDemoCharacter, LowerMeshComponent, 0x08C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGeneralDemoCharacter, ExtraMeshComponent01, 0x08C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGeneralDemoCharacter, UniqueTextureMark01, 0x08D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGeneralDemoCharacter, bUseLipSync, 0x08D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATGeneralDemoCharacter, UnknownData_9Q0X, 0x08D9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATGeneralDemoCharacter, 0x08E0);
		}

		// class UATGeneralDemoCtrl : public UATSequencerDemoCtrl
		TEST_METHOD(Class__AT__ATGeneralDemoCtrl)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATGeneralDemoCtrl, 0x00D8);
		}

		// class UGeneralTalkAnimationProperty : public UInterface
		TEST_METHOD(Class__AT__GeneralTalkAnimationProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeneralTalkAnimationProperty, 0x0028);
		}

		// class UIdlingSequentialAnimation : public UInterface
		TEST_METHOD(Class__AT__IdlingSequentialAnimation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UIdlingSequentialAnimation, 0x0028);
		}

		// class UATIngameDemoCtrl : public UATDemoCtrlBase
		TEST_METHOD(Class__AT__ATIngameDemoCtrl)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATIngameDemoCtrl, UnknownData_IFLX, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATIngameDemoCtrl, TargetPointList, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATIngameDemoCtrl, UnknownData_YGPY, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATIngameDemoCtrl, 0x00B0);
		}

		// class AATIngameDemoResource : public AATDemoResource
		TEST_METHOD(Class__AT__ATIngameDemoResource)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATIngameDemoResource, OwnerCtrl, 0x0340);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATIngameDemoResource, 0x0348);
		}

		// class AATIngameDemoResource_Tandem : public AATIngameDemoResource
		TEST_METHOD(Class__AT__ATIngameDemoResource_Tandem)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATIngameDemoResource_Tandem, AnimMontageSecondCharacter, 0x0348);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATIngameDemoResource_Tandem, 0x0350);
		}

		// class UATInteractComponent : public USphereComponent
		TEST_METHOD(Class__AT__ATInteractComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATInteractComponent, UnknownData_KMQJ, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATInteractComponent, UnknownData_MSFQ, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATInteractComponent, TalkObjectArray, 0x0610);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATInteractComponent, UnknownData_HKY2, 0x0620);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATInteractComponent, 0x0630);
		}

		// class UATInteractTargetInterface : public UInterface
		TEST_METHOD(Class__AT__ATInteractTargetInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATInteractTargetInterface, 0x0028);
		}

		// class UATInteractTargetInterfaceAnimal : public UATInteractTargetInterface
		TEST_METHOD(Class__AT__ATInteractTargetInterfaceAnimal)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATInteractTargetInterfaceAnimal, 0x0028);
		}

		// class UATInteractTargetInterfaceBonfire : public UATInteractTargetInterface
		TEST_METHOD(Class__AT__ATInteractTargetInterfaceBonfire)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATInteractTargetInterfaceBonfire, 0x0028);
		}

		// class UATInteractTargetInterfaceFishing : public UATInteractTargetInterface
		TEST_METHOD(Class__AT__ATInteractTargetInterfaceFishing)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATInteractTargetInterfaceFishing, 0x0028);
		}

		// class UATInteractTargetInterfaceGashapon : public UATInteractTargetInterface
		TEST_METHOD(Class__AT__ATInteractTargetInterfaceGashapon)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATInteractTargetInterfaceGashapon, 0x0028);
		}

		// class UATInteractTargetInterfaceItemPoint : public UATInteractTargetInterface
		TEST_METHOD(Class__AT__ATInteractTargetInterfaceItemPoint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATInteractTargetInterfaceItemPoint, 0x0028);
		}

		// class UATInteractTargetInterfaceItemActor : public UATInteractTargetInterface
		TEST_METHOD(Class__AT__ATInteractTargetInterfaceItemActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATInteractTargetInterfaceItemActor, 0x0028);
		}

		// class UATInteractTargetInterfaceMemories : public UATInteractTargetInterface
		TEST_METHOD(Class__AT__ATInteractTargetInterfaceMemories)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATInteractTargetInterfaceMemories, 0x0028);
		}

		// class UATInteractTargetInterfaceNPC : public UATInteractTargetInterface
		TEST_METHOD(Class__AT__ATInteractTargetInterfaceNPC)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATInteractTargetInterfaceNPC, 0x0028);
		}

		// class UATInteractTargetInterfaceTraining : public UATInteractTargetInterface
		TEST_METHOD(Class__AT__ATInteractTargetInterfaceTraining)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATInteractTargetInterfaceTraining, 0x0028);
		}

		// class UATInteractTargetInterfaceWorldMap : public UATInteractTargetInterface
		TEST_METHOD(Class__AT__ATInteractTargetInterfaceWorldMap)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATInteractTargetInterfaceWorldMap, 0x0028);
		}

		// class UATInterface_SpawnProjectile : public UInterface
		TEST_METHOD(Class__AT__ATInterface_SpawnProjectile)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATInterface_SpawnProjectile, 0x0028);
		}

		// class UItemTrader : public UActorComponent
		TEST_METHOD(Class__AT__ItemTrader)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UItemTrader, TradeId, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UItemTrader, UnknownData_0CJ6, 0x0108);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UItemTrader, 0x0110);
		}

		// class UATJostleBeam : public UATDirectionBase
		TEST_METHOD(Class__AT__ATJostleBeam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeam, UnknownData_R2CF, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeam, OwnerCharacter, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeam, EnemyCharacter, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeam, ProjectilePlBeam, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeam, ProjectileEmBeam, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeam, ProjectileWinBeam, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeam, ProjectileLoseBeam, 0x01C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeam, ATJostleBeamParam, 0x01D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeam, DamageParamFinish, 0x01D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeam, ConflictEffect, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeam, PreConflictEffect, 0x0210);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeam, UnknownData_04W3, 0x0218);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATJostleBeam, 0x0240);
		}

		// class UATJostleBeamManager : public UObject
		TEST_METHOD(Class__AT__ATJostleBeamManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamManager, UnknownData_D1NJ, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamManager, ATJostleBeamParam, 0x02F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamManager, AssetLoaderMap, 0x0300);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATJostleBeamManager, 0x0350);
		}

		// class UATJostleBeamParam : public UObject
		TEST_METHOD(Class__AT__ATJostleBeamParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, JostleDeg, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, JostleInputTimeLimit, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, JostleStartSlowRate, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, JostleStartFadeOutTime, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, JostleStartFadeWaitTime, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, JostleStartFadeInTime, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, JostleInput_AddCnt, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, JostleInputSubInterval, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, JostleInput_SubCnt, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, UnknownData_DWFT, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, DiffLevelInfo, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, JostleJudgmentWin, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, JostleJudgmentLose, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, JostleBeamDistWin, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, JostleBeamDistLose, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, JostleBeamMoveSpeed, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, JostleBeamMoveSpeed_Result, 0x0074);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, JostleBeamCam_S, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, JostleBeamCam_M, 0x00A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, JostleBeamCam_L, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, JostleBeamCamPreBlend, 0x00FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, JostleBeamCamNextBlend, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, JostleBeamDist_S, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, JostleBeamDist_M, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, JostleBeamDist_L, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, JostleBeamOffset_S, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, JostleBeamOffset_M, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, JostleBeamOffset_L, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, ConflictOffset_S, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, ConflictOffset_M, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, ConflictOffset_L, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, ConflictEffect_S, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, ConflictEffect_M, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, ConflictEffect_L, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATJostleBeamParam, ConflictEffect_Pre, 0x0140);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATJostleBeamParam, 0x0148);
		}

		// class UKPIRequester : public UObject
		TEST_METHOD(Class__AT__KPIRequester)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UKPIRequester, UnknownData_SHW4, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKPIRequester, 0x00C0);
		}

		// class UKPISettings : public UDeveloperSettings
		TEST_METHOD(Class__AT__KPISettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UKPISettings, URL, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UKPISettings, titleCd, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UKPISettings, Platform, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UKPISettings, getEnvIssureId, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UKPISettings, getEnvToken, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UKPISettings, limit_Queueing, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UKPISettings, UnknownData_26BU, 0x0074);
			CHEAT_GEAR_CHECK_OFFSET(CG::UKPISettings, closeUpKpiDataList, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKPISettings, 0x0088);
		}

		// class UATLevelBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__AT__ATLevelBlueprintFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATLevelBlueprintFunctionLibrary, 0x0028);
		}

		// class AATLevelManager : public ACFLevelManager
		TEST_METHOD(Class__AT__ATLevelManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATLevelManager, LevelProgress, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATLevelManager, LevelProgressNorm, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATLevelManager, PersistentLists, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATLevelManager, LoadedSubLevels, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATLevelManager, UnknownData_I9O8, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATLevelManager, bOpenedMainMenu, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATLevelManager, bRequestedPlayerChange, 0x0511);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATLevelManager, UnknownData_JDLG, 0x0512);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATLevelManager, 0x0518);
		}

		// class AATLevelScriptActor : public ALevelScriptActor
		TEST_METHOD(Class__AT__ATLevelScriptActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATLevelScriptActor, 0x0340);
		}

		// class UATLineComponent : public UPrimitiveComponent
		TEST_METHOD(Class__AT__ATLineComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATLineComponent, Top, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATLineComponent, Tail, 0x0574);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATLineComponent, Color, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATLineComponent, Thickness, 0x0584);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATLineComponent, UnknownData_UTJ2, 0x0588);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATLineComponent, 0x0590);
		}

		// class UATLongBlowoffManager : public UObject
		TEST_METHOD(Class__AT__ATLongBlowoffManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATLongBlowoffManager, DummyActor, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATLongBlowoffManager, UnknownData_GN98, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATLongBlowoffManager, 0x0050);
		}

		// class AATLongBlowoffObjectManager : public AActor
		TEST_METHOD(Class__AT__ATLongBlowoffObjectManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATLongBlowoffObjectManager, Objects, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATLongBlowoffObjectManager, DefaultTrailParticle, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATLongBlowoffObjectManager, TrailParticleTable, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATLongBlowoffObjectManager, DefaultPenetrateParticle, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATLongBlowoffObjectManager, PenetrateParticleTable, 0x03A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATLongBlowoffObjectManager, 0x03F8);
		}

		// class UATLookAtAnimationBlendInterface : public UInterface
		TEST_METHOD(Class__AT__ATLookAtAnimationBlendInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATLookAtAnimationBlendInterface, 0x0028);
		}

		// class UATLookAtAnimationInterface : public UInterface
		TEST_METHOD(Class__AT__ATLookAtAnimationInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATLookAtAnimationInterface, 0x0028);
		}

		// class ULookAtCalculator : public UActorComponent
		TEST_METHOD(Class__AT__LookAtCalculator)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULookAtCalculator, UnknownData_4T9R, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULookAtCalculator, 0x0140);
		}

		// class UATMapIconComponent : public UActorComponent
		TEST_METHOD(Class__AT__ATMapIconComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMapIconComponent, MapIconType, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMapIconComponent, UnknownData_7I58, 0x0101);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMapIconComponent, SearchRangeRadius, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMapIconComponent, bShowMapIcon, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMapIconComponent, bShowLandmarkIcon, 0x0109);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMapIconComponent, LandmarkType, 0x010A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMapIconComponent, UnknownData_KNN6, 0x010B);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMapIconComponent, 0x0130);
		}

		// class UATMechaDevAlwaysResourceManager : public UObject
		TEST_METHOD(Class__AT__ATMechaDevAlwaysResourceManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMechaDevAlwaysResourceManager, 0x0028);
		}

		// class AATMechaDevMachineActor : public ASkeletalMeshActor
		TEST_METHOD(Class__AT__ATMechaDevMachineActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATMechaDevMachineActor, 0x03C0);
		}

		// class AATMechaDevMachineViewer : public AActor
		TEST_METHOD(Class__AT__ATMechaDevMachineViewer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATMechaDevMachineViewer, MachineActor, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATMechaDevMachineViewer, SceneCapture2D, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATMechaDevMachineViewer, UnknownData_SF16, 0x0348);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATMechaDevMachineViewer, 0x0350);
		}

		// class AATMechaDevManager : public AActor
		TEST_METHOD(Class__AT__ATMechaDevManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATMechaDevManager, bPossibleMechaDevDebug, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATMechaDevManager, UnknownData_JQOS, 0x0339);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATMechaDevManager, StateMachine, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATMechaDevManager, ResourceManager, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATMechaDevManager, MachineViewer, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATMechaDevManager, MenuManager, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATMechaDevManager, CaptureManager, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATMechaDevManager, UnknownData_QY4C, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATMechaDevManager, OwnerCharacter, 0x03A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATMechaDevManager, 0x03A8);
		}

		// class AATMechaDevResourceManager : public AActor
		TEST_METHOD(Class__AT__ATMechaDevResourceManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATMechaDevResourceManager, TwinFootMesh, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATMechaDevResourceManager, AirCarMesh, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATMechaDevResourceManager, SubmarineMesh, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATMechaDevResourceManager, CameraAnimDirection, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATMechaDevResourceManager, DeveloperDevMenu, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATMechaDevResourceManager, DeveloperDirection, 0x0360);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATMechaDevResourceManager, 0x0368);
		}

		// class AATMechaDevSceneCapture2D : public ASceneCapture2D
		TEST_METHOD(Class__AT__ATMechaDevSceneCapture2D)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATMechaDevSceneCapture2D, 0x0348);
		}

		// class UATMechaDevState_Base : public UATStateBase
		TEST_METHOD(Class__AT__ATMechaDevState_Base)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMechaDevState_Base, UnknownData_IA0W, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMechaDevState_Base, 0x0050);
		}

		// class UATMechaDevState_None : public UATMechaDevState_Base
		TEST_METHOD(Class__AT__ATMechaDevState_None)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMechaDevState_None, 0x0050);
		}

		// class UATMechaDevState_DevMenu : public UATMechaDevState_Base
		TEST_METHOD(Class__AT__ATMechaDevState_DevMenu)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMechaDevState_DevMenu, UnknownData_GSWN, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMechaDevState_DevMenu, 0x0058);
		}

		// class UATMechaDevState_Direction : public UATMechaDevState_Base
		TEST_METHOD(Class__AT__ATMechaDevState_Direction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMechaDevState_Direction, 0x0050);
		}

		// class UATMechaDevStateMachine : public UATStateMachineBase
		TEST_METHOD(Class__AT__ATMechaDevStateMachine)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMechaDevStateMachine, Manager, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMechaDevStateMachine, 0x0058);
		}

		// class UATMenuInputComponent : public UATInputComponent
		TEST_METHOD(Class__AT__ATMenuInputComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMenuInputComponent, 0x01F8);
		}

		// class UATMenuWorldMapInputComponent : public UATInputComponent
		TEST_METHOD(Class__AT__ATMenuWorldMapInputComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMenuWorldMapInputComponent, 0x01F8);
		}

		// class AMiniQuest : public AActor
		TEST_METHOD(Class__AT__MiniQuest)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AMiniQuest, UnknownData_87FT, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMiniQuest, 0x0350);
		}

		// class UMissionStore : public UObject
		TEST_METHOD(Class__AT__MissionStore)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMissionStore, UnknownData_4N1R, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMissionStore, 0x0108);
		}

		// class UATModelFaderComponent : public UActorComponent
		TEST_METHOD(Class__AT__ATModelFaderComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATModelFaderComponent, UnknownData_8XQK, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATModelFaderComponent, MatInsTbl, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATModelFaderComponent, UnknownData_813Q, 0x0120);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATModelFaderComponent, 0x0138);
		}

		// class UATMovableEnvObj : public USceneComponent
		TEST_METHOD(Class__AT__ATMovableEnvObj)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovableEnvObj, UnknownData_2FLE, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovableEnvObj, UnknownData_42C1, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovableEnvObj, TickIntervalParam, 0x02F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovableEnvObj, UnknownData_SWUI, 0x02F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovableEnvObj, 0x030C);
		}

		// class UATMovableEnvObj_Rotate : public UATMovableEnvObj
		TEST_METHOD(Class__AT__ATMovableEnvObj_Rotate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovableEnvObj_Rotate, RotateAxis, 0x030C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovableEnvObj_Rotate, UnknownData_MDI8, 0x0318);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovableEnvObj_Rotate, 0x0330);
		}

		// class UATMovableEnvObj_Waver : public UATMovableEnvObj
		TEST_METHOD(Class__AT__ATMovableEnvObj_Waver)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovableEnvObj_Waver, MoveVector, 0x030C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovableEnvObj_Waver, UnknownData_VPIF, 0x0318);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovableEnvObj_Waver, 0x0330);
		}

		// class UMoveAnimation : public UInterface
		TEST_METHOD(Class__AT__MoveAnimation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMoveAnimation, 0x0028);
		}

		// class UATNavigationInvokerComponent : public UNavigationInvokerComponent
		TEST_METHOD(Class__AT__ATNavigationInvokerComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATNavigationInvokerComponent, 0x0108);
		}

		// class UATNimbusTandemCharacterAnimInstance : public UAT_AnimInstance
		TEST_METHOD(Class__AT__ATNimbusTandemCharacterAnimInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATNimbusTandemCharacterAnimInstance, OwnerMoveState, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATNimbusTandemCharacterAnimInstance, OwnerAnimInstance, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATNimbusTandemCharacterAnimInstance, UnknownData_QNFB, 0x03D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATNimbusTandemCharacterAnimInstance, 0x03E0);
		}

		// class AATPlaceObjectPreviewActor : public AActor
		TEST_METHOD(Class__AT__ATPlaceObjectPreviewActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATPlaceObjectPreviewActor, Param, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATPlaceObjectPreviewActor, PreviewPSCList, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATPlaceObjectPreviewActor, 0x0388);
		}

		// class UATObjectPlacementComponent : public UActorComponent
		TEST_METHOD(Class__AT__ATObjectPlacementComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATObjectPlacementComponent, ZOrbSplineList, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATObjectPlacementComponent, ItemList, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATObjectPlacementComponent, UnknownData_CN67, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATObjectPlacementComponent, NormalItemClass, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATObjectPlacementComponent, RareItemClass, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATObjectPlacementComponent, EpicItemClass, 0x0188);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATObjectPlacementComponent, 0x0190);
		}

		// class UATObjectPool : public UObject
		TEST_METHOD(Class__AT__ATObjectPool)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATObjectPool, UnknownData_BMT3, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATObjectPool, MaxObject, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATObjectPool, UnknownData_I2JJ, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATObjectPool, PoolingObjectsArray, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATObjectPool, UnknownData_1GJE, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATObjectPool, 0x0060);
		}

		// class UParticleHolder : public UActorComponent
		TEST_METHOD(Class__AT__ParticleHolder)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UParticleHolder, UnknownData_YTOI, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UParticleHolder, 0x0118);
		}

		// class UATParticleManager : public UActorComponent
		TEST_METHOD(Class__AT__ATParticleManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATParticleManager, CommonParticleList, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATParticleManager, CommonParticleDataList, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATParticleManager, ParticleSystemDataMap, 0x0150);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATParticleManager, 0x01A0);
		}

		// class UATParty : public UObject
		TEST_METHOD(Class__AT__ATParty)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATParty, UnknownData_3JD6, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATParty, SupportSystem, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATParty, Party, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATParty, UnknownData_VAK9, 0x01C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATParty, 0x0298);
		}

		// class UATPartyManager : public UActorComponent
		TEST_METHOD(Class__AT__ATPartyManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPartyManager, PartyList, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPartyManager, UnknownData_2UWF, 0x0110);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATPartyManager, 0x0188);
		}

		// class UATPlatformFeatures : public UObject
		TEST_METHOD(Class__AT__ATPlatformFeatures)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATPlatformFeatures, 0x0028);
		}

		// class UATPlayerAutoControlComponent : public UActorComponent
		TEST_METHOD(Class__AT__ATPlayerAutoControlComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPlayerAutoControlComponent, UnknownData_S9JR, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPlayerAutoControlComponent, TalkParam, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPlayerAutoControlComponent, CollisionParam, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPlayerAutoControlComponent, UnknownData_R49Y, 0x0140);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATPlayerAutoControlComponent, 0x0148);
		}

		// class AATPlayerAutoControlTrigger : public AActor
		TEST_METHOD(Class__AT__ATPlayerAutoControlTrigger)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATPlayerAutoControlTrigger, UnknownData_FVEA, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATPlayerAutoControlTrigger, CollisionParam, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATPlayerAutoControlTrigger, WallHitEffect, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATPlayerAutoControlTrigger, WallHitEffectDistance, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATPlayerAutoControlTrigger, UnknownData_OEQA, 0x03F4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATPlayerAutoControlTrigger, 0x0408);
		}

		// class UATPlayerCameraInput : public UATInputComponent
		TEST_METHOD(Class__AT__ATPlayerCameraInput)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPlayerCameraInput, UnknownData_G7XO, 0x01F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATPlayerCameraInput, 0x0210);
		}

		// class AATPlayerCameraManager : public APlayerCameraManager
		TEST_METHOD(Class__AT__ATPlayerCameraManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATPlayerCameraManager, m_xViewActors, 0x2C60);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATPlayerCameraManager, UnknownData_0U5D, 0x2DE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATPlayerCameraManager, m_pDataTable, 0x4920);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATPlayerCameraManager, m_pViewActorPlayerMoveParamTable, 0x4928);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATPlayerCameraManager, m_pCharacterCameraParamTable, 0x4930);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATPlayerCameraManager, m_pCameraConstParam, 0x4938);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATPlayerCameraManager, UnknownData_AOYE, 0x4940);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATPlayerCameraManager, 0x4960);
		}

		// class AATPlayerController : public AATPlayerControllerBase
		TEST_METHOD(Class__AT__ATPlayerController)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATPlayerController, UnknownData_EF47, 0x06B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATPlayerController, m_xInputComponentArray, 0x0838);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATPlayerController, UnknownData_D8FK, 0x0848);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATPlayerController, CachedCmnInput, 0x08C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATPlayerController, CachedPlayerMoveInput, 0x08C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATPlayerController, 0x08D0);
		}

		// class UATPlayerMoveInput : public UATInputComponent
		TEST_METHOD(Class__AT__ATPlayerMoveInput)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPlayerMoveInput, UnknownData_PKP0, 0x01F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPlayerMoveInput, OwnerChara, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPlayerMoveInput, OwnerMoveState, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPlayerMoveInput, OwnerController, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPlayerMoveInput, OwnerVirtualController, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPlayerMoveInput, CameraManager, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPlayerMoveInput, FlyingNimbus, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPlayerMoveInput, RestrictMove, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPlayerMoveInput, OldViewTarget, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPlayerMoveInput, UnknownData_14EQ, 0x0380);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATPlayerMoveInput, 0x04C0);
		}

		// class AATPlayerStart : public APlayerStart
		TEST_METHOD(Class__AT__ATPlayerStart)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATPlayerStart, StartMoveCategory, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATPlayerStart, UnknownData_IK38, 0x0369);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATPlayerStart, 0x0370);
		}

		// class UATPoseSnapshotComponent : public USceneComponent
		TEST_METHOD(Class__AT__ATPoseSnapshotComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPoseSnapshotComponent, UnknownData_LSZ3, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPoseSnapshotComponent, UnknownData_DFRC, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPoseSnapshotComponent, DynamicMaterials, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPoseSnapshotComponent, UnknownData_F4OL, 0x02C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATPoseSnapshotComponent, 0x02E0);
		}

		// class UATPostProcessEffectBase : public UObject
		TEST_METHOD(Class__AT__ATPostProcessEffectBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPostProcessEffectBase, UnknownData_RIEL, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATPostProcessEffectBase, 0x00A8);
		}

		// class UATPostEffectCmnSkillAquisition : public UATPostProcessEffectBase
		TEST_METHOD(Class__AT__ATPostEffectCmnSkillAquisition)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPostEffectCmnSkillAquisition, UnknownData_R76A, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATPostEffectCmnSkillAquisition, 0x00B0);
		}

		// class UATPostProcessEffectBlur : public UATPostProcessEffectBase
		TEST_METHOD(Class__AT__ATPostProcessEffectBlur)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPostProcessEffectBlur, DynamicMaterial, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPostProcessEffectBlur, UnknownData_D0K2, 0x00B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATPostProcessEffectBlur, 0x00D0);
		}

		// class UATPostProcessEffectCmnAfterimage : public UATPostProcessEffectBase
		TEST_METHOD(Class__AT__ATPostProcessEffectCmnAfterimage)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPostProcessEffectCmnAfterimage, UnknownData_OVXZ, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATPostProcessEffectCmnAfterimage, 0x00B0);
		}

		// class UATPostProcessEffectCmnHologram : public UATPostProcessEffectBase
		TEST_METHOD(Class__AT__ATPostProcessEffectCmnHologram)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPostProcessEffectCmnHologram, UnknownData_88NP, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATPostProcessEffectCmnHologram, 0x00B8);
		}

		// class UATPostProcessEffectColorGrading : public UATPostProcessEffectBase
		TEST_METHOD(Class__AT__ATPostProcessEffectColorGrading)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPostProcessEffectColorGrading, UnknownData_YXXW, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATPostProcessEffectColorGrading, 0x00B8);
		}

		// class UATPostProcessEffectCommandPalette : public UATPostProcessEffectBase
		TEST_METHOD(Class__AT__ATPostProcessEffectCommandPalette)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPostProcessEffectCommandPalette, DynamicMaterial, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPostProcessEffectCommandPalette, UnknownData_JYP8, 0x00B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATPostProcessEffectCommandPalette, 0x00C8);
		}

		// class UATPostProcessEffectDark : public UATPostProcessEffectBase
		TEST_METHOD(Class__AT__ATPostProcessEffectDark)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPostProcessEffectDark, UnknownData_Y11I, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATPostProcessEffectDark, 0x00C0);
		}

		// class UATPostProcessEffectDeathWarning : public UATPostProcessEffectBase
		TEST_METHOD(Class__AT__ATPostProcessEffectDeathWarning)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPostProcessEffectDeathWarning, UnknownData_T32H, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATPostProcessEffectDeathWarning, 0x00D8);
		}

		// class UATPostProcessEffectEnemySearch : public UATPostProcessEffectBase
		TEST_METHOD(Class__AT__ATPostProcessEffectEnemySearch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPostProcessEffectEnemySearch, UnknownData_GEI3, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATPostProcessEffectEnemySearch, 0x00C8);
		}

		// class UATPostProcessEffectFishShadows : public UATPostProcessEffectBase
		TEST_METHOD(Class__AT__ATPostProcessEffectFishShadows)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPostProcessEffectFishShadows, UnknownData_8EMS, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATPostProcessEffectFishShadows, 0x00B8);
		}

		// class UATPostProcessEffectFlash : public UATPostProcessEffectBase
		TEST_METHOD(Class__AT__ATPostProcessEffectFlash)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPostProcessEffectFlash, Material, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPostProcessEffectFlash, MaterialParameter, 0x00B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATPostProcessEffectFlash, 0x00B8);
		}

		// class UATPostProcessEffectFringe : public UATPostProcessEffectBase
		TEST_METHOD(Class__AT__ATPostProcessEffectFringe)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPostProcessEffectFringe, UnknownData_9ATS, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATPostProcessEffectFringe, 0x00B0);
		}

		// class UATPostProcessEffectSilhouette : public UATPostProcessEffectBase
		TEST_METHOD(Class__AT__ATPostProcessEffectSilhouette)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPostProcessEffectSilhouette, Material, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPostProcessEffectSilhouette, MaterialParameter, 0x00B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATPostProcessEffectSilhouette, 0x00B8);
		}

		// class UATPostProcessEffectTimeStop : public UATPostProcessEffectBase
		TEST_METHOD(Class__AT__ATPostProcessEffectTimeStop)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPostProcessEffectTimeStop, UnknownData_S1EH, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATPostProcessEffectTimeStop, 0x00C0);
		}

		// class UATPreRenderDemoCtrl : public UATDemoCtrlBase
		TEST_METHOD(Class__AT__ATPreRenderDemoCtrl)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPreRenderDemoCtrl, DemoActor, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPreRenderDemoCtrl, DemoActorList, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATPreRenderDemoCtrl, 0x00A0);
		}

		// class AProjectile : public AActor
		TEST_METHOD(Class__AT__Projectile)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AProjectile, ParticleFire, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AProjectile, HitEffect, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AProjectile, m_pAT_ProjectileMovement, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::AProjectile, OffsetType, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::AProjectile, EnableLevelDamage, 0x0351);
			CHEAT_GEAR_CHECK_OFFSET(CG::AProjectile, ProjectileLockTargetInfo, 0x0352);
			CHEAT_GEAR_CHECK_OFFSET(CG::AProjectile, bIgnoreDestroyAll, 0x0353);
			CHEAT_GEAR_CHECK_OFFSET(CG::AProjectile, UnknownData_R8X3, 0x0354);
			CHEAT_GEAR_CHECK_OFFSET(CG::AProjectile, DamageParam, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::AProjectile, UnknownData_VRB3, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::AProjectile, ProjectileComponents, 0x03A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AProjectile, 0x03B0);
		}

		// class AATProjectileBeam : public AProjectile
		TEST_METHOD(Class__AT__ATProjectileBeam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, ParticleRootST, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, ParticleRootLP, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, ParticleRootED, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, ParticleTopST, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, ParticleTopLP, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, ParticleTopED, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, AbsorbEffect, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, InitTopOffset, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, BeamLengthBase, 0x03EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, CollisionSize, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, PhotonScale, 0x03F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, DurationST, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, StopMoveTime, 0x03FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, UseBlockingHit, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, UnknownData_S7LM, 0x0401);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, ParticleBlocking, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, DamageInterval, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, DamageCountMax, 0x0414);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, DamageParamFinish, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, UseHitPhoton, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, UnknownData_8BJU, 0x0449);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, HitPhotonWait, 0x044C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, UseSpline, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, UnknownData_2QT4, 0x0451);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, SplineMesh, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, SplinePointNum, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, SplineLengthMin, 0x0464);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, SplineTrackingBase, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, SplineTrackingPassing, 0x046C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, JostleBeamSize, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, UnknownData_ZTRU, 0x0471);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, JostleBeamReplaceBeam_S, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, JostleBeamReplaceBeam_M, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, JostleBeamReplaceBeam_L, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, JostleBeamCylinderLength, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, UnknownData_LFWI, 0x0494);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, JostleBeamLengthCurve, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, JostleBeamTopSizeCurve, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, JostleBeamRootSizeCurve, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, JostleBeamColor01, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, JostleBeamColor02, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, JostleBeamColor03, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, JostleBeamSpwanOff, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, UnknownData_E7Q6, 0x04E1);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, ParticleCompRoot, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, ParticleCompTop, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, ParticleCompBlocking, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, ParticleCompReplaceBeam, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, DamageCollision, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, UnknownData_XT1U, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, MoveUpdateComp, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, OwnerCharacter, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBeam, UnknownData_G8VY, 0x0528);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATProjectileBeam, 0x0630);
		}

		// class AATProjectileBomb : public AProjectile
		TEST_METHOD(Class__AT__ATProjectileBomb)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, Particle, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, SECode, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, UnknownData_CPLA, 0x03B9);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, DamageStartTime, 0x03BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, DamageRadius, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, DamageDuration, 0x03C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, UseHitPhoton, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, UseBlur, 0x03C9);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, UnknownData_3AT8, 0x03CA);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, BlurAmount, 0x03CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, BlurRadius, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, BlurExponent, 0x03D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, BlurDuration, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, UseDamageCount, 0x03DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, UnknownData_18ZB, 0x03DD);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, DamageCountMax, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, DamageInterval, 0x03E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, UseFinish, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, UnknownData_IJS7, 0x03E9);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, FinishDamageTime, 0x03EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, FinishDamageRadius, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, FinishDamageDuration, 0x03F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, FinishDamageParam, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, GeneralScale, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, UnknownData_RCSQ, 0x042C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, ParticleComp, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBomb, DamageCollision, 0x0490);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATProjectileBomb, 0x0498);
		}

		// class AATProjectileBullet : public AProjectile
		TEST_METHOD(Class__AT__ATProjectileBullet)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, BulletMesh, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, BulletMeshTrailTime, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, UnknownData_53YU, 0x03BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, OffsetHitEffect, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, VanishEffect, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, ReflectEffect, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, AbsorbEffect, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, CollideEffect, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, m_pSphere, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, m_pPSCProjectile, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, fHomingTime, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, fDestroyTime, 0x03FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, fSpwnStartWaitTime, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, fMoveStartWaitTime, 0x0404);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, MoveSeStartTime, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, MoveSeID, 0x040C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, HoldSeID, 0x040D);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, HoldOffSeID, 0x040E);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, UnknownData_QOZO, 0x040F);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, DamageRadius, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, bDisableHitDestroy, 0x0414);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, bVanishMoveStop, 0x0415);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, UseDamageCount, 0x0416);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, UseDamageCountEffect, 0x0417);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, DamageCountMax, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, DamageInterval, 0x041C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, DamageSlowDilation, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, DamageSlowDuration, 0x0424);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, UseBulletBomb, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, UnknownData_KYO3, 0x0429);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, BulletBomb, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, UseBulletBombVanish, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, BombSeID, 0x0439);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, HitEffectSnapTarget, 0x043A);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, SnapOffsetHeightCollect, 0x043B);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, HitEffectSnapOffset, 0x043C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, UseHitPhoton, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, UseBlur, 0x0449);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, UnknownData_542J, 0x044A);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, BlurAmount, 0x044C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, BlurRadius, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, BlurExponent, 0x0454);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, BlurDuration, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, bReactionBulletGuard, 0x045C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, UnknownData_HR1K, 0x045D);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, ReactionBulletGuardDistance, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, ReactionBulletGuardAngle, 0x0464);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, UnknownData_VYRG, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, DamageCollision, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, BulletMeshComponent, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, HitPhoton, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet, UnknownData_IPYN, 0x04C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATProjectileBullet, 0x0528);
		}

		// class AATProjectileBullet_Box : public AATProjectileBullet
		TEST_METHOD(Class__AT__ATProjectileBullet_Box)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet_Box, CollisionExtent, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileBullet_Box, UnknownData_B3DD, 0x0534);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATProjectileBullet_Box, 0x0538);
		}

		// class UATProjectileComponent : public UActorComponent
		TEST_METHOD(Class__AT__ATProjectileComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATProjectileComponent, UnknownData_PF3J, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATProjectileComponent, 0x0108);
		}

		// class UATProjectileComponentHoming : public UATProjectileComponent
		TEST_METHOD(Class__AT__ATProjectileComponentHoming)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATProjectileComponentHoming, AngleSpeed, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATProjectileComponentHoming, AngleLimit, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATProjectileComponentHoming, homingTime, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATProjectileComponentHoming, UnknownData_11TO, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATProjectileComponentHoming, HomingCurve, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATProjectileComponentHoming, UnknownData_LEYD, 0x0120);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATProjectileComponentHoming, 0x0128);
		}

		// class UATProjectileComponentParabola : public UATProjectileComponent
		TEST_METHOD(Class__AT__ATProjectileComponentParabola)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATProjectileComponentParabola, Gravity, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATProjectileComponentParabola, UnknownData_U5FO, 0x010C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATProjectileComponentParabola, 0x0110);
		}

		// class AATProjectileDiffusionMissile : public AATProjectileBullet
		TEST_METHOD(Class__AT__ATProjectileDiffusionMissile)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileDiffusionMissile, MeanderingCycle, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileDiffusionMissile, MeanderingAngle, 0x052C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileDiffusionMissile, MeanderingAngleNoise, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileDiffusionMissile, MeanderingDistance, 0x0534);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileDiffusionMissile, MeanderingAngleTimeMinRate, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileDiffusionMissile, MeanderingAngleTimeMin, 0x053C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileDiffusionMissile, MeanderingAngleTimeMax, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileDiffusionMissile, UnknownData_RI09, 0x0544);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATProjectileDiffusionMissile, 0x0580);
		}

		// class AATProjectileField : public AProjectile
		TEST_METHOD(Class__AT__ATProjectileField)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileField, VanishEffect, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileField, m_pSphere, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileField, m_pPSCProjectile, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileField, fHomingTime, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileField, fDestroyTime, 0x03CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileField, fSpwnStartWaitTime, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileField, fMoveStartWaitTime, 0x03D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileField, DamageRadius, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileField, UseHitPhoton, 0x03DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileField, UnknownData_LI4H, 0x03DD);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileField, HitPhotonDamageFly, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileField, HitPhotonDamage, 0x03E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileField, HitPhotonRadius, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileField, HitEffectScaleRate, 0x03EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileField, fDestroyDistance, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileField, m_RadiusShotLandingVolume, 0x03F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileField, UnknownData_LRMB, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileField, DamageCollision, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileField, UnknownData_0LNQ, 0x0480);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATProjectileField, 0x04A0);
		}

		// class AATProjectileIndicationBomb : public AATProjectileBomb
		TEST_METHOD(Class__AT__ATProjectileIndicationBomb)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileIndicationBomb, ParticleST, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileIndicationBomb, ParticleLP, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileIndicationBomb, ParticleED, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileIndicationBomb, IndicationScale, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileIndicationBomb, IndicationSECode, 0x04B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileIndicationBomb, UnknownData_VKNZ, 0x04B5);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileIndicationBomb, IndicationSTTime, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileIndicationBomb, IndicationLPTime, 0x04BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileIndicationBomb, IndicationEDTime, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileIndicationBomb, UseTargetLocation, 0x04C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileIndicationBomb, UseRandomLocation, 0x04C5);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileIndicationBomb, UnknownData_BTSQ, 0x04C6);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileIndicationBomb, RandomOffset, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileIndicationBomb, UnknownData_7M9R, 0x04D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileIndicationBomb, IndicationParticleComp, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileIndicationBomb, UnknownData_9OVM, 0x04E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATProjectileIndicationBomb, 0x04E8);
		}

		// class UATProjectileManager : public UActorComponent
		TEST_METHOD(Class__AT__ATProjectileManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATProjectileManager, UnknownData_JK52, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATProjectileManager, ProjectileList, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATProjectileManager, UnknownData_DD1H, 0x0120);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATProjectileManager, 0x0148);
		}

		// class AATProjectileMeanderingMissile : public AATProjectileBullet
		TEST_METHOD(Class__AT__ATProjectileMeanderingMissile)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMeanderingMissile, MeanderingStartTime, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMeanderingMissile, MeanderingCycle, 0x052C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMeanderingMissile, MeanderingAngle, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMeanderingMissile, MeanderingAngleNoise, 0x0534);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMeanderingMissile, MeanderingAngleDistanceMinRate, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMeanderingMissile, MeanderingAngleDistanceMin, 0x053C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMeanderingMissile, MeanderingAngleDistanceMax, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMeanderingMissile, UnknownData_KV7J, 0x0544);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMeanderingMissile, MeanderingAngleDistanceCurve, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMeanderingMissile, MeanderingAngleMax, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMeanderingMissile, HomingAngle, 0x0554);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMeanderingMissile, UnknownData_OSY9, 0x0558);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATProjectileMeanderingMissile, 0x0580);
		}

		// class AATProjectileMine : public AProjectile
		TEST_METHOD(Class__AT__ATProjectileMine)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, BulletMesh, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, BulletMeshTrailTime, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, UnknownData_1HRJ, 0x03BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, OffsetHitEffect, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, VanishEffect, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, ReflectEffect, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, AbsorbEffect, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, CollideEffect, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, m_pSphere, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, m_pPSCProjectile, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, fHomingTime, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, fDestroyTime, 0x03FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, fSpwnStartWaitTime, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, fMoveStartWaitTime, 0x0404);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, dStayDistance, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, dHomingDistance, 0x040C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, fStayStartWaitTime, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, fHomingStartWaitTime, 0x0414);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, sShotSpeed, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, sStaySpeed, 0x041C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, sHomingSpeed, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, DamageRadius, 0x0424);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, bDisableHitDestroy, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, bVanishMoveStop, 0x0429);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, UseDamageCount, 0x042A);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, UseDamageCountEffect, 0x042B);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, DamageCountMax, 0x042C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, DamageInterval, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, DamageSpeedAccel, 0x0434);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, UseBulletBomb, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, UnknownData_RPM8, 0x0439);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, BulletBomb, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, UseBulletBombVanish, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, bReactionBulletGuard, 0x0449);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, UnknownData_0JC9, 0x044A);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, ReactionBulletGuardDistance, 0x044C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, ReactionBulletGuardAngle, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, UseFinish, 0x0454);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, UnknownData_IMH7, 0x0455);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, FinishDamageTime, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, FinishDamageRadius, 0x045C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, FinishDamageDuration, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, UnknownData_691Q, 0x0464);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, DamageCollision, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, BulletMeshComponent, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, HitPhoton, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileMine, UnknownData_QUNS, 0x04C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATProjectileMine, 0x0518);
		}

		// class UATProjectileMultiHitComponent : public UActorComponent
		TEST_METHOD(Class__AT__ATProjectileMultiHitComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATProjectileMultiHitComponent, DamageInterval, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATProjectileMultiHitComponent, DamageCountMax, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATProjectileMultiHitComponent, DamageId, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATProjectileMultiHitComponent, DamageType, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATProjectileMultiHitComponent, DamageIdFinish, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATProjectileMultiHitComponent, DamageTypeFinish, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATProjectileMultiHitComponent, UnknownData_SGPP, 0x0128);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATProjectileMultiHitComponent, 0x01E0);
		}

		// class AATProjectileReplicateBody : public AProjectile
		TEST_METHOD(Class__AT__ATProjectileReplicateBody)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, BodyMesh, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, BodyMeshLocation, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, BodyMeshRotation, 0x03C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, ParticleCharge, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, ParticleReady, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, ParticleShot, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, ParticleAppear, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, ParticleDisappear, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, ParticleAfterimage, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, SE_Charge, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, SE_Shot, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, SE_Disapper, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, UnknownData_VIBO, 0x0411);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, ChargeTime, 0x0414);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, ShotTime, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, ShotInterval, 0x041C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, ShotNoize, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, ShotCountMax, 0x0424);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, ProjectileClass, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, ProjectileOffsetLocation, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, DamageRadius, 0x043C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, m_pSphere, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, UnknownData_YA02, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, DamageCollision, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, BodyMeshComponent, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, BodyMeshDynamicMaterials, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, ParticleChargeComp, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, ParticleShotComp, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, ParticleAppearComp, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, ParticleAfterimageComp, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATProjectileReplicateBody, ParticleReadyComponents, 0x04F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATProjectileReplicateBody, 0x0508);
		}

		// class AATRoomNPCPoint : public AActor
		TEST_METHOD(Class__AT__ATRoomNPCPoint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomNPCPoint, UnknownData_2ZRD, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomNPCPoint, m_Character, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomNPCPoint, m_RoomCharaManager, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomNPCPoint, m_Animations, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomNPCPoint, m_States, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRoomNPCPoint, m_TalkID, 0x0370);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATRoomNPCPoint, 0x0378);
		}

		// class UXcmn_Win00_State_C : public UAT_UISystemWindowState
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Win00_State__Xcmn_Win00_State_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win00_State_C, Icon_State, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win00_State_C, Txt_List, 0x0390);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Win00_State_C, 0x0398);
		}

		// class UImageWriteBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__ImageWriteQueue__ImageWriteBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImageWriteBlueprintLibrary, 0x0028);
		}

		// class UMaterialShaderQualitySettings : public UObject
		TEST_METHOD(Class__MaterialShaderQualitySettings__MaterialShaderQualitySettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialShaderQualitySettings, ForwardSettingMap, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialShaderQualitySettings, 0x0078);
		}

		// class UShaderPlatformQualitySettings : public UObject
		TEST_METHOD(Class__MaterialShaderQualitySettings__ShaderPlatformQualitySettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UShaderPlatformQualitySettings, QualityOverrides, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShaderPlatformQualitySettings, UnknownData_71WJ, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UShaderPlatformQualitySettings, 0x0050);
		}

		// class UMovieSceneCaptureProtocolBase : public UObject
		TEST_METHOD(Class__MovieSceneCapture__MovieSceneCaptureProtocolBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCaptureProtocolBase, UnknownData_YZJ1, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCaptureProtocolBase, State, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCaptureProtocolBase, bFrameRequested, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCaptureProtocolBase, UnknownData_921T, 0x0052);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneCaptureProtocolBase, 0x0058);
		}

		// class UMovieSceneAudioCaptureProtocolBase : public UMovieSceneCaptureProtocolBase
		TEST_METHOD(Class__MovieSceneCapture__MovieSceneAudioCaptureProtocolBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneAudioCaptureProtocolBase, 0x0058);
		}

		// class UNullAudioCaptureProtocol : public UMovieSceneAudioCaptureProtocolBase
		TEST_METHOD(Class__MovieSceneCapture__NullAudioCaptureProtocol)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNullAudioCaptureProtocol, 0x0058);
		}

		// class UMasterAudioSubmixCaptureProtocol : public UMovieSceneAudioCaptureProtocolBase
		TEST_METHOD(Class__MovieSceneCapture__MasterAudioSubmixCaptureProtocol)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMasterAudioSubmixCaptureProtocol, Filename, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMasterAudioSubmixCaptureProtocol, UnknownData_QSTP, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMasterAudioSubmixCaptureProtocol, 0x0090);
		}

		// class UMovieSceneImageCaptureProtocolBase : public UMovieSceneCaptureProtocolBase
		TEST_METHOD(Class__MovieSceneCapture__MovieSceneImageCaptureProtocolBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneImageCaptureProtocolBase, 0x0058);
		}

		// class UCompositionGraphCaptureProtocol : public UMovieSceneImageCaptureProtocolBase
		TEST_METHOD(Class__MovieSceneCapture__CompositionGraphCaptureProtocol)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompositionGraphCaptureProtocol, IncludeRenderPasses, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompositionGraphCaptureProtocol, bCaptureFramesInHDR, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompositionGraphCaptureProtocol, UnknownData_4U52, 0x0069);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompositionGraphCaptureProtocol, HDRCompressionQuality, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompositionGraphCaptureProtocol, CaptureGamut, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompositionGraphCaptureProtocol, UnknownData_E4M3, 0x0071);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompositionGraphCaptureProtocol, PostProcessingMaterial, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompositionGraphCaptureProtocol, bDisableScreenPercentage, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompositionGraphCaptureProtocol, UnknownData_GKDQ, 0x0091);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompositionGraphCaptureProtocol, PostProcessingMaterialPtr, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompositionGraphCaptureProtocol, UnknownData_QZ3B, 0x00A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCompositionGraphCaptureProtocol, 0x00C0);
		}

		// class UFrameGrabberProtocol : public UMovieSceneImageCaptureProtocolBase
		TEST_METHOD(Class__MovieSceneCapture__FrameGrabberProtocol)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UFrameGrabberProtocol, UnknownData_AHJ5, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFrameGrabberProtocol, 0x0068);
		}

		// class UImageSequenceProtocol : public UFrameGrabberProtocol
		TEST_METHOD(Class__MovieSceneCapture__ImageSequenceProtocol)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UImageSequenceProtocol, UnknownData_6WP4, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImageSequenceProtocol, 0x00D8);
		}

		// class UCompressedImageSequenceProtocol : public UImageSequenceProtocol
		TEST_METHOD(Class__MovieSceneCapture__CompressedImageSequenceProtocol)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompressedImageSequenceProtocol, CompressionQuality, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompressedImageSequenceProtocol, UnknownData_QRFB, 0x00DC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCompressedImageSequenceProtocol, 0x00E0);
		}

		// class UImageSequenceProtocol_BMP : public UImageSequenceProtocol
		TEST_METHOD(Class__MovieSceneCapture__ImageSequenceProtocol_BMP)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImageSequenceProtocol_BMP, 0x00D8);
		}

		// class UImageSequenceProtocol_PNG : public UCompressedImageSequenceProtocol
		TEST_METHOD(Class__MovieSceneCapture__ImageSequenceProtocol_PNG)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImageSequenceProtocol_PNG, 0x00E0);
		}

		// class UImageSequenceProtocol_JPG : public UCompressedImageSequenceProtocol
		TEST_METHOD(Class__MovieSceneCapture__ImageSequenceProtocol_JPG)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImageSequenceProtocol_JPG, 0x00E0);
		}

		// class UImageSequenceProtocol_EXR : public UImageSequenceProtocol
		TEST_METHOD(Class__MovieSceneCapture__ImageSequenceProtocol_EXR)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UImageSequenceProtocol_EXR, bCompressed, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UImageSequenceProtocol_EXR, CaptureGamut, 0x00D9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UImageSequenceProtocol_EXR, UnknownData_BSAQ, 0x00DA);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImageSequenceProtocol_EXR, 0x00E8);
		}

		// class UMovieSceneCaptureInterface : public UInterface
		TEST_METHOD(Class__MovieSceneCapture__MovieSceneCaptureInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneCaptureInterface, 0x0028);
		}

		// class UMovieSceneCapture : public UObject
		TEST_METHOD(Class__MovieSceneCapture__MovieSceneCapture)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCapture, UnknownData_ZMLB, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCapture, ImageCaptureProtocolType, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCapture, AudioCaptureProtocolType, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCapture, ImageCaptureProtocol, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCapture, AudioCaptureProtocol, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCapture, Settings, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCapture, bUseSeparateProcess, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCapture, bCloseEditorWhenCaptureStarts, 0x00C9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCapture, UnknownData_SS4P, 0x00CA);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCapture, AdditionalCommandLineArguments, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCapture, InheritedCommandLineArguments, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCapture, UnknownData_E5OC, 0x00F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneCapture, 0x01F0);
		}

		// class ULevelCapture : public UMovieSceneCapture
		TEST_METHOD(Class__MovieSceneCapture__LevelCapture)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelCapture, bAutoStartCapture, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelCapture, UnknownData_Q9UF, 0x01F1);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelCapture, PrerequisiteActorId, 0x01FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelCapture, UnknownData_5J0W, 0x020C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelCapture, 0x0210);
		}

		// class UMovieSceneCaptureEnvironment : public UObject
		TEST_METHOD(Class__MovieSceneCapture__MovieSceneCaptureEnvironment)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneCaptureEnvironment, 0x0028);
		}

		// class UUserDefinedCaptureProtocol : public UMovieSceneImageCaptureProtocolBase
		TEST_METHOD(Class__MovieSceneCapture__UserDefinedCaptureProtocol)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserDefinedCaptureProtocol, World, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserDefinedCaptureProtocol, UnknownData_JCWX, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUserDefinedCaptureProtocol, 0x00E0);
		}

		// class UUserDefinedImageCaptureProtocol : public UUserDefinedCaptureProtocol
		TEST_METHOD(Class__MovieSceneCapture__UserDefinedImageCaptureProtocol)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserDefinedImageCaptureProtocol, Format, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserDefinedImageCaptureProtocol, bEnableCompression, 0x00E1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserDefinedImageCaptureProtocol, UnknownData_D3U3, 0x00E2);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserDefinedImageCaptureProtocol, CompressionQuality, 0x00E4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUserDefinedImageCaptureProtocol, 0x00E8);
		}

		// class UVideoCaptureProtocol : public UFrameGrabberProtocol
		TEST_METHOD(Class__MovieSceneCapture__VideoCaptureProtocol)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UVideoCaptureProtocol, bUseCompression, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVideoCaptureProtocol, UnknownData_2DFC, 0x0069);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVideoCaptureProtocol, CompressionQuality, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVideoCaptureProtocol, VideoCodec, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVideoCaptureProtocol, UnknownData_5D9W, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVideoCaptureProtocol, 0x0090);
		}

		// class ADragonBallStaticActor_C : public ADragonBallStaticActor
		TEST_METHOD(BlueprintGeneratedClass__DragonBallStaticActor__DragonBallStaticActor_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ADragonBallStaticActor_C, UberGraphFrame, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADragonBallStaticActor_C, SphereCollision, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADragonBallStaticActor_C, ParticleSystem, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADragonBallStaticActor_C, BallIdx, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADragonBallStaticActor_C, UnknownData_20PH, 0x03C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADragonBallStaticActor_C, HitDB_Send, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADragonBallStaticActor_C, UntouchDB_Send, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADragonBallStaticActor_C, 0x03E8);
		}

		// class UDragonBallManager_BP_C : public UDragonBallManager
		TEST_METHOD(BlueprintGeneratedClass__DragonBallManager_BP__DragonBallManager_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDragonBallManager_BP_C, 0x0420);
		}

		// class UBP_CharacterSupportInfo_C : public USupportActionInfo
		TEST_METHOD(BlueprintGeneratedClass__BP_CharacterSupportInfo__BP_CharacterSupportInfo_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_CharacterSupportInfo_C, 0x00E0);
		}

		// class UUniqueDataNpc027_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc027__UniqueDataNpc027_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc027_C, 0x0070);
		}

		// class UUniqueDataNpc026_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc026__UniqueDataNpc026_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc026_C, 0x0070);
		}

		// class UUniqueDataNpc022_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc022__UniqueDataNpc022_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc022_C, 0x0070);
		}

		// class UUniqueDataNpc014_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc014__UniqueDataNpc014_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc014_C, 0x0070);
		}

		// class UUniqueDataNpc013_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc013__UniqueDataNpc013_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc013_C, 0x0070);
		}

		// class UUniqueDataNpc012_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc012__UniqueDataNpc012_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc012_C, 0x0070);
		}

		// class UUniqueDataNpc009_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc009__UniqueDataNpc009_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc009_C, 0x0070);
		}

		// class UUniqueDataNpc001_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc001__UniqueDataNpc001_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc001_C, 0x0070);
		}

		// class UUniqueDataCpl075C_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl075C__UniqueDataCpl075C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl075C_C, 0x0070);
		}

		// class UUniqueDataCpl075B_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl075B__UniqueDataCpl075B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl075B_C, 0x0070);
		}

		// class UFighting_Power_Param_C057Ac02_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C057Ac02__Fighting_Power_Param_C057Ac02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C057Ac02_C, 0x0060);
		}

		// class UFighting_Power_Param_C058Ac02_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C058Ac02__Fighting_Power_Param_C058Ac02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C058Ac02_C, 0x0060);
		}

		// class UFighting_Power_Param_C059Ac02_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C059Ac02__Fighting_Power_Param_C059Ac02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C059Ac02_C, 0x0060);
		}

		// class UFighting_Power_Param_C060A_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C060A__Fighting_Power_Param_C060A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C060A_C, 0x0060);
		}

		// class UFighting_Power_Param_C064Ac02_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C064Ac02__Fighting_Power_Param_C064Ac02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C064Ac02_C, 0x0060);
		}

		// class UFighting_Power_Param_C065Ac02_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C065Ac02__Fighting_Power_Param_C065Ac02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C065Ac02_C, 0x0060);
		}

		// class UFighting_Power_Param_C065Ac03_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C065Ac03__Fighting_Power_Param_C065Ac03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C065Ac03_C, 0x0060);
		}

		// class UFighting_Power_Param_C075Ac01_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C075Ac01__Fighting_Power_Param_C075Ac01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C075Ac01_C, 0x0060);
		}

		// class UBP_Cpl074StatusC02_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl074StatusC02__BP_Cpl074StatusC02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl074StatusC02_C, 0x00F0);
		}

		// class UBP_Cpl002Status_ULT_Learning_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl002Status_ULT_Learning__BP_Cpl002Status_ULT_Learning_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl002Status_ULT_Learning_C, 0x00F0);
		}

		// class UBP_Cpl002Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl002Status__BP_Cpl002Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl002Status_C, 0x00F0);
		}

		// class UBP_Cpl001Status_enemy_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl001Status_enemy__BP_Cpl001Status_enemy_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl001Status_enemy_C, 0x00F0);
		}

		// class AAREA03_C01_MNQ_07_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__AREA03_C01_MNQ_07__AREA03_C01_MNQ_07_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAREA03_C01_MNQ_07_C, 0x0340);
		}

		// class UAB_C002A_C : public UAB_C002_C
		TEST_METHOD(AnimBlueprintGeneratedClass__AB_C002A__AB_C002A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAB_C002A_C, 0xC5BC);
		}

		// class UBP_C002A_ActionTableBasic_C : public UBP_C000A_ActionTableBasic_C
		TEST_METHOD(BlueprintGeneratedClass__BP_C002A_ActionTableBasic__BP_C002A_ActionTableBasic_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C002A_ActionTableBasic_C, 0x0168);
		}

		// class AC01_010_S070_gdm_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__C01_010_S070_gdm__C01_010_S070_gdm_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_010_S070_gdm_C, UberGraphFrame, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_010_S070_gdm_C, C01_010_S070_gdm_Master_ExecuteUbergraph_C01_010_S070_gdm_RefProperty, 0x0348);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AC01_010_S070_gdm_C, 0x0350);
		}

		// class ABP_Farm_WindmillB_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Farm_WindmillB__BP_Farm_WindmillB_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Farm_WindmillB_C, ATMovableEnvObj_Rotate, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Farm_WindmillB_C, S_Farm_WindmillB, 0x0340);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Farm_WindmillB_C, 0x0348);
		}

		// class ABP_Area03_Cliff_WildernessB_D2_C : public AGrassGenerationDestructActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_WildernessB_D2__BP_Area03_Cliff_WildernessB_D2_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_WildernessB_D2_C, 0x0388);
		}

		// class ABP_Area03_Cliff_WildernessC_D_C : public AGrassGenerationDestructActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_WildernessC_D__BP_Area03_Cliff_WildernessC_D_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_WildernessC_D_C, 0x0388);
		}

		// class ABP_Area03_Cliff_PrecipiceE_N_C : public AGrassGenerationStaticMeshActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_PrecipiceE_N__BP_Area03_Cliff_PrecipiceE_N_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_PrecipiceE_N_C, 0x0360);
		}

		// class ANpcEventVolumeAction_BP_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__NpcEventVolumeAction_BP__NpcEventVolumeAction_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ANpcEventVolumeAction_BP_C, NpcEventVolume, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANpcEventVolumeAction_BP_C, Billboard, 0x0340);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ANpcEventVolumeAction_BP_C, 0x0348);
		}

		// class ABP_MarketShop_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_MarketShop__BP_MarketShop_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_MarketShop_C, Collision, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_MarketShop_C, PointLight, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_MarketShop_C, MobIcon, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_MarketShop_C, StaticMesh, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_MarketShop_C, DefaultSceneRoot, 0x0358);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_MarketShop_C, 0x0360);
		}

		// class ACFHUD : public AHUD
		TEST_METHOD(Class__CFramework__CFHUD)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ACFHUD, DebugDrawComponent, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACFHUD, DebugBackgroundComponent, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACFHUD, DebugProgressBarComponent, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACFHUD, DebugNodeSelectorComponent, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACFHUD, DebugSectionDrawComponent, 0x0490);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACFHUD, 0x04E0);
		}

		// class UCFGameInstance : public UGameInstance
		TEST_METHOD(Class__CFramework__CFGameInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFGameInstance, DebugMenuComponentClass, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFGameInstance, MessageManagerClass, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFGameInstance, DebugMenuComponent, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFGameInstance, UnknownData_WFXY, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFGameInstance, SceneManager, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFGameInstance, UnknownData_OM1T, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFGameInstance, LocalizeManager, 0x01D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFGameInstance, MessageManager, 0x01E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFGameInstance, HudManager, 0x01E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFGameInstance, AdxManager, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFGameInstance, UnknownData_XH2U, 0x01F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFGameInstance, 0x0298);
		}

		// class UCFUIUserWidget : public UUserWidget
		TEST_METHOD(Class__CFramework__CFUIUserWidget)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIUserWidget, PathAnimMng, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIUserWidget, UnknownData_UDTU, 0x0210);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFUIUserWidget, 0x0370);
		}

		// class UCFInputComponent : public UInputComponent
		TEST_METHOD(Class__CFramework__CFInputComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFInputComponent, UnknownData_9M7K, 0x0188);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFInputComponent, 0x0190);
		}

		// class UCFDynamicAssignInputComponent : public UCFInputComponent
		TEST_METHOD(Class__CFramework__CFDynamicAssignInputComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDynamicAssignInputComponent, UnknownData_DA8Q, 0x0190);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDynamicAssignInputComponent, 0x01E8);
		}

		// class UCFObject : public UObject
		TEST_METHOD(Class__CFramework__CFObject)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFObject, UnknownData_NYEX, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFObject, 0x0030);
		}

		// class ACFGameState : public AGameState
		TEST_METHOD(Class__CFramework__CFGameState)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ACFGameState, DebugTickableManager, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACFGameState, UnknownData_5ZV6, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACFGameState, GameSpeedManager, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACFGameState, PauseManager, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACFGameState, SceneTickExecuterManager, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACFGameState, UnknownData_4VNY, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACFGameState, 0x03C8);
		}

		// class ACFLevelManager : public AActor
		TEST_METHOD(Class__CFramework__CFLevelManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ACFLevelManager, LevelLoadingMap, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACFLevelManager, UnknownData_LEMU, 0x0388);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACFLevelManager, 0x03D8);
		}

		// class UCFActorComponent : public UActorComponent
		TEST_METHOD(Class__CFramework__CFActorComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFActorComponent, 0x0100);
		}

		// class UCFManagerActorComponent : public UCFActorComponent
		TEST_METHOD(Class__CFramework__CFManagerActorComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFManagerActorComponent, 0x0100);
		}

		// class UCFManagerObject : public UCFObject
		TEST_METHOD(Class__CFramework__CFManagerObject)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFManagerObject, 0x0030);
		}

		// class UCFDebugMenuHandler : public UObject
		TEST_METHOD(Class__CFramework__CFDebugMenuHandler)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuHandler, UnknownData_XUWP, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuHandler, DebugMenuClass, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuHandler, UnknownData_8BH5, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuHandler, Input, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuHandler, UnknownData_97VG, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuHandler, DebugMenu, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuHandler, DebugMenuConstructor, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuHandler, UnknownData_YH0X, 0x00D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenuHandler, 0x00E8);
		}

		// class UCFDebugMenuEventHandlerBool : public UObject
		TEST_METHOD(Class__CFramework__CFDebugMenuEventHandlerBool)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuEventHandlerBool, UnknownData_L1ID, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenuEventHandlerBool, 0x0058);
		}

		// class UCFDebugMenuEventHandlerContentsFactory : public UObject
		TEST_METHOD(Class__CFramework__CFDebugMenuEventHandlerContentsFactory)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuEventHandlerContentsFactory, UnknownData_H5T4, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenuEventHandlerContentsFactory, 0x0030);
		}

		// class UCFDebugMenuEventHandlerTrigger : public UObject
		TEST_METHOD(Class__CFramework__CFDebugMenuEventHandlerTrigger)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuEventHandlerTrigger, UnknownData_6CZS, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenuEventHandlerTrigger, 0x0038);
		}

		// class ACFGameMode : public AGameMode
		TEST_METHOD(Class__CFramework__CFGameMode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACFGameMode, 0x0420);
		}

		// class UCFHUDDebugNodeSelectorComponent : public UCFActorComponent
		TEST_METHOD(Class__CFramework__CFHUDDebugNodeSelectorComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFHUDDebugNodeSelectorComponent, UnknownData_DDJ9, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFHUDDebugNodeSelectorComponent, Input, 0x01D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFHUDDebugNodeSelectorComponent, UnknownData_Z9CU, 0x01E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFHUDDebugNodeSelectorComponent, 0x01E8);
		}

		// class UCFPushSolverShapeCapsule : public UCapsuleComponent
		TEST_METHOD(Class__CFramework__CFPushSolverShapeCapsule)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFPushSolverShapeCapsule, UnknownData_RKNZ, 0x0590);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFPushSolverShapeCapsule, 0x05B0);
		}

		// class UCFScene : public UCFObject
		TEST_METHOD(Class__CFramework__CFScene)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFScene, UnknownData_GH4N, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFScene, 0x0040);
		}

		// class UCFSceneChangeParamBase : public UCFObject
		TEST_METHOD(Class__CFramework__CFSceneChangeParamBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFSceneChangeParamBase, UnknownData_TG6N, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFSceneChangeParamBase, 0x0040);
		}

		// class UCFSceneChangeCommonCall : public UCFObject
		TEST_METHOD(Class__CFramework__CFSceneChangeCommonCall)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFSceneChangeCommonCall, 0x0030);
		}

		// class UCFSceneManager : public UCFManagerObject
		TEST_METHOD(Class__CFramework__CFSceneManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFSceneManager, UnknownData_U3TX, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFSceneManager, m_pSceneAssignment, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFSceneManager, m_sceneTbl, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFSceneManager, UnknownData_G4L2, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFSceneManager, CtrlLevelInfoByScene, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFSceneManager, ChangeCommonCall, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFSceneManager, UnknownData_B1S5, 0x01A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFSceneManager, 0x01C0);
		}

		// class UCFSingleton : public UCFObject
		TEST_METHOD(Class__CFramework__CFSingleton)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFSingleton, UnknownData_LY25, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFSingleton, 0x0048);
		}

		// class UCFActivateInterface : public UInterface
		TEST_METHOD(Class__CFramework__CFActivateInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFActivateInterface, 0x0028);
		}

		// class ACFActor : public AActor
		TEST_METHOD(Class__CFramework__CFActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ACFActor, BehaviorTick, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACFActor, BehaviorRender, 0x0339);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACFActor, BehaviorCollision, 0x033A);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACFActor, UnknownData_YVRZ, 0x033B);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACFActor, 0x0340);
		}

		// class UCFAsyncLoader : public UObject
		TEST_METHOD(Class__CFramework__CFAsyncLoader)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFAsyncLoader, UnknownData_EGFA, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFAsyncLoader, requests, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFAsyncLoader, loadedInstances, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFAsyncLoader, UnknownData_OT7A, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFAsyncLoader, 0x0068);
		}

		// class ACFCharacter : public ACharacter
		TEST_METHOD(Class__CFramework__CFCharacter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ACFCharacter, UnknownData_VHWC, 0x0748);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACFCharacter, UnknownData_AFK0, 0x0750);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACFCharacter, 0x0760);
		}

		// class UCFDebugMenu : public UUserWidget
		TEST_METHOD(Class__CFramework__CFDebugMenu)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenu, NumericArchetype, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenu, CategoryArchetype, 0x0210);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenu, ListArchetype, 0x0218);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenu, FolderArchetype, 0x0220);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenu, CheckArchetype, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenu, ComboArchetype, 0x0230);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenu, TextArchetype, 0x0238);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenu, ButtonArchetype, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenu, ClassArchetype, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenu, TextColor, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenu, ContentDefaultColor, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenu, ContentActiveColor, 0x0288);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenu, ContentSelectedColor, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenu, ListDefaultColor, 0x02D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenu, ListActiveColor, 0x0300);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenu, UnknownData_GM7J, 0x0328);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenu, Input, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenu, UnknownData_UV24, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenu, Categories, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenu, UnknownData_XKT0, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenu, 0x0410);
		}

		// class UCFDebugMenuContent : public UUserWidget
		TEST_METHOD(Class__CFramework__CFDebugMenuContent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuContent, UnknownData_O8Y7, 0x0208);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenuContent, 0x0240);
		}

		// class UCFDebugMenuCategory : public UCFDebugMenuContent
		TEST_METHOD(Class__CFramework__CFDebugMenuCategory)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuCategory, Label, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuCategory, List, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuCategory, UnknownData_XSJX, 0x0260);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenuCategory, 0x0268);
		}

		// class UCFDebugMenuList : public UUserWidget
		TEST_METHOD(Class__CFramework__CFDebugMenuList)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuList, UnknownData_Q1Y8, 0x0208);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenuList, 0x0210);
		}

		// class UCFDebugMenuContentFolder : public UCFDebugMenuContent
		TEST_METHOD(Class__CFramework__CFDebugMenuContentFolder)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuContentFolder, List, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuContentFolder, UnknownData_WPI6, 0x0248);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenuContentFolder, 0x0250);
		}

		// class UCFDebugMenuContentNumeric : public UCFDebugMenuContent
		TEST_METHOD(Class__CFramework__CFDebugMenuContentNumeric)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuContentNumeric, UnknownData_2P05, 0x0240);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenuContentNumeric, 0x0250);
		}

		// class UCFDebugMenuContentCheck : public UCFDebugMenuContent
		TEST_METHOD(Class__CFramework__CFDebugMenuContentCheck)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenuContentCheck, 0x0240);
		}

		// class UCFDebugMenuContentCombo : public UCFDebugMenuContent
		TEST_METHOD(Class__CFramework__CFDebugMenuContentCombo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenuContentCombo, 0x0240);
		}

		// class UCFDebugMenuContentText : public UCFDebugMenuContent
		TEST_METHOD(Class__CFramework__CFDebugMenuContentText)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenuContentText, 0x0240);
		}

		// class UCFDebugMenuContentButton : public UCFDebugMenuContent
		TEST_METHOD(Class__CFramework__CFDebugMenuContentButton)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenuContentButton, 0x0240);
		}

		// class UCFDebugMenuContentClass : public UCFDebugMenuContent
		TEST_METHOD(Class__CFramework__CFDebugMenuContentClass)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuContentClass, MetaClass, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuContentClass, SelectedClass, 0x0248);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenuContentClass, 0x0250);
		}

		// class UCFDebugMenuConstructor : public UObject
		TEST_METHOD(Class__CFramework__CFDebugMenuConstructor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuConstructor, UnknownData_1N18, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuConstructor, LogHandler, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuConstructor, CameraHandler, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuConstructor, CharacterHandler, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuConstructor, BatchHandler, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuConstructor, SceneHandler, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuConstructor, LevelHandler, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuConstructor, LoadHandler, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenuConstructor, 0x0068);
		}

		// class UCFDebugMenuEventHandlerFloat : public UObject
		TEST_METHOD(Class__CFramework__CFDebugMenuEventHandlerFloat)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuEventHandlerFloat, UnknownData_JFKD, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenuEventHandlerFloat, 0x0060);
		}

		// class UCFDebugMenuEventHandlerText : public UObject
		TEST_METHOD(Class__CFramework__CFDebugMenuEventHandlerText)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuEventHandlerText, UnknownData_VT8N, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenuEventHandlerText, 0x0060);
		}

		// class UCFDebugMenuEventHandlerCombo : public UObject
		TEST_METHOD(Class__CFramework__CFDebugMenuEventHandlerCombo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuEventHandlerCombo, UnknownData_4RMR, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenuEventHandlerCombo, 0x0058);
		}

		// class UCFDMLogSwitchEngine : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__CFramework__CFDMLogSwitchEngine)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDMLogSwitchEngine, 0x0058);
		}

		// class UCFDMLogSwitchFramework : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__CFramework__CFDMLogSwitchFramework)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDMLogSwitchFramework, 0x0058);
		}

		// class UCFDebugMenuEventHandlerLog : public UCFDebugMenuEventHandlerContentsFactory
		TEST_METHOD(Class__CFramework__CFDebugMenuEventHandlerLog)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuEventHandlerLog, Handlers, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenuEventHandlerLog, 0x0040);
		}

		// class UCFDMEH_ControlleObjects : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__CFramework__CFDMEH_ControlleObjects)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDMEH_ControlleObjects, UnknownData_B3CB, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDMEH_ControlleObjects, 0x0078);
		}

		// class UCFDMEH_ToggleTick : public UCFDMEH_ControlleObjects
		TEST_METHOD(Class__CFramework__CFDMEH_ToggleTick)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDMEH_ToggleTick, 0x0078);
		}

		// class UCFDMEH_ToggleDraw : public UCFDMEH_ControlleObjects
		TEST_METHOD(Class__CFramework__CFDMEH_ToggleDraw)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDMEH_ToggleDraw, 0x0078);
		}

		// class UCFDMEH_ToggleTickOther : public UCFDMEH_ControlleObjects
		TEST_METHOD(Class__CFramework__CFDMEH_ToggleTickOther)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDMEH_ToggleTickOther, 0x0078);
		}

		// class UCFDMEH_ToggleDrawOther : public UCFDMEH_ControlleObjects
		TEST_METHOD(Class__CFramework__CFDMEH_ToggleDrawOther)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDMEH_ToggleDrawOther, 0x0078);
		}

		// class UCFDebugMenuEventHandlerBatch : public UCFDebugMenuEventHandlerContentsFactory
		TEST_METHOD(Class__CFramework__CFDebugMenuEventHandlerBatch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuEventHandlerBatch, Handlers, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenuEventHandlerBatch, 0x0060);
		}

		// class UCFDebugMenuEventHandlerExample : public UCFDebugMenuEventHandlerContentsFactory
		TEST_METHOD(Class__CFramework__CFDebugMenuEventHandlerExample)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuEventHandlerExample, BoolExample, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuEventHandlerExample, UnknownData_K216, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuEventHandlerExample, FloatExample, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuEventHandlerExample, TriggerExample, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuEventHandlerExample, TextExample, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuEventHandlerExample, ComboExample, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenuEventHandlerExample, 0x0060);
		}

		// class UCFDMTExample : public UCFDebugMenuEventHandlerTrigger
		TEST_METHOD(Class__CFramework__CFDMTExample)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDMTExample, 0x0038);
		}

		// class UCFDMCExample : public UCFDebugMenuEventHandlerCombo
		TEST_METHOD(Class__CFramework__CFDMCExample)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDMCExample, 0x0058);
		}

		// class UDMBoolCameraDispInfo : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__CFramework__DMBoolCameraDispInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMBoolCameraDispInfo, 0x0058);
		}

		// class UCFDebugMenuEventHandlerCamera : public UCFDebugMenuEventHandlerContentsFactory
		TEST_METHOD(Class__CFramework__CFDebugMenuEventHandlerCamera)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuEventHandlerCamera, DispInfo, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenuEventHandlerCamera, 0x0038);
		}

		// class UDMBoolCharacterDispInfo : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__CFramework__DMBoolCharacterDispInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMBoolCharacterDispInfo, 0x0058);
		}

		// class UCFDebugMenuEventHandlerCharacter : public UCFDebugMenuEventHandlerContentsFactory
		TEST_METHOD(Class__CFramework__CFDebugMenuEventHandlerCharacter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuEventHandlerCharacter, DispInfo, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenuEventHandlerCharacter, 0x0038);
		}

		// class UDMBoolDispSceneHierarchy : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__CFramework__DMBoolDispSceneHierarchy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMBoolDispSceneHierarchy, 0x0058);
		}

		// class UCFDebugMenuEventHandlerScene : public UCFDebugMenuEventHandlerContentsFactory
		TEST_METHOD(Class__CFramework__CFDebugMenuEventHandlerScene)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuEventHandlerScene, DispHierarchy, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenuEventHandlerScene, 0x0038);
		}

		// class UDMTriggerDispLevelStatus : public UCFDebugMenuEventHandlerTrigger
		TEST_METHOD(Class__CFramework__DMTriggerDispLevelStatus)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMTriggerDispLevelStatus, 0x0038);
		}

		// class UCFDebugMenuEventHandlerLevel : public UCFDebugMenuEventHandlerContentsFactory
		TEST_METHOD(Class__CFramework__CFDebugMenuEventHandlerLevel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuEventHandlerLevel, DispStatus, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenuEventHandlerLevel, 0x0038);
		}

		// class UDMDispLoadStatus : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__CFramework__DMDispLoadStatus)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDMDispLoadStatus, UnknownData_3B9Z, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDMDispLoadStatus, Input, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDMDispLoadStatus, UnknownData_XNY7, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMDispLoadStatus, 0x0088);
		}

		// class UCFDebugMenuEventHandlerLoad : public UCFDebugMenuEventHandlerContentsFactory
		TEST_METHOD(Class__CFramework__CFDebugMenuEventHandlerLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugMenuEventHandlerLoad, DispLoadStatus, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugMenuEventHandlerLoad, 0x0038);
		}

		// class UCFDebugTickableManager : public UCFManagerActorComponent
		TEST_METHOD(Class__CFramework__CFDebugTickableManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugTickableManager, UnknownData_K0Y5, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugTickableManager, 0x0110);
		}

		// class UCFDebugXmlSelector : public UCFObject
		TEST_METHOD(Class__CFramework__CFDebugXmlSelector)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugXmlSelector, UnknownData_03SZ, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugXmlSelector, Input, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFDebugXmlSelector, UnknownData_IUJS, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDebugXmlSelector, 0x00A8);
		}

		// class UCFDynamicsBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__CFramework__CFDynamicsBlueprintFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDynamicsBlueprintFunctionLibrary, 0x0028);
		}

		// class UCFExportDataAssetFromDataTable : public UDataAsset
		TEST_METHOD(Class__CFramework__CFExportDataAssetFromDataTable)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExportDataAssetFromDataTable, DataTabls, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFExportDataAssetFromDataTable, 0x0040);
		}

		// class ACFExportFromDataTableActor : public AActor
		TEST_METHOD(Class__CFramework__CFExportFromDataTableActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ACFExportFromDataTableActor, OutType, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACFExportFromDataTableActor, UnknownData_UGBR, 0x0339);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACFExportFromDataTableActor, DataAsset, 0x0340);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACFExportFromDataTableActor, 0x0348);
		}

		// class UCFRichTextBlockNonExperimental : public UTextLayoutWidget
		TEST_METHOD(Class__CFramework__CFRichTextBlockNonExperimental)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFRichTextBlockNonExperimental, Text, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFRichTextBlockNonExperimental, TextDelegate, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFRichTextBlockNonExperimental, Font, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFRichTextBlockNonExperimental, Color, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFRichTextBlockNonExperimental, Decorators, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFRichTextBlockNonExperimental, UnknownData_EERE, 0x01C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFRichTextBlockNonExperimental, 0x03B8);
		}

		// class UCFExtendRichTextBlock : public UCFRichTextBlockNonExperimental
		TEST_METHOD(Class__CFramework__CFExtendRichTextBlock)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExtendRichTextBlock, TextSize, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExtendRichTextBlock, bIsEnableBold, 0x03BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExtendRichTextBlock, isEnableOutline, 0x03BD);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExtendRichTextBlock, UnknownData_0WCO, 0x03BE);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExtendRichTextBlock, OutlineColor, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExtendRichTextBlock, OutlineMaterial, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExtendRichTextBlock, MinDisplayArea, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExtendRichTextBlock, MinWrapTextAt, 0x03DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExtendRichTextBlock, OffsetBaseline, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExtendRichTextBlock, UnknownData_H7HS, 0x03E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExtendRichTextBlock, bInheritDecorators, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExtendRichTextBlock, bInheritInputDisplayData, 0x03E9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExtendRichTextBlock, UnknownData_4G2J, 0x03EA);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExtendRichTextBlock, ExtendRichTextIconData, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExtendRichTextBlock, UnknownData_XOHF, 0x0408);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFExtendRichTextBlock, 0x04E8);
		}

		// class UCFExtendRichTextBlockDecorator : public URichTextBlockDecorator
		TEST_METHOD(Class__CFramework__CFExtendRichTextBlockDecorator)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExtendRichTextBlockDecorator, bReveal, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExtendRichTextBlockDecorator, UnknownData_FC8N, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExtendRichTextBlockDecorator, RevealedIndex, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExtendRichTextBlockDecorator, SpanClasses, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFExtendRichTextBlockDecorator, 0x0058);
		}

		// class UCFExtendRichTextIconData : public UDataAsset
		TEST_METHOD(Class__CFramework__CFExtendRichTextIconData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExtendRichTextIconData, IconScale, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExtendRichTextIconData, UnknownData_09E0, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExtendRichTextIconData, IconList, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExtendRichTextIconData, KeyConfigList, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExtendRichTextIconData, UnknownData_6MO1, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExtendRichTextIconData, DefaultKeyConfigList, 0x02C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFExtendRichTextIconData, UnknownData_4Z48, 0x02D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFExtendRichTextIconData, 0x0330);
		}

		// class UCFGameOperatingEnvironment : public UObject
		TEST_METHOD(Class__CFramework__CFGameOperatingEnvironment)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFGameOperatingEnvironment, 0x0028);
		}

		// class UCFGameSpeedManager : public UCFManagerActorComponent
		TEST_METHOD(Class__CFramework__CFGameSpeedManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFGameSpeedManager, ApplyActorList_Actor, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFGameSpeedManager, ApplyActorList_Pawn, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFGameSpeedManager, ApplyActorList_ParticleComp, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFGameSpeedManager, ApplyActorList_TickObject, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFGameSpeedManager, UnknownData_ISDA, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFGameSpeedManager, Executer, 0x02E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFGameSpeedManager, 0x0330);
		}

		// class UCFHUDDebugBackgroundComponent : public UCFActorComponent
		TEST_METHOD(Class__CFramework__CFHUDDebugBackgroundComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFHUDDebugBackgroundComponent, UnknownData_F53F, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFHUDDebugBackgroundComponent, 0x0118);
		}

		// class UCFHUDDebugDrawComponent : public UActorComponent
		TEST_METHOD(Class__CFramework__CFHUDDebugDrawComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFHUDDebugDrawComponent, UnknownData_8HRL, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFHUDDebugDrawComponent, 0x0160);
		}

		// class ACFDebugTextTestingActor : public ACFActor
		TEST_METHOD(Class__CFramework__CFDebugTextTestingActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ACFDebugTextTestingActor, UnknownData_AZLT, 0x0340);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACFDebugTextTestingActor, 0x0358);
		}

		// class UCFHUDDebugDrawInterface : public UInterface
		TEST_METHOD(Class__CFramework__CFHUDDebugDrawInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFHUDDebugDrawInterface, 0x0028);
		}

		// class UCFHUDDebugProgressBarComponent : public UCFActorComponent
		TEST_METHOD(Class__CFramework__CFHUDDebugProgressBarComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFHUDDebugProgressBarComponent, UnknownData_5WSB, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFHUDDebugProgressBarComponent, 0x0130);
		}

		// class UCFHUDDebugSectionDrawComponent : public UCFActorComponent
		TEST_METHOD(Class__CFramework__CFHUDDebugSectionDrawComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFHUDDebugSectionDrawComponent, UnknownData_XGTD, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFHUDDebugSectionDrawComponent, 0x0170);
		}

		// class UCFHUDManager : public UObject
		TEST_METHOD(Class__CFramework__CFHUDManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFHUDManager, UnknownData_0MTL, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFHUDManager, TextIconData, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFHUDManager, UILoader, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFHUDManager, KeyResourceMappingData, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFHUDManager, InputAssignMappingTable, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFHUDManager, UnknownData_W32X, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFHUDManager, 0x0068);
		}

		// class UCFSerializedInterface : public UInterface
		TEST_METHOD(Class__CFramework__CFSerializedInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFSerializedInterface, 0x0028);
		}

		// class UCFLocalizeManager : public UCFManagerObject
		TEST_METHOD(Class__CFramework__CFLocalizeManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFLocalizeManager, UnknownData_YDG1, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFLocalizeManager, 0x0048);
		}

		// class UCFManagerComponent : public UCFActorComponent
		TEST_METHOD(Class__CFramework__CFManagerComponent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFManagerComponent, 0x0100);
		}

		// class UCFMessageManager : public UObject
		TEST_METHOD(Class__CFramework__CFMessageManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFMessageManager, SubFontRegistClass, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFMessageManager, DataDirectory, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFMessageManager, DataDirectory_NoRelease, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFMessageManager, FontRegist, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFMessageManager, DataTable, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFMessageManager, NounParamTable, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFMessageManager, DataTable_NoRelease, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFMessageManager, NounParamTable_NoRelease, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFMessageManager, UnknownData_1U1U, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFMessageManager, 0x00C0);
		}

		// class UCFParticleManager : public UCFActorComponent
		TEST_METHOD(Class__CFramework__CFParticleManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFParticleManager, CommonParticleList, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFParticleManager, CommonParticleDataList, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFParticleManager, ParticleSystemDataMap, 0x0150);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFParticleManager, 0x01A0);
		}

		// class UCFPauseManager : public UCFManagerActorComponent
		TEST_METHOD(Class__CFramework__CFPauseManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFPauseManager, ApplyActorList_Actor, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFPauseManager, ApplyActorList_Pawn, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFPauseManager, ApplyActorList_Comp, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFPauseManager, ApplyActorList_TickObject, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFPauseManager, ApplyActorList_PlayerController, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFPauseManager, UnknownData_WUAM, 0x0290);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFPauseManager, Executer, 0x0330);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFPauseManager, 0x0380);
		}

		// class ACFPawn : public APawn
		TEST_METHOD(Class__CFramework__CFPawn)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ACFPawn, UnknownData_W26R, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACFPawn, 0x03A8);
		}

		// class ACFPlayerController : public APlayerController
		TEST_METHOD(Class__CFramework__CFPlayerController)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACFPlayerController, 0x0688);
		}

		// class UCFPropertyEditorClass : public UUserWidget
		TEST_METHOD(Class__CFramework__CFPropertyEditorClass)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFPropertyEditorClass, UnknownData_533K, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFPropertyEditorClass, MetaClass, 0x0218);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFPropertyEditorClass, SelectedClass, 0x0220);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFPropertyEditorClass, 0x0228);
		}

		// class UCFPushSolver : public UCFObject
		TEST_METHOD(Class__CFramework__CFPushSolver)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFPushSolver, PushingCauserActorList, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFPushSolver, MoveSolverDataList, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFPushSolver, UnknownData_EH8T, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFPushSolver, 0x0058);
		}

		// class UCFPushSolverComponent : public UCFActorComponent
		TEST_METHOD(Class__CFramework__CFPushSolverComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFPushSolverComponent, PushSolver, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFPushSolverComponent, 0x0108);
		}

		// class UCFPushSolverShapeBox : public UBoxComponent
		TEST_METHOD(Class__CFramework__CFPushSolverShapeBox)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFPushSolverShapeBox, UnknownData_U1NO, 0x0590);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFPushSolverShapeBox, 0x05C0);
		}

		// class UCFPushSolverShapeInterface : public UInterface
		TEST_METHOD(Class__CFramework__CFPushSolverShapeInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFPushSolverShapeInterface, 0x0028);
		}

		// class UCFPushSolverShapeSphere : public USphereComponent
		TEST_METHOD(Class__CFramework__CFPushSolverShapeSphere)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFPushSolverShapeSphere, UnknownData_93VQ, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFPushSolverShapeSphere, UnknownData_TQMC, 0x0590);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFPushSolverShapeSphere, 0x05B0);
		}

		// class ACFrameworkGameMode : public AGameMode
		TEST_METHOD(Class__CFramework__CFrameworkGameMode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACFrameworkGameMode, 0x0420);
		}

		// class UCFRegistFontAtlasText : public URichTextBlock
		TEST_METHOD(Class__CFramework__CFRegistFontAtlasText)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFRegistFontAtlasText, ReserveFontAtlasList, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFRegistFontAtlasText, ParentDataTable, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFRegistFontAtlasText, ParentCanvasPanel, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFRegistFontAtlasText, UnknownData_XPN8, 0x0388);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFRegistFontAtlasText, 0x0460);
		}

		// class UCFRichTextBlockDecorator : public URichTextBlockDecorator
		TEST_METHOD(Class__CFramework__CFRichTextBlockDecorator)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFRichTextBlockDecorator, bReveal, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFRichTextBlockDecorator, UnknownData_NA0X, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFRichTextBlockDecorator, RevealedIndex, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFRichTextBlockDecorator, 0x0030);
		}

		// class UCFSceneAssignment : public UCFObject
		TEST_METHOD(Class__CFramework__CFSceneAssignment)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFSceneAssignment, UnknownData_LXD8, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFSceneAssignment, m_changeParam, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFSceneAssignment, 0x0058);
		}

		// class UCFSceneTemplate : public UCFScene
		TEST_METHOD(Class__CFramework__CFSceneTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFSceneTemplate, UnknownData_V0T5, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFSceneTemplate, 0x0088);
		}

		// class UCFSceneTickExecuter : public UCFManagerActorComponent
		TEST_METHOD(Class__CFramework__CFSceneTickExecuter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFSceneTickExecuter, UnknownData_BCTN, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFSceneTickExecuter, 0x0150);
		}

		// class UCFSceneTickExecuterManager : public UCFManagerActorComponent
		TEST_METHOD(Class__CFramework__CFSceneTickExecuterManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFSceneTickExecuterManager, TickGroupExecuterList, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFSceneTickExecuterManager, 0x0210);
		}

		// class UCFSoundADX : public UCFObject
		TEST_METHOD(Class__CFramework__CFSoundADX)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFSoundADX, UnknownData_Q0XA, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFSoundADX, m_UE_BgmPlayer, 0x0720);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFSoundADX, m_UE_SePlayer, 0x0728);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFSoundADX, UnknownData_BJQ5, 0x0730);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFSoundADX, m_UE_cueSheet, 0x0828);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFSoundADX, m_UE_acb_seHnWork, 0x0830);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFSoundADX, UnknownData_R6UR, 0x0840);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFSoundADX, m_CueSheetArray, 0x0888);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFSoundADX, 0x0898);
		}

		// class UCFStateMachine : public UObject
		TEST_METHOD(Class__CFramework__CFStateMachine)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFStateMachine, 0x0028);
		}

		// class UCFTickObject : public UCFObject
		TEST_METHOD(Class__CFramework__CFTickObject)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFTickObject, UnknownData_E974, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFTickObject, 0x0038);
		}

		// class UCFTickObjectUpdater : public UCFManagerActorComponent
		TEST_METHOD(Class__CFramework__CFTickObjectUpdater)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFTickObjectUpdater, TickObjects, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFTickObjectUpdater, 0x0150);
		}

		// class UCFUILoader : public UObject
		TEST_METHOD(Class__CFramework__CFUILoader)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUILoader, UnknownData_YYS5, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFUILoader, 0x00E0);
		}

		// class UCFUIMultiLineTextBox : public UTextLayoutWidget
		TEST_METHOD(Class__CFramework__CFUIMultiLineTextBox)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIMultiLineTextBox, Text, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIMultiLineTextBox, TextDelegate, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIMultiLineTextBox, Font, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIMultiLineTextBox, isEnableOutline, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIMultiLineTextBox, UnknownData_T7X8, 0x01A1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIMultiLineTextBox, OutlineColor, 0x01A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIMultiLineTextBox, UnknownData_ERTR, 0x01B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIMultiLineTextBox, OutlineMaterial, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIMultiLineTextBox, OutlineSize, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIMultiLineTextBox, bIsEnableBold, 0x01C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIMultiLineTextBox, UnknownData_VYXC, 0x01C5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIMultiLineTextBox, TextSize, 0x01C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIMultiLineTextBox, Color, 0x01CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIMultiLineTextBox, OffsetBaseline, 0x01DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIMultiLineTextBox, Decorators, 0x01E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIMultiLineTextBox, MinDisplayArea, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIMultiLineTextBox, MinWrapTextAt, 0x01F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIMultiLineTextBox, bNonFontSizeFixedMode, 0x01F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIMultiLineTextBox, UnknownData_7TXV, 0x01F9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFUIMultiLineTextBox, 0x0400);
		}

		// class UCFLocalizedKeyboardMappingTables : public UDataAsset
		TEST_METHOD(Class__CFramework__CFLocalizedKeyboardMappingTables)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFLocalizedKeyboardMappingTables, UILocalizedKeyboardMappingTable_Layout, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFLocalizedKeyboardMappingTables, UILocalizedKeyboardMappingTable_Locale, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFLocalizedKeyboardMappingTables, 0x00D0);
		}

		// class UCFKeyResourceMappingData : public UDataAsset
		TEST_METHOD(Class__CFramework__CFKeyResourceMappingData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFKeyResourceMappingData, MappingTable, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFKeyResourceMappingData, 0x0080);
		}

		// class UCFUIUtil : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__CFramework__CFUIUtil)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFUIUtil, 0x0028);
		}

		// class UCFUIWidgetPathAnimManager : public UObject
		TEST_METHOD(Class__CFramework__CFUIWidgetPathAnimManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIWidgetPathAnimManager, m_controllers, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFUIWidgetPathAnimManager, 0x0038);
		}

		// class UCFUIXcmnMultiLineText : public UCFUIUserWidget
		TEST_METHOD(Class__CFramework__CFUIXcmnMultiLineText)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, FitBoxMinSize, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, bEnableScrollText, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, UnknownData_AKNN, 0x0379);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, ScrollDirection, 0x037C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, UnknownData_13FR, 0x0379);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, ScrollPnlSizeX, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, ScrollSpeed, 0x0384);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, ScrollWaitMs, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, ScrollTextGap, 0x038C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, ScrollNonBlurValue, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, ScrollBlurValue, 0x0394);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, ScrollBlurPixel, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, bDisableBlurOffset, 0x039C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, bEnableFitText, 0x039D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, bOnlyFitX, 0x039E);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, UnknownData_G9LS, 0x039F);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, FitTextBoxSizeX, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, bEnableRuby, 0x03A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, bRubyTextAutoSize, 0x03A5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, UnknownData_WKOS, 0x03A6);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, RubyTextAutoSizeRatio, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, RubyTextSize, 0x03AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, ForceLineHeightPercentage, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, RubyTextAdjustOffsetY, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, RubyExBtnTextAdjustOffsetY, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, RubyDisplayMax, 0x03BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, ColorTagSpaceBase, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, bSelfChkEnScroll, 0x03C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, bSelfChkEnFitBox, 0x03C5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, bSelfChkEnRuby, 0x03C6);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, bSelfChkEnWrapText, 0x03C7);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, bDrawFitBoxArea, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, bDrawScrollArea, 0x03C9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, bDrawFitTextArea, 0x03CA);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, UnknownData_33NI, 0x03CB);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, DrawFitBoxSize, 0x03CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, UnknownData_GMMP, 0x03D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, BtnTagKeyword, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, KeyboardAndMouseReplaceInfo, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, CFMText, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, CFFontMaterial, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, bCFMEnableBold, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, UnknownData_BVLQ, 0x0419);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, CFMTextSize, 0x041C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, CFMColor, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, CFMJustification, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, UnknownData_2N24, 0x0431);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, CFLineHeightPercentage, 0x0434);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, bCFMEnableOutline, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, UnknownData_21I3, 0x0439);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, CFMOutlineColor, 0x043C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, CFMOutlineSize, 0x044C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, CFMOutlineMaterial, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, CFMMinDisplayArea, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, CFMMinWrapTextAt, 0x045C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, bCFMAutoWrapText, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, UnknownData_0RB4, 0x0461);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, CFMWrapTextAt, 0x0464);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, bCFMNonFontSizeFixedMode, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, UnknownData_T5EJ, 0x0469);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, WL_Pnl_Mask, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, WL_PnlTextFrame, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, WL_PnlTextFrameSlot, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, WL_PnlFitAll, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, WL_PnlFitWrapMain, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, WL_PnlFitWrapMainSlot, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, WL_PnlFitWrapSub, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, WL_PnlFitWrapSubSlot, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, WL_MainText, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, WL_MainTextSlot, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, WL_ExBtnMainText, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, WL_ExBtnMainTextSlot, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, WL_SubText, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, WL_SubTextSlot, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, WL_ExBtnSubText, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, WL_ExBtnSubTextSlot, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, WL_DebugWrapArea, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, WL_DebugValidArea, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, RubyInfoArray, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, WL_WorkText, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, WL_WorkTextEx, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCFUIXcmnMultiLineText, UnknownData_7GU4, 0x0520);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFUIXcmnMultiLineText, 0x0540);
		}

		// class ABP_FieldObjectBase_C : public AStaticMeshActor
		TEST_METHOD(BlueprintGeneratedClass__BP_FieldObjectBase__BP_FieldObjectBase_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_FieldObjectBase_C, NpcEventVolume, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_FieldObjectBase_C, Billboard_2, 0x0350);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_FieldObjectBase_C, 0x0358);
		}

		// class AForm00Npc013_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Npc013__Form00Npc013_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Npc013_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Npc013_C, 0x0380);
		}

		// class AVariation00Npc013_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Npc013__Variation00Npc013_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Npc013_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Npc013_C, 0x0380);
		}

		// class UBP_BattleGroupAI_EnC0401_C : public UBattleGroupAIInfo
		TEST_METHOD(BlueprintGeneratedClass__BP_BattleGroupAI_EnC0401__BP_BattleGroupAI_EnC0401_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_BattleGroupAI_EnC0401_C, 0x00A0);
		}

		// class UBP_BattleGroupAI_EnC0301_C : public UBattleGroupAIInfo
		TEST_METHOD(BlueprintGeneratedClass__BP_BattleGroupAI_EnC0301__BP_BattleGroupAI_EnC0301_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_BattleGroupAI_EnC0301_C, 0x00A0);
		}

		// class UBP_BattleGroupAI_EnC0201_C : public UBattleGroupAIInfo
		TEST_METHOD(BlueprintGeneratedClass__BP_BattleGroupAI_EnC0201__BP_BattleGroupAI_EnC0201_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_BattleGroupAI_EnC0201_C, 0x00A0);
		}

		// class UBP_C014A_ActionTableAttack_C : public UBP_C000A_ActionTableAttack_C
		TEST_METHOD(BlueprintGeneratedClass__BP_C014A_ActionTableAttack__BP_C014A_ActionTableAttack_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C014A_ActionTableAttack_C, 0x0168);
		}

		// class UBP_C059A_ActionTableBasic_C : public UBP_C000A_ActionTableBasic_C
		TEST_METHOD(BlueprintGeneratedClass__BP_C059A_ActionTableBasic__BP_C059A_ActionTableBasic_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C059A_ActionTableBasic_C, 0x0168);
		}

		// class UBP_C059A_ActionTableAttack_C : public UBP_C000A_ActionTableAttack_C
		TEST_METHOD(BlueprintGeneratedClass__BP_C059A_ActionTableAttack__BP_C059A_ActionTableAttack_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C059A_ActionTableAttack_C, 0x0168);
		}

		// class AFacial00Cpl057B_C : public AATFacialParts
		TEST_METHOD(BlueprintGeneratedClass__Facial00Cpl057B__Facial00Cpl057B_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AFacial00Cpl057B_C, DefaultSceneRoot, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFacial00Cpl057B_C, 0x03E0);
		}

		// class AForm00Cpl075B_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Cpl075B__Form00Cpl075B_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Cpl075B_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Cpl075B_C, 0x0380);
		}

		// class AArea03_Env_Orangecity_00_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Orangecity_00__Area03_Env_Orangecity_00_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Orangecity_00_C, 0x0340);
		}

		// class USpawnDataValue_Area03_00_002_C : public USpawnDataValue
		TEST_METHOD(BlueprintGeneratedClass__SpawnDataValue_Area03_00_002__SpawnDataValue_Area03_00_002_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnDataValue_Area03_00_002_C, 0x0038);
		}

		// class USpawnDataValue_Area03_10_001_C : public USpawnDataValue
		TEST_METHOD(BlueprintGeneratedClass__SpawnDataValue_Area03_10_001__SpawnDataValue_Area03_10_001_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnDataValue_Area03_10_001_C, 0x0038);
		}

		// class USpawnDataValue_Area03_20_001_C : public USpawnDataValue
		TEST_METHOD(BlueprintGeneratedClass__SpawnDataValue_Area03_20_001__SpawnDataValue_Area03_20_001_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnDataValue_Area03_20_001_C, 0x0038);
		}

		// class USpawnDataValue_Area03_20_002_C : public USpawnDataValue
		TEST_METHOD(BlueprintGeneratedClass__SpawnDataValue_Area03_20_002__SpawnDataValue_Area03_20_002_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnDataValue_Area03_20_002_C, 0x0038);
		}

		// class AAREA03_SUB_LANDMARK_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__AREA03_SUB_LANDMARK__AREA03_SUB_LANDMARK_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAREA03_SUB_LANDMARK_C, 0x0340);
		}

		// class UBP_C000A_ActionTableDamage_C : public UCharacterActionClassTable
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_ActionTableDamage__BP_C000A_ActionTableDamage_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_ActionTableDamage_C, 0x0168);
		}

		// class UAnimNotifyState_Fade_C : public UATAnimNotifyState_Fade
		TEST_METHOD(BlueprintGeneratedClass__AnimNotifyState_Fade__AnimNotifyState_Fade_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_Fade_C, 0x0040);
		}

		// class UAB_C059_C : public UATCharacterAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__AB_C059__AB_C059_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, UberGraphFrame, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SaveCachedPose_6B66659248472DF993004F80B181425E, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_UseCachedPose_CAA10041419CD2991253E8A30489DCFF, 0x0640);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_UseCachedPose_51CE300842569801DD844E89CD16D81B, 0x0688);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_Slot_C110A6CD417A99D6102FE48751567A6F, 0x06D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_LayeredBoneBlend_6E41A8E9453E161721896F8F03149F44, 0x0738);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SaveCachedPose_31DA06EA4BD4B3D35013EDABF0795979, 0x0810);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_UseCachedPose_AF7BD27744650C93F5FBE0A316DBFCC1, 0x08E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_UseCachedPose_5A22B678432FC05556A7BBB9E238063F, 0x0930);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_LayeredBoneBlend_56FF0B924AD31072C24807BB846A3263, 0x0978);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SaveCachedPose_B6EE6AD24D85A1373AFC3B98B6DCA39B, 0x0A50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SaveCachedPose_A548AE8C4BD2C1188FAA3281BAA390C4, 0x0B28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_Slot_30C3228A4826231E05E5518D5AB3C497, 0x0C00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_LayeredBoneBlend_CC1889A54D9B1812AA68E2929F57FF3F, 0x0C68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_Slot_930CFC294C66FB932CABF39353CCF088, 0x0D40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_LayeredBoneBlend_7217D3BE4A8126E65F2324A31E47ED2F, 0x0DA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SaveCachedPose_D92F296140F22ADEDE82B0BE071F0D59, 0x0E80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SaveCachedPose_7FA1DB7B47C908C0E580B88EBDF0AD24, 0x0F58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_LayeredBoneBlend_9AB9DB0B42E76D4D299F0FBF4FEAF625, 0x1030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_Slot_BA034113456E4CADF453EBA96DB2DED4, 0x1108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_Slot_131F5BAB406905171B80AFB22E05A037, 0x1170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SaveCachedPose_C640853849CD67D71ACF5EB4CBCB0CB3, 0x11D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_Slot_EDCFA04742662BF894BBBEB853115008, 0x12B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_Slot_6FDAB43142683FD2E926F7B7EAB25569, 0x1318);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_LayeredBoneBlend_C32D2EC344BD8912816D45BEF09B6D77, 0x1380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SaveCachedPose_1C35E8ED4C8E2A963FDE25BC0967BB1C, 0x1458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_ModifyBone_B353998B46591C884BF8DEA886794A83, 0x1530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_LocalToComponentSpace_E753EC79460DD7C19F15E2B60E858A48, 0x1668);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_ComponentToLocalSpace_B62EC94246F40E5C6332B7A3462C7120, 0x16A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_BlendListByBool_2143739848DDD5E6809F76B38B4A0284, 0x16E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SaveCachedPose_5035F13B4259C52849A24DADEB348EC6, 0x17C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_UseCachedPose_996B50754B2259D0CBE59397E1006029, 0x18A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_UseCachedPose_A92B08514C3B310F2DCC8DAFDEE13BC7, 0x18E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_UseCachedPose_86B7A3EB41F74F1128D5AD8886906754, 0x1930);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_UseCachedPose_8018D4544D919A1905CECB9A2D7FB0B1, 0x1978);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_UseCachedPose_28B3659B43D6A120CC249CB122EBDA10, 0x19C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_UseCachedPose_A2B813BE4AA2D80A73FE23AF268DCD81, 0x1A08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_UseCachedPose_40269DE5486402C61BF5C8A99E9ECE39, 0x1A50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_UseCachedPose_D334589144742584CB1809A864A15DC4, 0x1A98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_UseCachedPose_5F68F26F437B8E212C88E3B978573F54, 0x1AE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_UseCachedPose_0B41CBD74F535F46D131C3B5C6BA216F, 0x1B28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_UseCachedPose_3BA9A0664A3BE4E29A0498BD6293B7D9, 0x1B70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_UseCachedPose_64D467964C2BF24DBF1F99B05D3233A3, 0x1BB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SaveCachedPose_E2D012F84727B587751EB9AF99BFA2B4, 0x1C00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_7BCFF42F44E3CFA8152CEE97B032D256, 0x1CD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_9FDBD97245FF7A2326DBD697845F6B90, 0x1D20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_30212C30407AD9ACC3FE1D9E4BDF756D, 0x1D68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_7428A73944A0D3958D57388C26BD5D65, 0x1DB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_C16DE71B4EB866826FBEE69C3FE81111, 0x1DF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_5ACB9E374C7F2F8A9C409494DB723891, 0x1E40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_CD89144C472FC22D5C6A259D4423FEF3, 0x1E88);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_886BB8AF4E2CA0B1A80144BE8E2F756A, 0x1ED0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_A108449440EDB3AB35332CA4F6BB4BBE, 0x1F18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_4C4DC1DC4032C5592F8931B29857B2DC, 0x1F60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_573145D1491E382D04114491A41C55E2, 0x1FA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_54D7D7D349D789FC4E6EFD92FA143F27, 0x1FF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_FE81400942C33BF179E016807B79E95A, 0x2038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_3373CBC843AC55C2790D109F83AD2EE7, 0x2080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_D309FFB64ED007BEA93F09885D7C2FF8, 0x20C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_A39F32FE46E1373905CBEFA3331B0EDA, 0x2110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_D27F7E4D43DA87B159B8349E4E6F14B3, 0x2158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_72A7434545F86DF12DE771983C80F9FF, 0x21A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_DE7D1C9942C8CEA832376CA34921B543, 0x21E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_3D56B5CA40A2C446D64C8FB328F77575, 0x2230);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_AEED98384E306DF78BF793BD0B61EA76, 0x2278);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_C8A311D346498429B1155A98F75BD20A, 0x22C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_47D34C8743484D8A05A7F489E5C7A821, 0x2308);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_98346F4D45BC56522852CF89DBF8B6A1, 0x2350);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_41B315B74658077738D43F86015A6C4E, 0x2398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_2D04F6AF4FF19259EE1C5DA65B8D0E13, 0x23E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_E7B7CF3F4270B2B2C98D1DADBABA9823, 0x2428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_29D0EB134DC57666B98CB9974755712B, 0x2470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_EEA7519741CF6B4DA76A4699A6BB532E, 0x24B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_8AADBEAB4599A5F095A983B0BFE28470, 0x2500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_A8A8F33344EA6FEE137C09BC8DB594A4, 0x2548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_12688E35465CBFED8D5320B7183E283B, 0x2590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_6F07A3BE4E1285A3BCC32DA6F3B1D901, 0x25D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_AE95C9DD44FA5BB1A84B9EBF2A1E6673, 0x2620);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_A2BB1C3F48D7B20B4469B3880BD39776, 0x2668);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_D5DEC452484A3E25A9E867BFFED6CCB1, 0x26B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_8F725A8146281E77A8498B846C11D18D, 0x26F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_F27C33794C5C3ED20D58F7BE8FBD0CD0, 0x2740);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_4F4AE3C14CD277B09B6E2DB604E77D7E, 0x2788);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_12E662054D678F1887FE6AAF244122C0, 0x27D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_22C903A44100B3424A0E23BA01B25C13, 0x2818);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_AC434CE547A6B59264EB969B24A0FA46, 0x2860);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_8D61DA7F4BD97652D23FD4B6361926B0, 0x28A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_7982B7BB44D6461CE442AA92BE00346D, 0x28F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_B79D4C5B4E7CAB6D4AF954BE1775F525, 0x2938);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_4BF6323C4357951B4CB6BD859A43BF26, 0x2980);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_96DAC3D345270EE82E36A0B077B8AE34, 0x29C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_2B3491E749F17C38FB17F688A1AB2B9E, 0x2A10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_995E888E47ECB5ED118C9286EA99634A, 0x2A58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_368ED987473BE0815F52B78E6721F894, 0x2AA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_90CED8B243CD9DE6CA99528AB0427FA0, 0x2AE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_038BEF1A42C84044069356A8EC45E680, 0x2B30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_DE8198FA4A3F2609ED304FBCE582D1B1, 0x2B78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_CBC04D044A4F98A3153D469902750CFC, 0x2BC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_8A6BADC648BEF1B400A4E3B31A03EE2C, 0x2C08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_91874C224DAE0596AC750996620DA0F9, 0x2C50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_B28DCE664A73035E55D92CAB2BC8C07D, 0x2C98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_83F80F67422EAED9B760BCB8496CA612, 0x2CE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_98DAF8554E42CE35444FDBAE9F37CE52, 0x2D28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_3237FC72478DAE46AE5C938946E4DBC4, 0x2D70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_6B73ECA74FA79920D4CF99A217FC93EE, 0x2DB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_61694F6D4599A1530802C6A52842E96D, 0x2E00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_448309834E3A3D99FEE0E0B711EF3FAE, 0x2E48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_C4F88A1A4F75AB003162E58E25DE93E8, 0x2E90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_50ECDDAB49A52F83AA0EF98B837D3D86, 0x2ED8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_E2E3623642C1848C8ADD57A5CF67C5C7, 0x2F20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_855588744E483C5A1DB599B2BFDE0B70, 0x2F68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_903AF80B49D58C928A97938230AAC17D, 0x2FB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_41B09261454172E7566378B29FEB3D15, 0x2FF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_36042C5D4CDA4F6766E85482B8FFD878, 0x3040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_8F62E6344BD74CE77738568E9AF5191D, 0x3088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_3C56052340D16B874A5D5D80AD4DEFE6, 0x30D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_FD26F9E24FAC13849A6DBEB8797EE5D1, 0x3118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_BF35CC3E43382F86AEE5BD8AE7E0A864, 0x3160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_C47EEFBA4E60C11C22209496F6CD5E4E, 0x31A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_3B5AAA9E4C2C165C78FE69BF0C8BBF4E, 0x31F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_2A8F38CA42C8F4CF9397AA862E8437B2, 0x3238);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_5098A1F4478CA924F3FFC590EA5D58AF, 0x3280);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_A54191EA415E8BFE06B046A457926CA3, 0x3320);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_C33DEF86484D65E511BFB8B8FB535105, 0x3360);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_B5A8793244DB18AAF500B6BE1DEF602F, 0x3400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_728FFAB44C1F2A7FBF0FFA9845929DDB, 0x3440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_17BA3F1D4772E66D5452D0A189042417, 0x34E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_BlendSpacePlayer_CA1B521A4CE94D4FB06F53A872448FFD, 0x3520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_A32B7354458EBCBEFE9DC986A0FA7471, 0x3648);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_A62147394E86A18C2BDF2E8544F9F471, 0x3688);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_3BFA6D40496901AB53A987835344CA0F, 0x3728);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_FEBDF4194450796C64E4CE95A59FB32E, 0x3768);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_472CB9654F21729A48D216875804A7D9, 0x3808);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_37160EB249D470A48B08C889EF44F200, 0x3848);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_AB09F1D2424F3F9564FDD992376521A4, 0x3890);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_DCFD48494F657E5EEB63DCAAF57909F0, 0x38D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_7A6A26834F6B5A00576A48BB0C7C9344, 0x3978);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_C9DA686A4D8256E5826F76B95BECBA6A, 0x39B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_AA9B8E504457CE95144F63A0E08B77A8, 0x3A58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_2198271C4FF4A99DD1EA4BB66B806CC1, 0x3A98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_D422841540C8567A7F44F990372AE6B3, 0x3B38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_0C2F4AF1418A1B688C38A98A112561A3, 0x3B78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_CEB5AEFA47DFFB00C33878B445C33E1A, 0x3C18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_CA76204F48BFAB3AF948C19416A1BDD3, 0x3C58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_D7662A42468D07419F7AE7A55418AFA7, 0x3CF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_70986D364753170315377A9FC34ECEBE, 0x3D38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_16DB3FB9464F5E9004B80FB40E235E38, 0x3DD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_6667E7D1422321E8468991BE49201D0C, 0x3E18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_60302E04408F1DEABCB33AA209F75296, 0x3EB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_9709F34542CC46157098318582E7B285, 0x3EF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_15C8E3A0439D344A26F2C390BB2335A6, 0x3F98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_FAC791FF489FE723C60BAD9D61E984DC, 0x3FD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_C70321964B0AEE4F76D916862DE6FCB9, 0x4078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_BlendSpacePlayer_F28B5EE14B3BCBB2567FC9ABC88D33E0, 0x40B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_C9DDAC914F76F2341EE734A159E4384D, 0x41E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_BlendSpacePlayer_6448BE174CCC440FC60BC5BA92797C04, 0x4220);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_6852B2AE47F7BB8F4A33E2B93D301990, 0x4348);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_BlendSpacePlayer_7468EB624CDBF05463137D872BCF1EFD, 0x4388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_B2CC524F4CC0AA05697AE885EB266F86, 0x44B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_12B75D424E2CEF67ECC7199ED62FDAE4, 0x44F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_2A79FC0B4FE870B7AF0684BE18EDECC2, 0x4590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_547F83E942A7E836F2F66DB1D22BF5F5, 0x45D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_1FAE61374E309D2FBD5A679BE1CDC4C8, 0x4618);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_9892C18B4B6593278B3177B506A30D4D, 0x4660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_0AE221984C049D19CD52F08699030176, 0x4700);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_BlendSpacePlayer_004896E345D9A24019DA89B4C05F4FF8, 0x4740);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_5075597042653611A5A121AC79B76BC3, 0x4868);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_55BB537A4FC7F094F8661B9D88074264, 0x48A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_FB04767D4BBCEA993C7F3081AAD79BD7, 0x4948);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_9D1F429A4ADC00F1A9037898024B555D, 0x4988);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_E41709624FF12E0F279534840AFB109D, 0x49D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_3ABEA6114BBBD1BDB91DC69201B8D45E, 0x4A18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_C2E8DB5F4534AB0ACC87C9AA4999D985, 0x4AB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_BlendListByEnum_9A7B335D42D670A5943B528561D32374, 0x4B58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_5077331D41DB7B0C479527862E914746, 0x4C48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_B32526924C6EC24C626697A95DAA4A51, 0x4CE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_9EB18D224D261596276C17BC93E856E6, 0x4D28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_D609D42248CCF2E2A42203B672920F1A, 0x4D70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_7825CBA1468AF1B22533718B1398437C, 0x4DB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_9970E73B49DED0E316A9EFACD8B3C3E3, 0x4E00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_C4D736A34FF2B45528DAFB89EC2172BE, 0x4E48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_03EF975B41C6E5EC41CDF8BBCB76F186, 0x4E90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_09064D19431CC3C7F431F19C430B96B7, 0x4ED8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_AF881B414602334AABC7188DF784A256, 0x4F20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_61662B054E766CAFDF931AB7F5E85ABB, 0x4FC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_FC20EC914B1D552A577050BBB8A8EDD5, 0x5000);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_03B213A141DC0F4450743A8ABD84CCB5, 0x50A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_DA9D43DE4F4B0E5EC06317880061D4D4, 0x50E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_2094FA6041E6B431A0E2739E20EB97AF, 0x5180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_66BD90F94021085767EFF1AD1FB9556D, 0x51C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_28DF13084A71B5B7659EEA8802EB845C, 0x5260);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_1E52ECD34E8465D79F1ABBA3408DF7AB, 0x52A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_D477A8704D122E4901E11DADA8CC69A9, 0x5340);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_450E389049D3A5220ED0719465A45C68, 0x5380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_F85ED106444B24C93C12CFB764335EB5, 0x5420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_E996DE7F4D805432049D9F99C53837D0, 0x5460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_6E9B1B0A4DD1A16A76258A8F635E59E4, 0x5500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_18B6FAFE47B37FF899C2D9ADA32C5665, 0x5540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_EA8B6E134E5649D3AB3CEAB5B1A0E0AB, 0x55E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_872861E14CD7B3E1C9F626B4377D1F19, 0x5620);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_E45645FF432C45DF75CF12B1696A6A9C, 0x56C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_AB53C43B486B22CD45405ABC39921880, 0x5700);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_6E9395214B9A661EBEB0A1B2AF6981D5, 0x57A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SequencePlayer_E1C9A439475E17A1085060BF145AAA05, 0x57E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateResult_5C970F4A49384CF8D006B38E6BA2FB5D, 0x5880);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_TransitionResult_AC0C04334205AB5F42D41C8C5F018A56, 0x58C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_StateMachine_E718E5D1440780C248BE3DA7CEC6AC1F, 0x5908);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_BlendListByBool_55C6EE1243DE76A2F94FECB2F277498B, 0x59E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_SaveCachedPose_C017A2FC4312AA24284DA3B342842A87, 0x5AC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_ApplyMeshSpaceAdditive_CED5C7BA45FAFF7A6E0D01A95666BC0B, 0x5BA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_UseCachedPose_8BE2A4124CDDCDAB5C85E2AABDCE7A51, 0x5C08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_UseCachedPose_2DBE094F4BB6F11CF487F5984552871A, 0x5C50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_UseCachedPose_35D155A3497A64ED049DFD892A2827BB, 0x5C98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_LayeredBoneBlend_8ED1F5534CE29843111E499CA6B0B757, 0x5CE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_UseCachedPose_3F192B1949B6E71166DE9AA4FA566059, 0x5DB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_BlendSpacePlayer_752BFA234B4615362B2364BD90F3DBEC, 0x5E00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C059_C, AnimGraphNode_Root_539D8E2B4324329EE1F350A2BF9A3809, 0x5F28);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAB_C059_C, 0x5F68);
		}

		// class ABP_LongBlowoffDummy_C : public AATDirectionDummyActor
		TEST_METHOD(BlueprintGeneratedClass__BP_LongBlowoffDummy__BP_LongBlowoffDummy_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_LongBlowoffDummy_C, 0x03D8);
		}

		// class ABP_C000A_KTN_Fly01_Roll_Eff_SkeletalAnim_C : public ASkeletalMeshActor
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_KTN_Fly01_Roll_Eff_SkeletalAnim__BP_C000A_KTN_Fly01_Roll_Eff_SkeletalAnim_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_C000A_KTN_Fly01_Roll_Eff_SkeletalAnim_C, 0x03C0);
		}

		// class UGeometryCache : public UObject
		TEST_METHOD(Class__GeometryCache__GeometryCache)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCache, UnknownData_80E2, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCache, Materials, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCache, Tracks, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCache, UnknownData_9G8M, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCache, StartFrame, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCache, EndFrame, 0x005C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeometryCache, 0x0060);
		}

		// class AGeometryCacheActor : public AActor
		TEST_METHOD(Class__GeometryCache__GeometryCacheActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AGeometryCacheActor, GeometryCacheComponent, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGeometryCacheActor, 0x0340);
		}

		// class UGeometryCacheCodecBase : public UObject
		TEST_METHOD(Class__GeometryCache__GeometryCacheCodecBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCacheCodecBase, TopologyRanges, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeometryCacheCodecBase, 0x0038);
		}

		// class UGeometryCacheCodecRaw : public UGeometryCacheCodecBase
		TEST_METHOD(Class__GeometryCache__GeometryCacheCodecRaw)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCacheCodecRaw, DummyProperty, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCacheCodecRaw, UnknownData_98QO, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeometryCacheCodecRaw, 0x0040);
		}

		// class UGeometryCacheCodecV1 : public UGeometryCacheCodecBase
		TEST_METHOD(Class__GeometryCache__GeometryCacheCodecV1)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCacheCodecV1, UnknownData_XM7W, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeometryCacheCodecV1, 0x0040);
		}

		// class UGeometryCacheComponent : public UMeshComponent
		TEST_METHOD(Class__GeometryCache__GeometryCacheComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCacheComponent, GeometryCache, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCacheComponent, bRunning, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCacheComponent, bLooping, 0x0599);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCacheComponent, UnknownData_GGL0, 0x059A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCacheComponent, StartTimeOffset, 0x059C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCacheComponent, PlaybackSpeed, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCacheComponent, NumTracks, 0x05A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCacheComponent, ElapsedTime, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCacheComponent, UnknownData_HDY8, 0x05AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCacheComponent, Duration, 0x05DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCacheComponent, bManualTick, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCacheComponent, UnknownData_V608, 0x05E1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeometryCacheComponent, 0x05F0);
		}

		// class UGeometryCacheTrack : public UObject
		TEST_METHOD(Class__GeometryCache__GeometryCacheTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCacheTrack, Duration, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCacheTrack, UnknownData_05NT, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeometryCacheTrack, 0x0058);
		}

		// class UGeometryCacheTrack_FlipbookAnimation : public UGeometryCacheTrack
		TEST_METHOD(Class__GeometryCache__GeometryCacheTrack_FlipbookAnimation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCacheTrack_FlipbookAnimation, NumMeshSamples, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCacheTrack_FlipbookAnimation, UnknownData_18DH, 0x005C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeometryCacheTrack_FlipbookAnimation, 0x0080);
		}

		// class UGeometryCacheTrackStreamable : public UGeometryCacheTrack
		TEST_METHOD(Class__GeometryCache__GeometryCacheTrackStreamable)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCacheTrackStreamable, Codec, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCacheTrackStreamable, UnknownData_1THI, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCacheTrackStreamable, StartSampleTime, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCacheTrackStreamable, UnknownData_5SNP, 0x0184);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeometryCacheTrackStreamable, 0x0188);
		}

		// class UGeometryCacheTrack_TransformAnimation : public UGeometryCacheTrack
		TEST_METHOD(Class__GeometryCache__GeometryCacheTrack_TransformAnimation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCacheTrack_TransformAnimation, UnknownData_3MOV, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeometryCacheTrack_TransformAnimation, 0x0100);
		}

		// class UGeometryCacheTrack_TransformGroupAnimation : public UGeometryCacheTrack
		TEST_METHOD(Class__GeometryCache__GeometryCacheTrack_TransformGroupAnimation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeometryCacheTrack_TransformGroupAnimation, UnknownData_ZVLA, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeometryCacheTrack_TransformGroupAnimation, 0x0100);
		}

		// class UAnimNotifyState_LoopWearEffect_BP_C : public UATAnimNotifyState_LoopWearEffectSpawn
		TEST_METHOD(BlueprintGeneratedClass__AnimNotifyState_LoopWearEffect_BP__AnimNotifyState_LoopWearEffect_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_LoopWearEffect_BP_C, 0x00B8);
		}

		// class UAnimNotifyState_CrgSkillEffect_C : public UAnimNotifyState_PlayParticleEffectAdjustHeight
		TEST_METHOD(BlueprintGeneratedClass__AnimNotifyState_CrgSkillEffect__AnimNotifyState_CrgSkillEffect_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_CrgSkillEffect_C, 0x00D0);
		}

		// class UAnimNotify_WearEffectSpawn_BP_C : public UATAnimNotify_WearEffectSpawn
		TEST_METHOD(BlueprintGeneratedClass__AnimNotify_WearEffectSpawn_BP__AnimNotify_WearEffectSpawn_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_WearEffectSpawn_BP_C, 0x0068);
		}

		// class UAnimNotify_SetCharacterMontage_C : public UATAnimNotify_SetCharacterMontage
		TEST_METHOD(BlueprintGeneratedClass__AnimNotify_SetCharacterMontage__AnimNotify_SetCharacterMontage_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_SetCharacterMontage_C, 0x0058);
		}

		// class UBP_C000A_SpecialMoveZigzag_C : public UATActSpecialMoveZigzag
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_SpecialMoveZigzag__BP_C000A_SpecialMoveZigzag_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_SpecialMoveZigzag_C, 0x01B8);
		}

		// class UBP_C000A_SpecialMoveTeleportTarget_C : public UATActSpecialMoveTeleportTarget
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_SpecialMoveTeleportTarget__BP_C000A_SpecialMoveTeleportTarget_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_SpecialMoveTeleportTarget_C, 0x0120);
		}

		// class UBP_C000A_SpecialMoveTeleport_C : public UATActSpecialMoveTeleport
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_SpecialMoveTeleport__BP_C000A_SpecialMoveTeleport_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_SpecialMoveTeleport_C, 0x0120);
		}

		// class UBP_C000A_BTL_HighBoost_C : public UATActHighBoost
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_BTL_HighBoost__BP_C000A_BTL_HighBoost_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_BTL_HighBoost_C, 0x0188);
		}

		// class ABP_Area03_Cliff_TopGrassG_D_C : public AGrassGenerationDestructActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_TopGrassG_D__BP_Area03_Cliff_TopGrassG_D_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_TopGrassG_D_C, 0x0388);
		}

		// class ABP_Break_CarB_Rust_C : public AWideUseBreakablePoint
		TEST_METHOD(BlueprintGeneratedClass__BP_Break_CarB_Rust__BP_Break_CarB_Rust_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Break_CarB_Rust_C, DamageCollision, 0x05A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Break_CarB_Rust_C, 0x05A8);
		}

		// class AArea03_Env_Heightmap_x0_y1_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Heightmap_x0_y1__Area03_Env_Heightmap_x0_y1_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Heightmap_x0_y1_C, 0x0340);
		}

		// class AArea03_Env_Cave_00_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Cave_00__Area03_Env_Cave_00_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Cave_00_C, 0x0340);
		}

		// class AArea03_Env_Cliff_00_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Cliff_00__Area03_Env_Cliff_00_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Cliff_00_C, 0x0340);
		}

		// class AArea03_Env_Farm_00_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Farm_00__Area03_Env_Farm_00_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Farm_00_C, 0x0340);
		}

		// class UATAnimNotify_PlaySoundField_BP_C : public UATAnimNotify_PlaySoundFieldSe
		TEST_METHOD(BlueprintGeneratedClass__ATAnimNotify_PlaySoundField_BP__ATAnimNotify_PlaySoundField_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_PlaySoundField_BP_C, 0x0040);
		}

		// class AProjectile_Kidan_BigCharge_BP_C : public AATProjectileBullet
		TEST_METHOD(BlueprintGeneratedClass__Projectile_Kidan_BigCharge_BP__Projectile_Kidan_BigCharge_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AProjectile_Kidan_BigCharge_BP_C, 0x0528);
		}

		// class AProjectile_FieldShotCharge_BP_C : public AATProjectileField
		TEST_METHOD(BlueprintGeneratedClass__Projectile_FieldShotCharge_BP__Projectile_FieldShotCharge_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AProjectile_FieldShotCharge_BP_C, 0x04A0);
		}

		// class AAREA03_ZORB_C01_EVT_MAIN_01001_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__AREA03_ZORB_C01_EVT_MAIN_01001__AREA03_ZORB_C01_EVT_MAIN_01001_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAREA03_ZORB_C01_EVT_MAIN_01001_C, 0x0340);
		}

		// class AArea03_Env_GokuHouse_00_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_GokuHouse_00__Area03_Env_GokuHouse_00_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_GokuHouse_00_C, 0x0340);
		}

		// class UQuest_Main_Clear_C : public UAT_UIQuestMainClear
		TEST_METHOD(WidgetBlueprintGeneratedClass__Quest_Main_Clear__Quest_Main_Clear_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_C, UberGraphFrame, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_C, In_List, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_C, Out_List, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_C, Out, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_C, In, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_C, All_Nut, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_C, Clear_Bar_Dummy00, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_C, Clear_Bar_Dummy01, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_C, Clear_Bar_Dummy02, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_C, Clear_Bar_Dummy03, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_C, Clear_Bar_Dummy04, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_C, Img_Dmy00, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_C, Img_Dmy01, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_C, Quest_Main_Clear_Rank, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_C, RetainerBox_1, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_C, Xmenu_Cloud_Btm, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_C, Xmenu_Scrollbar, 0x0470);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuest_Main_Clear_C, 0x0478);
		}

		// class AA010_BP_C : public AAnimalMob_Pawn_C
		TEST_METHOD(BlueprintGeneratedClass__A010_BP__A010_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AA010_BP_C, ChickenComponent, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::AA010_BP_C, ATNavigationInvoker, 0x0468);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AA010_BP_C, 0x0470);
		}

		// class UAssetRegistryImpl : public UObject
		TEST_METHOD(Class__AssetRegistry__AssetRegistryImpl)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAssetRegistryImpl, UnknownData_Z2Y6, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAssetRegistryImpl, 0x0710);
		}

		// class UAssetRegistryHelpers : public UObject
		TEST_METHOD(Class__AssetRegistry__AssetRegistryHelpers)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAssetRegistryHelpers, 0x0028);
		}

		// class UAssetRegistry : public UInterface
		TEST_METHOD(Class__AssetRegistry__AssetRegistry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAssetRegistry, 0x0028);
		}

		// class UMeshReconstructorBase : public UObject
		TEST_METHOD(Class__MRMesh__MeshReconstructorBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMeshReconstructorBase, 0x0028);
		}

		// class UMRMeshComponent : public UPrimitiveComponent
		TEST_METHOD(Class__MRMesh__MRMeshComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMRMeshComponent, UnknownData_YWDJ, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMRMeshComponent, Material, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMRMeshComponent, bCreateMeshProxySections, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMRMeshComponent, bUpdateNavMeshOnMeshUpdate, 0x0579);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMRMeshComponent, UnknownData_CFGD, 0x057A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMRMeshComponent, BodySetups, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMRMeshComponent, UnknownData_PAVD, 0x0590);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMRMeshComponent, 0x05B0);
		}

		// class AArea03_Env_Heightmap_x0_y2_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Heightmap_x0_y2__Area03_Env_Heightmap_x0_y2_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Heightmap_x0_y2_C, 0x0340);
		}

		// class UXcmn_Distance_C : public UAT_UIXCmnDistance
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Distance__Xcmn_Distance_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Distance_C, Txt_Distance, 0x0380);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Distance_C, 0x0388);
		}

		// class UAT_UIFieldManagerBP_C : public UAT_UIFieldManager
		TEST_METHOD(BlueprintGeneratedClass__AT_UIFieldManagerBP__AT_UIFieldManagerBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIFieldManagerBP_C, 0x05E8);
		}

		// class UXcmn_Pause_C : public UAT_UIXCmnPause
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Pause__Xcmn_Pause_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Pause_C, Out, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Pause_C, In, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Pause_C, Loop, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Pause_C, Lang_Pause, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Pause_C, List_Bar00, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Pause_C, List_Bar01, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Pause_C, List_Bar02, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Pause_C, List_Bar03, 0x04E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Pause_C, 0x04E8);
		}

		// class UTalkAnimBP_C001A_C : public UTownTalkAnimBlueprint_C
		TEST_METHOD(AnimBlueprintGeneratedClass__TalkAnimBP_C001A__TalkAnimBP_C001A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTalkAnimBP_C001A_C, 0x658C);
		}

		// class UBattle_Tips_Tutorial_C : public UAT_UIBattleTipsTutorial
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Tips_Tutorial__Battle_Tips_Tutorial_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Tips_Tutorial_C, UberGraphFrame, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Tips_Tutorial_C, Out_All, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Tips_Tutorial_C, In_All, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Tips_Tutorial_C, Out, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Tips_Tutorial_C, In, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Tips_Tutorial_C, All_Nut_InvalidationBox, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Tips_Tutorial_C, Battle_Tips_List_00, 0x05B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Tips_Tutorial_C, Battle_Tips_List_01, 0x05C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Tips_Tutorial_C, Battle_Tips_List_02, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Tips_Tutorial_C, Battle_Tips_List_03, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Tips_Tutorial_C, Battle_Tips_List_04, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Tips_Tutorial_C, Battle_Tips_List_05, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Tips_Tutorial_C, Battle_Tips_List_06, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Tips_Tutorial_C, Battle_Tips_List_07, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Tips_Tutorial_C, Battle_Tips_List_08, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Tips_Tutorial_C, Img_Base_Tips_Tutorial, 0x0600);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Tips_Tutorial_C, Img_Base_Tips_Tutorial_01, 0x0608);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Tips_Tutorial_C, Txt_Show, 0x0610);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Tips_Tutorial_C, 0x0618);
		}

		// class ASub_Npc004_07_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc004_07__Sub_Npc004_07_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc004_07_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc004_07_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc004_07_C, canceled, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc004_07_C, UnknownData_W5KR, 0x04D1);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc004_07_C, Cpl001, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc004_07_C, Cpl002, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc004_07_C, Cpl003, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc004_07_C, Cpl006, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc004_07_C, Cpl007_01, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc004_07_C, Cpl007_02, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc004_07_C, Cpl008, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc004_07_C, Cpl010, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc004_07_C, Cpl011, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc004_07_C, Npc004, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc004_07_C, Npc005, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc004_07_C, Npc006, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc004_07_C, Npc007, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc004_07_C, Mesh, 0x0540);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc004_07_C, 0x0550);
		}

		// class ASub_Cpl032_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Cpl032_01__Sub_Cpl032_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl032_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl032_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl032_01_C, Cpl032, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl032_01_C, canceled, 0x04D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Cpl032_01_C, 0x04D9);
		}

		// class AAtrociousEnemyBossEvent_Area02_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__AtrociousEnemyBossEvent_Area02__AtrociousEnemyBossEvent_Area02_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAtrociousEnemyBossEvent_Area02_C, UberGraphFrame, 0x04C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAtrociousEnemyBossEvent_Area02_C, 0x04C8);
		}

		// class AAtrociousEnemyBossEvent_Area01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__AtrociousEnemyBossEvent_Area01__AtrociousEnemyBossEvent_Area01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAtrociousEnemyBossEvent_Area01_C, UberGraphFrame, 0x04C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAtrociousEnemyBossEvent_Area01_C, 0x04C8);
		}

		// class ASub_Npc044_01_C : public AQuest_General
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc044_01__Sub_Npc044_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc044_01_C, UberGraphFrame, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc044_01_C, DefaultSceneRoot, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc044_01_C, quest_id, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc044_01_C, arrival_name, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc044_01_C, start_point_name, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc044_01_C, npc026_name, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc044_01_C, npc044_name, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc044_01_C, npc045_name, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc044_01_C, npc014_name, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc044_01_C, canceled, 0x0500);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc044_01_C, 0x0501);
		}

		// class UBP_Dest_PalmA_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_PalmA__BP_Dest_PalmA_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_PalmA_C, 0x0820);
		}

		// class ASub_Npc042_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc042_01__Sub_Npc042_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc042_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc042_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc042_01_C, Npc042, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc042_01_C, canceled, 0x04D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc042_01_C, 0x04D9);
		}

		// class ASub_Npc038_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc038_01__Sub_Npc038_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc038_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc038_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc038_01_C, Npc038, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc038_01_C, Cpl006, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc038_01_C, Cpl032, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc038_01_C, canceled, 0x04E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc038_01_C, 0x04E9);
		}

		// class AArea03_Env_Heightmap_x3_y3_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Heightmap_x3_y3__Area03_Env_Heightmap_x3_y3_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Heightmap_x3_y3_C, 0x0340);
		}

		// class UField_Bgm_C : public UAT_UIFieldBGM
		TEST_METHOD(WidgetBlueprintGeneratedClass__Field_Bgm__Field_Bgm_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Bgm_C, Change_Bgm, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Bgm_C, Out_Bgm, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Bgm_C, In_Bgm, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Bgm_C, All_Nut, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Bgm_C, Icon_Bgm, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Bgm_C, Txt_Songtitle, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UField_Bgm_C, 0x03C8);
		}

		// class UBP_Dest_LowA_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_LowA__BP_Dest_LowA_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_LowA_C, 0x0820);
		}

		// class UBP_Dest_TreeC_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_TreeC__BP_Dest_TreeC_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_TreeC_C, 0x0820);
		}

		// class UField_Memory_C : public UAT_UIFieldMemory
		TEST_METHOD(WidgetBlueprintGeneratedClass__Field_Memory__Field_Memory_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Memory_C, Out, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Memory_C, In, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Memory_C, Img_Base_Memory, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Memory_C, Ins_Xef_Fad_Grad_00, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Memory_C, Ins_Xef_Fad_Grad_01, 0x0448);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UField_Memory_C, 0x0450);
		}

		// class ASub_Npc022_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc022_01__Sub_Npc022_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc022_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc022_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc022_01_C, Npc022, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc022_01_C, Npc004, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc022_01_C, Npc005, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc022_01_C, canceled, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc022_01_C, UnknownData_46JJ, 0x04E9);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc022_01_C, dragonBalls, 0x04EC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc022_01_C, 0x04F0);
		}

		// class UField_Search_Canvas_C : public UAT_UIFieldSearch
		TEST_METHOD(WidgetBlueprintGeneratedClass__Field_Search_Canvas__Field_Search_Canvas_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UField_Search_Canvas_C, 0x03E0);
		}

		// class UInfo_Area_C : public UAT_UIInfoArea
		TEST_METHOD(WidgetBlueprintGeneratedClass__Info_Area__Info_Area_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Area_C, Start, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Area_C, All_Info_Area, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Area_C, All_Nut, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Area_C, Ins_Eff00, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Area_C, Ins_Eff01, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Area_C, Ins_Line, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Area_C, Pnl_Txt_Area, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Area_C, Txt_Area, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInfo_Area_C, 0x03C8);
		}

		// class ASub_Npc015_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc015_01__Sub_Npc015_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc015_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc015_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc015_01_C, Npc015, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc015_01_C, Npc014, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc015_01_C, canceled, 0x04E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc015_01_C, 0x04E1);
		}

		// class ASub_Npc012_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc012_01__Sub_Npc012_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc012_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc012_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc012_01_C, Sub_Npc012_01_Client, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc012_01_C, eventItemAccessPoints, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc012_01_C, canceled, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc012_01_C, UnknownData_D8JN, 0x04E9);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc012_01_C, CrossTalkId, 0x04F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc012_01_C, 0x04F8);
		}

		// class UDinosaur_AnimBP_C : public UNpcAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__Dinosaur_AnimBP__Dinosaur_AnimBP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, UberGraphFrame, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_Root_ECB58E8D46F82769CBA6F09528B309CE, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_TransitionResult_3DFC75D847534F9F54BE85BD4B10B560, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_TransitionResult_B31521B54C42ECB4EE525695419EC745, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_TransitionResult_AF385665495E0BFBCDD97A8F452A056B, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_TransitionResult_296757084DF263AEB3BC55A33B234ECD, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_TransitionResult_ECB7765A462C0697B5DC40914C09FB10, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_SequencePlayer_ED02C42047018BCD43A1938139C8A0D9, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_StateResult_7EDC0C14461DB6309ACD1A9647DD132D, 0x0650);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_TransitionResult_EE92E1BA444CBB9B9708E0AAAFB3A2AA, 0x0690);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_TransitionResult_87F143AE415395E1D25E65925284CB97, 0x06D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_TransitionResult_0BAE200B4D0CCB7EB8AACAA5EC99E468, 0x0720);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_TransitionResult_B2ABF2014A6222B5482F7C94B819BA3E, 0x0768);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_TransitionResult_FFC38A664A93B2E55B5FC194D66D463A, 0x07B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_TransitionResult_CBCCF84744C6BEAD2BA568ABE337745C, 0x07F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_TransitionResult_8C83A9A94908DD75C474FE830A229DF8, 0x0840);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_TransitionResult_7FE744BB4A33B0B255897FA0816B6F94, 0x0888);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_TransitionResult_6C418AE849214B9CEF1EF7872671A52B, 0x08D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_TransitionResult_F62CC79C45819CC46AFC198F83F7A77C, 0x0918);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_TransitionResult_019518004A69FFED3A4B429D2DD4050D, 0x0960);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_TransitionResult_D8A353BF42F04B354BA01B81BA2E937A, 0x09A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_TransitionResult_8335EC474E6B2412C84D1BB852E11254, 0x09F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_TransitionResult_7010D34744136EA3639C0E8186E01624, 0x0A38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_TransitionResult_2D75F140435C487A2FFC6CBCD7E7C337, 0x0A80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_StateResult_AC566B7D40CCFC6667B9B3B9C1295448, 0x0AC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_SequencePlayer_05FA0EBE4F660B26C45FA89CF55B7CCA, 0x0B08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_StateResult_6ADEF3144F0A7F4DBA0034AD714F9DEF, 0x0BA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_SequencePlayer_B949BA1A4E280BFA4C61E6948E72AF87, 0x0BE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_StateResult_A6F85EF14309A3FE1B9975B61A75809B, 0x0C88);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_SequencePlayer_DCC7BAFB4CB42918D714A2B224825F3F, 0x0CC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_StateResult_5DEBE6CE45BDC69F93679E9B324FCB41, 0x0D68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_SequencePlayer_33C60489457D0458E176A89837FF9D88, 0x0DA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_StateResult_A3805E614DB02684855F898C18420375, 0x0E48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_SequencePlayer_CB43C29648901ADF8635638BD93252C0, 0x0E88);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_StateResult_E3CCF33F4CC3A7619C541F9807EC58B3, 0x0F28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_SequencePlayer_28CD7246437E04ECE674D7936AF7DACA, 0x0F68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_StateResult_B4D2D205480392F0C1F332AE2A5473F1, 0x1008);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_SequencePlayer_0772C1EB4701A7BD9AF225A9DD827E0D, 0x1048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_StateResult_3C2361BD4A57BF946F808F9CAC0FFA17, 0x10E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_SequencePlayer_F30557694DE5ACF995D30092C511EB4A, 0x1128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_StateResult_AA951EDE4F41CF7E433F62B3A35A1988, 0x11C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_SequencePlayer_BD1CCD654BB63B35021117917996E3F5, 0x1208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_StateResult_87036EC94CE8A1018EE4EE84747B24FC, 0x12A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_StateMachine_8363436D491C496DDD98678DC11C518E, 0x12E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_StateResult_088B962F4AC3E8DE169DADBC8CDE4189, 0x13C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_SequencePlayer_ABFE5EA24D527F891F965BB5D514C68E, 0x1408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_StateResult_8BE85F2942EA7ED1135BE59F91366547, 0x14A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_SequencePlayer_0ECA850D43826402CC72D78CAFCEC345, 0x14E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_StateResult_5E69542E4A98A322F6B532BF1D88E681, 0x1588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_StateMachine_DC65140F4DFA28CC90A71998B9AE9010, 0x15C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_SaveCachedPose_BB92C74A45B0A975DBF8D08C57956624, 0x16A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_TwoBoneIK_A320B76A42C371CE7ADD948A4C3FA08D, 0x1780);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_TwoBoneIK_7EB6DB5846089033B7A3BFA90E27DE25, 0x19C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_UseCachedPose_4F372C80451E4F772F51A19C2EDE6A61, 0x1C00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_LocalToComponentSpace_25E9409541579377EDAAB2B11CC7489F, 0x1C48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_BlendListByBool_66677ABB46B4FF83A33E969A47E97278, 0x1C88);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_381290C54B886966E0F89EA6845BE0C0, 0x1D68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_UseCachedPose_6AF660314FFFA400BC00EDB8F6105E68, 0x1DA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_LocalToComponentSpace_590761C249C5CF8D3AF7769970D7007B, 0x1DF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_ModifyBone_0F130E3C4D9036A05FCAC2ABFAA5719A, 0x1E30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_ModifyBone_D13887B743A7C63611331AA5D3612EFE, 0x1F68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_ModifyBone_82732739470A7ED84A6B5395823307CB, 0x20A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_52A4AAE74066063827044A9EA89330B5, 0x21D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_UseCachedPose_C12D347845CF8C3B88F7B89844E3C6CA, 0x2218);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_SaveCachedPose_5838962E44496C01779718B47CE4B55C, 0x2260);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_BlendListByBool_34F3E781493B5EDE4017119DA464E3B4, 0x2338);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_UseCachedPose_E8ADEC0E41185CBB2F5D37B52199324E, 0x2418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_BlendListByBool_E415DE5B44D657CFD77C67BB168CA643, 0x2460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, AnimGraphNode_UseCachedPose_95414865479CE8574E0D56AFDAD055B7, 0x2540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, WindParticle, 0x2588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDinosaur_AnimBP_C, StarParticle, 0x2590);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDinosaur_AnimBP_C, 0x2598);
		}

		// class ASub_Npc011_00_02_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc011_00_02__Sub_Npc011_00_02_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc011_00_02_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc011_00_02_C, quest_id, 0x04C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc011_00_02_C, 0x04D0);
		}

		// class UMap_M_C : public UAT_UIMapM
		TEST_METHOD(WidgetBlueprintGeneratedClass__Map_M__Map_M_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, UberGraphFrame, 0x0C78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Cover_Out, 0x0C80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Cover_In, 0x0C88);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Out00, 0x0C90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, In, 0x0C98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, All_Map_Detail, 0x0CA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Img_Deco_Map_Grid, 0x0CA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Img_Tex_Fade_Right, 0x0CB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Img_Win_Base00, 0x0CB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Ins_Base_Fad02_Btm, 0x0CC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Ins_Base_Fad02_Top, 0x0CC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Ins_Base_Head01, 0x0CD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Ins_Curs, 0x0CD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Ins_Detail_Txt, 0x0CE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Ins_Fad, 0x0CE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Ins_Scroll_Eff, 0x0CF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Ins_Sirc00, 0x0CF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Ins_Sirc02, 0x0D00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Ins_Sirc02_01, 0x0D08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Ins_Sirc03, 0x0D10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Ins_Sirc_Half_L, 0x0D18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Ins_Sirc_Half_R, 0x0D20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Ins_Sirc_Line00, 0x0D28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Ins_Sirc_Line02, 0x0D30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Ins_Win_Bg00, 0x0D38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_M_Bar00, 0x0D40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_M_Bar01, 0x0D48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_M_Bar02, 0x0D50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_M_Bar03, 0x0D58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_M_Bar04, 0x0D60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_M_Bar05, 0x0D68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_M_Bar06, 0x0D70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_M_Bar07, 0x0D78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_M_Bar08, 0x0D80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_M_Bar09, 0x0D88);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_M_Bar10, 0x0D90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_M_Bar11, 0x0D98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_M_Bar12, 0x0DA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_M_Bar13, 0x0DA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_M_Bar14, 0x0DB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_M_Bar15, 0x0DB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_M_Bar16, 0x0DC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_M_Bar17, 0x0DC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_M_Bar18, 0x0DD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_M_Bar19, 0x0DD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_M_Bar20, 0x0DE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_M_Bar21, 0x0DE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_M_Bar22, 0x0DF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_M_Bar23, 0x0DF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_M_Bar24, 0x0E00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_M_Bar25, 0x0E08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Map_Tex, 0x0E10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Player_Icon, 0x0E18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Player_Marker, 0x0E20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Txt_Area, 0x0E28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Txt_Name, 0x0E30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_C, Xmenu_Cloud_Btm, 0x0E38);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMap_M_C, 0x0E40);
		}

		// class ASub_Npc010_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc010_01__Sub_Npc010_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc010_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc010_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc010_01_C, canceled, 0x04D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc010_01_C, 0x04D1);
		}

		// class ASub_Npc013_01_03_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc013_01_03__Sub_Npc013_01_03_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc013_01_03_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc013_01_03_C, event_battle_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc013_01_03_C, Enemy, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc013_01_03_C, quest_id, 0x04E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc013_01_03_C, 0x04E8);
		}

		// class ASub_Npc013_01_02_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc013_01_02__Sub_Npc013_01_02_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc013_01_02_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc013_01_02_C, event_battle_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc013_01_02_C, Enemy, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc013_01_02_C, quest_id, 0x04E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc013_01_02_C, 0x04E8);
		}

		// class ASub_Cpl010_02_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Cpl010_02__Sub_Cpl010_02_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl010_02_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl010_02_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl010_02_C, Cpl010, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl010_02_C, canceled, 0x04D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Cpl010_02_C, 0x04D9);
		}

		// class UAnimNotifyState_Impulse_C : public UAnimNotifyState
		TEST_METHOD(BlueprintGeneratedClass__AnimNotifyState_Impulse__AnimNotifyState_Impulse_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Impulse_C, Speed, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotifyState_Impulse_C, Tick, 0x0034);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_Impulse_C, 0x0035);
		}

		// class UMap_MS_C : public UAT_UIMiniMapRadar
		TEST_METHOD(WidgetBlueprintGeneratedClass__Map_MS__Map_MS_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, UberGraphFrame, 0x0908);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Cover_Out, 0x0910);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Cover_In, 0x0918);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Change_Map_SS, 0x0920);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Out_SS, 0x0928);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, In_SS, 0x0930);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Change_Map_S, 0x0938);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Ball_Open06, 0x0940);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Ball_Open05, 0x0948);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Ball_Open04, 0x0950);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Ball_Open03, 0x0958);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Ball_Open02, 0x0960);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Ball_Open01, 0x0968);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Completed, 0x0970);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Ball_Open00, 0x0978);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Out, 0x0980);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, In, 0x0988);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, All_Nut_InvalidationBox, 0x0990);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Dmy_Btn, 0x0998);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, IconDb00, 0x09A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, IconDb01, 0x09A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, IconDb02, 0x09B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, IconDb03, 0x09B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, IconDb04, 0x09C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, IconDb05, 0x09C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, IconDb06, 0x09D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Img_Db_Eff00, 0x09D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Img_Db_Eff04, 0x09E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Img_Db_Eff05, 0x09E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Img_Deco_Map_Grid, 0x09F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Img_Dragon_On, 0x09F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Img_Frame, 0x0A00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Img_Frame_Ball_00, 0x0A08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Img_Frame_Ball_01, 0x0A10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Img_Frame_Ball_02, 0x0A18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Img_Frame_Ball_03, 0x0A20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Img_Frame_Ball_04, 0x0A28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Img_Frame_Ball_05, 0x0A30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Img_Frame_Ball_06, 0x0A38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Img_Map_Frame00, 0x0A40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Img_North, 0x0A48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Ins_Air01_Curs, 0x0A50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Ins_Air01_Icon, 0x0A58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Ins_Air01_Point, 0x0A60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Ins_Air_Curs, 0x0A68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Ins_Air_Icon, 0x0A70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Ins_Air_Point, 0x0A78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Ins_Base_Txt_00, 0x0A80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Ins_Base_Txt_01, 0x0A88);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Ins_Base_Txt_Add, 0x0A90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Ins_Btn_Color00, 0x0A98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Ins_Eff_Add_BallEff00, 0x0AA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Ins_Eff_Add_DbEff00, 0x0AA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Ins_Flash_Picon, 0x0AB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Ins_Sirc02, 0x0AB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Ins_Sirc03, 0x0AC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Ins_Xef_Fad01_00, 0x0AC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Ins_Xef_Fad01_01, 0x0AD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Ins_Xef_Fad01_02, 0x0AD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Map_Icon_Sw, 0x0AE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Map_MS_Eff_01, 0x0AE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Map_MS_Eff_02, 0x0AF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Map_MS_Eff_03, 0x0AF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Map_MS_Eff_05, 0x0B00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Map_MS_Eff_06, 0x0B08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Map_Navi_Icon_Sw, 0x0B10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Map_Quest_Icon_Sw, 0x0B18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Map_Tex, 0x0B20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Pnl_Map, 0x0B28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Txt_Get, 0x0B30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Txt_Help, 0x0B38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_C, Xef_Fad01, 0x0B40);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMap_MS_C, 0x0B48);
		}

		// class UQuest_Img_C : public UAT_UIQuestImg
		TEST_METHOD(WidgetBlueprintGeneratedClass__Quest_Img__Quest_Img_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Img_C, Dmy_Img_Quest, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Img_C, Ins_Eff_Rogo_Fade, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Img_C, Ins_Eff_Rogo_Shadow, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Img_C, Ins_Xef_Fad03_Fade, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Img_C, Lang_Logo, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Img_C, Scene_Capture_Image, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Img_C, Txt_Next, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Img_C, Txt_Next_Title, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Img_C, Txt_Notice, 0x0538);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuest_Img_C, 0x0540);
		}

		// class UXlist_List00_C : public UAT_UIList00Choice
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xlist_List00__Xlist_List00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_C, UberGraphFrame, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_C, Enter, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_C, Icon_Clear_S, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_C, Icon_New, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_C, Img_Bar_Shadow, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_C, Img_Eff, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_C, Img_Eff_Long, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_C, Img_Icon_Loop, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_C, Img_Icon_Set, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_C, Img_List_Base, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_C, Ins_Icon_Group, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_C, Ins_Icon_Item, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_C, Ins_Icon_Skill, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_C, Pnl_Icon, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_C, Txt_List, 0x04A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXlist_List00_C, 0x04A8);
		}

		// class UShop_Cook_C : public UAT_UICookingMenu
		TEST_METHOD(WidgetBlueprintGeneratedClass__Shop_Cook__Shop_Cook_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Out, 0x0738);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, In, 0x0740);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Base_Icon, 0x0748);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Dmy_Img_Cook, 0x0750);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Img_Base_Win01_01, 0x0758);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Img_Cap04, 0x0760);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Img_Mask_Img, 0x0768);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Img_Tex_Deco, 0x0770);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Img_Title_Line, 0x0778);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Img_Win00_00, 0x0780);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Img_Win_Heading00_00, 0x0788);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Img_Win_Heading00_03, 0x0790);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Ins_Cap00, 0x0798);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Ins_Cap00_01, 0x07A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Ins_Icon_Group, 0x07A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Ins_Win_Bg00, 0x07B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Shop_Cmn_Bar_01_00, 0x07B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Shop_Cmn_Bar_01_01, 0x07C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Shop_Cmn_Bar_01_02, 0x07C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Shop_Cmn_Bar_01_03, 0x07D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Shop_Cmn_Bar_01_04, 0x07D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Shop_Cmn_List, 0x07E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Txt_Cap00, 0x07E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Txt_Cap02, 0x07F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Txt_Cap03, 0x07F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Txt_Cap03_01, 0x0800);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Txt_Detail00_01, 0x0808);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Txt_Detail00_02, 0x0810);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Txt_Detail00_03, 0x0818);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Txt_Detail01_01, 0x0820);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Txt_Detail01_02, 0x0828);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Txt_Detail01_03, 0x0830);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Txt_Detail02, 0x0838);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Txt_Detail03, 0x0840);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cook_C, Txt_Title00, 0x0848);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UShop_Cook_C, 0x0850);
		}

		// class UInfo_Name_C : public UAT_UIInfoNameCore
		TEST_METHOD(WidgetBlueprintGeneratedClass__Info_Name__Info_Name_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Name_C, Out, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Name_C, In, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Name_C, All_Nut, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Name_C, Ins_Eff00, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Name_C, Ins_Eff01, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Name_C, Ins_Line, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Name_C, Pnl_Info_Name, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Name_C, Pnl_Info_Name01, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Name_C, Pnl_Txt_Name, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Name_C, Txt_Name, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Name_C, Txt_Name01, 0x0400);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInfo_Name_C, 0x0408);
		}

		// class UInfo_Log_Bar02_C : public UAT_UIInfoLog02Bar
		TEST_METHOD(WidgetBlueprintGeneratedClass__Info_Log_Bar02__Info_Log_Bar02_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Bar02_C, Out, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Bar02_C, In, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Bar02_C, Img_Icon_Info, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Bar02_C, Img_Micon14, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Bar02_C, Img_Micon25, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Bar02_C, Ins_Eff_Base, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Bar02_C, Ins_Icon_Skill, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Bar02_C, Ins_Log_Base_00, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Bar02_C, Ins_Log_Line, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Bar02_C, Pnl_Icon, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Bar02_C, Txt00, 0x0428);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInfo_Log_Bar02_C, 0x0430);
		}

		// class UShop_Info_C : public UAT_UIShopInfo
		TEST_METHOD(WidgetBlueprintGeneratedClass__Shop_Info__Shop_Info_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Info_C, Out, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Info_C, In, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Info_C, Img_Cap_Base00, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Info_C, Img_Cap_Base01, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Info_C, Img_Win00, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Info_C, Img_Win01, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Info_C, Img_Win02, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Info_C, Ins_Mask_Db, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Info_C, Ins_Triangle00_00, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Info_C, Ins_Triangle00_01, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Info_C, Shop_Cmn_Money, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Info_C, Txt_Cap00, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Info_C, Txt_Cap01, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Info_C, Txt_Detail, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Info_C, Txt_Price, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Info_C, Txt_Title, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Info_C, Xcmn_Scrollbar, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Info_C, Xlist_Bar05_00, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Info_C, Xlist_Bar05_01, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Info_C, Xlist_Bar05_02, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Info_C, Xlist_Bar05_03, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Info_C, Xlist_Bar05_04, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Info_C, Xlist_Bar05_05, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Info_C, Xlist_Bar05_06, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Info_C, Xlist_Bar05_07, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Info_C, Xmenu_Bg, 0x0558);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UShop_Info_C, 0x0560);
		}

		// class UXlist_Bar01_C : public UAT_UIXListBar01
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xlist_Bar01__Xlist_Bar01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar01_C, Out_Sublist_Select, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar01_C, In_Sublist_Select, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar01_C, Out_SubList, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar01_C, In_SubList, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar01_C, Enter, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar01_C, Img_Bar_Base, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar01_C, Img_Bar_Shadow, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar01_C, Img_Curs_Parts_Btm, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar01_C, Img_Curs_Parts_L00, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar01_C, Img_Curs_Parts_R00, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar01_C, Img_Curs_Parts_R01, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar01_C, Img_Curs_Parts_Top, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar01_C, Img_Eff, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar01_C, Txt_List, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar01_C, Xlist_List03_00, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar01_C, Xlist_List03_01, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar01_C, Xlist_List03_02, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar01_C, Xmenu_Curs00_01, 0x04D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXlist_Bar01_C, 0x04E0);
		}

		// class UXlist_List03_C : public UAT_UIList03Choice
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xlist_List03__Xlist_List03_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List03_C, UberGraphFrame, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List03_C, Enter, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List03_C, All_Nut, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List03_C, Img_Bar_Shadow, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List03_C, Img_Eff, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List03_C, Xmenu_Curs00_01, 0x03F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXlist_List03_C, 0x0400);
		}

		// class UShop_Top_C : public UAT_UIShopTop
		TEST_METHOD(WidgetBlueprintGeneratedClass__Shop_Top__Shop_Top_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top_C, Out, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top_C, In, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top_C, Image_1, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top_C, Img_Win00, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top_C, Img_Win01, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top_C, Img_Win02, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top_C, Ins_Mask_Db, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top_C, Txt_Cap01, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top_C, Txt_List00, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top_C, Txt_List01, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top_C, Txt_Num00, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top_C, Txt_Num01, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top_C, Xlist_Bar01_00, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top_C, Xlist_Bar01_01, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top_C, Xlist_Bar01_02, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top_C, Xlist_Bar01_03, 0x04F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UShop_Top_C, 0x04F8);
		}

		// class UXlist_Bar05_C : public UAT_UIXlistBar05
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xlist_Bar05__Xlist_Bar05_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar05_C, In_Sold_Out, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar05_C, Enter, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar05_C, Icon_New, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar05_C, Img_Bar_Shadow, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar05_C, Img_Fad_Black, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar05_C, Img_Sold_Out, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar05_C, Ins_Cursor_Fad, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar05_C, Ins_Win_Base, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar05_C, Txt_List, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar05_C, Txt_Num, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar05_C, Txt_Sold_Out, 0x0468);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXlist_Bar05_C, 0x0470);
		}

		// class UBattle_Tips_List_C : public UAT_UIBattleTipsList
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Tips_List__Battle_Tips_List_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Tips_List_C, UberGraphFrame, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Tips_List_C, All_Nut_InvalidationBox, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Tips_List_C, All_Tips_Tutorial, 0x0390);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Tips_List_C, 0x0398);
		}

		// class UBattle_Cond_C : public UAT_UIBattleCond
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Cond__Battle_Cond_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cond_C, UberGraphFrame, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cond_C, Out, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cond_C, In, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cond_C, Ins_Base_Fad03_00, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cond_C, Ins_Base_Fad05_00, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cond_C, Ins_Base_Fad05_01, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cond_C, Ins_Base_Fad05_02, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cond_C, Txt_Cond00, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cond_C, Txt_Cond01, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cond_C, Txt_Cond02, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cond_C, Txt_Title00, 0x0470);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Cond_C, 0x0478);
		}

		// class UBattle_Gauge_Durable_C : public UAT_UIBattleHudGaugeDurable
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Gauge_Durable__Battle_Gauge_Durable_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Success, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Out, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, In, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Img_Gauge_Durable_Parts00_00, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Img_Gauge_Durable_Parts01_00, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Img_Gauge_Durable_Parts01_01, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Img_Gauge_Durable_Parts01_02, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Img_Gauge_Durable_Parts01_03, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Img_Gauge_Durable_Parts01_04, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Img_Gauge_Durable_Parts02_00, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Img_Gauge_Durable_Parts02_01, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Img_Gauge_Durable_Parts02_02, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Img_Gauge_Durable_Parts02_03, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Img_Gauge_Durable_Parts02_04, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Img_Gauge_Durable_Parts02_05, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Img_Gauge_Durable_Parts02_06, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Img_Gauge_Durable_Parts02_07, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Img_Gauge_Durable_Parts02_08, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Img_Gauge_Durable_Parts03_00, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Img_Gauge_Durable_Parts03_01, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Img_Gauge_Durable_Parts03_02, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Img_Gauge_Durable_Parts03_03, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Img_Gauge_Durable_Parts03_04, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Img_Gauge_Durable_Parts03_05, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Img_Gauge_Durable_Parts04_00, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Img_Gauge_Durable_Parts04_01, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Ins_Gauge_Durable_Frame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Durable_C, Ins_Gauge_Durable_Frame01, 0x04C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Gauge_Durable_C, 0x04D0);
		}

		// class UXlist_Bar04_C : public UAT_UIXlistBar04
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xlist_Bar04__Xlist_Bar04_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar04_C, UberGraphFrame, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar04_C, In_Sold_Out, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar04_C, Enter, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar04_C, Icon_New, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar04_C, Img_Bar_Shadow, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar04_C, Img_Fad_Black, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar04_C, Img_Sold_Out, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar04_C, Ins_Cursor_Fad, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar04_C, Ins_Icon_Item, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar04_C, Ins_Round_Base00, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar04_C, Ins_Win_Base, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar04_C, Txt_List, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar04_C, Txt_Num, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar04_C, Txt_Num_Have, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar04_C, Txt_Num_Price, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar04_C, Txt_Sold_Out, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar04_C, Xmenu_Arrow01_L, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar04_C, Xmenu_Arrow01_R, 0x04A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXlist_Bar04_C, 0x04B0);
		}

		// class UChoice_Win_C : public UAT_UIChoiceWin
		TEST_METHOD(WidgetBlueprintGeneratedClass__Choice_Win__Choice_Win_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UChoice_Win_C, UberGraphFrame, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChoice_Win_C, Out, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChoice_Win_C, In, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChoice_Win_C, All_Nut, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChoice_Win_C, Choice_Cmd00, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChoice_Win_C, Choice_Cmd01, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChoice_Win_C, Img_Choice_Win, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChoice_Win_C, Txt_Choice, 0x03E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UChoice_Win_C, 0x03E8);
		}

		// class UQuest_Navi_S_C : public UAT_UIQuestNavigationListItem
		TEST_METHOD(WidgetBlueprintGeneratedClass__Quest_Navi_S__Quest_Navi_S_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_S_C, UberGraphFrame, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_S_C, List_Out, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_S_C, List_In, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_S_C, All_List_Sub00, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_S_C, Img_Base_List, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_S_C, Pnl_List_Sub00, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_S_C, Txt_List_00, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_S_C, Txt_List_01, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_S_C, Xmenu_Check, 0x0448);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuest_Navi_S_C, 0x0450);
		}

		// class UXcmn_Agreement_C : public UAT_UIXcmnAgreement
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Agreement__Xcmn_Agreement_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Agreement_C, Out, 0x05C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Agreement_C, In, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Agreement_C, Dmy_Img, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Agreement_C, Dmy_Lang_Heads, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Agreement_C, Xcmn_Fade_Brack, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Agreement_C, Xmenu_Arrow_L, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Agreement_C, Xmenu_Arrow_R, 0x05F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Agreement_C, 0x05F8);
		}

		// class UXef_Shine00_C : public UAT_UIXefShine
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xef_Shine00__Xef_Shine00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Shine00_C, UberGraphFrame, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Shine00_C, In, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Shine00_C, All_Nut, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Shine00_C, Ins_Fad01_00, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Shine00_C, Ins_Fad01_01, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Shine00_C, Ins_Fad01_02, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Shine00_C, Ins_Fad01_03, 0x03E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXef_Shine00_C, 0x03F0);
		}

		// class UInfo_Log_Bar01_C : public UAT_UIInfoLogBar01
		TEST_METHOD(WidgetBlueprintGeneratedClass__Info_Log_Bar01__Info_Log_Bar01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Bar01_C, Out, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Bar01_C, In, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Bar01_C, Img_Icon_Info, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Bar01_C, Img_Tex_Base, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Bar01_C, ScrText_Info, 0x03B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInfo_Log_Bar01_C, 0x03C0);
		}

		// class UEnc_Hud_E00_C : public UAT_UIEncounterHudCore
		TEST_METHOD(WidgetBlueprintGeneratedClass__Enc_Hud_E00__Enc_Hud_E00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Hud_E00_C, Out, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Hud_E00_C, In, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Hud_E00_C, Enc_Hud_Charicon00, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Hud_E00_C, Enc_Hud_Charicon01, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Hud_E00_C, Enc_Hud_Charicon02, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Hud_E00_C, Enc_Hud_Charicon03, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Hud_E00_C, Enc_Hud_Charicon04, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Hud_E00_C, Enc_Hud_Charicon05, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Hud_E00_C, Img_Space_L, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Hud_E00_C, Img_Space_R, 0x0430);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnc_Hud_E00_C, 0x0438);
		}

		// class UXlist_Bar03_C : public UAT_UIBar03Choice
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xlist_Bar03__Xlist_Bar03_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_C, UberGraphFrame, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_C, Cansel, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_C, Enter_Mode, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_C, Enter_List, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_C, Icon_New, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_C, Img_Bar_Shadow, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_C, Img_Bar_Shadow01, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_C, Img_Cursol_Round00, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_C, Img_Fad_Black, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_C, Ins_Cursor_Fad, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_C, Ins_Cursor_Round00, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_C, Ins_Icon_Volum_Max, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_C, Ins_Icon_Volum_Min, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_C, Ins_Round_Base00, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_C, Ins_Win_Base, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_C, Ins_Xlist_Base, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_C, Txt_Enter, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_C, Txt_List, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_C, Txt_Mode, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_C, Xlist_Bar_03_Gauge, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_C, Xmenu_Arrow01_L, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_C, Xmenu_Arrow01_R, 0x04E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXlist_Bar03_C, 0x04E8);
		}

		// class UXlist_Bar03_Lay10_C : public UAT_UICmn03MenuBar10
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xlist_Bar03_Lay10__Xlist_Bar03_Lay10_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Lay10_C, In, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Lay10_C, Out, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Lay10_C, Xcmn_Scrollbar, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Lay10_C, Xlist_Bar03_00, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Lay10_C, Xlist_Bar03_01, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Lay10_C, Xlist_Bar03_02, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Lay10_C, Xlist_Bar03_03, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Lay10_C, Xlist_Bar03_04, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Lay10_C, Xlist_Bar03_05, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Lay10_C, Xlist_Bar03_06, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Lay10_C, Xlist_Bar03_07, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Lay10_C, Xlist_Bar03_08, 0x0418);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXlist_Bar03_Lay10_C, 0x0420);
		}

		// class UXmenu_Arrow_R_C : public UAT_UIXcmnArrow
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xmenu_Arrow_R__Xmenu_Arrow_R_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Arrow_R_C, UberGraphFrame, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Arrow_R_C, Loop, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Arrow_R_C, Start, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Arrow_R_C, Img_Icon_Switching, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Arrow_R_C, Xcmn_Btn_Plat, 0x03D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXmenu_Arrow_R_C, 0x03D8);
		}

		// class UShop_Cmn_Money_C : public UAT_UIShopCmnMoney
		TEST_METHOD(WidgetBlueprintGeneratedClass__Shop_Cmn_Money__Shop_Cmn_Money_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_Money_C, UberGraphFrame, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_Money_C, Out, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_Money_C, In, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_Money_C, Icon_Item, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_Money_C, Ins_Base_Hex00_00, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_Money_C, Ins_Base_Hex00_01, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_Money_C, Ins_Base_Hex00_02, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_Money_C, Ins_Icon_Money, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_Money_C, Txt_Mdl, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_Money_C, Txt_Num_Money, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_Money_C, Txt_Num_Pay, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_Money_C, Txt_Pay, 0x0418);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UShop_Cmn_Money_C, 0x0420);
		}

		// class UBattle_Msg_Dodge_C : public UAT_UIBattleMsgJustDodge
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Msg_Dodge__Battle_Msg_Dodge_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Dodge_C, Start, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Dodge_C, Img_Space, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Dodge_C, Img_Space_Eff, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Dodge_C, Ins_Eff_Just_Dodge, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Dodge_C, Ins_Triangle03_Blur50, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Dodge_C, Lang_Just_Dodge, 0x0430);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Msg_Dodge_C, 0x0438);
		}

		// class UXtex_Deco_Db00_C : public UCFUIUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xtex_Deco_Db00__Xtex_Deco_Db00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXtex_Deco_Db00_C, UberGraphFrame, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXtex_Deco_Db00_C, Start01_01, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXtex_Deco_Db00_C, Start00_01, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXtex_Deco_Db00_C, Start01, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXtex_Deco_Db00_C, Start00, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXtex_Deco_Db00_C, Ins_Deco_Db00_00, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXtex_Deco_Db00_C, Ins_Deco_Db00_01, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXtex_Deco_Db00_C, Ins_Deco_Db00_02, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXtex_Deco_Db00_C, Xtex_Parts_Db00, 0x03B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXtex_Deco_Db00_C, 0x03B8);
		}

		// class UCommu_Lv00_C : public UAT_UICommuLv
		TEST_METHOD(WidgetBlueprintGeneratedClass__Commu_Lv00__Commu_Lv00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCommu_Lv00_C, Icon_New, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCommu_Lv00_C, Img_Gage_Base, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCommu_Lv00_C, Img_Gauge_Frame, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCommu_Lv00_C, Ins_Gauge_Cmn00, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCommu_Lv00_C, Ins_Icon_Group, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCommu_Lv00_C, Txt_Lv_Denomi, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCommu_Lv00_C, Txt_Lv_Denomi_Arae, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCommu_Lv00_C, Txt_Lv_Mole, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCommu_Lv00_C, Txt_Lv_Mole_Arae, 0x0400);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCommu_Lv00_C, 0x0408);
		}

		// class ULinkbonus00_C : public UAT_UILinkBonus
		TEST_METHOD(WidgetBlueprintGeneratedClass__Linkbonus00__Linkbonus00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULinkbonus00_C, Txt_Cap, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULinkbonus00_C, Txt_Lv, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULinkbonus00_C, Xcmn_Emb01_00, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULinkbonus00_C, Xcmn_Emb01_01, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULinkbonus00_C, Xcmn_Emb01_02, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULinkbonus00_C, Xcmn_Emb01_03, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULinkbonus00_C, Xcmn_Emb01_04, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULinkbonus00_C, Xcmn_Emb01_05, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULinkbonus00_C, 0x03E0);
		}

		// class UXlist_Reward_Commu_C : public UAT_UIRewardBarCommu
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xlist_Reward_Commu__Xlist_Reward_Commu_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Reward_Commu_C, UberGraphFrame, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Reward_Commu_C, Icon_Item00, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Reward_Commu_C, Img_Icon_Popular00, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Reward_Commu_C, Img_Icon_Popular_Shadow00, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Reward_Commu_C, Img_Win_hr01, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Reward_Commu_C, Txt_Max00, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Reward_Commu_C, Txt_Num, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Reward_Commu_C, Txt_Reward, 0x0428);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXlist_Reward_Commu_C, 0x0430);
		}

		// class UIcon_Clear_S_C : public UAT_UIIconClearS
		TEST_METHOD(WidgetBlueprintGeneratedClass__Icon_Clear_S__Icon_Clear_S_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_Clear_S_C, UberGraphFrame, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_Clear_S_C, Start, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_Clear_S_C, Img_Clear00, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_Clear_S_C, Ins_Clear00, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_Clear_S_C, Ins_Eff_Particle, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_Clear_S_C, Ins_Xef_Burst02_00, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_Clear_S_C, Ins_Xef_Burst02_01, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_Clear_S_C, Ins_Xef_Fad05, 0x03F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UIcon_Clear_S_C, 0x03F8);
		}

		// class UIcon_State_Lay_P_C : public UAT_UIPlayerStateIcon
		TEST_METHOD(WidgetBlueprintGeneratedClass__Icon_State_Lay_P__Icon_State_Lay_P_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_Lay_P_C, All_Icon_State, 0x0768);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_Lay_P_C, All_Nut, 0x0770);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_Lay_P_C, Icon_State00, 0x0778);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_Lay_P_C, Icon_State01, 0x0780);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_Lay_P_C, Icon_State02, 0x0788);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_Lay_P_C, Icon_State03, 0x0790);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_Lay_P_C, Icon_State04, 0x0798);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_Lay_P_C, Icon_State05, 0x07A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_Lay_P_C, Icon_State06, 0x07A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_Lay_P_C, Icon_State07, 0x07B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_Lay_P_C, Icon_State08, 0x07B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_Lay_P_C, Icon_State09, 0x07C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_Lay_P_C, Icon_State10, 0x07C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_Lay_P_C, Icon_State11, 0x07D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_Lay_P_C, Icon_State12, 0x07D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_Lay_P_C, Icon_State13, 0x07E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_Lay_P_C, Icon_State14, 0x07E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_Lay_P_C, Icon_State15, 0x07F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_Lay_P_C, Icon_State16, 0x07F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UIcon_State_Lay_P_C, 0x0800);
		}

		// class UField_Curs_C : public UAT_UIFieldCursor
		TEST_METHOD(WidgetBlueprintGeneratedClass__Field_Curs__Field_Curs_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Curs_C, Out, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Curs_C, In, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Curs_C, All_Field_Curs, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Curs_C, All_Nut, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Curs_C, Img_Base01, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Curs_C, Ins_Deco, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Curs_C, Ins_Sirc00, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Curs_C, Ins_Sirc00_Shdw, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Curs_C, Ins_Sirc01, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Curs_C, Ins_Sirc01_Shdw, 0x0420);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UField_Curs_C, 0x0428);
		}

		// class UQuest_Main_Start_C : public UAT_UIQuestMainStart
		TEST_METHOD(WidgetBlueprintGeneratedClass__Quest_Main_Start__Quest_Main_Start_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Start_C, Out, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Start_C, Loop, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Start_C, In, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Start_C, All_Nut, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Start_C, Img_Cloud00_Btm00, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Start_C, Img_Cloud00_Btm01, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Start_C, Img_Cloud00_Top00, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Start_C, Img_Cloud00_Top02, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Start_C, Txt_Title, 0x0430);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuest_Main_Start_C, 0x0438);
		}

		// class UQte_Battle_Barrage_C : public UAT_UIQteBarrage
		TEST_METHOD(WidgetBlueprintGeneratedClass__Qte_Battle_Barrage__Qte_Battle_Barrage_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Barrage_C, In, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Barrage_C, Out, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Barrage_C, Loop_Btn, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Barrage_C, Ins_Cutin_Eff02, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Barrage_C, Ins_Cutin_Eff03, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Barrage_C, Ins_Cutin_Eff04, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Barrage_C, Ins_Cutin_Eff06_00, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Barrage_C, Ins_Cutin_Eff06_01, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Barrage_C, Ins_Cutin_Eff06_02, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Barrage_C, Ins_Dmy_Nut, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Barrage_C, Ins_Dmy_Nut_Eff, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Barrage_C, Ins_Eff_Loop00, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Barrage_C, Ins_Eff_Loop01, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Barrage_C, Ins_Eff_Loop02, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Barrage_C, Ins_Eff_Particle, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Barrage_C, Ins_Xef_Fad03_00, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Barrage_C, Ins_Xef_Fad03_01, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Barrage_C, Ins_Xef_Fad05, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Barrage_C, Ins_Xef_particle00, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Barrage_C, Ins_Xef_particle01, 0x04B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQte_Battle_Barrage_C, 0x04B8);
		}

		// class UWmfMediaSettings : public UObject
		TEST_METHOD(Class__WmfMediaFactory__WmfMediaSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UWmfMediaSettings, AllowNonStandardCodecs, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWmfMediaSettings, LowLatency, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWmfMediaSettings, NativeAudioOut, 0x002A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWmfMediaSettings, UnknownData_QNDR, 0x002B);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWmfMediaSettings, 0x0030);
		}

		// class UMap_World_Curs01_C : public UAT_UIMapWorldCurs01
		TEST_METHOD(WidgetBlueprintGeneratedClass__Map_World_Curs01__Map_World_Curs01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs01_C, Out_Cur, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs01_C, Loop_Cur, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs01_C, In_Cur, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs01_C, All_Map_World_Curs, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs01_C, Img_Curs01_00, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs01_C, Img_Curs01_01, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs01_C, Img_Curs_Long01_00, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs01_C, Img_Curs_Long01_01, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs01_C, Ins_Curs01_00, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs01_C, Ins_Curs01_01, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs01_C, Ins_Curs_Circle02, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs01_C, Ins_Curs_Circle02_Fad, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs01_C, Ins_Curs_Long01_00, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs01_C, Ins_Curs_Long01_01, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs01_C, Pnl_Curs01, 0x0400);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMap_World_Curs01_C, 0x0408);
		}

		// class UBattle_Assist_C : public UAT_UIBattleRescue
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Assist__Battle_Assist_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Assist_C, 0x03C0);
		}

		// class UBattle_Cutin_Skill00_C : public UAT_UIBattleCutinSkill
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Cutin_Skill00__Battle_Cutin_Skill00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_Skill00_C, UberGraphFrame, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_Skill00_C, Out, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_Skill00_C, In, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_Skill00_C, Img_Ins_Line, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_Skill00_C, Pnl_Battle_Cutin_Skill00, 0x0408);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Cutin_Skill00_C, 0x0410);
		}

		// class UMap_M_Bar00_C : public UAT_UIMapMBar
		TEST_METHOD(WidgetBlueprintGeneratedClass__Map_M_Bar00__Map_M_Bar00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_Bar00_C, Map_Icon, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_M_Bar00_C, Txt_Icon, 0x0388);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMap_M_Bar00_C, 0x0390);
		}

		// class AAirCarBP_C : public AAirCar
		TEST_METHOD(BlueprintGeneratedClass__AirCarBP__AirCarBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAirCarBP_C, 0x0990);
		}

		// class ATwinFootBP_C : public ATwinFoot
		TEST_METHOD(BlueprintGeneratedClass__TwinFootBP__TwinFootBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATwinFootBP_C, 0x0900);
		}

		// class UGameplayTask : public UObject
		TEST_METHOD(Class__GameplayTasks__GameplayTask)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTask, UnknownData_8T9U, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTask, InstanceName, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTask, UnknownData_4C50, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTask, ResourceOverlapPolicy, 0x003A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTask, UnknownData_TA3C, 0x003B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTask, ChildTask, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayTask, 0x0068);
		}

		// class UGameplayTask_ClaimResource : public UGameplayTask
		TEST_METHOD(Class__GameplayTasks__GameplayTask_ClaimResource)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayTask_ClaimResource, 0x0068);
		}

		// class UGameplayTask_SpawnActor : public UGameplayTask
		TEST_METHOD(Class__GameplayTasks__GameplayTask_SpawnActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTask_SpawnActor, Success, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTask_SpawnActor, DidNotSpawn, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTask_SpawnActor, UnknownData_O5DE, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTask_SpawnActor, ClassToSpawn, 0x00A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayTask_SpawnActor, 0x00A8);
		}

		// class UGameplayTask_TimeLimitedExecution : public UGameplayTask
		TEST_METHOD(Class__GameplayTasks__GameplayTask_TimeLimitedExecution)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTask_TimeLimitedExecution, OnFinished, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTask_TimeLimitedExecution, OnTimeExpired, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTask_TimeLimitedExecution, UnknownData_C29B, 0x0088);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayTask_TimeLimitedExecution, 0x0098);
		}

		// class UGameplayTask_WaitDelay : public UGameplayTask
		TEST_METHOD(Class__GameplayTasks__GameplayTask_WaitDelay)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTask_WaitDelay, OnFinish, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTask_WaitDelay, UnknownData_R0O6, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayTask_WaitDelay, 0x0080);
		}

		// class UGameplayTaskOwnerInterface : public UInterface
		TEST_METHOD(Class__GameplayTasks__GameplayTaskOwnerInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayTaskOwnerInterface, 0x0028);
		}

		// class UGameplayTaskResource : public UObject
		TEST_METHOD(Class__GameplayTasks__GameplayTaskResource)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTaskResource, ManualResourceID, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTaskResource, AutoResourceID, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTaskResource, UnknownData_V0E0, 0x002D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTaskResource, UnknownData_8DF4, 0x0031);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayTaskResource, 0x0038);
		}

		// class UGameplayTasksComponent : public UActorComponent
		TEST_METHOD(Class__GameplayTasks__GameplayTasksComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTasksComponent, UnknownData_0OI7, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTasksComponent, UnknownData_OEHT, 0x010D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTasksComponent, SimulatedTasks, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTasksComponent, TaskPriorityQueue, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTasksComponent, UnknownData_QEPC, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTasksComponent, TickingTasks, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTasksComponent, KnownTasks, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTasksComponent, OnClaimedResourcesChange, 0x0160);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayTasksComponent, 0x0170);
		}

		// class UXcmn_Fade_Black_C : public UCFUIUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Fade_Black__Xcmn_Fade_Black_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Fade_Black_C, Img_Xfade_Bk, 0x0370);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Fade_Black_C, 0x0378);
		}

		// class UXcmn_Fade_C : public UAT_UICmnFade
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Fade__Xcmn_Fade_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Fade_C, Ins_Fade, 0x03F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Fade_C, 0x0400);
		}

		// class UBattle_Gauge_Hp_E_C : public UAT_UIBattleHudGaugeEnemyHp
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Gauge_Hp_E__Battle_Gauge_Hp_E_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_E_C, Charge_Full, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_E_C, Charge_Recovery, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_E_C, Charge_Recovery_Loop, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_E_C, Img_Gauge_Base, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_E_C, Img_Gauge_frame_Sp, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_E_C, Ins_Eff00, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_E_C, Ins_Eff01, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_E_C, Ins_Gauge_Base_Eff, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_E_C, Ins_Gauge_Hp00, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_E_C, Ins_Gauge_Hp01, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_E_C, Ins_Gauge_Hud_Light01, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_E_C, Ins_Gauge_Mark_Full, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_E_C, Ins_Gauge_Recover, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_E_C, Mat_Gauge_Hud_Light, 0x04F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Gauge_Hp_E_C, 0x04F8);
		}

		// class UBP_AtrociousCondition1_Area09_C : public UATAtrociousCondition
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousCondition1_Area09__BP_AtrociousCondition1_Area09_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousCondition1_Area09_C, 0x0040);
		}

		// class UBP_AtrociousBattle1_Area09_020_C : public UATAtrociousEncountBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousBattle1_Area09_020__BP_AtrociousBattle1_Area09_020_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousBattle1_Area09_020_C, 0x0118);
		}

		// class UBP_AtrociousBattle2_Area09_020_C : public UATAtrociousEncountBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousBattle2_Area09_020__BP_AtrociousBattle2_Area09_020_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousBattle2_Area09_020_C, 0x0118);
		}

		// class UBP_AtrociousBattle3_Area09_C : public UATAtrociousEncountBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousBattle3_Area09__BP_AtrociousBattle3_Area09_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousBattle3_Area09_C, 0x0118);
		}

		// class UBP_AtrociousPhase3_Area04_C : public UATAtrociousPhaseBase
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousPhase3_Area04__BP_AtrociousPhase3_Area04_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousPhase3_Area04_C, 0x00F8);
		}

		// class UBP_AtrociousPhase2_Area04_C : public UATAtrociousPhaseBase
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousPhase2_Area04__BP_AtrociousPhase2_Area04_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousPhase2_Area04_C, 0x00F8);
		}

		// class UBP_AtrociousPhase1_Area02_C : public UATAtrociousPhaseBase
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousPhase1_Area02__BP_AtrociousPhase1_Area02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousPhase1_Area02_C, 0x00F8);
		}

		// class UUniqueDataCpl035_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl035__UniqueDataCpl035_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl035_C, 0x0070);
		}

		// class UUniqueDataCpl034_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl034__UniqueDataCpl034_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl034_C, 0x0070);
		}

		// class UUniqueDataCpl033_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl033__UniqueDataCpl033_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl033_C, 0x0070);
		}

		// class UUniqueDataCpl022_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl022__UniqueDataCpl022_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl022_C, 0x0070);
		}

		// class UUniqueDataCpl020_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl020__UniqueDataCpl020_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl020_C, 0x0070);
		}

		// class UUniqueDataCpl013_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl013__UniqueDataCpl013_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl013_C, 0x0070);
		}

		// class UUniqueDataCpl010_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl010__UniqueDataCpl010_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl010_C, 0x0070);
		}

		// class UUniqueDataCpl009_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl009__UniqueDataCpl009_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl009_C, 0x0070);
		}

		// class UUniqueDataCpl008_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl008__UniqueDataCpl008_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl008_C, 0x0070);
		}

		// class UBP_Cpl043Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl043Status__BP_Cpl043Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl043Status_C, 0x00F0);
		}

		// class UBP_Cpl042Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl042Status__BP_Cpl042Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl042Status_C, 0x00F0);
		}

		// class UBP_Cpl041CStatus_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl041CStatus_Atrocious__BP_Cpl041CStatus_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl041CStatus_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl039Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl039Status_Atrocious__BP_Cpl039Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl039Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl034BStatus_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl034BStatus_Atrocious__BP_Cpl034BStatus_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl034BStatus_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl034Status_Bs12B_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl034Status_Bs12B__BP_Cpl034Status_Bs12B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl034Status_Bs12B_C, 0x00F0);
		}

		// class UBP_Cpl034Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl034Status__BP_Cpl034Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl034Status_C, 0x00F0);
		}

		// class AGeneralDemoCharacter_BP_C002Aba0_C : public AGeneralDemoCharacterBase_BP_C
		TEST_METHOD(BlueprintGeneratedClass__GeneralDemoCharacter_BP_C002Aba0__GeneralDemoCharacter_BP_C002Aba0_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGeneralDemoCharacter_BP_C002Aba0_C, 0x08E8);
		}

		// class ABP_Area03_Cliff_TopGrassN_N_C : public AGrassGenerationStaticMeshActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_TopGrassN_N__BP_Area03_Cliff_TopGrassN_N_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_TopGrassN_N_C, 0x0360);
		}

		// class UBP_Dest_RootA_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_RootA__BP_Dest_RootA_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_RootA_C, 0x0820);
		}

		// class UBP_Dest_TreeH_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_TreeH__BP_Dest_TreeH_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_TreeH_C, 0x0820);
		}

		// class UBuildPatchManifest : public UObject
		TEST_METHOD(Class__BuildPatchServices__BuildPatchManifest)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBuildPatchManifest, ManifestFileVersion, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBuildPatchManifest, bIsFileData, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBuildPatchManifest, UnknownData_KQ1M, 0x002A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBuildPatchManifest, AppID, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBuildPatchManifest, AppName, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBuildPatchManifest, BuildVersion, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBuildPatchManifest, LaunchExe, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBuildPatchManifest, LaunchCommand, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBuildPatchManifest, PrereqIds, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBuildPatchManifest, PrereqName, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBuildPatchManifest, PrereqPath, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBuildPatchManifest, PrereqArgs, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBuildPatchManifest, FileManifestList, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBuildPatchManifest, ChunkList, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBuildPatchManifest, CustomFields, 0x0110);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBuildPatchManifest, 0x0120);
		}

		// class USeqCheck_C : public UBTDecorator_BlueprintBase
		TEST_METHOD(BlueprintGeneratedClass__SeqCheck__SeqCheck_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USeqCheck_C, seq, 0x00A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USeqCheck_C, 0x00A1);
		}

		// class AVariation00Cpl064A_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Cpl064A__Variation00Cpl064A_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Cpl064A_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Cpl064A_C, 0x0380);
		}

		// class AAT_Character_cpl058c02_BP_C : public AATCharacterCpl058c02
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl058c02_BP__AT_Character_cpl058c02_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl058c02_BP_C, AttachParticle, 0x0FA0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl058c02_BP_C, 0x0FA8);
		}

		// class AAT_Character_cpl056Ac03_BP_C : public AAT_Character_cpl056A_BP_C
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl056Ac03_BP__AT_Character_cpl056Ac03_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl056Ac03_BP_C, 0x0FA8);
		}

		// class AAT_Character_cpl056Ac02_BP_C : public AAT_Character_cpl056A_BP_C
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl056Ac02_BP__AT_Character_cpl056Ac02_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl056Ac02_BP_C, 0x0FA8);
		}

		// class AFacial00Cpl057A_C : public AATFacialParts
		TEST_METHOD(BlueprintGeneratedClass__Facial00Cpl057A__Facial00Cpl057A_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AFacial00Cpl057A_C, DefaultSceneRoot, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFacial00Cpl057A_C, 0x03E0);
		}

		// class AForm00Cpl057A_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Cpl057A__Form00Cpl057A_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Cpl057A_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Cpl057A_C, 0x0380);
		}

		// class UBP_C004A_SkillMoveTeleport_C : public UATActSkillMoveTeleport
		TEST_METHOD(BlueprintGeneratedClass__BP_C004A_SkillMoveTeleport__BP_C004A_SkillMoveTeleport_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C004A_SkillMoveTeleport_C, 0x0178);
		}

		// class UAB_C056_C : public UATCharacterAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__AB_C056__AB_C056_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, UberGraphFrame, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_Root_322A5A004A7404E0F4401B810E8A630F, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_TransitionResult_4D6A35C04CC95166DE097890D54B5154, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_TransitionResult_23757D90408536FAD6C546A759A72FCE, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_TransitionResult_DCBE29CC4AAE79C7108857843690B010, 0x0638);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_TransitionResult_B667CA1C46C83DE14EA080B2C2FDD098, 0x0680);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_TransitionResult_8AE409BF44811C419D19599E75A26C84, 0x06C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_TransitionResult_4270B6E844E6B52D795ABA9FB58EBAE7, 0x0710);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_TransitionResult_F5B153094B74012400C435BCAD33FCAA, 0x0758);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_TransitionResult_D14B20734695904112AF3196DC9F784A, 0x07A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_TransitionResult_647B9FFE46AF5B2A49F15586F290342B, 0x07E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_TransitionResult_47E99C5E432A0DA416DB54BCB9D3C0AD, 0x0830);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_TransitionResult_FDEEF6DB45F6AD935FEEB9A41C9DDA94, 0x0878);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_TransitionResult_C21FA42B43B5A8806F09E19707421AF0, 0x08C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_TransitionResult_931606C84FE8AF2BD0A4F9B943D39A4A, 0x0908);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_TransitionResult_8F32DCF349933006B1468D8F6290AD7C, 0x0950);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_TransitionResult_A95FC1004F77C26C77B3CF8A7E7B28B4, 0x0998);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_TransitionResult_1C4060544BE6628E60F662A897D4DF51, 0x09E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_SequencePlayer_C333A6F445A3C0742238FD80791E33A2, 0x0A28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_StateResult_260E9AA04C788321A3161B86BB8624D5, 0x0AC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_TransitionResult_6ADB7E2F432A97EAED9D7B993EEF6B86, 0x0B08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_TransitionResult_D4CBD445466EFE6E52A2BBAB95BE0F55, 0x0B50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_SequencePlayer_5E0B3BEE4579B2C59E0225802E9B46AC, 0x0B98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_StateResult_F2662ECB4AF3F1200345C387A3C087AE, 0x0C38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_SequencePlayer_71ECCFCA446072B724D96BA121BD2076, 0x0C78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_StateResult_7608337D4C33A7DB8A917DB5B0B39CAA, 0x0D18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_SequencePlayer_034B9C3141FAB30FE902C5ACCF44E26A, 0x0D58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_StateResult_A91E3CE44089062D64B45F94A1F289A5, 0x0DF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_SequencePlayer_62C187234B2D303B6414248E874E5B8A, 0x0E38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_StateResult_AFFD247640B43579BA9DE484E6B22B81, 0x0ED8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_SequencePlayer_73157823454E052223748298F726C80D, 0x0F18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_StateResult_ADD376A345D574FA9879D7825480B634, 0x0FB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_StateMachine_11C548B0490A69487886F49C014104C1, 0x0FF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_SaveCachedPose_9EC62589426B8BABE1CD38A49A2D5148, 0x10D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_Slot_1786E99447B330E978B0C683709C41EE, 0x11B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_LayeredBoneBlend_EFFE40EB4212898240A6D19AAAFD35A3, 0x1218);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_UseCachedPose_0B2B424843B3137E507AFFB09D849B91, 0x12F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, AnimGraphNode_UseCachedPose_7BE8F5174755F7E90F3B15BABF396F4B, 0x1338);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, OptinalAlphaOW, 0x1380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C056_C, TransitionDefault, 0x1384);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAB_C056_C, 0x1385);
		}

		// class UBP_C075A_DmgDeathLP_C : public UATActCpl059DmgDeathLP
		TEST_METHOD(BlueprintGeneratedClass__BP_C075A_DmgDeathLP__BP_C075A_DmgDeathLP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C075A_DmgDeathLP_C, 0x0118);
		}

		// class UAnimNotifyState_SpawnProjectileBulletBP_C : public UAnimNotify_SpawnProjectileBullet
		TEST_METHOD(BlueprintGeneratedClass__AnimNotifyState_SpawnProjectileBulletBP__AnimNotifyState_SpawnProjectileBulletBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_SpawnProjectileBulletBP_C, 0x0068);
		}

		// class ABP_Projectile_C001A_CP_SKL001_C : public AATProjectileBeam
		TEST_METHOD(BlueprintGeneratedClass__BP_Projectile_C001A_CP_SKL001__BP_Projectile_C001A_CP_SKL001_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Projectile_C001A_CP_SKL001_C, 0x0630);
		}

		// class UBP_DamageType_CmnRushS_C : public UAT_DamageType
		TEST_METHOD(BlueprintGeneratedClass__BP_DamageType_CmnRushS__BP_DamageType_CmnRushS_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_DamageType_CmnRushS_C, 0x0070);
		}

		// class UBP_C000A_DamageCrashWallED_C : public UATActDmgCrashWallED
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_DamageCrashWallED__BP_C000A_DamageCrashWallED_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_DamageCrashWallED_C, 0x00F8);
		}

		// class AAT_Character_cpl064c01_BP_C : public AATCharacterCpl064c01
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl064c01_BP__AT_Character_cpl064c01_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl064c01_BP_C, UberGraphFrame, 0x0FB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl064c01_BP_C, AtomCueSheetLoader, 0x0FB8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl064c01_BP_C, 0x0FC0);
		}

		// class UATAnimNotify_PlaySoundSkill_BP_C : public UATAnimNotify_PlaySoundSkill
		TEST_METHOD(BlueprintGeneratedClass__ATAnimNotify_PlaySoundSkill_BP__ATAnimNotify_PlaySoundSkill_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_PlaySoundSkill_BP_C, 0x0050);
		}

		// class AFacial00Cpl004A_C : public AATFacialParts
		TEST_METHOD(BlueprintGeneratedClass__Facial00Cpl004A__Facial00Cpl004A_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AFacial00Cpl004A_C, DefaultSceneRoot, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFacial00Cpl004A_C, 0x03E0);
		}

		// class AAT_Character_cpl004p1c02_BP_C : public AATCharacterCpl004c02
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl004p1c02_BP__AT_Character_cpl004p1c02_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl004p1c02_BP_C, UberGraphFrame, 0x0FA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl004p1c02_BP_C, AtomCueSheetLoader, 0x0FA8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl004p1c02_BP_C, 0x0FB0);
		}

		// class AVariation00Cpl056B_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Cpl056B__Variation00Cpl056B_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Cpl056B_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Cpl056B_C, 0x0380);
		}

		// class UBP_C001A_LongRangeAttack_C : public UATActLongRangeCombo
		TEST_METHOD(BlueprintGeneratedClass__BP_C001A_LongRangeAttack__BP_C001A_LongRangeAttack_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C001A_LongRangeAttack_C, 0x0150);
		}

		// class ABP_C000A_BAS_Fly02_Roll_Large_Eff_SkeletalAnim_C : public AATFloatRollLargeEffSkeletalMeshActor
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_BAS_Fly02_Roll_Large_Eff_SkeletalAnim__BP_C000A_BAS_Fly02_Roll_Large_Eff_SkeletalAnim_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_C000A_BAS_Fly02_Roll_Large_Eff_SkeletalAnim_C, 0x03D8);
		}

		// class UBP_BattleGroupAI_EnC0101_C : public UBattleGroupAIInfo
		TEST_METHOD(BlueprintGeneratedClass__BP_BattleGroupAI_EnC0101__BP_BattleGroupAI_EnC0101_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_BattleGroupAI_EnC0101_C, 0x00A0);
		}

		// class UBP_C064A_ActionTableDamage_C : public UBP_C000A_ActionTableDamage_C
		TEST_METHOD(BlueprintGeneratedClass__BP_C064A_ActionTableDamage__BP_C064A_ActionTableDamage_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C064A_ActionTableDamage_C, 0x0168);
		}

		// class UBP_C064A_ActionTableBasic_C : public UBP_C000A_ActionTableBasic_C
		TEST_METHOD(BlueprintGeneratedClass__BP_C064A_ActionTableBasic__BP_C064A_ActionTableBasic_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C064A_ActionTableBasic_C, 0x0168);
		}

		// class UBP_C057_ActionTableDamage_C : public UBP_C000A_ActionTableDamage_C
		TEST_METHOD(BlueprintGeneratedClass__BP_C057_ActionTableDamage__BP_C057_ActionTableDamage_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C057_ActionTableDamage_C, 0x0168);
		}

		// class AAT_Character_cpl014c04_BP_C : public AATCharacterCpl014c04
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl014c04_BP__AT_Character_cpl014c04_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl014c04_BP_C, AtomCueSheetLoader, 0x0FA0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl014c04_BP_C, 0x0FA8);
		}

		// class ABP_Memories_Area03_C : public AMiniQuest
		TEST_METHOD(BlueprintGeneratedClass__BP_Memories_Area03__BP_Memories_Area03_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Memories_Area03_C, UberGraphFrame, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Memories_Area03_C, DefaultSceneRoot, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Memories_Area03_C, memoriry_item_14, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Memories_Area03_C, memoriry_item_16, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Memories_Area03_C, memoriry_item_24, 0x0370);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Memories_Area03_C, 0x0378);
		}

		// class UBP_Cpl030Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl030Status_Atrocious__BP_Cpl030Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl030Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl029Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl029Status_Atrocious__BP_Cpl029Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl029Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl028BStatus_SS1_Learning_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl028BStatus_SS1_Learning__BP_Cpl028BStatus_SS1_Learning_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl028BStatus_SS1_Learning_C, 0x00F0);
		}

		// class UBP_Cpl023Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl023Status_Atrocious__BP_Cpl023Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl023Status_Atrocious_C, 0x00F0);
		}

		// class AAT_Character_Cpl075c03_BP_C : public AAT_Character_cpl075A_BP_C
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_Cpl075c03_BP__AT_Character_Cpl075c03_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_Cpl075c03_BP_C, 0x0FA8);
		}

		// class AAT_Character_cpl057Ac01_BP_C : public AAT_Character_cpl057A_BP_C
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl057Ac01_BP__AT_Character_cpl057Ac01_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl057Ac01_BP_C, 0x0FB0);
		}

		// class UFighting_Power_Param_C028A_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C028A__Fighting_Power_Param_C028A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C028A_C, 0x0060);
		}

		// class UFighting_Power_Param_C004Ac03_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C004Ac03__Fighting_Power_Param_C004Ac03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C004Ac03_C, 0x0060);
		}

		// class UFighting_Power_Param_C004Ac02_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C004Ac02__Fighting_Power_Param_C004Ac02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C004Ac02_C, 0x0060);
		}

		// class UUniqueDataCpl056C_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl056C__UniqueDataCpl056C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl056C_C, 0x0070);
		}

		// class UUniqueDataCpl056B_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl056B__UniqueDataCpl056B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl056B_C, 0x0070);
		}

		// class UBP_AtrociousBattle2_Area06_C : public UATAtrociousEncountBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousBattle2_Area06__BP_AtrociousBattle2_Area06_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousBattle2_Area06_C, 0x0118);
		}

		// class UBP_AtrociousBattle1_Area06_020_C : public UATAtrociousEncountBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousBattle1_Area06_020__BP_AtrociousBattle1_Area06_020_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousBattle1_Area06_020_C, 0x0118);
		}

		// class UBP_AtrociousBattle1_Area06_C : public UATAtrociousEncountBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousBattle1_Area06__BP_AtrociousBattle1_Area06_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousBattle1_Area06_C, 0x0118);
		}

		// class UBP_AtrociousBattle1_Area04_020_C : public UATAtrociousEncountBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousBattle1_Area04_020__BP_AtrociousBattle1_Area04_020_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousBattle1_Area04_020_C, 0x0118);
		}

		// class UBP_AtrociousBattle1_Area04_C : public UATAtrociousEncountBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousBattle1_Area04__BP_AtrociousBattle1_Area04_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousBattle1_Area04_C, 0x0118);
		}

		// class UUniqueDataNpc076_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc076__UniqueDataNpc076_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc076_C, 0x0070);
		}

		// class UUniqueDataNpc062_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc062__UniqueDataNpc062_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc062_C, 0x0070);
		}

		// class UUniqueDataNpc058_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc058__UniqueDataNpc058_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc058_C, 0x0070);
		}

		// class UBP_Cpl067Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl067Status__BP_Cpl067Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl067Status_C, 0x00F0);
		}

		// class UBP_Cpl061StatusC01_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl061StatusC01__BP_Cpl061StatusC01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl061StatusC01_C, 0x00F0);
		}

		// class UBP_Cpl059StatusC03_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl059StatusC03__BP_Cpl059StatusC03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl059StatusC03_C, 0x00F0);
		}

		// class UBP_Cpl058StatusC03_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl058StatusC03__BP_Cpl058StatusC03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl058StatusC03_C, 0x00F0);
		}

		// class UBP_Cpl013Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl013Status_Atrocious__BP_Cpl013Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl013Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl011Status_enemy_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl011Status_enemy__BP_Cpl011Status_enemy_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl011Status_enemy_C, 0x00F0);
		}

		// class UBP_Cpl011Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl011Status__BP_Cpl011Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl011Status_C, 0x00F0);
		}

		// class UBP_Cpl008Status_enemy_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl008Status_enemy__BP_Cpl008Status_enemy_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl008Status_enemy_C, 0x00F0);
		}

		// class UBP_Cpl005EStatus_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl005EStatus_Atrocious__BP_Cpl005EStatus_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl005EStatus_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl005CStatus_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl005CStatus_Atrocious__BP_Cpl005CStatus_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl005CStatus_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl004StatusC04_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl004StatusC04__BP_Cpl004StatusC04_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl004StatusC04_C, 0x00F0);
		}

		// class UBP_Cpl003ZStatus_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl003ZStatus__BP_Cpl003ZStatus_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl003ZStatus_C, 0x00F0);
		}

		// class UBP_Cpl003BStatusC02_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl003BStatusC02__BP_Cpl003BStatusC02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl003BStatusC02_C, 0x00F0);
		}

		// class ABP_S_Area03_HighschoolA_Test_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_S_Area03_HighschoolA_Test__BP_S_Area03_HighschoolA_Test_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_S_Area03_HighschoolA_Test_C, Fence03a_05, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_S_Area03_HighschoolA_Test_C, Fence03a_04, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_S_Area03_HighschoolA_Test_C, Fence03a_03, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_S_Area03_HighschoolA_Test_C, Fence03a_02, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_S_Area03_HighschoolA_Test_C, Fence03a_01, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_S_Area03_HighschoolA_Test_C, Fence02a_05, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_S_Area03_HighschoolA_Test_C, Fence02a_04, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_S_Area03_HighschoolA_Test_C, Fence02a_03, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_S_Area03_HighschoolA_Test_C, Fence02a_02, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_S_Area03_HighschoolA_Test_C, Fence02a_01, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_S_Area03_HighschoolA_Test_C, Fence01a_04, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_S_Area03_HighschoolA_Test_C, Fence01a_03, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_S_Area03_HighschoolA_Test_C, Fence01a_02, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_S_Area03_HighschoolA_Test_C, Fence01a_01, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_S_Area03_HighschoolA_Test_C, S_Area03_HighschoolA_Test, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_S_Area03_HighschoolA_Test_C, DefaultSceneRoot, 0x03B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_S_Area03_HighschoolA_Test_C, 0x03B8);
		}

		// class ABP_Area03_Cliff_TopGrassC_D_C : public AGrassGenerationDestructActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_TopGrassC_D__BP_Area03_Cliff_TopGrassC_D_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_TopGrassC_D_C, 0x0388);
		}

		// class ABP_Signboard_C : public ABP_FieldObjectBase_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Signboard__BP_Signboard_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Signboard_C, 0x0358);
		}

		// class AAT_BlurManager_BP_C : public AAT_BlurManager
		TEST_METHOD(BlueprintGeneratedClass__AT_BlurManager_BP__AT_BlurManager_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_BlurManager_BP_C, 0x03B0);
		}

		// class UGeneralDemoAnim_Base_BP_C : public UATGeneralDemoAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__GeneralDemoAnim_Base_BP__GeneralDemoAnim_Base_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, UberGraphFrame, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_Root_76BFA2C549FF39544996BF92C74466B3, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_Slot_D6DFD3864EADF254100A9081D2EF7F29, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_SaveCachedPose_47FA01C5407E0BEDA46CCDBE9FAF7374, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_UseCachedPose_001D470745C0E4A2E57F0CB0B8E68F03, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_SaveCachedPose_9D21A11E4B98A1AB3607A795CFF2BB15, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_SequencePlayer_90B6959C41EA73C05BCE62BBF3176489, 0x0648);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_SaveCachedPose_444B6F6A461E1AC26EAD6B88E3904291, 0x06E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_LayeredBoneBlend_823767B44E51D3235A7704B28411CE45, 0x07C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_UseCachedPose_494F42534B18AE89ED78C7A24534B500, 0x0898);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_SaveCachedPose_7777CF2D415318D2FF56A88CB4B03B35, 0x08E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_UseCachedPose_E266E1A64F349501C4C202BDF2CF1AE3, 0x09B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_Slot_1D90FDF64D44C66B2F75C0838C1473A9, 0x0A00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_LayeredBoneBlend_5FB8D9394B4465E1846AACAA2651B153, 0x0A68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_UseCachedPose_5D8BECB741919160DAC8C2B9746DB5AB, 0x0B40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_UseCachedPose_22BF0D3F4E0BBD2606764BAFCF1E004E, 0x0B88);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_Slot_2753B31B4CA4FEEA3B930B9D01D79886, 0x0BD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_SaveCachedPose_2A7C03E4467AA412FF5A3D949AE1BC74, 0x0C38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_LayeredBoneBlend_31DD18BB45B2E2E500D047A8F14A9CDF, 0x0D10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_SequencePlayer_BB79CA294E2AC3C0641D85BF8E5ADB5A, 0x0DE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_MultiWayBlend_401655534FBEA0422DDE09B408B3CA7C, 0x0E88);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_Slot_A0F265144A17FD6C0250C380522C1985, 0x0EF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_UseCachedPose_0327673E40650C6073F2E0ADB80B2241, 0x0F60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_UseCachedPose_C1689E094EA2D527895A0FB05A021D54, 0x0FA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_LayeredBoneBlend_58C2D1D144F47EC8F9BF97B3E8E4277E, 0x0FF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_SaveCachedPose_614F79504C3D27F156526A8BD9E8FB22, 0x10C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_Slot_AC0CD9EF4132C78D449A368A771C75CE, 0x11A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_LayeredBoneBlend_729E62A84EF7FCFCF2C3A4B252498280, 0x1208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_SaveCachedPose_6281C51A4C259387FBFD77B5BE6B2FFC, 0x12E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_UseCachedPose_EFD39D4047A864E4947F678B5ED9709B, 0x13B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_UseCachedPose_0EE942B2476DF3ECAEB6C2B28492D8EF, 0x1400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_Slot_11781A8D4C29673B3F11148B50AB3749, 0x1448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_LayeredBoneBlend_85E418A74A29CC0E783B6F8C6E60AA8B, 0x14B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_SaveCachedPose_BD8FCC514C4E35D49206FFB119A0CDC6, 0x1588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_UseCachedPose_AE397AEC4F7AB5FDE7A3628FA7A2B1D8, 0x1660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_UseCachedPose_1DB7D7634C2B189535F2C699632DD93D, 0x16A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_Slot_FB391A5A45F46ED378D3BA93CA54D8BD, 0x16F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_LayeredBoneBlend_23C58F5E4C475D03D08CE6A553F3F956, 0x1758);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_SaveCachedPose_B178E715442C926C45C7A2AFE869BDBC, 0x1830);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_UseCachedPose_491B23764E719D5ED123D18CD4573A1A, 0x1908);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_UseCachedPose_158696F24092C81CF65D60A7FB8C201D, 0x1950);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_Slot_AC73CB564B30685CA311BFABE3FAC57F, 0x1998);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_LayeredBoneBlend_E4C4D1A64146B6013B931F9C5AB79D52, 0x1A00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_SaveCachedPose_0FAC8E9041DC7408B813F38135FB20FD, 0x1AD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_UseCachedPose_BE08185D45272EBB2163E0BD08D4F244, 0x1BB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_UseCachedPose_8D51504742DCBD6FAD1D2C971B1524D1, 0x1BF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_SaveCachedPose_AEE1451C417DBE670174039CE0C1BDE2, 0x1C40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_Slot_A58DAB1944FF1B1E7A50599123B2EC90, 0x1D18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_LayeredBoneBlend_45117E2B49DF5B88B56767BE99A50CE6, 0x1D80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_UseCachedPose_71BCCDBE4DEE437926FC2499F935EA96, 0x1E58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_UseCachedPose_047B1CFA4B86547A8604E8AB0D1D5140, 0x1EA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_UseCachedPose_FA02558146263182B7765C9C199994C6, 0x1EE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_Slot_231B80834777B62002032482F2B3B000, 0x1F30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_BlendListByBool_EBF610734C68DB6853C1019031E5EAB0, 0x1F98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_UseCachedPose_F1CDAED046952CDCCDD77E9A2C53BCD9, 0x2078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_Slot_425309A7412E758A91230994E98DCFD2, 0x20C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_LayeredBoneBlend_C864100A4893AE29EC5AE894814E3843, 0x2128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_UseCachedPose_EEC52D804B6DBE7ABBFFEB8CD5552BBD, 0x2200);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_BlendListByBool_49C7FF30435B0C7DAB1D789D4EE76FC7, 0x2248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_SequencePlayer_169744BB4FD9DCF3DDC57CB2A7F38628, 0x2328);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_SaveCachedPose_F99F6A6044F5ED6E734479B3A747C5C0, 0x23C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_UseCachedPose_CB64013046AC872DF42842920ACB25CD, 0x24A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_UseCachedPose_CAFDA18A467DE6D12B4E10BAFB439D9D, 0x24E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, AnimGraphNode_BlendSpacePlayer_A9180E904B093203BB1C3D9C6BAB4E08, 0x2530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, HeadRotation, 0x2658);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralDemoAnim_Base_BP_C, UseFootDefault, 0x2664);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeneralDemoAnim_Base_BP_C, 0x2665);
		}

		// class AArea03_Env_Cloud_00_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Cloud_00__Area03_Env_Cloud_00_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Cloud_00_C, 0x0340);
		}

		// class UBP_Dest_Apple_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_Apple__BP_Dest_Apple_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_Apple_C, 0x0820);
		}

		// class UBP_Dest_DryA_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_DryA__BP_Dest_DryA_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_DryA_C, 0x0820);
		}

		// class UBP_Dest_SmokeA_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_SmokeA__BP_Dest_SmokeA_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_SmokeA_C, 0x0820);
		}

		// class UBP_Dest_TreeE_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_TreeE__BP_Dest_TreeE_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_TreeE_C, 0x0820);
		}

		// class AGeneralDemoCharacterBase_BP_C : public AATGeneralDemoCharacter
		TEST_METHOD(BlueprintGeneratedClass__GeneralDemoCharacterBase_BP__GeneralDemoCharacterBase_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AGeneralDemoCharacterBase_BP_C, LipSyncComp, 0x08E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGeneralDemoCharacterBase_BP_C, 0x08E8);
		}

		// class AAREA18_MemoriesItemMap_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__AREA18_MemoriesItemMap__AREA18_MemoriesItemMap_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAREA18_MemoriesItemMap_C, 0x0340);
		}

		// class ASub_Npc009_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc009_01__Sub_Npc009_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc009_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc009_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc009_01_C, startPoint, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc009_01_C, Camera, 0x04D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc009_01_C, 0x04E0);
		}

		// class UXmenu_Scrollbar_Custom_C : public UAT_UIScrollBar
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xmenu_Scrollbar_Custom__Xmenu_Scrollbar_Custom_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Scrollbar_Custom_C, Ins_Scrollbar, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Scrollbar_Custom_C, Ins_Scrollbar_Base, 0x03E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXmenu_Scrollbar_Custom_C, 0x03E8);
		}

		// class UMap_Navi_Icon_Switch_C : public UAT_UIMapNaviIconSwitch
		TEST_METHOD(WidgetBlueprintGeneratedClass__Map_Navi_Icon_Switch__Map_Navi_Icon_Switch_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Navi_Icon_Switch_C, UberGraphFrame, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Navi_Icon_Switch_C, Img_Prgrs_Navi, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Navi_Icon_Switch_C, Ins_Navi_Main_Base, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Navi_Icon_Switch_C, Ins_Navi_Main_Icon, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Navi_Icon_Switch_C, Ins_Navi_Player_Base, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Navi_Icon_Switch_C, Ins_Navi_Player_Icon, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Navi_Icon_Switch_C, Ins_Navi_Sub_Base, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Navi_Icon_Switch_C, Ins_Navi_Sub_Icon, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Navi_Icon_Switch_C, Map_Navi_Icon_Base_Switcher, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Navi_Icon_Switch_C, Map_Navi_Icon_Switcher, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMap_Navi_Icon_Switch_C, 0x03E0);
		}

		// class UAT_UIFieldIconManager_BP_C : public UAT_UIFieldIconManager
		TEST_METHOD(BlueprintGeneratedClass__AT_UIFieldIconManager_BP__AT_UIFieldIconManager_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIFieldIconManager_BP_C, 0x0440);
		}

		// class UCutin_Lvup_C : public UAT_UICutinLevelUp
		TEST_METHOD(WidgetBlueprintGeneratedClass__Cutin_Lvup__Cutin_Lvup_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCutin_Lvup_C, UberGraphFrame, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCutin_Lvup_C, All_Nut, 0x0410);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCutin_Lvup_C, 0x0418);
		}

		// class UBP_TerrainDecorateManager_C : public UTerrainDecorateManager
		TEST_METHOD(BlueprintGeneratedClass__BP_TerrainDecorateManager__BP_TerrainDecorateManager_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_TerrainDecorateManager_C, 0x02F0);
		}

		// class UBP_ATGameInstance_C : public UAT_GameInstance
		TEST_METHOD(BlueprintGeneratedClass__BP_ATGameInstance__BP_ATGameInstance_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_ATGameInstance_C, 0x04C0);
		}

		// class UUniqueDataNpc043_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc043__UniqueDataNpc043_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc043_C, 0x0070);
		}

		// class UUniqueDataNpc042_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc042__UniqueDataNpc042_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc042_C, 0x0070);
		}

		// class UUniqueDataNpc037_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc037__UniqueDataNpc037_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc037_C, 0x0070);
		}

		// class UUniqueDataNpc035_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc035__UniqueDataNpc035_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc035_C, 0x0070);
		}

		// class UUniqueDataCpl004A_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl004A__UniqueDataCpl004A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl004A_C, 0x0070);
		}

		// class UUniqueDataCpl003B_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl003B__UniqueDataCpl003B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl003B_C, 0x0070);
		}

		// class UFighting_Power_Param_C002A_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C002A__Fighting_Power_Param_C002A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C002A_C, 0x0060);
		}

		// class UFighting_Power_Param_C014Ac03_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C014Ac03__Fighting_Power_Param_C014Ac03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C014Ac03_C, 0x0060);
		}

		// class UFighting_Power_Param_C014Ac04_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C014Ac04__Fighting_Power_Param_C014Ac04_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C014Ac04_C, 0x0060);
		}

		// class UFighting_Power_Param_C042A_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C042A__Fighting_Power_Param_C042A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C042A_C, 0x0060);
		}

		// class UFighting_Power_Param_C043A_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C043A__Fighting_Power_Param_C043A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C043A_C, 0x0060);
		}

		// class UBP_Cpl022Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl022Status_Atrocious__BP_Cpl022Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl022Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl017Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl017Status__BP_Cpl017Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl017Status_C, 0x00F0);
		}

		// class UBP_Cpl014StatusC05_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl014StatusC05__BP_Cpl014StatusC05_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl014StatusC05_C, 0x00F0);
		}

		// class UBP_Cpl014Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl014Status_Atrocious__BP_Cpl014Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl014Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl014Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl014Status__BP_Cpl014Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl014Status_C, 0x00F0);
		}

		// class AGeneralDemoCharacter_BP_C006Aaa0_C : public AGeneralDemoCharacterBase_BP_C
		TEST_METHOD(BlueprintGeneratedClass__GeneralDemoCharacter_BP_C006Aaa0__GeneralDemoCharacter_BP_C006Aaa0_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGeneralDemoCharacter_BP_C006Aaa0_C, 0x08E8);
		}

		// class UGeneralDemoAnim_C006A_BP_C : public UGeneralDemoAnim_Base_BP_C
		TEST_METHOD(AnimBlueprintGeneratedClass__GeneralDemoAnim_C006A_BP__GeneralDemoAnim_C006A_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeneralDemoAnim_C006A_BP_C, 0x2665);
		}

		// class UBP_C001A_S_SKL003_ActionTable_C : public UCharacterActionClassTable
		TEST_METHOD(BlueprintGeneratedClass__BP_C001A_S_SKL003_ActionTable__BP_C001A_S_SKL003_ActionTable_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C001A_S_SKL003_ActionTable_C, 0x0168);
		}

		// class UAB_C001A_C : public UAB_C000_C
		TEST_METHOD(AnimBlueprintGeneratedClass__AB_C001A__AB_C001A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAB_C001A_C, 0xC5BC);
		}

		// class ABP_Safety_Points_Holder_C : public ASkillActivateSafetyInfo
		TEST_METHOD(BlueprintGeneratedClass__BP_Safety_Points_Holder__BP_Safety_Points_Holder_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Safety_Points_Holder_C, DefaultSceneRoot, 0x0390);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Safety_Points_Holder_C, 0x0398);
		}

		// class AA009b_BP_C : public AA009_BP_C
		TEST_METHOD(BlueprintGeneratedClass__A009b_BP__A009b_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AA009b_BP_C, 0x0468);
		}

		// class UBP_C000A_ShortRangeAttack_C : public UATActShortRangeCombo
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_ShortRangeAttack__BP_C000A_ShortRangeAttack_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_ShortRangeAttack_C, 0x01A8);
		}

		// class UBP_C000A_LongRangeAttack_C : public UATActLongRangeCombo
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_LongRangeAttack__BP_C000A_LongRangeAttack_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_LongRangeAttack_C, 0x0150);
		}

		// class UBP_C000A_SkillMoveTeleport_C : public UATActSkillMoveTeleport
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_SkillMoveTeleport__BP_C000A_SkillMoveTeleport_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_SkillMoveTeleport_C, 0x0178);
		}

		// class UBP_DamageType_CmnBlowM_C : public UAT_DamageType
		TEST_METHOD(BlueprintGeneratedClass__BP_DamageType_CmnBlowM__BP_DamageType_CmnBlowM_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_DamageType_CmnBlowM_C, 0x0070);
		}

		// class AFacial00Cpl014B_C : public AATFacialParts
		TEST_METHOD(BlueprintGeneratedClass__Facial00Cpl014B__Facial00Cpl014B_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AFacial00Cpl014B_C, DefaultSceneRoot, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFacial00Cpl014B_C, 0x03E0);
		}

		// class UBP_C059A_SkillMoveTeleport_C : public UATActSkillMoveTeleport
		TEST_METHOD(BlueprintGeneratedClass__BP_C059A_SkillMoveTeleport__BP_C059A_SkillMoveTeleport_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C059A_SkillMoveTeleport_C, 0x0178);
		}

		// class UBP_Cpl058StatusC01_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl058StatusC01__BP_Cpl058StatusC01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl058StatusC01_C, 0x00F0);
		}

		// class UBP_Cpl057StatusC03_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl057StatusC03__BP_Cpl057StatusC03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl057StatusC03_C, 0x00F0);
		}

		// class UUniqueDataCpl064A_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl064A__UniqueDataCpl064A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl064A_C, 0x0070);
		}

		// class UUniqueDataCpl063_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl063__UniqueDataCpl063_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl063_C, 0x0070);
		}

		// class UUniqueDataCpl062_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl062__UniqueDataCpl062_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl062_C, 0x0070);
		}

		// class UUniqueDataCpl057B_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl057B__UniqueDataCpl057B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl057B_C, 0x0070);
		}

		// class UBP_Dest_TreeP_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_TreeP__BP_Dest_TreeP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_TreeP_C, 0x0820);
		}

		// class UBP_AnimNotifyState_DisableFootIK_C : public UATAnimNotifyState_DisableCharacterFootIK
		TEST_METHOD(BlueprintGeneratedClass__BP_AnimNotifyState_DisableFootIK__BP_AnimNotifyState_DisableFootIK_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AnimNotifyState_DisableFootIK_C, 0x0038);
		}

		// class UATAnimNotify_DirectDamage_BP_C : public UAnimNotify_DirectDamage
		TEST_METHOD(BlueprintGeneratedClass__ATAnimNotify_DirectDamage_BP__ATAnimNotify_DirectDamage_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_DirectDamage_BP_C, 0x0098);
		}

		// class UBP_DamageType_CmnShotS_C : public UAT_DamageType
		TEST_METHOD(BlueprintGeneratedClass__BP_DamageType_CmnShotS__BP_DamageType_CmnShotS_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_DamageType_CmnShotS_C, 0x0070);
		}

		// class UBP_AtrociousEventBattle3_Area01_C : public UATAtrociousEventBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousEventBattle3_Area01__BP_AtrociousEventBattle3_Area01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousEventBattle3_Area01_C, 0x00A0);
		}

		// class UAB_C004A_C : public UAB_C000_C
		TEST_METHOD(AnimBlueprintGeneratedClass__AB_C004A__AB_C004A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAB_C004A_C, 0xC5BC);
		}

		// class ADestructibleActor : public AActor
		TEST_METHOD(Class__ApexDestruction__DestructibleActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ADestructibleActor, DestructibleComponent, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADestructibleActor, UnknownData_Y2FA, 0x0341);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADestructibleActor, OnActorFracture, 0x0348);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADestructibleActor, 0x0358);
		}

		// class UDestructibleComponent : public USkinnedMeshComponent
		TEST_METHOD(Class__ApexDestruction__DestructibleComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDestructibleComponent, UnknownData_09E6, 0x06D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDestructibleComponent, UnknownData_AQJB, 0x06D9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDestructibleComponent, FractureEffects, 0x06E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDestructibleComponent, bEnableHardSleeping, 0x06F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDestructibleComponent, UnknownData_5DNP, 0x06F1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDestructibleComponent, LargeChunkThreshold, 0x06F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDestructibleComponent, UnknownData_1B31, 0x06F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDestructibleComponent, OnComponentFracture, 0x0708);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDestructibleComponent, UnknownData_FBZB, 0x0718);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDestructibleComponent, 0x07B0);
		}

		// class UDestructibleFractureSettings : public UObject
		TEST_METHOD(Class__ApexDestruction__DestructibleFractureSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDestructibleFractureSettings, CellSiteCount, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDestructibleFractureSettings, FractureMaterialDesc, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDestructibleFractureSettings, RandomSeed, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDestructibleFractureSettings, UnknownData_F4ZI, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDestructibleFractureSettings, VoronoiSites, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDestructibleFractureSettings, OriginalSubmeshCount, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDestructibleFractureSettings, UnknownData_4SOD, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDestructibleFractureSettings, Materials, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDestructibleFractureSettings, ChunkParameters, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDestructibleFractureSettings, UnknownData_A6MT, 0x0090);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDestructibleFractureSettings, 0x00B8);
		}

		// class UDestructibleMesh : public USkeletalMesh
		TEST_METHOD(Class__ApexDestruction__DestructibleMesh)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDestructibleMesh, DefaultDestructibleParameters, 0x0308);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDestructibleMesh, FractureEffects, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDestructibleMesh, UnknownData_CGB8, 0x03A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDestructibleMesh, 0x03A8);
		}

		// class UMovieSceneMediaSection : public UMovieSceneSection
		TEST_METHOD(Class__MediaCompositing__MovieSceneMediaSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneMediaSection, MediaSource, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneMediaSection, bLooping, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneMediaSection, UnknownData_K5PK, 0x00E9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneMediaSection, MediaTexture, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneMediaSection, MediaSoundComponent, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneMediaSection, bUseExternalMediaPlayer, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneMediaSection, UnknownData_Z4N3, 0x0101);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneMediaSection, ExternalMediaPlayer, 0x0108);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneMediaSection, 0x0110);
		}

		// class UMovieSceneMediaTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__MediaCompositing__MovieSceneMediaTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneMediaTrack, MediaSections, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneMediaTrack, 0x0068);
		}

		// class UAtomAsrRack : public UObject
		TEST_METHOD(Class__CriWareRuntime__AtomAsrRack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomAsrRack, RackId, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomAsrRack, UnknownData_LZ9O, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAtomAsrRack, 0x0030);
		}

		// class UAtomCategory : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__CriWareRuntime__AtomCategory)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAtomCategory, 0x0028);
		}

		// class UAtomComponent : public USceneComponent
		TEST_METHOD(Class__CriWareRuntime__AtomComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomComponent, Sound, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomComponent, UnknownData_UTNW, 0x0251);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomComponent, bPersistAcrossLevelTransition, 0x0254);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomComponent, UnknownData_V3S0, 0x0255);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomComponent, UnknownData_UPVN, 0x0259);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomComponent, DefaultVolume, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomComponent, bEnableMultipleSoundPlayback, 0x0264);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomComponent, bUsePlaylist, 0x0265);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomComponent, UnknownData_93G2, 0x0266);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomComponent, DefaultSoundObject, 0x0268);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomComponent, DefaultBlockIndex, 0x0270);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomComponent, UnknownData_MBI4, 0x0274);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomComponent, DefaultAisacControl, 0x0278);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomComponent, DefaultSelectorLabel, 0x0288);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomComponent, OnAudioFinished, 0x0298);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomComponent, PlayWorld, 0x02A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomComponent, GameViewport, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomComponent, UnknownData_T7FR, 0x02B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomComponent, UnknownData_NL24, 0x02D1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomComponent, AttenuationSettings, 0x02D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomComponent, AttenuationOverrides, 0x02E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomComponent, UnknownData_37RW, 0x0588);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAtomComponent, 0x0EB0);
		}

		// class UAtomCueSheetLoaderComponent : public USceneComponent
		TEST_METHOD(Class__CriWareRuntime__AtomCueSheetLoaderComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomCueSheetLoaderComponent, CueSheetReference, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomCueSheetLoaderComponent, BinderComponent, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomCueSheetLoaderComponent, OnLoadCompleted, 0x0268);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomCueSheetLoaderComponent, OnLoadError, 0x0278);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomCueSheetLoaderComponent, UnknownData_6JE3, 0x0288);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomCueSheetLoaderComponent, CueSheet, 0x02B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomCueSheetLoaderComponent, UnknownData_S3S8, 0x02C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAtomCueSheetLoaderComponent, 0x02D0);
		}

		// class UAtomDeviceWatcher : public UObject
		TEST_METHOD(Class__CriWareRuntime__AtomDeviceWatcher)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomDeviceWatcher, OnDeviceUpdated, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomDeviceWatcher, UnknownData_7U8Z, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAtomDeviceWatcher, 0x0050);
		}

		// class AAtomDisposer : public AActor
		TEST_METHOD(Class__CriWareRuntime__AtomDisposer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAtomDisposer, UnknownData_JCZ5, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAtomDisposer, 0x0348);
		}

		// class UAtomListenerFocusPoint : public USceneComponent
		TEST_METHOD(Class__CriWareRuntime__AtomListenerFocusPoint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomListenerFocusPoint, UnknownData_7MU3, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomListenerFocusPoint, DirectionFocusLevel, 0x024C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomListenerFocusPoint, UnknownData_WVEX, 0x0250);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAtomListenerFocusPoint, 0x0260);
		}

		// class UAtomParameterComponent : public UActorComponent
		TEST_METHOD(Class__CriWareRuntime__AtomParameterComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomParameterComponent, SoundObject, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAtomParameterComponent, 0x0108);
		}

		// class UAtomProfileData : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__CriWareRuntime__AtomProfileData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAtomProfileData, 0x0028);
		}

		// class AAtomSound : public AActor
		TEST_METHOD(Class__CriWareRuntime__AtomSound)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAtomSound, AtomComponent, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAtomSound, 0x0340);
		}

		// class AAtomSoundData : public AActor
		TEST_METHOD(Class__CriWareRuntime__AtomSoundData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAtomSoundData, CueSheet, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAtomSoundData, UnknownData_TJ79, 0x0340);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAtomSoundData, 0x0348);
		}

		// class UAtomSoundObject : public UDataAsset
		TEST_METHOD(Class__CriWareRuntime__AtomSoundObject)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomSoundObject, EnableVoiceLimitScope, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomSoundObject, EnableCategoryCueLimitScope, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAtomSoundObject, UnknownData_8Q5J, 0x0032);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAtomSoundObject, 0x0048);
		}

		// class UAtomSpectrumAnalyzer : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__CriWareRuntime__AtomSpectrumAnalyzer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAtomSpectrumAnalyzer, 0x0028);
		}

		// class UAtomStatics : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__CriWareRuntime__AtomStatics)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAtomStatics, 0x0028);
		}

		// class UAtomTriggerTableFunctionLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__CriWareRuntime__AtomTriggerTableFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAtomTriggerTableFunctionLibrary, 0x0028);
		}

		// class UCriFsBinderComponent : public USceneComponent
		TEST_METHOD(Class__CriWareRuntime__CriFsBinderComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriFsBinderComponent, FilePath, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriFsBinderComponent, OnBindCompleted, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriFsBinderComponent, OnBindError, 0x0268);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriFsBinderComponent, UnknownData_XFY8, 0x0278);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCriFsBinderComponent, 0x02A0);
		}

		// class ACriFsLoader : public AActor
		TEST_METHOD(Class__CriWareRuntime__CriFsLoader)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ACriFsLoader, LoaderComponent, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACriFsLoader, 0x0340);
		}

		// class UCriFsLoaderComponent : public USceneComponent
		TEST_METHOD(Class__CriWareRuntime__CriFsLoaderComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriFsLoaderComponent, FilePath, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriFsLoaderComponent, OnLoadCompleted, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriFsLoaderComponent, OnLoadError, 0x0268);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriFsLoaderComponent, UnknownData_9A9O, 0x0278);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCriFsLoaderComponent, 0x02C0);
		}

		// class UCriWareFunctionLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__CriWareRuntime__CriWareFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCriWareFunctionLibrary, 0x0028);
		}

		// class UCriWareInitializer : public UObject
		TEST_METHOD(Class__CriWareRuntime__CriWareInitializer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCriWareInitializer, 0x0028);
		}

		// class UCriWarePluginSettings : public UObject
		TEST_METHOD(Class__CriWareRuntime__CriWarePluginSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, bNoExistCriWareIni, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_2QXT, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, NonAssetContentDir, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, ContentDir, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_JTIR, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, NumBinders, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_8NXR, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, MaxBinds, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_1J6E, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, NumLoaders, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_HCBA, 0x0074);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, MaxPath, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_4CI0, 0x007C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, OutputsLogFileSystem, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_OAJL, 0x0081);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, PS4_FileAccessThreadAffinityMask, 0x0084);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_HLDN, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, PS4_DataDecompressionThreadAffinityMask, 0x008C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_SUQS, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, PS4_MemoryFileSystemThreadAffinityMask, 0x0094);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_APA2, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, PS4_FileAccessThreadPriority, 0x009C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_O4YM, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, PS4_DataDecompressionThreadPriority, 0x00A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_VEH5, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, PS4_MemoryFileSystemThreadPriority, 0x00AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_345H, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, AutomaticallyCreateCueAsset, 0x00B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UsesInGamePreview, 0x00B5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_UWFZ, 0x00B6);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, OutputsLogAtom, 0x00B7);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_I6FJ, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, MaxVirtualVoices, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_J7JW, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, NumStandardMemoryVoices, 0x00C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_JK8G, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, StandardMemoryVoiceNumChannels, 0x00CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_2OE1, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, StandardMemoryVoiceSamplingRate, 0x00D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_BJWA, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, NumStandardStreamingVoices, 0x00DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_N6FJ, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, StandardStreamingVoiceNumChannels, 0x00E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_2NRN, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, StandardStreamingVoiceSamplingRate, 0x00EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_Q626, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, AtomConfig, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_O0JD, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, AcfFileName, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, DistanceFactor, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_K1TR, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, SoundRendererTypeUI, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_UBCK, 0x0141);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, SoundRendererType, 0x0144);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_GBDP, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, AsrRackConfigUI, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, AsrRackConfig, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_9FML, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, Hardware1, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, Hardware2, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, Hardware3, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, Hardware4, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, HcaMxVoiceSamplingRate, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_15Q5, 0x01C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, NumHcaMxMemoryVoices, 0x01C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_P5GM, 0x01CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, HcaMxMemoryVoiceNumChannels, 0x01D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_RB1C, 0x01D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, NumHcaMxStreamingVoices, 0x01D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_EARJ, 0x01DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, HcaMxStreamingVoiceNumChannels, 0x01E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_ZEPL, 0x01E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, WASAPI_IsExclusive, 0x01E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_34D1, 0x01E9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, WASAPI_BitsPerSample, 0x01EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_KCXM, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, WASAPI_SamplingRate, 0x01F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_1R6J, 0x01F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, WASAPI_NumChannels, 0x01FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_N8LO, 0x0200);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, PS4_ServerThreadAffinityMask, 0x0204);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_KXCZ, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, PS4_OutputThreadAffinityMask, 0x020C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_502E, 0x0210);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, PS4_ServerThreadPriority, 0x0214);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_JAKZ, 0x0218);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, PS4_OutputThreadPriority, 0x021C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_W5V4, 0x0220);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, PS4_UseAudio3d, 0x0224);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_0BR7, 0x0225);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, PS4_NumberOfAudio3dMemoryVoices, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_2ZUM, 0x022C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, PS4_SamplingRateOfAudio3dMemoryVoices, 0x0230);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_H3VA, 0x0234);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, PS4_NumberOfAudio3dStreamingVoices, 0x0238);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_ESYG, 0x023C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, PS4_SamplingRateOfAudio3dStreamingVoices, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_ZC8C, 0x0244);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, InitializeMana, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_C0QD, 0x0249);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, EnableDecodeSkip, 0x024A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_B8SJ, 0x024B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, MaxDecoderHandles, 0x024C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_1805, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, MaxManaBPS, 0x0254);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_5CSM, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, MaxManaStreams, 0x025C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_QNWV, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UseH264Decoder, 0x0264);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_DZRB, 0x0265);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, bUseManaStartupMovies, 0x0266);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, bWaitForMoviesToComplete, 0x0267);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, bMoviesAreSkippable, 0x0268);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_E2A0, 0x0269);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, StartupMovies, 0x0270);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCriWarePluginSettings, UnknownData_MEAT, 0x0280);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCriWarePluginSettings, 0x0290);
		}

		// class UManaComponent : public UActorComponent
		TEST_METHOD(Class__CriWareRuntime__ManaComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponent, Movie, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponent, OnEventPoint, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponent, OnSubtitleChanged, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponent, OnStatusChanged, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponent, OnMovieChanged, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponent, OnRequestData, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponent, UnknownData_IO8J, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponent, Playlist, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponent, PlaylistIndex, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponent, UnknownData_727X, 0x01A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponent, bLoop, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponent, UnknownData_7G8M, 0x01A9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponent, AudioTrack, 0x01AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponent, SubAudioTrack, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponent, ExtraAudioTrack, 0x01B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponent, bSubtitlesEnabled, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponent, UnknownData_KS1B, 0x01B9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponent, SubtitlesChannel, 0x01BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponent, SubtitlesEncoding, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponent, EndFrameAction, 0x01C1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponent, PlaybackTimer, 0x01C2);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponent, MaxFrameDrop, 0x01C3);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponent, UnknownData_R2P2, 0x01C4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UManaComponent, 0x0250);
		}

		// class UManaComponentTexture : public UTexture
		TEST_METHOD(Class__CriWareRuntime__ManaComponentTexture)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponentTexture, SizeX, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponentTexture, SizeY, 0x00B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponentTexture, Format, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponentTexture, ComponentType, 0x00B9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponentTexture, AddressX, 0x00BA);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponentTexture, AddressY, 0x00BB);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaComponentTexture, UnknownData_X70A, 0x00BC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UManaComponentTexture, 0x00D0);
		}

		// class UManaSource : public UObject
		TEST_METHOD(Class__CriWareRuntime__ManaSource)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UManaSource, 0x0028);
		}

		// class UManaMovie : public UManaSource
		TEST_METHOD(Class__CriWareRuntime__ManaMovie)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaMovie, VideoTracks, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaMovie, AudioTracks, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaMovie, EventPoints, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaMovie, NumSubtitleChannels, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaMovie, MaxSubtitleSize, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaMovie, UnknownData_0VW4, 0x0061);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UManaMovie, 0x0068);
		}

		// class UFileManaMovie : public UManaMovie
		TEST_METHOD(Class__CriWareRuntime__FileManaMovie)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UFileManaMovie, bPrecacheFile, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFileManaMovie, UnknownData_5AOI, 0x0069);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFileManaMovie, FilePath, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFileManaMovie, 0x0080);
		}

		// class UDataManaMovie : public UManaMovie
		TEST_METHOD(Class__CriWareRuntime__DataManaMovie)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDataManaMovie, UnknownData_5BW5, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDataManaMovie, 0x0070);
		}

		// class UManaPlaylist : public UManaSource
		TEST_METHOD(Class__CriWareRuntime__ManaPlaylist)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaPlaylist, Movies, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaPlaylist, bIsAlpha, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaPlaylist, bIsMixedTypes, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaPlaylist, bIsSeamless, 0x003A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaPlaylist, UnknownData_9708, 0x003B);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UManaPlaylist, 0x0040);
		}

		// class UManaTexture : public UTexture
		TEST_METHOD(Class__CriWareRuntime__ManaTexture)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaTexture, MovieSource, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaTexture, MovieFilePath, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaTexture, UnknownData_X7V1, 0x00C9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaTexture, TargetGamma, 0x00CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaTexture, UnknownData_HI5H, 0x00D1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaTexture, AddressX, 0x00D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaTexture, AddressY, 0x00D5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaTexture, UnknownData_STX6, 0x00D6);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaTexture, ClearColor, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaTexture, OverrideFormat, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaTexture, UnknownData_YZUH, 0x00E9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaTexture, ComponentTextures, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UManaTexture, UnknownData_BUBC, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UManaTexture, 0x0120);
		}

		// class UMaterialExpressionManaColorSpaceConverter : public UMaterialExpression
		TEST_METHOD(Class__CriWareRuntime__MaterialExpressionManaColorSpaceConverter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionManaColorSpaceConverter, Luma, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionManaColorSpaceConverter, UnknownData_7P7B, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionManaColorSpaceConverter, ChromaB, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionManaColorSpaceConverter, UnknownData_4QPT, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionManaColorSpaceConverter, ChromaR, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionManaColorSpaceConverter, UnknownData_3R7D, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionManaColorSpaceConverter, Alpha, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionManaColorSpaceConverter, UnknownData_5S99, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionManaColorSpaceConverter, Gamma, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionManaColorSpaceConverter, UnknownData_VK72, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionManaColorSpaceConverter, bH264, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionManaColorSpaceConverter, ColorSpace, 0x00B9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionManaColorSpaceConverter, bUseGammaExponent, 0x00BA);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionManaColorSpaceConverter, UnknownData_QM05, 0x00BB);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionManaColorSpaceConverter, ConstGamma, 0x00BC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionManaColorSpaceConverter, 0x00C0);
		}

		// class UMaterialExpressionManaMovieFormatSwitch : public UMaterialExpression
		TEST_METHOD(Class__CriWareRuntime__MaterialExpressionManaMovieFormatSwitch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionManaMovieFormatSwitch, Inputs, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionManaMovieFormatSwitch, UnknownData_QZ2G, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionManaMovieFormatSwitch, 0x0088);
		}

		// class UMatineeTrackAtomFloatBase : public UInterpTrackFloatBase
		TEST_METHOD(Class__CriWareRuntime__MatineeTrackAtomFloatBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMatineeTrackAtomFloatBase, 0x0090);
		}

		// class UMatineeTrackAisacControlName : public UMatineeTrackAtomFloatBase
		TEST_METHOD(Class__CriWareRuntime__MatineeTrackAisacControlName)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMatineeTrackAisacControlName, 0x0090);
		}

		// class UMatineeTrackAtomBase : public UInterpTrack
		TEST_METHOD(Class__CriWareRuntime__MatineeTrackAtomBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMatineeTrackAtomBase, 0x0070);
		}

		// class UMatineeTrackAtomSoundBase : public UMatineeTrackAtomBase
		TEST_METHOD(Class__CriWareRuntime__MatineeTrackAtomSoundBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMatineeTrackAtomSoundBase, bContinueSoundOnMatineeEnd, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMatineeTrackAtomSoundBase, UnknownData_5F96, 0x0071);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMatineeTrackAtomSoundBase, 0x0078);
		}

		// class UMatineeTrackAtom : public UMatineeTrackAtomSoundBase
		TEST_METHOD(Class__CriWareRuntime__MatineeTrackAtom)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMatineeTrackAtom, AisacList, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMatineeTrackAtom, SelectorList, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMatineeTrackAtom, KeyframeList, 0x0098);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMatineeTrackAtom, 0x00A8);
		}

		// class UMatineeTrackAtomCategoryName : public UMatineeTrackAtomBase
		TEST_METHOD(Class__CriWareRuntime__MatineeTrackAtomCategoryName)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMatineeTrackAtomCategoryName, CategoryName, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMatineeTrackAtomCategoryName, bEnableVolumeTrack, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMatineeTrackAtomCategoryName, UnknownData_NXZA, 0x0081);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMatineeTrackAtomCategoryName, 0x0088);
		}

		// class UMatineeTrackAtomCategoryVolume : public UMatineeTrackAtomFloatBase
		TEST_METHOD(Class__CriWareRuntime__MatineeTrackAtomCategoryVolume)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMatineeTrackAtomCategoryVolume, 0x0090);
		}

		// class UMatineeTrackAtomCueId : public UMatineeTrackAtomSoundBase
		TEST_METHOD(Class__CriWareRuntime__MatineeTrackAtomCueId)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMatineeTrackAtomCueId, AisacList, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMatineeTrackAtomCueId, SelectorList, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMatineeTrackAtomCueId, CueSheet, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMatineeTrackAtomCueId, KeyframeList, 0x00A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMatineeTrackAtomCueId, 0x00B0);
		}

		// class UMatineeTrackAtomCueName : public UMatineeTrackAtomSoundBase
		TEST_METHOD(Class__CriWareRuntime__MatineeTrackAtomCueName)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMatineeTrackAtomCueName, AisacList, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMatineeTrackAtomCueName, SelectorList, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMatineeTrackAtomCueName, CueSheet, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMatineeTrackAtomCueName, KeyframeList, 0x00A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMatineeTrackAtomCueName, 0x00B0);
		}

		// class UMatineeTrackAtomSelector : public UInterpTrack
		TEST_METHOD(Class__CriWareRuntime__MatineeTrackAtomSelector)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMatineeTrackAtomSelector, KeyframeList, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMatineeTrackAtomSelector, 0x0080);
		}

		// class UMatineeTrackInstAtom : public UInterpTrackInst
		TEST_METHOD(Class__CriWareRuntime__MatineeTrackInstAtom)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMatineeTrackInstAtom, LastUpdatePosition, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMatineeTrackInstAtom, UnknownData_68H2, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMatineeTrackInstAtom, AtomComponent, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMatineeTrackInstAtom, AtomTrack, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMatineeTrackInstAtom, UnknownData_TSTM, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMatineeTrackInstAtom, 0x0048);
		}

		// class UMovieSceneAtomSection : public UMovieSceneSection
		TEST_METHOD(Class__CriWareRuntime__MovieSceneAtomSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneAtomSection, Sound, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneAtomSection, StartOffset, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneAtomSection, UnknownData_J9NQ, 0x00EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneAtomSection, SoundVolume, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneAtomSection, PitchMultiplier, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneAtomSection, bSuppressSubtitles, 0x0230);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneAtomSection, UnknownData_EJJZ, 0x0231);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneAtomSection, 0x0238);
		}

		// class UMovieSceneAtomTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__CriWareRuntime__MovieSceneAtomTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneAtomTrack, AtomSections, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneAtomTrack, 0x0068);
		}

		// class USoundAtomConfig : public UObject
		TEST_METHOD(Class__CriWareRuntime__SoundAtomConfig)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundAtomConfig, AcfFilePath, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundAtomConfig, UnknownData_DXHW, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundAtomConfig, 0x00A8);
		}

		// class USoundAtomCue : public UObject
		TEST_METHOD(Class__CriWareRuntime__SoundAtomCue)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundAtomCue, UnknownData_DERJ, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundAtomCue, CueSheet, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundAtomCue, CueName, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundAtomCue, bApplyAtomParameter, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundAtomCue, UnknownData_5X34, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundAtomCue, UnknownData_JHZR, 0x0055);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundAtomCue, SoundConcurrencySettings, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundAtomCue, ConcurrencyOverrides, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundAtomCue, Priority, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundAtomCue, UnknownData_KNJW, 0x0074);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundAtomCue, DefaultAttenuation, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundAtomCue, UnknownData_IPK7, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundAtomCue, 0x0098);
		}

		// class USoundAtomCueSheet : public UObject
		TEST_METHOD(Class__CriWareRuntime__SoundAtomCueSheet)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundAtomCueSheet, Contains, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundAtomCueSheet, UnknownData_R40Y, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundAtomCueSheet, AcbFilePath, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundAtomCueSheet, UnknownData_SGUH, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundAtomCueSheet, bOverrideAwbDirectory, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundAtomCueSheet, UnknownData_T86L, 0x00B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundAtomCueSheet, AwbDirectory, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundAtomCueSheet, CueSheetName, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundAtomCueSheet, NumSlots, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USoundAtomCueSheet, UnknownData_U6PM, 0x00DC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoundAtomCueSheet, 0x0128);
		}

		// class UCustomMeshComponent : public UMeshComponent
		TEST_METHOD(Class__CustomMeshComponent__CustomMeshComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCustomMeshComponent, UnknownData_AQ5C, 0x0590);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCustomMeshComponent, 0x05A0);
		}

		// class UQuest_Sub_Reward_C : public UAT_UIQuestSubReward
		TEST_METHOD(WidgetBlueprintGeneratedClass__Quest_Sub_Reward__Quest_Sub_Reward_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_Reward_C, UberGraphFrame, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_Reward_C, Clear_Reward_Out, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_Reward_C, Clear_Reward_Loop, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_Reward_C, Clear_Reward_In, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_Reward_C, Img_Xcmn_Cloud_S01_L00, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_Reward_C, Img_Xcmn_Cloud_S01_L01, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_Reward_C, Img_Xcmn_Cloud_S01_R00, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_Reward_C, Img_Xcmn_Cloud_S01_R01, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_Reward_C, Ins_Congrats_Eff, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_Reward_C, Ins_Xef_Light02_00, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_Reward_C, Ins_Xef_Light02_01, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_Reward_C, Ins_Xef_Light02_02, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_Reward_C, Ins_Xef_Light02_03, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_Reward_C, Ins_Xef_Light02_04, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_Reward_C, Ins_Xef_Light02_05, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_Reward_C, Ins_Xef_Line00, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_Reward_C, Ins_Xef_Sprk01_00, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_Reward_C, Ins_Xef_Sprk01_01, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_Reward_C, Ins_Xef_Sprk01_02, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_Reward_C, Ins_Xef_Sprk01_03, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_Reward_C, Lang_Txt_Congrats, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_Reward_C, Xcmn_Fade_Black, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_Reward_C, Xcmn_Win01, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_Reward_C, loopCount, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_Reward_C, UnknownData_FHRB, 0x0524);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_Reward_C, Choice_Win, 0x0528);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuest_Sub_Reward_C, 0x0530);
		}

		// class UQuest_Navi_Eff00_C : public UAT_UIQuestNavigationExMarkEff
		TEST_METHOD(WidgetBlueprintGeneratedClass__Quest_Navi_Eff00__Quest_Navi_Eff00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_Eff00_C, Start, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_Eff00_C, All_Nut, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_Eff00_C, Ins_Eff_M00, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_Eff00_C, Ins_Eff_M01, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_Eff00_C, Ins_Icon_Quest00, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_Eff00_C, Ins_Xef_Kira01_00, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_Eff00_C, Pnl_Eff_M, 0x03F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuest_Navi_Eff00_C, 0x03F8);
		}

		// class UQuest_Navi_M_C : public UAT_UIQuestNavigationListItem
		TEST_METHOD(WidgetBlueprintGeneratedClass__Quest_Navi_M__Quest_Navi_M_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_M_C, UberGraphFrame, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_M_C, List_Out, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_M_C, List_In, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_M_C, All_List_Main00, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_M_C, Img_Base_List, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_M_C, Pnl_List_Main00, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_M_C, Txt_List_00, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_M_C, Txt_List_01, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_M_C, Xmenu_Check, 0x0448);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuest_Navi_M_C, 0x0450);
		}

		// class UXef_Light_Sprk_C : public UCFUIUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xef_Light_Sprk__Xef_Light_Sprk_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Light_Sprk_C, UberGraphFrame, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Light_Sprk_C, In, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Light_Sprk_C, All_Nut, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Light_Sprk_C, Ins_Light_01_00, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Light_Sprk_C, Ins_Light_01_01, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Light_Sprk_C, Ins_Light_01_02, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Light_Sprk_C, Xef_Sprk00_00, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Light_Sprk_C, Xef_Sprk00_01, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Light_Sprk_C, Xef_Sprk00_02, 0x03B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXef_Light_Sprk_C, 0x03B8);
		}

		// class UMap_World_Bg_C : public UAT_UIMapWorldBG
		TEST_METHOD(WidgetBlueprintGeneratedClass__Map_World_Bg__Map_World_Bg_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMap_World_Bg_C, 0x0430);
		}

		// class UBattle_Dmg_C : public UAT_UIDamagePop
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Dmg__Battle_Dmg_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_C, Normal_Text, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_C, Critical_Text, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_C, Img_Base_Critical, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_C, Img_Lang_Critical, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_C, Ins_Dmg00_00, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_C, Ins_Dmg00_01, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_C, Ins_Dmg00_02, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_C, Ins_Dmg00_03, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_C, Ins_Dmg00_04, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_C, Ins_Dmg00_05, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_C, Ins_Dmg00_06, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_C, Ins_Dmg00_07, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_C, Ins_Dmg00_08, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_C, Ins_Dmg00_Eff00, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_C, Ins_Dmg00_Eff01, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_C, Ins_Dmg00_Eff02, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_C, Ins_Dmg00_Eff03, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_C, Ins_Dmg00_Eff04, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_C, Ins_Dmg00_Eff05, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_C, Ins_Dmg00_Eff06, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_C, Ins_Dmg00_Eff07, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_C, Ins_Dmg00_Eff08, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_C, Ins_Lang_Critical, 0x05A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Dmg_C, 0x05A8);
		}

		// class UBattle_Dmg_Total_C : public UAT_UITotalDamage
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Dmg_Total__Battle_Dmg_Total_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, UberGraphFrame, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, Start, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, All_Dmg_Total, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, All_Nut, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, Img_Base, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, Ins_Num_Result00_11, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, Ins_Num_Result00_00, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, Ins_Num_Result00_01, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, Ins_Num_Result00_02, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, Ins_Num_Result00_03, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, Ins_Num_Result00_04, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, Ins_Num_Result00_05, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, Ins_Num_Result00_06, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, Ins_Num_Result00_07, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, Ins_Num_Result00_08, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, Ins_Num_Result00_09, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, Ins_Num_Result00_Eff00, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, Ins_Num_Result00_Eff01, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, Ins_Num_Result00_Eff02, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, Ins_Num_Result00_Eff03, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, Ins_Num_Result00_Eff04, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, Ins_Num_Result00_Eff05, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, Ins_Num_Result00_Eff06, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, Ins_Num_Result00_Eff07, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, Ins_Num_Result00_Eff08, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, Ins_Num_Result00_Eff09, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, Ins_Num_Result00_Eff10, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, Lang_Total, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Dmg_Total_C, loopCount, 0x04F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Dmg_Total_C, 0x04F4);
		}

		// class UField_Ride_Icon_C : public UAT_UIFieldRideIcon
		TEST_METHOD(WidgetBlueprintGeneratedClass__Field_Ride_Icon__Field_Ride_Icon_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_Icon_C, All_Field_Ride_Icon, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_Icon_C, All_Nut, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_Icon_C, Img_Icon_Ban, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_Icon_C, Img_Icon_Ride_Base, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_Icon_C, Ins_Gauge_Energy01, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_Icon_C, Ins_Icon_Ride, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_Icon_C, Ins_Sirc_Line, 0x03F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UField_Ride_Icon_C, 0x03F8);
		}

		// class UObject
		TEST_METHOD(Class__CoreUObject__Object)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UObject, VfTable, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::UObject, Flags, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::UObject, InternalIndex, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UObject, Class, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::UObject, Name, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::UObject, Outer, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UObject, 0x0028);
		}

		// class UInterface : public UObject
		TEST_METHOD(Class__CoreUObject__Interface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterface, 0x0028);
		}

		// class UGCObjectReferencer : public UObject
		TEST_METHOD(Class__CoreUObject__GCObjectReferencer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGCObjectReferencer, UnknownData_RM60, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGCObjectReferencer, 0x0060);
		}

		// class UTextBuffer : public UObject
		TEST_METHOD(Class__CoreUObject__TextBuffer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextBuffer, UnknownData_2MZR, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextBuffer, 0x0050);
		}

		// class UField : public UObject
		TEST_METHOD(Class__CoreUObject__Field)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UField, Next, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UField, 0x0030);
		}

		// class UStruct : public UField
		TEST_METHOD(Class__CoreUObject__Struct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UStruct, SuperField, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStruct, Children, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStruct, PropertySize, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStruct, MinAlignment, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStruct, Script, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStruct, PropertyLink, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStruct, RefLink, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStruct, DestructorLink, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStruct, PostConstructLink, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStruct, ScriptObjectReferences, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStruct, 0x0088);
		}

		// class UScriptStruct : public UStruct
		TEST_METHOD(Class__CoreUObject__ScriptStruct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UScriptStruct, UnknownData_DQGW, 0x0088);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UScriptStruct, 0x0098);
		}

		// class UPackage : public UObject
		TEST_METHOD(Class__CoreUObject__Package)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPackage, UnknownData_6LJ0, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPackage, 0x0090);
		}

		// class UClass : public UStruct
		TEST_METHOD(Class__CoreUObject__Class)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UClass, UnknownData_IQDC, 0x0088);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UClass, 0x0208);
		}

		// class UFunction : public UStruct
		TEST_METHOD(Class__CoreUObject__Function)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UFunction, FunctionFlags, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFunction, RepOffset, 0x008C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFunction, NumParms, 0x008E);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFunction, pad_KLTQBWJ39A, 0x008F);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFunction, ParmsSize, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFunction, ReturnValueOffset, 0x0092);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFunction, RPCId, 0x0094);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFunction, RPCResponseId, 0x0096);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFunction, FirstPropertyToInit, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFunction, EventGraphFunction, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFunction, EventGraphCallOffset, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFunction, pad_JG58W8BOGX, 0x00AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFunction, Func, 0x00B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFunction, 0x00B8);
		}

		// class UDelegateFunction : public UFunction
		TEST_METHOD(Class__CoreUObject__DelegateFunction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDelegateFunction, 0x00B8);
		}

		// class UDynamicClass : public UClass
		TEST_METHOD(Class__CoreUObject__DynamicClass)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDynamicClass, UnknownData_0DRI, 0x0208);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDynamicClass, 0x0270);
		}

		// class UPackageMap : public UObject
		TEST_METHOD(Class__CoreUObject__PackageMap)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPackageMap, UnknownData_V1FZ, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPackageMap, 0x00E0);
		}

		// class UEnum : public UField
		TEST_METHOD(Class__CoreUObject__Enum)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnum, UnknownData_73ID, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnum, 0x0060);
		}

		// class UProperty : public UField
		TEST_METHOD(Class__CoreUObject__Property)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UProperty, UnknownData_MHK6, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UProperty, 0x0070);
		}

		// class UEnumProperty : public UProperty
		TEST_METHOD(Class__CoreUObject__EnumProperty)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnumProperty, UnknownData_6EHS, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnumProperty, 0x0080);
		}

		// class ULinkerPlaceholderClass : public UClass
		TEST_METHOD(Class__CoreUObject__LinkerPlaceholderClass)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULinkerPlaceholderClass, UnknownData_ISEL, 0x0208);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULinkerPlaceholderClass, 0x03C0);
		}

		// class ULinkerPlaceholderExportObject : public UObject
		TEST_METHOD(Class__CoreUObject__LinkerPlaceholderExportObject)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULinkerPlaceholderExportObject, UnknownData_AER8, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULinkerPlaceholderExportObject, 0x00F0);
		}

		// class ULinkerPlaceholderFunction : public UFunction
		TEST_METHOD(Class__CoreUObject__LinkerPlaceholderFunction)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULinkerPlaceholderFunction, UnknownData_YQVV, 0x00B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULinkerPlaceholderFunction, 0x0270);
		}

		// class UMetaData : public UObject
		TEST_METHOD(Class__CoreUObject__MetaData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMetaData, UnknownData_SA0A, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMetaData, 0x00C8);
		}

		// class UObjectRedirector : public UObject
		TEST_METHOD(Class__CoreUObject__ObjectRedirector)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UObjectRedirector, UnknownData_88AF, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UObjectRedirector, 0x0030);
		}

		// class UArrayProperty : public UProperty
		TEST_METHOD(Class__CoreUObject__ArrayProperty)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UArrayProperty, UnknownData_FT3P, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UArrayProperty, 0x0078);
		}

		// class UObjectPropertyBase : public UProperty
		TEST_METHOD(Class__CoreUObject__ObjectPropertyBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UObjectPropertyBase, UnknownData_I90U, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UObjectPropertyBase, 0x0078);
		}

		// class UBoolProperty : public UProperty
		TEST_METHOD(Class__CoreUObject__BoolProperty)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBoolProperty, UnknownData_H1UA, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBoolProperty, 0x0078);
		}

		// class UNumericProperty : public UProperty
		TEST_METHOD(Class__CoreUObject__NumericProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNumericProperty, 0x0070);
		}

		// class UByteProperty : public UNumericProperty
		TEST_METHOD(Class__CoreUObject__ByteProperty)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UByteProperty, UnknownData_9LQI, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UByteProperty, 0x0078);
		}

		// class UObjectProperty : public UObjectPropertyBase
		TEST_METHOD(Class__CoreUObject__ObjectProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UObjectProperty, 0x0078);
		}

		// class UClassProperty : public UObjectProperty
		TEST_METHOD(Class__CoreUObject__ClassProperty)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UClassProperty, UnknownData_8FHR, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UClassProperty, 0x0080);
		}

		// class UDelegateProperty : public UProperty
		TEST_METHOD(Class__CoreUObject__DelegateProperty)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDelegateProperty, UnknownData_JGAR, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDelegateProperty, 0x0078);
		}

		// class UDoubleProperty : public UNumericProperty
		TEST_METHOD(Class__CoreUObject__DoubleProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDoubleProperty, 0x0070);
		}

		// class UFloatProperty : public UNumericProperty
		TEST_METHOD(Class__CoreUObject__FloatProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFloatProperty, 0x0070);
		}

		// class UIntProperty : public UNumericProperty
		TEST_METHOD(Class__CoreUObject__IntProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UIntProperty, 0x0070);
		}

		// class UInt16Property : public UNumericProperty
		TEST_METHOD(Class__CoreUObject__Int16Property)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInt16Property, 0x0070);
		}

		// class UInt64Property : public UNumericProperty
		TEST_METHOD(Class__CoreUObject__Int64Property)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInt64Property, 0x0070);
		}

		// class UInt8Property : public UNumericProperty
		TEST_METHOD(Class__CoreUObject__Int8Property)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInt8Property, 0x0070);
		}

		// class UInterfaceProperty : public UProperty
		TEST_METHOD(Class__CoreUObject__InterfaceProperty)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterfaceProperty, UnknownData_HWVM, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterfaceProperty, 0x0078);
		}

		// class ULazyObjectProperty : public UObjectPropertyBase
		TEST_METHOD(Class__CoreUObject__LazyObjectProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULazyObjectProperty, 0x0078);
		}

		// class UMapProperty : public UProperty
		TEST_METHOD(Class__CoreUObject__MapProperty)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMapProperty, UnknownData_QK77, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMapProperty, 0x00A8);
		}

		// class UMulticastDelegateProperty : public UProperty
		TEST_METHOD(Class__CoreUObject__MulticastDelegateProperty)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMulticastDelegateProperty, UnknownData_DBNY, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMulticastDelegateProperty, 0x0078);
		}

		// class UNameProperty : public UProperty
		TEST_METHOD(Class__CoreUObject__NameProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNameProperty, 0x0070);
		}

		// class USetProperty : public UProperty
		TEST_METHOD(Class__CoreUObject__SetProperty)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USetProperty, UnknownData_YYDA, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USetProperty, 0x0098);
		}

		// class USoftObjectProperty : public UObjectPropertyBase
		TEST_METHOD(Class__CoreUObject__SoftObjectProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoftObjectProperty, 0x0078);
		}

		// class USoftClassProperty : public USoftObjectProperty
		TEST_METHOD(Class__CoreUObject__SoftClassProperty)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USoftClassProperty, UnknownData_N617, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USoftClassProperty, 0x0080);
		}

		// class UStrProperty : public UProperty
		TEST_METHOD(Class__CoreUObject__StrProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStrProperty, 0x0070);
		}

		// class UStructProperty : public UProperty
		TEST_METHOD(Class__CoreUObject__StructProperty)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UStructProperty, UnknownData_5VWH, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStructProperty, 0x0078);
		}

		// class UUInt16Property : public UNumericProperty
		TEST_METHOD(Class__CoreUObject__UInt16Property)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUInt16Property, 0x0070);
		}

		// class UUInt32Property : public UNumericProperty
		TEST_METHOD(Class__CoreUObject__UInt32Property)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUInt32Property, 0x0070);
		}

		// class UUInt64Property : public UNumericProperty
		TEST_METHOD(Class__CoreUObject__UInt64Property)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUInt64Property, 0x0070);
		}

		// class UWeakObjectProperty : public UObjectPropertyBase
		TEST_METHOD(Class__CoreUObject__WeakObjectProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWeakObjectProperty, 0x0078);
		}

		// class UTextProperty : public UProperty
		TEST_METHOD(Class__CoreUObject__TextProperty)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextProperty, 0x0070);
		}

		// class UFontBulkData : public UObject
		TEST_METHOD(Class__SlateCore__FontBulkData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UFontBulkData, UnknownData_72TJ, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFontBulkData, 0x00C0);
		}

		// class UFontFaceInterface : public UInterface
		TEST_METHOD(Class__SlateCore__FontFaceInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFontFaceInterface, 0x0028);
		}

		// class UFontProviderInterface : public UInterface
		TEST_METHOD(Class__SlateCore__FontProviderInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFontProviderInterface, 0x0028);
		}

		// class USlateTypes : public UObject
		TEST_METHOD(Class__SlateCore__SlateTypes)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USlateTypes, 0x0028);
		}

		// class USlateWidgetStyleAsset : public UObject
		TEST_METHOD(Class__SlateCore__SlateWidgetStyleAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USlateWidgetStyleAsset, CustomStyle, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USlateWidgetStyleAsset, 0x0030);
		}

		// class USlateWidgetStyleContainerBase : public UObject
		TEST_METHOD(Class__SlateCore__SlateWidgetStyleContainerBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USlateWidgetStyleContainerBase, UnknownData_PDVW, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USlateWidgetStyleContainerBase, 0x0030);
		}

		// class USlateWidgetStyleContainerInterface : public UInterface
		TEST_METHOD(Class__SlateCore__SlateWidgetStyleContainerInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USlateWidgetStyleContainerInterface, 0x0028);
		}

		// class UButtonWidgetStyle : public USlateWidgetStyleContainerBase
		TEST_METHOD(Class__Slate__ButtonWidgetStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UButtonWidgetStyle, ButtonStyle, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UButtonWidgetStyle, 0x02A8);
		}

		// class UCheckBoxWidgetStyle : public USlateWidgetStyleContainerBase
		TEST_METHOD(Class__Slate__CheckBoxWidgetStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckBoxWidgetStyle, CheckBoxStyle, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCheckBoxWidgetStyle, 0x05B0);
		}

		// class UComboBoxWidgetStyle : public USlateWidgetStyleContainerBase
		TEST_METHOD(Class__Slate__ComboBoxWidgetStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UComboBoxWidgetStyle, ComboBoxStyle, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UComboBoxWidgetStyle, 0x0408);
		}

		// class UComboButtonWidgetStyle : public USlateWidgetStyleContainerBase
		TEST_METHOD(Class__Slate__ComboButtonWidgetStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UComboButtonWidgetStyle, ComboButtonStyle, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UComboButtonWidgetStyle, 0x03D0);
		}

		// class UEditableTextBoxWidgetStyle : public USlateWidgetStyleContainerBase
		TEST_METHOD(Class__Slate__EditableTextBoxWidgetStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBoxWidgetStyle, EditableTextBoxStyle, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableTextBoxWidgetStyle, 0x0828);
		}

		// class UEditableTextWidgetStyle : public USlateWidgetStyleContainerBase
		TEST_METHOD(Class__Slate__EditableTextWidgetStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextWidgetStyle, EditableTextStyle, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableTextWidgetStyle, 0x0250);
		}

		// class UProgressWidgetStyle : public USlateWidgetStyleContainerBase
		TEST_METHOD(Class__Slate__ProgressWidgetStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UProgressWidgetStyle, ProgressBarStyle, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UProgressWidgetStyle, 0x01D0);
		}

		// class UScrollBarWidgetStyle : public USlateWidgetStyleContainerBase
		TEST_METHOD(Class__Slate__ScrollBarWidgetStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBarWidgetStyle, ScrollBarStyle, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UScrollBarWidgetStyle, 0x0500);
		}

		// class UScrollBoxWidgetStyle : public USlateWidgetStyleContainerBase
		TEST_METHOD(Class__Slate__ScrollBoxWidgetStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBoxWidgetStyle, ScrollBoxStyle, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UScrollBoxWidgetStyle, 0x0258);
		}

		// class USlateSettings : public UObject
		TEST_METHOD(Class__Slate__SlateSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USlateSettings, bExplicitCanvasChildZOrder, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::USlateSettings, UnknownData_YGIO, 0x0029);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USlateSettings, 0x0030);
		}

		// class USpinBoxWidgetStyle : public USlateWidgetStyleContainerBase
		TEST_METHOD(Class__Slate__SpinBoxWidgetStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USpinBoxWidgetStyle, SpinBoxStyle, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpinBoxWidgetStyle, 0x0318);
		}

		// class UTextBlockWidgetStyle : public USlateWidgetStyleContainerBase
		TEST_METHOD(Class__Slate__TextBlockWidgetStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextBlockWidgetStyle, TextBlockStyle, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextBlockWidgetStyle, 0x0218);
		}

		// class UQte_Battle_Blow_C : public UAT_UIQteChaseAttack
		TEST_METHOD(WidgetBlueprintGeneratedClass__Qte_Battle_Blow__Qte_Battle_Blow_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Ok_01, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Loop, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Ng, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Ok, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, In, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, All_Blow, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, All_Nut, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Dmy_Btn00, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Gauge_Qte_Time, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Img_Elc03, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Img_Elc04_11, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Img_Elc04_12, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Img_Elc04_13, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Img_Elc04_14, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Img_Elc04_01, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Img_Elc04_02, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Img_Elc04_03, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Img_Elc04_04, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Img_Elc04_05, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Img_Elc04_06, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Img_Elc04_07, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Img_Elc04_08, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Img_Elc04_09, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Img_Elc05, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Img_Light00, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Ins_Base_Txt, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Ins_Btn_Eff00, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Ins_Xef_Burst02, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Ins_Xef_Fad01, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Ins_Xef_Fad05, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Ins_Xef_particle00, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Ins_Xef_particle01, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQte_Battle_Blow_C, Txt_Action, 0x05A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQte_Battle_Blow_C, 0x05A8);
		}

		// class UEyeTrackerFunctionLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__EyeTracker__EyeTrackerFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEyeTrackerFunctionLibrary, 0x0028);
		}

		// class UTips_List00_C : public UCFUIUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Tips_List00__Tips_List00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_List00_C, Img_Xtex_Fad00, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_List00_C, Txt_Btn, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_List00_C, Txt_Detail, 0x0380);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTips_List00_C, 0x0388);
		}

		// class UXmenu_Cloud_Btm_C : public UAT_UIStartTopCloud
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xmenu_Cloud_Btm__Xmenu_Cloud_Btm_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Cloud_Btm_C, Out, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Cloud_Btm_C, Loop, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Cloud_Btm_C, In, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Cloud_Btm_C, Img_Cloud00, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Cloud_Btm_C, Ins_Cloud00_Shdw, 0x03B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXmenu_Cloud_Btm_C, 0x03B8);
		}

		// class UEnc_HUd_E_Base_C : public UAT_UIEncounterHud
		TEST_METHOD(WidgetBlueprintGeneratedClass__Enc_HUd_E_Base__Enc_HUd_E_Base_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_HUd_E_Base_C, UberGraphFrame, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_HUd_E_Base_C, All_Base, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_HUd_E_Base_C, All_Nut, 0x0400);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnc_HUd_E_Base_C, 0x0408);
		}

		// class UField_Ride_C : public UAT_UIFieldRide
		TEST_METHOD(WidgetBlueprintGeneratedClass__Field_Ride__Field_Ride_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_C, UberGraphFrame, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_C, Charge_Full, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_C, Enter, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_C, Gauge_Out, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_C, Gauge_In, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_C, Change_Right, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_C, Change_Left, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_C, Out, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_C, In, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_C, Field_Ride_Icon00, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_C, Field_Ride_Icon01, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_C, Field_Ride_Icon02, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_C, Img_Gauge_E_Flam00, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_C, Img_Gauge_E_Flam02, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_C, Img_Gauge_E_Flam02_01, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_C, Img_Ride_Base, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_C, Ins_Eff01, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_C, Ins_Gauge_Base01, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_C, Ins_Gauge_Energy, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_C, Ins_Gauge_Full_Eff, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_C, Ins_Icon_Ride01, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_C, Xmenu_Arrow_L00, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Ride_C, Xmenu_Arrow_R00, 0x04F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UField_Ride_C, 0x04F8);
		}

		// class UField_Talk_Win_C : public UAT_UIFieldTalkWin
		TEST_METHOD(WidgetBlueprintGeneratedClass__Field_Talk_Win__Field_Talk_Win_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Talk_Win_C, UberGraphFrame, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Talk_Win_C, Change_In, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Talk_Win_C, Change_Out, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Talk_Win_C, Serif_Out, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Talk_Win_C, Serif_In, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Talk_Win_C, Img_Arrow, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Talk_Win_C, Img_Talk_Base, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Talk_Win_C, Txt_Msg, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Talk_Win_C, Txt_Speaker, 0x0468);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UField_Talk_Win_C, 0x0470);
		}

		// class UGameover_C : public UAT_UIGameover
		TEST_METHOD(WidgetBlueprintGeneratedClass__Gameover__Gameover_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameover_C, Out, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameover_C, In, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameover_C, Lang_Gameover, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameover_C, List_Bar00, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameover_C, List_Bar01, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameover_C, List_Bar02, 0x0460);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameover_C, 0x0468);
		}

		// class UXcmn_Btn_Plat_C : public UAT_UIXcmnPlatBtn
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Btn_Plat__Xcmn_Btn_Plat_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Btn_Plat_C, Dmy_Btn_00, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Btn_Plat_C, Dmy_Btn_01, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Btn_Plat_C, Dmy_Btn_02, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Btn_Plat_C, Dmy_Btn_03, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Btn_Plat_C, Ins_Btn_Shadow_00, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Btn_Plat_C, Ins_Btn_Shadow_01, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Btn_Plat_C, Ins_Btn_Shadow_02, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Btn_Plat_C, Ins_Btn_Shadow_03, 0x0488);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Btn_Plat_C, 0x0490);
		}

		// class UIcon_Item_C : public UAT_UIIconItem
		TEST_METHOD(WidgetBlueprintGeneratedClass__Icon_Item__Icon_Item_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_Item_C, Img_Icon_Zorb, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_Item_C, Ins_Icon_Group, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_Item_C, Ins_Icon_Item, 0x03A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UIcon_Item_C, 0x03A8);
		}

		// class UXmenu_Check_C : public UAT_UIXcmnCheckBox
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xmenu_Check__Xmenu_Check_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Check_C, Start, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Check_C, Img_Check_Base01_00, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Check_C, Img_Check_Base01_01, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Check_C, Ins_Check00, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Check_C, Ins_Check01, 0x03B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXmenu_Check_C, 0x03C0);
		}

		// class UIcon_State_C : public UAT_UIStateIcon
		TEST_METHOD(WidgetBlueprintGeneratedClass__Icon_State__Icon_State_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_C, Out_Fade, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_C, In_Fade, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_C, Slide_R, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_C, Out, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_C, Sign, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_C, In, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_C, All_Nut_InvalidationBox, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_C, Ins_Base, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_C, Ins_Base_Eff00, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_C, Ins_Base_Light, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_C, Ins_Eff_Light, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_C, Ins_Icon_Curs, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_State_C, Ins_Icon_St, 0x0518);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UIcon_State_C, 0x0520);
		}

		// class UXmenu_Scrollbar_C : public UAT_UIScrollBar
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xmenu_Scrollbar__Xmenu_Scrollbar_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Scrollbar_C, Out, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Scrollbar_C, In, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Scrollbar_C, Ins_Scrollbar, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Scrollbar_C, Ins_Scrollbar_Base, 0x03F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXmenu_Scrollbar_C, 0x03F8);
		}

		// class UXcmn_Win00_Choice_C : public UAT_UISystemWindowChoice
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Win00_Choice__Xcmn_Win00_Choice_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win00_Choice_C, UberGraphFrame, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win00_Choice_C, Img_Xwin01_List, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win00_Choice_C, Txt_Choice, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Win00_Choice_C, 0x03C8);
		}

		// class UBattle_Gauge_Sp_C : public UAT_UIBattleHudGaugePlayerSp
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Gauge_Sp__Battle_Gauge_Sp_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Sp_C, Charge_Recovery_Loop, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Sp_C, Charge_Recovery, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Sp_C, Charge_Full, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Sp_C, All_Gauge_Sp, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Sp_C, All_Nut, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Sp_C, All_Nut_InvalidationBox, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Sp_C, Img_Gauge_Base, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Sp_C, Img_Gauge_Frame, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Sp_C, Ins_Gauge_Base_Eff, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Sp_C, Ins_Gauge_Eff00, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Sp_C, Ins_Gauge_Eff01, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Sp_C, Ins_Gauge_Mark_Full, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Sp_C, Ins_Gauge_Recover, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Sp_C, Ins_Gauge_Sp, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Sp_C, Ins_Xef_Elc_Anm00, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Sp_C, Mat_Gauge_Hud_Light, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Sp_C, Pnl_Sp, 0x04E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Gauge_Sp_C, 0x04F0);
		}

		// class UIcon_Save_C : public UAT_UIIconSave
		TEST_METHOD(WidgetBlueprintGeneratedClass__Icon_Save__Icon_Save_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_Save_C, Out, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_Save_C, In, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_Save_C, Ins_Icon_Save, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_Save_C, Txt_Saving, 0x03B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UIcon_Save_C, 0x03B8);
		}

		// class UBattle_Hud_P_Spo_C : public UAT_UIBattleHudPlayerSpo
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Hud_P_Spo__Battle_Hud_P_Spo_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, Out_Support, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, Full_Support, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, Full_Skill, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, Out_Change, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, In_Change, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, Out_Battle, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, In_Battle, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, Up_Lv, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, All_Nut_InvalidationBox, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, Dmy_Charicon_D, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, Icon_State_Lay_P, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, Img_Spo_Base, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, Img_Spo_Base01, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, Img_Spo_Base_Flam00, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, Ins_Gauge_Spo_Icon, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, Ins_Icon_Spo00, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, Ins_Spo_Eff02, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, Ins_Spo_Eff02_00, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, Ins_Spo_Eff02_01, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, Ins_Spo_Fad01, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, Ins_Spo_Gauge00, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, Ins_Xef_Fad02, 0x05B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, Ins_Xef_Fad04, 0x05C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, Ins_Xef_Fad05, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, Ins_Xef_Fad10, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, Txt_Lv, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, Txt_Lv_Eff00, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, Txt_Lv_Eff01, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, Xef_Hud_Eff, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Spo_C, FaceTex, 0x05F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Hud_P_Spo_C, 0x0600);
		}

		// class UXcmn_MultiLineText_C : public UCFUIXcmnMultiLineText
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_MultiLineText__Xcmn_MultiLineText_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_MultiLineText_C, UberGraphFrame, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_MultiLineText_C, DebugFrameArea, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_MultiLineText_C, DebugWrapArea, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_MultiLineText_C, ExMainTxt, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_MultiLineText_C, ExSubTxt, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_MultiLineText_C, mainTxt, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_MultiLineText_C, Pnl_Mask, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_MultiLineText_C, SubTxt, 0x0578);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_MultiLineText_C, 0x0580);
		}

		// class UXcmn_Win_System_C : public UAT_UIXcmnSystemDialog
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Win_System__Xcmn_Win_System_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win_System_C, Out, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win_System_C, In, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win_System_C, All_Nut, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win_System_C, Img_Fade_Black, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win_System_C, Txt_00, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Win_System_C, 0x03E0);
		}

		// class UXcmn_Keyhelp_C : public UAT_UIKeyHelp
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Keyhelp__Xcmn_Keyhelp_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Keyhelp_C, UberGraphFrame, 0x06F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Keyhelp_C, Out_Keyhelp, 0x06F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Keyhelp_C, Change_Keyhelp, 0x0700);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Keyhelp_C, Img_Base, 0x0708);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Keyhelp_C, Img_Base_Help, 0x0710);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Keyhelp_C, Ins_Deco_Star, 0x0718);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Keyhelp_C, Pnl_All_Helpmsg, 0x0720);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Keyhelp_C, Txt_Helpmsg_Main, 0x0728);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Keyhelp_C, Txt_Keyhelp_01, 0x0730);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Keyhelp_C, Txt_Keyhelp_02, 0x0738);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Keyhelp_C, Txt_Keyhelp_03, 0x0740);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Keyhelp_C, Txt_Keyhelp_04, 0x0748);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Keyhelp_C, Txt_Keyhelp_05, 0x0750);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Keyhelp_C, Txt_Keyhelp_06, 0x0758);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Keyhelp_C, Txt_Keyhelp_07, 0x0760);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Keyhelp_C, Txt_Keyhelp_08, 0x0768);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Keyhelp_C, Txt_Keyhelp_09, 0x0770);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Keyhelp_C, Xcmn_Btn_Plat_01, 0x0778);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Keyhelp_C, Xcmn_Btn_Plat_02, 0x0780);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Keyhelp_C, Xcmn_Btn_Plat_03, 0x0788);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Keyhelp_C, Xcmn_Btn_Plat_04, 0x0790);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Keyhelp_C, Xcmn_Btn_Plat_05, 0x0798);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Keyhelp_C, Xcmn_Btn_Plat_06, 0x07A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Keyhelp_C, Xcmn_Btn_Plat_07, 0x07A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Keyhelp_C, Xcmn_Btn_Plat_08, 0x07B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Keyhelp_C, Xcmn_Btn_Plat_09, 0x07B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Keyhelp_C, 0x07C0);
		}

		// class UXcmn_Emb_List_C : public UAT_UIGameWindowCmuChoice
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Emb_List__Xcmn_Emb_List_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_List_C, UberGraphFrame, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_List_C, Img_Win_hr01, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_List_C, Txt_Commu_Lv, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_List_C, Txt_Name, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_List_C, Txt_Num00, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_List_C, Txt_Num01, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_List_C, Txt_Num02, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_List_C, Txt_Num03, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_List_C, Txt_Num04, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_List_C, Txt_Num05, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_List_C, Txt_Num06, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_List_C, Xcmn_Emb01, 0x0458);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Emb_List_C, 0x0460);
		}

		// class UBattle_Gauge_Break_C : public UAT_UIBattleHudGaugeEnemyBreak
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Gauge_Break__Battle_Gauge_Break_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Break_C, Charge_Full, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Break_C, Battle_Break_Parts, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Break_C, Img_Gauge_Base, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Break_C, Img_Gauge_frame_Break, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Break_C, Ins_Eff01, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Break_C, Ins_Gauge_Base_Eff, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Break_C, Ins_Gauge_Break, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Break_C, Ins_Gauge_Break_Eff, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Break_C, Ins_Gauge_Break_Eff01, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Break_C, Mat_Gauge_Hud_Light, 0x04A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Gauge_Break_C, 0x04B0);
		}

		// class UBattle_Command_List00_C : public UAT_UICommandPaletteBar
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Command_List00__Battle_Command_List00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List00_C, Enter_01, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List00_C, Enter, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List00_C, Btn_Plat00, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List00_C, Icon_Item, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List00_C, Icon_Skill, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List00_C, Ins_Base_Icon, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List00_C, Ins_Base_List01, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List00_C, Ins_Eff_List, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List00_C, Ins_Eff_List02, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List00_C, Ins_Icon_Rare00, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List00_C, Txt_List, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List00_C, Txt_Num_Cost, 0x0498);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Command_List00_C, 0x04A0);
		}

		// class UKismetProceduralMeshLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__ProceduralMeshComponent__KismetProceduralMeshLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetProceduralMeshLibrary, 0x0028);
		}

		// class UProceduralMeshComponent : public UMeshComponent
		TEST_METHOD(Class__ProceduralMeshComponent__ProceduralMeshComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralMeshComponent, UnknownData_9JXK, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralMeshComponent, bUseComplexAsSimpleCollision, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralMeshComponent, bUseAsyncCooking, 0x0599);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralMeshComponent, UnknownData_3T8Z, 0x059A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralMeshComponent, ProcMeshBodySetup, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralMeshComponent, ProcMeshSections, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralMeshComponent, CollisionConvexElems, 0x05B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralMeshComponent, LocalBounds, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralMeshComponent, UnknownData_NXS0, 0x05E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralMeshComponent, AsyncBodySetupQueue, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralMeshComponent, UnknownData_EEZL, 0x05F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UProceduralMeshComponent, 0x0600);
		}

		// class UBattle_Assist_Parts_C : public UAT_UIBattleRescueParts
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Assist_Parts__Battle_Assist_Parts_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Assist_Parts_C, Start, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Assist_Parts_C, Img_Base_Assist, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Assist_Parts_C, Img_Base_Assist01, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Assist_Parts_C, Ins_Char_Mask, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Assist_Parts_C, Ins_Line_00, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Assist_Parts_C, Ins_Line_01, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Assist_Parts_C, Ins_Line_02, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Assist_Parts_C, Ins_Line_03, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Assist_Parts_C, Lang_Rescue, 0x0430);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Assist_Parts_C, 0x0438);
		}

		// class UBP_Dest_ShrubA_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_ShrubA__BP_Dest_ShrubA_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_ShrubA_C, 0x0820);
		}

		// class UBP_Dest_LowB_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_LowB__BP_Dest_LowB_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_LowB_C, 0x0820);
		}

		// class UBP_Dest_RockE_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_RockE__BP_Dest_RockE_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_RockE_C, 0x0820);
		}

		// class UFishingManager_BP_C : public UFishingManager
		TEST_METHOD(BlueprintGeneratedClass__FishingManager_BP__FishingManager_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFishingManager_BP_C, 0x0330);
		}

		// class UBP_BaseballGameManager_C : public UBaseballGameManager
		TEST_METHOD(BlueprintGeneratedClass__BP_BaseballGameManager__BP_BaseballGameManager_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_BaseballGameManager_C, 0x0340);
		}

		// class UAB_BaseballGame_Cpl001p1_C : public UAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__AB_BaseballGame_Cpl001p1__AB_BaseballGame_Cpl001p1_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_BaseballGame_Cpl001p1_C, UberGraphFrame, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_BaseballGame_Cpl001p1_C, AnimGraphNode_Root_D6D89D68418EC76C4904FAA8951B9C05, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_BaseballGame_Cpl001p1_C, AnimGraphNode_Slot_6E0A44DE46543D595DD0D4BE3DF704E2, 0x03A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAB_BaseballGame_Cpl001p1_C, 0x0410);
		}

		// class AFishingStartPoint_BP_C : public AFishingStartPoint
		TEST_METHOD(BlueprintGeneratedClass__FishingStartPoint_BP__FishingStartPoint_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AFishingStartPoint_BP_C, Sphere, 0x03D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFishingStartPoint_BP_C, 0x03D8);
		}

		// class UBP_AtrociousBattle3_Area06_020_C : public UATAtrociousEncountBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousBattle3_Area06_020__BP_AtrociousBattle3_Area06_020_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousBattle3_Area06_020_C, 0x0118);
		}

		// class UBP_AtrociousBattle2_Area09_C : public UATAtrociousEncountBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousBattle2_Area09__BP_AtrociousBattle2_Area09_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousBattle2_Area09_C, 0x0118);
		}

		// class UBP_AtrociousPhase3_Area16_C : public UATAtrociousPhaseBase
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousPhase3_Area16__BP_AtrociousPhase3_Area16_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousPhase3_Area16_C, 0x00F8);
		}

		// class UBP_AtrociousPhase2_Area09_C : public UATAtrociousPhaseBase
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousPhase2_Area09__BP_AtrociousPhase2_Area09_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousPhase2_Area09_C, 0x00F8);
		}

		// class UBP_AtrociousPhase3_Area02_C : public UATAtrociousPhaseBase
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousPhase3_Area02__BP_AtrociousPhase3_Area02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousPhase3_Area02_C, 0x00F8);
		}

		// class UBP_AtrociousPhase2_Area02_C : public UATAtrociousPhaseBase
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousPhase2_Area02__BP_AtrociousPhase2_Area02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousPhase2_Area02_C, 0x00F8);
		}

		// class UBP_AtrociousPhase3_Area01_C : public UATAtrociousPhaseBase
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousPhase3_Area01__BP_AtrociousPhase3_Area01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousPhase3_Area01_C, 0x00F8);
		}

		// class UUniqueDataCpl074C_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl074C__UniqueDataCpl074C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl074C_C, 0x0070);
		}

		// class UUniqueDataCpl074A_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl074A__UniqueDataCpl074A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl074A_C, 0x0070);
		}

		// class ABP_Door_C : public AATDoorVolume
		TEST_METHOD(BlueprintGeneratedClass__BP_Door__BP_Door_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Door_C, UberGraphFrame, 0x04E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Door_C, 0x04E8);
		}

		// class AAREA18_Always_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__AREA18_Always__AREA18_Always_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAREA18_Always_C, 0x0340);
		}

		// class UUniqueDataCpl032_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl032__UniqueDataCpl032_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl032_C, 0x0070);
		}

		// class AArea03_PLA_PRESENT_C01_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_PLA_PRESENT_C01__Area03_PLA_PRESENT_C01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_PLA_PRESENT_C01_C, 0x0340);
		}

		// class UUniqueDataCpl030_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl030__UniqueDataCpl030_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl030_C, 0x0070);
		}

		// class UUniqueDataCpl029_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl029__UniqueDataCpl029_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl029_C, 0x0070);
		}

		// class UUniqueDataCpl021_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl021__UniqueDataCpl021_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl021_C, 0x0070);
		}

		// class UUniqueDataCpl019_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl019__UniqueDataCpl019_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl019_C, 0x0070);
		}

		// class UUniqueDataCpl017_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl017__UniqueDataCpl017_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl017_C, 0x0070);
		}

		// class UUniqueDataCpl007_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl007__UniqueDataCpl007_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl007_C, 0x0070);
		}

		// class UUniqueDataCpl005_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl005__UniqueDataCpl005_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl005_C, 0x0070);
		}

		// class AMineralMiningPointRare_BP_C : public AMineralMiningPointRare
		TEST_METHOD(BlueprintGeneratedClass__MineralMiningPointRare_BP__MineralMiningPointRare_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AMineralMiningPointRare_BP_C, Billboard, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AMineralMiningPointRare_BP_C, DamageCollision, 0x05A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMineralMiningPointRare_BP_C, 0x05B0);
		}

		// class UBP_Cpl041EStatus_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl041EStatus_Atrocious__BP_Cpl041EStatus_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl041EStatus_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl041DStatus_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl041DStatus_Atrocious__BP_Cpl041DStatus_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl041DStatus_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl041BStatus_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl041BStatus_Atrocious__BP_Cpl041BStatus_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl041BStatus_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl039Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl039Status__BP_Cpl039Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl039Status_C, 0x00F0);
		}

		// class UBP_Cpl034CStatus_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl034CStatus_Atrocious__BP_Cpl034CStatus_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl034CStatus_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl034AStatus_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl034AStatus_Atrocious__BP_Cpl034AStatus_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl034AStatus_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl032Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl032Status_Atrocious__BP_Cpl032Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl032Status_Atrocious_C, 0x00F0);
		}

		// class AAREA03_MemoriesInfoMap_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__AREA03_MemoriesInfoMap__AREA03_MemoriesInfoMap_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAREA03_MemoriesInfoMap_C, 0x0340);
		}

		// class UStart_Save_Load_C : public UAT_UIStartSaveLoad
		TEST_METHOD(WidgetBlueprintGeneratedClass__Start_Save_Load__Start_Save_Load_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_C, Out, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_C, In, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_C, Start_Save_Load_Bar00_00, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_C, Start_Save_Load_Bar00_01, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_C, Start_Save_Load_Bar00_02, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_C, Xmenu_Bg, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_C, Xmenu_Scrollbar, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_C, Loop_Count, 0x0438);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStart_Save_Load_C, 0x043C);
		}

		// class UBP_C002A_ActionTableDamage_C : public UBP_C000A_ActionTableDamage_C
		TEST_METHOD(BlueprintGeneratedClass__BP_C002A_ActionTableDamage__BP_C002A_ActionTableDamage_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C002A_ActionTableDamage_C, 0x0168);
		}

		// class AAREA03_C01_EVT_MAIN_01002_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__AREA03_C01_EVT_MAIN_01002__AREA03_C01_EVT_MAIN_01002_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAREA03_C01_EVT_MAIN_01002_C, 0x0340);
		}

		// class ABP_Build_TowerF_Test_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Build_TowerF_Test__BP_Build_TowerF_Test_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerF_Test_C, S_Build_TowerPillarPartD_Test01, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerF_Test_C, S_Build_TowerPillarPartC_Test01, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerF_Test_C, S_Build_TowerPillarPartA_Test02, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerF_Test_C, S_Build_TowerPillarPartD_Test, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerF_Test_C, S_Build_TowerPillarPartE_Test, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerF_Test_C, S_Build_TowerPillarPartC_Test, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerF_Test_C, S_Build_TowerPillarPartA_Test01, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerF_Test_C, S_Build_TowerPillarPartA_Test, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerF_Test_C, S_Build_TowerGenSphereA_Test2, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerF_Test_C, S_Build_TowerGenSupport_Test4, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerF_Test_C, S_Build_TowerGenSupport_Test3, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerF_Test_C, S_Build_TowerGenSupport_Test2, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerF_Test_C, S_Build_TowerGenSphereB_Test2, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerF_Test_C, S_Build_TowerGenSupport_Test, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerF_Test_C, S_Build_TowerGenSphereB_Test, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerF_Test_C, S_Build_TowerGenSphereA_Test, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerF_Test_C, S_Build_TowerGenF_Test, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerF_Test_C, S_Build_TowerGenBase_Test, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerF_Test_C, DefaultSceneRoot, 0x03C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Build_TowerF_Test_C, 0x03D0);
		}

		// class ABP_Area03_Cliff_TopGrassL_N_C : public AGrassGenerationStaticMeshActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_TopGrassL_N__BP_Area03_Cliff_TopGrassL_N_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_TopGrassL_N_C, 0x0360);
		}

		// class UBP_Dest_RootD_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_RootD__BP_Dest_RootD_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_RootD_C, 0x0820);
		}

		// class UBP_Dest_RootE_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_RootE__BP_Dest_RootE_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_RootE_C, 0x0820);
		}

		// class UBP_Dest_TreeG_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_TreeG__BP_Dest_TreeG_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_TreeG_C, 0x0820);
		}

		// class AAREA03_C01_EVT_MAIN_ALWAYS_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__AREA03_C01_EVT_MAIN_ALWAYS__AREA03_C01_EVT_MAIN_ALWAYS_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAREA03_C01_EVT_MAIN_ALWAYS_C, 0x0340);
		}

		// class AC01_EVT_MAIN_01002_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__C01_EVT_MAIN_01002__C01_EVT_MAIN_01002_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, start_point, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, start_point2, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, Cpl002_Point, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, Cpl002, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, NpcTalkPoint, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, AutoMoveTrigger, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, C01_01002_Arrival_010, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, C01_01002_Arrival_020, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, bonfire_lightPoint_name, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, bonfire_icon_name, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, Cpl002_name, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, CacheQuestManager, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, arrival_name, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, FishTips, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, isCol, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, UnknownData_9JKT, 0x0541);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, save_index_010, 0x0544);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, save_index_020, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, save_index_021, 0x054C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, save_index_030, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, save_index_040, 0x0554);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, save_index_050, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, save_index_060, 0x055C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, Deer, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, door_name, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::AC01_EVT_MAIN_01002_C, talk_door, 0x0578);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AC01_EVT_MAIN_01002_C, 0x0580);
		}

		// class UFlyingDragon_AnimBP_C : public UNpcAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__FlyingDragon_AnimBP__FlyingDragon_AnimBP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, UberGraphFrame, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_Root_FABF4D64419B9DB260512BB6A43BAEA3, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_TransitionResult_13166B49485153112C1D9A98F48BDE0D, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_TransitionResult_6B7D1FC24A1009809666508B264BBEC7, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_TransitionResult_DBD3294D437CC0D734698D96D4CFBD98, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_TransitionResult_38EFFD1448B05828ED8A1692F986A361, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_SequencePlayer_749C4B93454957C06DCB918FF108E26E, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_StateResult_4D8828304FEEA6ACC8F4D1A15AFC0AD4, 0x0608);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_SequencePlayer_31AF80284AE85D66F74984A4CDF5400E, 0x0648);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_StateResult_D68292CF44EF7DCEABB9D68FFD72603F, 0x06E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_SequencePlayer_74FECB4C49D7FA7B75E0549B7DD4C3B6, 0x0728);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_StateResult_2ED97D03475CFF66664F76AF8473CCA8, 0x07C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_TransitionResult_B83310E249173A28A9675D881F3FC104, 0x0808);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_TransitionResult_A071D7224B3C5071FCF3C18D535D7596, 0x0850);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_TransitionResult_27DB154B434B32490BBB70BCB56F2DE9, 0x0898);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_TransitionResult_13D2DBF245F80308742E429D764B52C7, 0x08E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_TransitionResult_A643862F4443CC918B753C8490E2BDC3, 0x0928);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_TransitionResult_9921AA6B4A5016BA3E1A638F9104644A, 0x0970);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_TransitionResult_161EC4034715409A99CBDCB0F590EF44, 0x09B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_TransitionResult_52E2F3484C9E134F501CF399C9BAF333, 0x0A00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_TransitionResult_363B34604B544DCEC827A6A10DA5328F, 0x0A48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_TransitionResult_44462DBB45296E8999AB658ADF3C642A, 0x0A90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_TransitionResult_DF32F14845E8099A419E6A945BF24C5C, 0x0AD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_TransitionResult_64E12CF748146BFA1355C1BAEF959CC3, 0x0B20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_TransitionResult_58FAE6DA492CD2533A8BAFAEA5A783C6, 0x0B68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_TransitionResult_2E8969FF4CDCC6DEDDBFFF92697E9D4A, 0x0BB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_TransitionResult_3ABC0EFF491118E11A911FB6B4B9A08C, 0x0BF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_TransitionResult_2071DDC1433622CB29FB8882247C409C, 0x0C40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_TransitionResult_73F62AC1444EA18AFF3032B5061E23B3, 0x0C88);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_SequencePlayer_38396A6448189C89DD02418CABA54009, 0x0CD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_StateResult_E4E07FBB494EBB33123635849A0EFCDA, 0x0D70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_SequencePlayer_91453C274354B0A283E86F98699BCF77, 0x0DB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_StateResult_FAD955E6430B609ABEF6B5A7E8CCB9C9, 0x0E50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_SequencePlayer_18825E36447CA9F31DCFCAB57C71FFAC, 0x0E90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_StateResult_24D1A96B44A62C5264C6288C3924EAEB, 0x0F30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_SequencePlayer_30639A3A44E23C73568DEB82809FCA5E, 0x0F70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_StateResult_A5F358A54EAAEC9216FD89892ACEBC45, 0x1010);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_SequencePlayer_724E3C9A487B97B8AA042BB5524AD2C0, 0x1050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_StateResult_84CD129149F7FE9F7A81578FDCA29C9D, 0x10F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_SequencePlayer_988CA37747AC2C926881859C8E0FACF1, 0x1130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_StateResult_65B7B52743C4C71489D30D958305261B, 0x11D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_SequencePlayer_3464B29E41229658A0D76F8D8620780D, 0x1210);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_StateResult_B6EDF3F34648A6B9E2213CA9B37FF979, 0x12B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_SequencePlayer_F2B1B8FB4858636932F8639B152818C5, 0x12F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_StateResult_DFB1A7BF4A0A7ECB6C7FDD883A226F34, 0x1390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_SequencePlayer_70B8CC5D4CD4D6432E7FFDBEAC74CD1E, 0x13D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_StateResult_2691E03A4BCA6EC1EBC9DB9F05379F89, 0x1470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_SequencePlayer_A9BDBD634C9A3818B9C82F809701FF16, 0x14B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_StateResult_D4B1D09B47D0D83D48DB80B99C6607FE, 0x1550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_SequencePlayer_06F4D10F425F33BF0F5C85AAD025E4A5, 0x1590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_StateResult_408578794234B197D2517089D7EC0678, 0x1630);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_SequencePlayer_3C6804E048F0543FD15C709C223CE2D5, 0x1670);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_StateResult_678714B7473C339F21824C8DA6D915E5, 0x1710);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_StateMachine_92EB15C34B90B2BD3BB46FAEDAEC63EE, 0x1750);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_StateResult_92372307480B730C75EDBEB10313F7B1, 0x1830);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_StateMachine_128F249241E70DFE0F14B69501D98AFA, 0x1870);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_Slot_4012C90043EF8DA00CE151B701B0CB7B, 0x1950);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_LayeredBoneBlend_6B752FB5465760FC88ED78B383DFB7AB, 0x19B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_SaveCachedPose_C3FB0AC64B928DBF6ED4B49DEC63D497, 0x1A90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_UseCachedPose_6A47752A45ACC428D39A81ABC88CBBAC, 0x1B68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFlyingDragon_AnimBP_C, AnimGraphNode_UseCachedPose_973EA4E54A4FE999CA6486B422FE9F24, 0x1BB0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFlyingDragon_AnimBP_C, 0x1BF8);
		}

		// class UConsoleSettings : public UObject
		TEST_METHOD(Class__EngineSettings__ConsoleSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UConsoleSettings, MaxScrollbackSize, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UConsoleSettings, UnknownData_6ORI, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UConsoleSettings, ManualAutoCompleteList, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UConsoleSettings, AutoCompleteMapPaths, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UConsoleSettings, BackgroundOpacityPercentage, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UConsoleSettings, bOrderTopToBottom, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UConsoleSettings, UnknownData_4OVT, 0x0055);
			CHEAT_GEAR_CHECK_OFFSET(CG::UConsoleSettings, InputColor, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UConsoleSettings, HistoryColor, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UConsoleSettings, AutoCompleteCommandColor, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UConsoleSettings, AutoCompleteCVarColor, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::UConsoleSettings, AutoCompleteFadedColor, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UConsoleSettings, UnknownData_X9JO, 0x006C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UConsoleSettings, 0x0070);
		}

		// class UGameMapsSettings : public UObject
		TEST_METHOD(Class__EngineSettings__GameMapsSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameMapsSettings, EditorStartupMap, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameMapsSettings, LocalMapOptions, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameMapsSettings, TransitionMap, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameMapsSettings, bUseSplitscreen, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameMapsSettings, TwoPlayerSplitscreenLayout, 0x0069);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameMapsSettings, ThreePlayerSplitscreenLayout, 0x006A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameMapsSettings, FourPlayerSplitscreenLayout, 0x006B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameMapsSettings, bOffsetPlayerGamepadIds, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameMapsSettings, UnknownData_U8HE, 0x006D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameMapsSettings, GameInstanceClass, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameMapsSettings, GameDefaultMap, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameMapsSettings, ServerDefaultMap, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameMapsSettings, GlobalDefaultGameMode, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameMapsSettings, GlobalDefaultServerGameMode, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameMapsSettings, GameModeMapPrefixes, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameMapsSettings, GameModeClassAliases, 0x00F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameMapsSettings, 0x0108);
		}

		// class UGameNetworkManagerSettings : public UObject
		TEST_METHOD(Class__EngineSettings__GameNetworkManagerSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameNetworkManagerSettings, MinDynamicBandwidth, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameNetworkManagerSettings, MaxDynamicBandwidth, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameNetworkManagerSettings, TotalNetBandwidth, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameNetworkManagerSettings, BadPingThreshold, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameNetworkManagerSettings, UnknownData_MDC6, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameNetworkManagerSettings, StandbyRxCheatTime, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameNetworkManagerSettings, StandbyTxCheatTime, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameNetworkManagerSettings, PercentMissingForRxStandby, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameNetworkManagerSettings, PercentMissingForTxStandby, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameNetworkManagerSettings, PercentForBadPing, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameNetworkManagerSettings, JoinInProgressStandbyWaitTime, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameNetworkManagerSettings, UnknownData_QIB2, 0x0054);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameNetworkManagerSettings, 0x0058);
		}

		// class UGameSessionSettings : public UObject
		TEST_METHOD(Class__EngineSettings__GameSessionSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameSessionSettings, MaxSpectators, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameSessionSettings, MaxPlayers, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameSessionSettings, UnknownData_NNWN, 0x0031);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameSessionSettings, 0x0038);
		}

		// class UGeneralEngineSettings : public UObject
		TEST_METHOD(Class__EngineSettings__GeneralEngineSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeneralEngineSettings, 0x0028);
		}

		// class UGeneralProjectSettings : public UObject
		TEST_METHOD(Class__EngineSettings__GeneralProjectSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralProjectSettings, CompanyName, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralProjectSettings, CompanyDistinguishedName, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralProjectSettings, CopyrightNotice, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralProjectSettings, Description, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralProjectSettings, Homepage, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralProjectSettings, LicensingTerms, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralProjectSettings, PrivacyPolicy, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralProjectSettings, ProjectID, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralProjectSettings, ProjectName, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralProjectSettings, ProjectVersion, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralProjectSettings, SupportContact, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralProjectSettings, ProjectDisplayedTitle, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralProjectSettings, ProjectDebugTitleInfo, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralProjectSettings, bShouldWindowPreserveAspectRatio, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralProjectSettings, bUseBorderlessWindow, 0x0109);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralProjectSettings, bStartInVR, 0x010A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralProjectSettings, bStartInAR, 0x010B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralProjectSettings, bSupportAR, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralProjectSettings, bAllowWindowResize, 0x010D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralProjectSettings, bAllowClose, 0x010E);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralProjectSettings, bAllowMaximize, 0x010F);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralProjectSettings, bAllowMinimize, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGeneralProjectSettings, UnknownData_M3F0, 0x0111);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeneralProjectSettings, 0x0118);
		}

		// class UHudSettings : public UObject
		TEST_METHOD(Class__EngineSettings__HudSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UHudSettings, UnknownData_HWDX, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UHudSettings, DebugDisplay, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHudSettings, 0x0040);
		}

		// class USetBehaviorTask_C : public UBTTask_BlueprintBase
		TEST_METHOD(BlueprintGeneratedClass__SetBehaviorTask__SetBehaviorTask_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USetBehaviorTask_C, UberGraphFrame, 0x00A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USetBehaviorTask_C, 0x00A8);
		}

		// class AVariation00Cpl057C_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Cpl057C__Variation00Cpl057C_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Cpl057C_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Cpl057C_C, 0x0380);
		}

		// class AVariation00Cpl004B_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Cpl004B__Variation00Cpl004B_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Cpl004B_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Cpl004B_C, 0x0380);
		}

		// class AForm00Cpl058B_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Cpl058B__Form00Cpl058B_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Cpl058B_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Cpl058B_C, 0x0380);
		}

		// class AFacial00Cpl056A_C : public AATFacialParts
		TEST_METHOD(BlueprintGeneratedClass__Facial00Cpl056A__Facial00Cpl056A_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AFacial00Cpl056A_C, DefaultSceneRoot, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFacial00Cpl056A_C, 0x03E0);
		}

		// class AAT_Character_cpl056Ac01_BP_C : public AAT_Character_cpl056A_BP_C
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl056Ac01_BP__AT_Character_cpl056Ac01_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl056Ac01_BP_C, 0x0FA8);
		}

		// class AFacial00Cpl058A_C : public AATFacialParts
		TEST_METHOD(BlueprintGeneratedClass__Facial00Cpl058A__Facial00Cpl058A_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AFacial00Cpl058A_C, DefaultSceneRoot, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFacial00Cpl058A_C, 0x03E0);
		}

		// class AAT_Character_cpl004p1c01_BP_C : public AATCharacterCpl004c01
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl004p1c01_BP__AT_Character_cpl004p1c01_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl004p1c01_BP_C, UberGraphFrame, 0x0FA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl004p1c01_BP_C, AtomCueSheetLoader, 0x0FA8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl004p1c01_BP_C, 0x0FB0);
		}

		// class AAT_Character_cpl014c03_BP_C : public AATCharacterCpl014c03
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl014c03_BP__AT_Character_cpl014c03_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl014c03_BP_C, AtomCueSheetLoader, 0x0FA0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl014c03_BP_C, 0x0FA8);
		}

		// class AFacial00Cpl059C_C : public AATFacialParts
		TEST_METHOD(BlueprintGeneratedClass__Facial00Cpl059C__Facial00Cpl059C_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AFacial00Cpl059C_C, DefaultSceneRoot, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFacial00Cpl059C_C, 0x03E0);
		}

		// class AFacial00Cpl059B_C : public AATFacialParts
		TEST_METHOD(BlueprintGeneratedClass__Facial00Cpl059B__Facial00Cpl059B_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AFacial00Cpl059B_C, DefaultSceneRoot, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFacial00Cpl059B_C, 0x03E0);
		}

		// class AForm00Cpl059A_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Cpl059A__Form00Cpl059A_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Cpl059A_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Cpl059A_C, 0x0380);
		}

		// class AForm00Cpl002_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Cpl002__Form00Cpl002_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Cpl002_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Cpl002_C, 0x0380);
		}

		// class AForm00Cpl057B_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Cpl057B__Form00Cpl057B_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Cpl057B_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Cpl057B_C, 0x0380);
		}

		// class AFacial00Cpl075B_C : public AATFacialParts
		TEST_METHOD(BlueprintGeneratedClass__Facial00Cpl075B__Facial00Cpl075B_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AFacial00Cpl075B_C, DefaultSceneRoot, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFacial00Cpl075B_C, 0x03E0);
		}

		// class AForm00Cpl057C_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Cpl057C__Form00Cpl057C_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Cpl057C_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Cpl057C_C, 0x0380);
		}

		// class AFacial00Cpl075A_C : public AATFacialParts
		TEST_METHOD(BlueprintGeneratedClass__Facial00Cpl075A__Facial00Cpl075A_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AFacial00Cpl075A_C, DefaultSceneRoot, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFacial00Cpl075A_C, 0x03E0);
		}

		// class AVariation00Cpl002_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Cpl002__Variation00Cpl002_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Cpl002_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Cpl002_C, 0x0380);
		}

		// class UDefaultLevelSequenceInstanceData : public UObject
		TEST_METHOD(Class__LevelSequence__DefaultLevelSequenceInstanceData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDefaultLevelSequenceInstanceData, UnknownData_4I22, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDefaultLevelSequenceInstanceData, TransformOriginActor, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDefaultLevelSequenceInstanceData, UnknownData_SVCJ, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDefaultLevelSequenceInstanceData, TransformOrigin, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDefaultLevelSequenceInstanceData, 0x0070);
		}

		// class ULevelSequence : public UMovieSceneSequence
		TEST_METHOD(Class__LevelSequence__LevelSequence)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelSequence, MovieScene, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelSequence, DirectorClass, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelSequence, ObjectReferences, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelSequence, BindingReferences, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelSequence, PossessedObjects, 0x0448);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelSequence, 0x0498);
		}

		// class ULevelSequenceBurnInInitSettings : public UObject
		TEST_METHOD(Class__LevelSequence__LevelSequenceBurnInInitSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelSequenceBurnInInitSettings, 0x0028);
		}

		// class ULevelSequenceBurnInOptions : public UObject
		TEST_METHOD(Class__LevelSequence__LevelSequenceBurnInOptions)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelSequenceBurnInOptions, bUseBurnIn, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelSequenceBurnInOptions, UnknownData_UK9M, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelSequenceBurnInOptions, BurnInClass, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelSequenceBurnInOptions, Settings, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelSequenceBurnInOptions, 0x0050);
		}

		// class ALevelSequenceActor : public AActor
		TEST_METHOD(Class__LevelSequence__LevelSequenceActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ALevelSequenceActor, UnknownData_O1C7, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALevelSequenceActor, bAutoPlay, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALevelSequenceActor, UnknownData_QGDD, 0x0341);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALevelSequenceActor, PlaybackSettings, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALevelSequenceActor, SequencePlayer, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALevelSequenceActor, LevelSequence, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALevelSequenceActor, AdditionalEventReceivers, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALevelSequenceActor, BurnInOptions, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALevelSequenceActor, BindingOverrides, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALevelSequenceActor, bOverrideInstanceData, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALevelSequenceActor, UnknownData_G9MD, 0x03C9);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALevelSequenceActor, DefaultInstanceData, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALevelSequenceActor, BurnInInstance, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALevelSequenceActor, 0x03E0);
		}

		// class ULevelSequenceBurnIn : public UUserWidget
		TEST_METHOD(Class__LevelSequence__LevelSequenceBurnIn)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelSequenceBurnIn, FrameInformation, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelSequenceBurnIn, LevelSequenceActor, 0x0290);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelSequenceBurnIn, 0x0298);
		}

		// class ULevelSequenceDirector : public UObject
		TEST_METHOD(Class__LevelSequence__LevelSequenceDirector)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelSequenceDirector, Player, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelSequenceDirector, 0x0030);
		}

		// class ULegacyLevelSequenceDirectorBlueprint : public UBlueprint
		TEST_METHOD(Class__LevelSequence__LegacyLevelSequenceDirectorBlueprint)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULegacyLevelSequenceDirectorBlueprint, 0x00E0);
		}

		// class ULevelSequencePlayer : public UMovieSceneSequencePlayer
		TEST_METHOD(Class__LevelSequence__LevelSequencePlayer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelSequencePlayer, OnCameraCut, 0x07C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelSequencePlayer, UnknownData_A27Q, 0x07D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelSequencePlayer, AdditionalEventReceivers, 0x0808);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULevelSequencePlayer, UnknownData_XJME, 0x0818);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULevelSequencePlayer, 0x0868);
		}

		// class UBP_C000A_LongRangeAttack_E_C : public UATActLongRangeCombo
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_LongRangeAttack_E__BP_C000A_LongRangeAttack_E_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_LongRangeAttack_E_C, 0x0150);
		}

		// class UBP_C075_ActionTableBasic_C : public UCharacterActionClassTable
		TEST_METHOD(BlueprintGeneratedClass__BP_C075_ActionTableBasic__BP_C075_ActionTableBasic_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C075_ActionTableBasic_C, 0x0168);
		}

		// class UBP_C056A_DamageHold_C : public UATActDmgHold
		TEST_METHOD(BlueprintGeneratedClass__BP_C056A_DamageHold__BP_C056A_DamageHold_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C056A_DamageHold_C, 0x0158);
		}

		// class AVariation00Cpl014C_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Cpl014C__Variation00Cpl014C_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Cpl014C_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Cpl014C_C, 0x0380);
		}

		// class UBP_C075A_SkillMoveTeleport_C : public UATActSkillMoveTeleport
		TEST_METHOD(BlueprintGeneratedClass__BP_C075A_SkillMoveTeleport__BP_C075A_SkillMoveTeleport_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C075A_SkillMoveTeleport_C, 0x0178);
		}

		// class UBP_C056_ActionTableDamage_C : public UBP_C000A_ActionTableDamage_C
		TEST_METHOD(BlueprintGeneratedClass__BP_C056_ActionTableDamage__BP_C056_ActionTableDamage_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C056_ActionTableDamage_C, 0x0168);
		}

		// class ABP_C001A_S_SKL001_LightAnim_C : public ASkeletalMeshActor
		TEST_METHOD(BlueprintGeneratedClass__BP_C001A_S_SKL001_LightAnim__BP_C001A_S_SKL001_LightAnim_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_C001A_S_SKL001_LightAnim_C, 0x03C0);
		}

		// class ABP_C001A_S_SKL001_Light_C : public AATDirectionalLight
		TEST_METHOD(BlueprintGeneratedClass__BP_C001A_S_SKL001_Light__BP_C001A_S_SKL001_Light_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_C001A_S_SKL001_Light_C, 0x0398);
		}

		// class UAB_RidingFriend_C : public UATCharacterAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__AB_RidingFriend__AB_RidingFriend_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RidingFriend_C, UberGraphFrame, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RidingFriend_C, AnimGraphNode_SaveCachedPose_4E1CB6D54665A72445299ABEB81E3C02, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RidingFriend_C, AnimGraphNode_BlendListByBool_78E9E4BB4273554B4100678E04F92271, 0x0640);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RidingFriend_C, AnimGraphNode_ApplyAdditive_F24A9EFF45590F82DC37DD804C248532, 0x0720);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RidingFriend_C, AnimGraphNode_SequencePlayer_C9AA3FE640DA974948EFAE9D2967239E, 0x0810);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RidingFriend_C, AnimGraphNode_StateResult_3B644B514D11B4B17763CA95F806E71E, 0x08B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RidingFriend_C, AnimGraphNode_StateMachine_7C3F34FF4F6AE56973E07EAA7CA2A9B5, 0x08F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RidingFriend_C, AnimGraphNode_Root_C47741E64D190B2D15D64F84ECB33CDB, 0x09D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RidingFriend_C, AnimGraphNode_SequencePlayer_225F749345B01CE37EC95988A4694E22, 0x0A10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RidingFriend_C, AnimGraphNode_UseCachedPose_85AB7841437FFF582B9877B8CD18B192, 0x0AB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RidingFriend_C, AnimGraphNode_UseCachedPose_71CDD72B4B89D4A0DB774E87D40340BF, 0x0AF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RidingFriend_C, AnimGraphNode_Slot_1CF3C3114F4DE826B55B468FBD352721, 0x0B40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RidingFriend_C, AnimGraphNode_SaveCachedPose_104C67D64F28E2F73F055584E573BC06, 0x0BA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RidingFriend_C, AnimGraphNode_UseCachedPose_D0E9E042499DE66D5AB2BBBC2889FE09, 0x0C80);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAB_RidingFriend_C, 0x0CC8);
		}

		// class UBP_C056A_SkillMoveTeleport_C : public UATActSkillMoveTeleport
		TEST_METHOD(BlueprintGeneratedClass__BP_C056A_SkillMoveTeleport__BP_C056A_SkillMoveTeleport_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C056A_SkillMoveTeleport_C, 0x0178);
		}

		// class UAnimNotifyState_AttackCapsule_BP_C : public UAnimNotifyState_AttackCapsule
		TEST_METHOD(BlueprintGeneratedClass__AnimNotifyState_AttackCapsule_BP__AnimNotifyState_AttackCapsule_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_AttackCapsule_BP_C, 0x0138);
		}

		// class UAnimNotifyState_Attack_BP_C : public UAnimNotifyState_Attack
		TEST_METHOD(BlueprintGeneratedClass__AnimNotifyState_Attack_BP__AnimNotifyState_Attack_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_Attack_BP_C, 0x0130);
		}

		// class UImgMediaSource : public UBaseMediaSource
		TEST_METHOD(Class__ImgMedia__ImgMediaSource)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UImgMediaSource, FrameRateOverride, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UImgMediaSource, ProxyOverride, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UImgMediaSource, SequencePath, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImgMediaSource, 0x0060);
		}

		// class AA008c_BP_C : public AAnimalMob_Pawn_C
		TEST_METHOD(BlueprintGeneratedClass__A008c_BP__A008c_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AA008c_BP_C, AnimalComponentBase, 0x0460);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AA008c_BP_C, 0x0468);
		}

		// class UBP_C000A_DamageDeathLP_C : public UATActDmgDeathLP
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_DamageDeathLP__BP_C000A_DamageDeathLP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_DamageDeathLP_C, 0x0178);
		}

		// class UBP_C058A_ActionTableDamage_C : public UBP_C000A_ActionTableDamage_C
		TEST_METHOD(BlueprintGeneratedClass__BP_C058A_ActionTableDamage__BP_C058A_ActionTableDamage_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C058A_ActionTableDamage_C, 0x0168);
		}

		// class UMof01_AnimBP_C : public UMob00_AnimBP_C
		TEST_METHOD(AnimBlueprintGeneratedClass__Mof01_AnimBP__Mof01_AnimBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMof01_AnimBP_C, 0x5AF9);
		}

		// class UMom01_AnimBP_C : public UMob00_AnimBP_C
		TEST_METHOD(AnimBlueprintGeneratedClass__Mom01_AnimBP__Mom01_AnimBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMom01_AnimBP_C, 0x5AF9);
		}

		// class AForm00Cpl004B_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Cpl004B__Form00Cpl004B_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Cpl004B_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Cpl004B_C, 0x0380);
		}

		// class UBattle_Cutin_C : public UAT_UIBattleCutinChild
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Cutin__Battle_Cutin_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, UberGraphFrame, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ssfinish, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Escape, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Backattack, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Finish, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, battle, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, All_Cutin_Ssfinish, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Img_Btl_Light, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Batk00, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Batk00_Shdw, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Batk01, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Batk01_Shdw, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Batk10, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Batk10_Shdw, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Btl00, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Btl00_Shdw, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Btl01, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Btl01_Shdw, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Btl02, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Btl02_Shdw, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Btl03, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Btl03_Shdw, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Btl04, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Btl04_Shdw, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Btl05, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Btl05_Shdw, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Btl06, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Btl06_Shdw, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Cutin_Eff00, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Cutin_Eff01_00, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Cutin_Eff01_01, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Cutin_Eff02, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Cutin_Eff03, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Cutin_Eff04, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Cutin_Eff05, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Cutin_Eff06_00, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Cutin_Eff06_01, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Cutin_Eff06_02, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Cutin_Eff07_00, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Cutin_Eff07_01, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Cutin_Eff08_00, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Cutin_Eff08_01, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Elc_Left00, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Elc_Left01, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Elc_Right00, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Elc_Right01, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Esc00, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Esc00_Eff, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Esc00_Shdw, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Fin00, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Fin00_Shdw, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Fin01, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Fin01_Shdw, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Fin02, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Fin02_Shdw, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Fin03, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Fin03_Shdw, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Fin04, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Fin04_Shdw, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Fin05, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Fin05_Shdw, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Ssfinish, 0x05B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Ssfinish_Eff, 0x05C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Ssfinish_Mask, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Sun01_00, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Ins_Sun01_01, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Cutin_C, Pnl_Sun, 0x05E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Cutin_C, 0x05E8);
		}

		// class UAnimNotifyState_PadVibration_C : public UATAnimNotifyState_PadVibration
		TEST_METHOD(BlueprintGeneratedClass__AnimNotifyState_PadVibration__AnimNotifyState_PadVibration_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_PadVibration_C, 0x0038);
		}

		// class AAT_Character_cpl057Ac02_BP_C : public AAT_Character_cpl057A_BP_C
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl057Ac02_BP__AT_Character_cpl057Ac02_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl057Ac02_BP_C, 0x0FB0);
		}

		// class AFacial00Cpl014A_C : public AATFacialParts
		TEST_METHOD(BlueprintGeneratedClass__Facial00Cpl014A__Facial00Cpl014A_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AFacial00Cpl014A_C, DefaultSceneRoot, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFacial00Cpl014A_C, 0x03E0);
		}

		// class AAT_Character_cpl001_BP_C : public AATCharacterCpl001
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl001_BP__AT_Character_cpl001_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl001_BP_C, AtomCueSheetLoader, 0x0FA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl001_BP_C, B_Nimbus, 0x0FA8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl001_BP_C, 0x0FB0);
		}

		// class AAnimalMob_Pawn_C : public AAT_MobAnimalBase
		TEST_METHOD(BlueprintGeneratedClass__AnimalMob_Pawn__AnimalMob_Pawn_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAnimalMob_Pawn_C, FieldItemTable, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAnimalMob_Pawn_C, AnimalAccessPoint, 0x0458);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAnimalMob_Pawn_C, 0x0460);
		}

		// class AVariation00Cpl056C_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Cpl056C__Variation00Cpl056C_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Cpl056C_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Cpl056C_C, 0x0380);
		}

		// class AVariation00Cpl056A_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Cpl056A__Variation00Cpl056A_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Cpl056A_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Cpl056A_C, 0x0380);
		}

		// class UBP_C001A_CP_SKL001_Action_C : public UATActSkillCooperation
		TEST_METHOD(BlueprintGeneratedClass__BP_C001A_CP_SKL001_Action__BP_C001A_CP_SKL001_Action_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C001A_CP_SKL001_Action_C, 0x0320);
		}

		// class UBP_C001A_ComboAssistShort_C : public UATActSupportComboAssistShort
		TEST_METHOD(BlueprintGeneratedClass__BP_C001A_ComboAssistShort__BP_C001A_ComboAssistShort_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C001A_ComboAssistShort_C, 0x01A8);
		}

		// class UAnimNotifyState_SpawnProjectileBeamBP_C : public UAnimNotify_SpawnProjectileBeam
		TEST_METHOD(BlueprintGeneratedClass__AnimNotifyState_SpawnProjectileBeamBP__AnimNotifyState_SpawnProjectileBeamBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_SpawnProjectileBeamBP_C, 0x0078);
		}

		// class UAnimNotify_ComboAssist_C : public UAnimNotify_ComboAssist
		TEST_METHOD(BlueprintGeneratedClass__AnimNotify_ComboAssist__AnimNotify_ComboAssist_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_ComboAssist_C, 0x0038);
		}

		// class UAB_C001_MachineRIding_C : public UAB_RIdingCharacter_C
		TEST_METHOD(AnimBlueprintGeneratedClass__AB_C001_MachineRIding__AB_C001_MachineRIding_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAB_C001_MachineRIding_C, 0x2A00);
		}

		// class UAB_C001_CarRiding_C : public URidingAnimBP_C
		TEST_METHOD(AnimBlueprintGeneratedClass__AB_C001_CarRiding__AB_C001_CarRiding_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAB_C001_CarRiding_C, 0x1824);
		}

		// class AForm00Npc026_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Npc026__Form00Npc026_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Npc026_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Npc026_C, 0x0380);
		}

		// class AB_NimbusSpline_C : public AATFlyingNimbusSpline
		TEST_METHOD(BlueprintGeneratedClass__B_NimbusSpline__B_NimbusSpline_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AB_NimbusSpline_C, Forward, 0x0350);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AB_NimbusSpline_C, 0x0358);
		}

		// class UBP_BattleGroupAI_EnC0501_C : public UBattleGroupAIInfo
		TEST_METHOD(BlueprintGeneratedClass__BP_BattleGroupAI_EnC0501__BP_BattleGroupAI_EnC0501_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_BattleGroupAI_EnC0501_C, 0x00A0);
		}

		// class UBP_C064A_ActionTableAttack_C : public UBP_C000A_ActionTableAttack_C
		TEST_METHOD(BlueprintGeneratedClass__BP_C064A_ActionTableAttack__BP_C064A_ActionTableAttack_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C064A_ActionTableAttack_C, 0x0168);
		}

		// class AFacial00Cpl064A_C : public AATFacialParts
		TEST_METHOD(BlueprintGeneratedClass__Facial00Cpl064A__Facial00Cpl064A_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AFacial00Cpl064A_C, DefaultSceneRoot, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFacial00Cpl064A_C, 0x03E0);
		}

		// class UBP_Cpl028BStatus_enemy_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl028BStatus_enemy__BP_Cpl028BStatus_enemy_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl028BStatus_enemy_C, 0x00F0);
		}

		// class UBP_Cpl028BStatus_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl028BStatus__BP_Cpl028BStatus_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl028BStatus_C, 0x00F0);
		}

		// class UBP_Cpl028Status_SS1_Learning_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl028Status_SS1_Learning__BP_Cpl028Status_SS1_Learning_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl028Status_SS1_Learning_C, 0x00F0);
		}

		// class UBP_Cpl028Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl028Status__BP_Cpl028Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl028Status_C, 0x00F0);
		}

		// class UFighting_Power_Param_C056Ac01_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C056Ac01__Fighting_Power_Param_C056Ac01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C056Ac01_C, 0x0060);
		}

		// class UFighting_Power_Param_C075Ac03_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C075Ac03__Fighting_Power_Param_C075Ac03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C075Ac03_C, 0x0060);
		}

		// class UFighting_Power_Param_C058Ac01_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C058Ac01__Fighting_Power_Param_C058Ac01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C058Ac01_C, 0x0060);
		}

		// class UFighting_Power_Param_C028B_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C028B__Fighting_Power_Param_C028B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C028B_C, 0x0060);
		}

		// class UFighting_Power_Param_C004Ac04_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C004Ac04__Fighting_Power_Param_C004Ac04_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C004Ac04_C, 0x0060);
		}

		// class UFighting_Power_Param_C004Ac01_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C004Ac01__Fighting_Power_Param_C004Ac01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C004Ac01_C, 0x0060);
		}

		// class UFighting_Power_Param_C003Z_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C003Z__Fighting_Power_Param_C003Z_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C003Z_C, 0x0060);
		}

		// class UFighting_Power_Param_C003A_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C003A__Fighting_Power_Param_C003A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C003A_C, 0x0060);
		}

		// class UUniqueDataNpc021_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc021__UniqueDataNpc021_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc021_C, 0x0070);
		}

		// class UUniqueDataNpc011_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc011__UniqueDataNpc011_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc011_C, 0x0070);
		}

		// class UUniqueDataNpc010_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc010__UniqueDataNpc010_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc010_C, 0x0070);
		}

		// class UUniqueDataNpc006_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc006__UniqueDataNpc006_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc006_C, 0x0070);
		}

		// class UUniqueDataCpl057A_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl057A__UniqueDataCpl057A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl057A_C, 0x0070);
		}

		// class UUniqueDataCpl043_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl043__UniqueDataCpl043_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl043_C, 0x0070);
		}

		// class UUniqueDataCpl042_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl042__UniqueDataCpl042_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl042_C, 0x0070);
		}

		// class UBP_AtrociousSubQuest3_Area06_C : public UATAtrociousSubQuest
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousSubQuest3_Area06__BP_AtrociousSubQuest3_Area06_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousSubQuest3_Area06_C, 0x00B0);
		}

		// class UBP_AtrociousSubQuest3_Area04_C : public UATAtrociousSubQuest
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousSubQuest3_Area04__BP_AtrociousSubQuest3_Area04_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousSubQuest3_Area04_C, 0x00B0);
		}

		// class UBP_AtrociousSubQuest2_Area04_C : public UATAtrociousSubQuest
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousSubQuest2_Area04__BP_AtrociousSubQuest2_Area04_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousSubQuest2_Area04_C, 0x00B0);
		}

		// class UBP_AtrociousSubQuest3_Area02_C : public UATAtrociousSubQuest
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousSubQuest3_Area02__BP_AtrociousSubQuest3_Area02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousSubQuest3_Area02_C, 0x00B0);
		}

		// class UUniqueDataNpc075_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc075__UniqueDataNpc075_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc075_C, 0x0070);
		}

		// class UUniqueDataNpc074_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc074__UniqueDataNpc074_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc074_C, 0x0070);
		}

		// class UUniqueDataNpc073_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc073__UniqueDataNpc073_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc073_C, 0x0070);
		}

		// class UUniqueDataNpc070_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc070__UniqueDataNpc070_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc070_C, 0x0070);
		}

		// class UUniqueDataNpc059_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc059__UniqueDataNpc059_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc059_C, 0x0070);
		}

		// class UUniqueDataNpc057_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc057__UniqueDataNpc057_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc057_C, 0x0070);
		}

		// class UMgame_Win00_C : public UAT_UIMiniGameWin00
		TEST_METHOD(WidgetBlueprintGeneratedClass__Mgame_Win00__Mgame_Win00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Win00_C, UberGraphFrame, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Win00_C, In, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Win00_C, Out, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Win00_C, Ins_Base01, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Win00_C, Ins_Base_Hexa, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Win00_C, Ins_Base_Hexa_Shdw, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Win00_C, Ins_Deco00_03, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Win00_C, Ins_Deco00_03_Shdw, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Win00_C, Ins_Iconpnt01, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Win00_C, Ins_Win01, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Win00_C, Mgame_Bar00, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Win00_C, Mgame_Bar00_C_1, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Win00_C, Mgame_Bar00_C_2, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Win00_C, Mgame_Bar00_C_3, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Win00_C, Mgame_Bar00_C_10, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Win00_C, Txt_Cap00, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Win00_C, Txt_Page, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Win00_C, Xmenu_Arrow_L, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Win00_C, Xmenu_Arrow_R, 0x04F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMgame_Win00_C, 0x04F8);
		}

		// class UBP_Cpl074StatusC01_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl074StatusC01__BP_Cpl074StatusC01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl074StatusC01_C, 0x00F0);
		}

		// class UBP_Cpl071Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl071Status__BP_Cpl071Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl071Status_C, 0x00F0);
		}

		// class UBP_Cpl075StatusC02_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl075StatusC02__BP_Cpl075StatusC02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl075StatusC02_C, 0x00F0);
		}

		// class UBP_Cpl075StatusC01_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl075StatusC01__BP_Cpl075StatusC01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl075StatusC01_C, 0x00F0);
		}

		// class UBP_Cpl065StatusC02_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl065StatusC02__BP_Cpl065StatusC02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl065StatusC02_C, 0x00F0);
		}

		// class UBP_Cpl065StatusC01_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl065StatusC01__BP_Cpl065StatusC01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl065StatusC01_C, 0x00F0);
		}

		// class UBP_Cpl064StatusC03_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl064StatusC03__BP_Cpl064StatusC03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl064StatusC03_C, 0x00F0);
		}

		// class UBP_Cpl064StatusC02_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl064StatusC02__BP_Cpl064StatusC02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl064StatusC02_C, 0x00F0);
		}

		// class UBP_Cpl061Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl061Status_Atrocious__BP_Cpl061Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl061Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl060Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl060Status_Atrocious__BP_Cpl060Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl060Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl012Status_Learning_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl012Status_Learning__BP_Cpl012Status_Learning_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl012Status_Learning_C, 0x00F0);
		}

		// class UBP_Cpl012Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl012Status_Atrocious__BP_Cpl012Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl012Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl010Status_enemy_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl010Status_enemy__BP_Cpl010Status_enemy_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl010Status_enemy_C, 0x00F0);
		}

		// class UBP_Cpl008Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl008Status__BP_Cpl008Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl008Status_C, 0x00F0);
		}

		// class UBP_Cpl007Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl007Status__BP_Cpl007Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl007Status_C, 0x00F0);
		}

		// class UBP_Cpl006Status_enemy_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl006Status_enemy__BP_Cpl006Status_enemy_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl006Status_enemy_C, 0x00F0);
		}

		// class UBP_Cpl005Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl005Status__BP_Cpl005Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl005Status_C, 0x00F0);
		}

		// class UBP_Cpl004StatusC03_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl004StatusC03__BP_Cpl004StatusC03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl004StatusC03_C, 0x00F0);
		}

		// class UBP_Cpl004StatusC02_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl004StatusC02__BP_Cpl004StatusC02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl004StatusC02_C, 0x00F0);
		}

		// class UBP_Cpl003BStatus_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl003BStatus_Atrocious__BP_Cpl003BStatus_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl003BStatus_Atrocious_C, 0x00F0);
		}

		// class AArea03_Env_Cliff_Dest_00_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Cliff_Dest_00__Area03_Env_Cliff_Dest_00_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Cliff_Dest_00_C, 0x0340);
		}

		// class UPlayAtomCue_C : public UAnimNotify
		TEST_METHOD(BlueprintGeneratedClass__AnimNotify_PlayAtomCue__PlayAtomCue_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlayAtomCue_C, Sound, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlayAtomCue_C, Bone, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlayAtomCue_C, follow, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlayAtomCue_C, UnknownData_BRK9, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlayAtomCue_C, VolumeMultiplier, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlayAtomCue_C, PitchMultiplier, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlayAtomCue_C, 0x0054);
		}

		// class ABP_Area03_Cliff_TopGrassD_N_C : public AGrassGenerationStaticMeshActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_TopGrassD_N__BP_Area03_Cliff_TopGrassD_N_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_TopGrassD_N_C, 0x0360);
		}

		// class ABP_Area03_Cliff_PrecipiceG_N_C : public AGrassGenerationStaticMeshActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_PrecipiceG_N__BP_Area03_Cliff_PrecipiceG_N_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_PrecipiceG_N_C, 0x0360);
		}

		// class ABP_Area03_Cliff_TopGrassF_N_C : public AGrassGenerationStaticMeshActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_TopGrassF_N__BP_Area03_Cliff_TopGrassF_N_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_TopGrassF_N_C, 0x0360);
		}

		// class ABP_Area03_Cliff_TopGrassI_D_C : public AGrassGenerationDestructActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_TopGrassI_D__BP_Area03_Cliff_TopGrassI_D_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_TopGrassI_D_C, 0x0388);
		}

		// class ABP_Area03_Cliff_TopgrassK_D_C : public AGrassGenerationDestructActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_TopgrassK_D__BP_Area03_Cliff_TopgrassK_D_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_TopgrassK_D_C, 0x0388);
		}

		// class ABP_Area03_Cliff_TopGrassL_D_C : public AGrassGenerationDestructActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_TopGrassL_D__BP_Area03_Cliff_TopGrassL_D_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_TopGrassL_D_C, 0x0388);
		}

		// class ABP_Area03_Cliff_WildernessA_D_C : public AGrassGenerationDestructActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_WildernessA_D__BP_Area03_Cliff_WildernessA_D_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_WildernessA_D_C, 0x0388);
		}

		// class ABP_Area03_Cliff_WildernessB_D_C : public AGrassGenerationDestructActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_WildernessB_D__BP_Area03_Cliff_WildernessB_D_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_WildernessB_D_C, 0x0388);
		}

		// class UBattle_Msg_Break_C : public UAT_UIBattleMsgBreak_Lang
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Msg_Break__Battle_Msg_Break_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, UberGraphFrame, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Start, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff00, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff01, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff01_01, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff02, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff02_01, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff03, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff03_01, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff03_02, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff04, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff05, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff06, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff06_01, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff06_02, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff06_03, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff06_04, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff06_05, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff07, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff07_01, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff08, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff09, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff10, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff10_01, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff11, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff11_01, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff11_02, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff12, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff12_01, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff12_02, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff13, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff13_01, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff14, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff14_01, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff14_03, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff15_01, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff15_02, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff15_03, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff15_04, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Img_Break_Eff16, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Ins_Cutin_Eff06_00, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Ins_Cutin_Eff06_01, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Ins_Cutin_Eff06_02, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Ins_Long_Btn_Eff00, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Ins_Long_Btn_Eff01, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Lang_Break, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Lang_Break_Eff, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Msg_Break_C, Lang_Break_Eff2, 0x0538);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Msg_Break_C, 0x0540);
		}

		// class ALostPropertyItem_R_C : public ALostPropertyItem_C
		TEST_METHOD(BlueprintGeneratedClass__LostPropertyItem_R__LostPropertyItem_R_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ALostPropertyItem_R_C, Billboard, 0x0540);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALostPropertyItem_R_C, 0x0548);
		}

		// class ALostPropertyItem_C : public APlacementObjectInfo
		TEST_METHOD(BlueprintGeneratedClass__LostPropertyItem__LostPropertyItem_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALostPropertyItem_C, 0x0540);
		}

		// class USpawnDataValue_Area03_10_002_C : public USpawnDataValue
		TEST_METHOD(BlueprintGeneratedClass__SpawnDataValue_Area03_10_002__SpawnDataValue_Area03_10_002_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnDataValue_Area03_10_002_C, 0x0038);
		}

		// class AQuestGeneral_BP_C : public AQuest_General
		TEST_METHOD(BlueprintGeneratedClass__QuestGeneral_BP__QuestGeneral_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestGeneral_BP_C, UberGraphFrame, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestGeneral_BP_C, DefaultSceneRoot, 0x04B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuestGeneral_BP_C, 0x04C0);
		}

		// class ABP_GarageShop_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_GarageShop__BP_GarageShop_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_GarageShop_C, Collision, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_GarageShop_C, PointLight, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_GarageShop_C, MobIcon, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_GarageShop_C, StaticMesh, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_GarageShop_C, DefaultSceneRoot, 0x0358);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_GarageShop_C, 0x0360);
		}

		// class UInfo_Log_Z_C : public UAT_UIInfoZOrbLogBase
		TEST_METHOD(WidgetBlueprintGeneratedClass__Info_Log_Z__Info_Log_Z_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Z_C, Info_Log_Bar_Z00, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Z_C, Info_Log_Bar_Z01, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Z_C, Info_Log_Bar_Z02, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Z_C, Info_Log_Bar_Z03, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Z_C, Info_Log_Bar_Z04, 0x04C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInfo_Log_Z_C, 0x04D0);
		}

		// class AArea03_Env_Satancity_03_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Satancity_03__Area03_Env_Satancity_03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Satancity_03_C, 0x0340);
		}

		// class UMgame_Base_Gauge_C : public UAT_UIMiniGameEnemiesBase_Gauge
		TEST_METHOD(WidgetBlueprintGeneratedClass__Mgame_Base_Gauge__Mgame_Base_Gauge_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Base_Gauge_C, Out, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Base_Gauge_C, In, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Base_Gauge_C, Img_Game_Hunt_Flam01, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Base_Gauge_C, Img_Gauge_E_Flam02, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Base_Gauge_C, Img_Icon_Base_Airship, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Base_Gauge_C, Img_Icon_Base_E, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Base_Gauge_C, Ins_Eff00, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Base_Gauge_C, Ins_Eff01, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Base_Gauge_C, Ins_Gauge_Hunt, 0x0420);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMgame_Base_Gauge_C, 0x0428);
		}

		// class AArea03_Env_Road_Art_00_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Road_Art_00__Area03_Env_Road_Art_00_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Road_Art_00_C, 0x0340);
		}

		// class AArea03_Env_Village_00_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Village_00__Area03_Env_Village_00_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Village_00_C, 0x0340);
		}

		// class UBP_Dest_Bamboo_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_Bamboo__BP_Dest_Bamboo_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_Bamboo_C, 0x0820);
		}

		// class UBP_Dest_TreeJ_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_TreeJ__BP_Dest_TreeJ_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_TreeJ_C, 0x0820);
		}

		// class AArea03_Env_GohanHouse_00_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_GohanHouse_00__Area03_Env_GohanHouse_00_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_GohanHouse_00_C, 0x0340);
		}

		// class UAnimNotifyState_AcceptCommand_C : public UATAnimNotifyState_AcceptCommand
		TEST_METHOD(BlueprintGeneratedClass__AnimNotifyState_AcceptCommand__AnimNotifyState_AcceptCommand_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_AcceptCommand_C, 0x0030);
		}

		// class AArea03_Env_Light_00_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Light_00__Area03_Env_Light_00_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Light_00_C, 0x0340);
		}

		// class UMap_World_C : public UAT_UIMapWorld
		TEST_METHOD(WidgetBlueprintGeneratedClass__Map_World__Map_World_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_C, Out_Space, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_C, In_Space, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_C, Change_Out, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_C, Change_In, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_C, Out, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_C, In, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_C, Img_Fill, 0x0600);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_C, Img_Tex_Fade_Right, 0x0608);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_C, Ins_Base_Fad04, 0x0610);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_C, Ins_Base_Head01, 0x0618);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_C, Ins_Fad00_00, 0x0620);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_C, Ins_Fad00_01, 0x0628);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_C, Ins_Fad00_02, 0x0630);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_C, Ins_Fad00_03, 0x0638);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_C, Ins_Xef_Light00_00, 0x0640);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_C, Ins_Xef_Light00_01, 0x0648);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_C, Ins_Xef_Light00_02, 0x0650);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_C, Ins_Xef_Light00_03, 0x0658);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_C, Ins_Xef_Light00_04, 0x0660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_C, Ins_Xef_Light00_05, 0x0668);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_C, Map_List_Info_00, 0x0670);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_C, Map_List_Info_01, 0x0678);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_C, Map_List_Info_02, 0x0680);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_C, Txt_Area, 0x0688);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_C, Txt_medal, 0x0690);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_C, Txt_Name, 0x0698);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMap_World_C, 0x06A0);
		}

		// class AA015_BP_C : public AA007_BP_C
		TEST_METHOD(BlueprintGeneratedClass__A015_BP__A015_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AA015_BP_C, 0x0478);
		}

		// class AArea03_Env_Heightmap_x1_y3_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Heightmap_x1_y3__Area03_Env_Heightmap_x1_y3_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Heightmap_x1_y3_C, 0x0340);
		}

		// class AArea03_Env_Heightmap_x2_y0_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Heightmap_x2_y0__Area03_Env_Heightmap_x2_y0_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Heightmap_x2_y0_C, 0x0340);
		}

		// class UXcmn_Subtitles_C : public UATUISubtitles
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Subtitles__Xcmn_Subtitles_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Subtitles_C, UberGraphFrame, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Subtitles_C, Out_Fad, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Subtitles_C, Change_In_Fad, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Subtitles_C, Change_Out_Fad, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Subtitles_C, In_Fad, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Subtitles_C, Out, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Subtitles_C, In, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Subtitles_C, All_Nut, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Subtitles_C, All_Subtitle, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Subtitles_C, Img_Fad, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Subtitles_C, Pnl_Name, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Subtitles_C, Pnl_Txt00, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Subtitles_C, Tex_Fade_Right, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Subtitles_C, Txt_Name, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Subtitles_C, Txt_Selif, 0x0570);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Subtitles_C, 0x0578);
		}

		// class ABlockCollision_Box_C : public AATPlayerAutoControlTrigger
		TEST_METHOD(BlueprintGeneratedClass__BlockCollision_Box__BlockCollision_Box_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABlockCollision_Box_C, UberGraphFrame, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABlockCollision_Box_C, blockCollision, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABlockCollision_Box_C, overlapCollision, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABlockCollision_Box_C, DefaultSceneRoot, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABlockCollision_Box_C, IsTurn, 0x0428);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABlockCollision_Box_C, 0x0429);
		}

		// class UFullScreenMovie_C : public UATUIFullscreenMovie
		TEST_METHOD(WidgetBlueprintGeneratedClass__FullScreenMovie__FullScreenMovie_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UFullScreenMovie_C, UberGraphFrame, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFullScreenMovie_C, Image, 0x0388);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFullScreenMovie_C, 0x0390);
		}

		// class ASub_Cpl041A_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Cpl041A_01__Sub_Cpl041A_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl041A_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl041A_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl041A_01_C, Cpl002, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl041A_01_C, Cpl041, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl041A_01_C, Npc003, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl041A_01_C, Npc027, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl041A_01_C, Npc026, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl041A_01_C, meshes1, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl041A_01_C, meshes2, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl041A_01_C, canceled, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl041A_01_C, UnknownData_50T7, 0x0519);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl041A_01_C, Door, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl041A_01_C, area18_door_default_pos, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl041A_01_C, is_area_18_010, 0x0534);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Cpl041A_01_C, 0x0535);
		}

		// class ASub_Npc013_01_04_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc013_01_04__Sub_Npc013_01_04_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc013_01_04_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc013_01_04_C, event_battle_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc013_01_04_C, Enemy, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc013_01_04_C, quest_id, 0x04E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc013_01_04_C, 0x04E8);
		}

		// class ASub_Npc047_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc047_01__Sub_Npc047_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc047_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc047_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc047_01_C, canceled, 0x04D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc047_01_C, 0x04D1);
		}

		// class AAtrociousEnemyNamedEvent_Area06_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__AtrociousEnemyNamedEvent_Area06__AtrociousEnemyNamedEvent_Area06_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAtrociousEnemyNamedEvent_Area06_C, UberGraphFrame, 0x04C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAtrociousEnemyNamedEvent_Area06_C, 0x04C8);
		}

		// class AAtrociousEnemyNamedEvent_Area04_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__AtrociousEnemyNamedEvent_Area04__AtrociousEnemyNamedEvent_Area04_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAtrociousEnemyNamedEvent_Area04_C, UberGraphFrame, 0x04C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAtrociousEnemyNamedEvent_Area04_C, 0x04C8);
		}

		// class UCicken_AnimBP_C : public UNpcAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__Cicken_AnimBP__Cicken_AnimBP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, UberGraphFrame, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, AnimGraphNode_Root_CD65A15E412FE0209AD4EF9030D5DD80, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, AnimGraphNode_TransitionResult_C13494174F51A8800C6A9B8F623CF4AF, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, AnimGraphNode_TransitionResult_A805E42D4819870B84BB6B8C19ECF347, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, AnimGraphNode_TransitionResult_32A2DFF145F11D9809262EBE54494B0D, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, AnimGraphNode_TransitionResult_A03FE94341FC1B56FF3B138C2C3EF32B, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, AnimGraphNode_TransitionResult_EE82DC5245FEAF2F3B1FD3A17F8F4AC5, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, AnimGraphNode_TransitionResult_358A59C44F89445ADF5DB2A8DE052CD6, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, AnimGraphNode_TransitionResult_3D81CDC04D9571D3151D56886171E4AD, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, AnimGraphNode_TransitionResult_40BEE8944B5A1994E4D139A00034C403, 0x0640);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, AnimGraphNode_TransitionResult_A8F7048147C7C7B48B7321807EF5829D, 0x0688);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, AnimGraphNode_SequencePlayer_E8F797FB474D9DCDA3E9BB86AA3FDEB6, 0x06D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, AnimGraphNode_StateResult_98222263490871AD815A8FBAEA43F086, 0x0770);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, AnimGraphNode_SequencePlayer_B4B81429426B5EE39D84989CBD4E2F47, 0x07B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, AnimGraphNode_StateResult_9B8B75024C96B2A83CF66EA041445217, 0x0850);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, AnimGraphNode_SequencePlayer_65A79A3F4B921718F6EA5D845D8A8B04, 0x0890);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, AnimGraphNode_StateResult_A14482A64B185527DA1AA89709290A84, 0x0930);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, AnimGraphNode_SequencePlayer_38A8EB46418DA8178895B28BDEAD1841, 0x0970);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, AnimGraphNode_StateResult_138FB1D14FAF78FDB4E18297CF8AFDE9, 0x0A10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, AnimGraphNode_SequencePlayer_994031D849DF7855E462209098FE588C, 0x0A50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, AnimGraphNode_StateResult_799DCA234AC33A7C7A1BE08A077A42E3, 0x0AF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, AnimGraphNode_SequencePlayer_323870E840779E6F10811088755C09E0, 0x0B30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, AnimGraphNode_StateResult_6A1174264A92593247FC2FBEFB10ADDE, 0x0BD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, AnimGraphNode_SequencePlayer_ECC5C1D34087B563D0029D8AEA83D5E2, 0x0C10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, AnimGraphNode_StateResult_678714B7473C339F21824C8DA6D915E5, 0x0CB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, AnimGraphNode_StateMachine_30133BA240AFE31DE31774A39CF2919F, 0x0CF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCicken_AnimBP_C, AnimGraphNode_Slot_B469BE44432474CE2337B0B3409832D8, 0x0DD0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCicken_AnimBP_C, 0x0E38);
		}

		// class ASub_Npc026_02_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc026_02__Sub_Npc026_02_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc026_02_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc026_02_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc026_02_C, Cpl002, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc026_02_C, Npc026, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc026_02_C, Npc030, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc026_02_C, Door, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc026_02_C, DoorTransform, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc026_02_C, door_pos, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc026_02_C, canceled, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc026_02_C, is_area_18_010, 0x0551);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc026_02_C, 0x0552);
		}

		// class ASub_Npc030_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc030_01__Sub_Npc030_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc030_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc030_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc030_01_C, canceled, 0x04D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc030_01_C, 0x04D1);
		}

		// class ASub_Npc016_02_02_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc016_02_02__Sub_Npc016_02_02_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc016_02_02_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc016_02_02_C, quest_id, 0x04C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc016_02_02_C, 0x04D0);
		}

		// class ASub_Npc016_02_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc016_02_01__Sub_Npc016_02_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc016_02_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc016_02_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc016_02_01_C, Npc016, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc016_02_01_C, Npc012, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc016_02_01_C, Cpl011, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc016_02_01_C, canceled, 0x04E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc016_02_01_C, 0x04E9);
		}

		// class ASub_Npc013_01_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc013_01_01__Sub_Npc013_01_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc013_01_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc013_01_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc013_01_01_C, Npc013, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc013_01_01_C, canceled, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc013_01_01_C, UnknownData_KC9Z, 0x04D9);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc013_01_01_C, Sub_Npc013_01_02, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc013_01_01_C, Sub_Npc013_01_03, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc013_01_01_C, Sub_Npc013_01_04, 0x04F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc013_01_01_C, 0x04F8);
		}

		// class ASub_Cpl036_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Cpl036_01__Sub_Cpl036_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl036_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl036_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl036_01_C, Cpl036, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl036_01_C, canceled, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl036_01_C, UnknownData_Z2RU, 0x04D9);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl036_01_C, Door, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl036_01_C, area03_door_default_pos, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl036_01_C, UnknownData_IB0R, 0x04F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl036_01_C, Door_3, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl036_01_C, area18_door_default_pos, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl036_01_C, is_area_18_010, 0x050C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl036_01_C, Cpl036_02isEnable, 0x050D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Cpl036_01_C, 0x050E);
		}

		// class ASub_Cpl026_01_02_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Cpl026_01_02__Sub_Cpl026_01_02_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl026_01_02_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl026_01_02_C, event_battle_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl026_01_02_C, Enemy, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl026_01_02_C, quest_id, 0x04E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Cpl026_01_02_C, 0x04E8);
		}

		// class ASub_Cpl011_02_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Cpl011_02__Sub_Cpl011_02_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl011_02_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl011_02_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl011_02_C, canceled, 0x04D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Cpl011_02_C, 0x04D1);
		}

		// class ATriggerStaticActorBox_BP_C : public ATriggerStaticActorBox
		TEST_METHOD(BlueprintGeneratedClass__TriggerStaticActorBox_BP__TriggerStaticActorBox_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ATriggerStaticActorBox_BP_C, UberGraphFrame, 0x0370);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATriggerStaticActorBox_BP_C, 0x0378);
		}

		// class ASub_Cpl025_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Cpl025_01__Sub_Cpl025_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl025_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl025_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl025_01_C, canceled, 0x04D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Cpl025_01_C, 0x04D1);
		}

		// class ASub_Cpl007_02_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Cpl007_02__Sub_Cpl007_02_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl007_02_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl007_02_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl007_02_C, canceled, 0x04D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Cpl007_02_C, 0x04D1);
		}

		// class ASub_Cpl001_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Cpl001_01__Sub_Cpl001_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl001_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl001_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl001_01_C, canceled, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl001_01_C, UnknownData_H2VU, 0x04D1);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl001_01_C, Characters, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl001_01_C, mobs, 0x04E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Cpl001_01_C, 0x04F8);
		}

		// class AProjectile_FieldShot_BP_C : public AATProjectileField
		TEST_METHOD(BlueprintGeneratedClass__Projectile_FieldShot_BP__Projectile_FieldShot_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AProjectile_FieldShot_BP_C, 0x04A0);
		}

		// class UXlist_List05_Lay7_C : public UAT_UIXlistList05Lay7
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xlist_List05_Lay7__Xlist_List05_Lay7_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List05_Lay7_C, UberGraphFrame, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List05_Lay7_C, Out, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List05_Lay7_C, In, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List05_Lay7_C, Img_List_Base, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List05_Lay7_C, Txt_Title, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List05_Lay7_C, Xlist_List05_00, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List05_Lay7_C, Xlist_List05_01, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List05_Lay7_C, Xlist_List05_02, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List05_Lay7_C, Xlist_List05_03, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List05_Lay7_C, Xlist_List05_04, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List05_Lay7_C, Xlist_List05_05, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List05_Lay7_C, Xlist_List05_06, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List05_Lay7_C, Xmenu_Scrollbar, 0x04E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXlist_List05_Lay7_C, 0x04F0);
		}

		// class UMap_Quest_Icon_Switch_C : public UAT_UIMapQuestIconSwitch
		TEST_METHOD(WidgetBlueprintGeneratedClass__Map_Quest_Icon_Switch__Map_Quest_Icon_Switch_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Quest_Icon_Switch_C, UberGraphFrame, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Quest_Icon_Switch_C, Img_Prgrs_Check, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Quest_Icon_Switch_C, Img_Prgrs_Navi, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Quest_Icon_Switch_C, Ins_Eff_Fad00, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Quest_Icon_Switch_C, Ins_Eff_Fad01, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Quest_Icon_Switch_C, Map_Quest_Icon_Switcher, 0x03F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMap_Quest_Icon_Switch_C, 0x03F8);
		}

		// class UMap_Icon_Fever_C : public UAT_UIMapIconFever
		TEST_METHOD(WidgetBlueprintGeneratedClass__Map_Icon_Fever__Map_Icon_Fever_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Fever_C, Img_Icon_Fever_Arrow, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Fever_C, Ins_Eff_Fad02, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Fever_C, Ins_Icon_Item, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Fever_C, Ins_Xef_Fad01, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Fever_C, Ins_Xef_Sun04_Rot, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Fever_C, Map_Icon_Switch, 0x03B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMap_Icon_Fever_C, 0x03B8);
		}

		// class UQuest_Main_Logo_C : public UAT_UIQuestMainLogo
		TEST_METHOD(WidgetBlueprintGeneratedClass__Quest_Main_Logo__Quest_Main_Logo_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Logo_C, Out, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Logo_C, In, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Logo_C, Lang_Chap_Logo, 0x03F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuest_Main_Logo_C, 0x03F8);
		}

		// class UStart_Top_C : public UAT_UIStartTop
		TEST_METHOD(WidgetBlueprintGeneratedClass__Start_Top__Start_Top_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, Out_System, 0x05B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, In_System, 0x05C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, Close_System, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, Enter_System, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, In_Commu, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, Out_Commu, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, Close_Commu, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, Enter_Commu, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, Out, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, In, 0x0600);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, Img_Tex_Deco, 0x0608);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, Ins_Sirc_CompZ00_00, 0x0610);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, List04_Sub00, 0x0618);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, List04_Sub01, 0x0620);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, List_Sub02, 0x0628);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, List_Sub03, 0x0630);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, List_Sub04, 0x0638);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, Start_Top_List00, 0x0640);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, Start_Top_List01, 0x0648);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, Start_Top_List02, 0x0650);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, Start_Top_List03, 0x0658);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, Start_Top_List04, 0x0660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, Start_Top_List05, 0x0668);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, Start_Top_List06, 0x0670);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, Start_Top_List_Z_00, 0x0678);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, Start_Top_List_Z_01, 0x0680);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, Start_Top_List_Z_02, 0x0688);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, Start_Top_List_Z_03, 0x0690);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, Start_Top_List_Z_04, 0x0698);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_C, Start_Top_List_Z_05, 0x06A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStart_Top_C, 0x06A8);
		}

		// class UXcmn_Icon_Operation_C : public UAT_UIXcmnIconOperation
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Icon_Operation__Xcmn_Icon_Operation_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Icon_Operation_C, Loop, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Icon_Operation_C, Ins_Icon_Fast00_00, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Icon_Operation_C, Ins_Icon_Fast00_01, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Icon_Operation_C, Ins_Icon_Fast01_00, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Icon_Operation_C, Ins_Icon_Fast01_01, 0x03E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Icon_Operation_C, 0x03E8);
		}

		// class UXcmn_Header_C : public UAT_UIXCmnHeader
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Header__Xcmn_Header_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Header_C, UberGraphFrame, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Header_C, Out, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Header_C, Icon_Out, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Header_C, Icon_Loop, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Header_C, Icon_In, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Header_C, Loop, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Header_C, In, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Header_C, Dmy_Header000, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Header_C, Dmy_Header01, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Header_C, Dmy_Lang_Commu, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Header_C, Img_Base_Head00, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Header_C, Img_Base_Head01, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Header_C, Img_Cloud00, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Header_C, Ins_Cloud00_Shdw, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Header_C, Ins_Commu, 0x0558);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Header_C, 0x0560);
		}

		// class UAB_RIdingCharacter_C : public URideAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__AB_RIdingCharacter__AB_RIdingCharacter_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, UberGraphFrame, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_BlendListByBool_BFEF4ECF4D28F95C6EBA07890967C4E5, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_SaveCachedPose_4102F5E14F856848EA697780B44DCB80, 0x0668);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_ApplyAdditive_D4E5F60246B58FC4606EDFA90FC55894, 0x0740);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_Slot_6B8C788D4A1A363C8E7BD8823787A2EE, 0x0830);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_8EF6315C49268782224046B85879E012, 0x0898);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_FB73A1444E9B201E65632EB4C02B656E, 0x08E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_8987BC1E4AAC64DADECD039EAF4CD0B5, 0x0928);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_5E581A234AEBEB6F069038A9B0C4B54A, 0x0970);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_38132E154D4B07682FFA1D841822A6E1, 0x09B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_D9F3D9DD4F2063FE7F0F869F2507ECF9, 0x0A00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_ED948A704CC22F25BBD1358A4874BFA2, 0x0A48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_D2A29A32422530FA0D39749AC9FBC8DD, 0x0A90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_459C767246F5C3661DB87C9D4E41C201, 0x0AD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_31386CB047479F0E9889E8871FFE557A, 0x0B20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_98D199A6415365EE4A9F5FAB1A3EEF48, 0x0B68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_335C8DC5477DE6DA843ADC8B0A229D9E, 0x0BB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_0BA056514B710F162687DC9782B2AACC, 0x0BF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_493A3A5D478FA1CD3C8BA09C3D5F4D0A, 0x0C40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_88F898A341DED6808EC6EF9042927C47, 0x0C88);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_C616A99746F35CCBBB8DF682EF2C1D9F, 0x0CD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_832A579C40CD4049BD31F1928AC2E48C, 0x0D18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_7A95A8DB4433DD225815E4B9A8E084B5, 0x0D60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_91840D514AF4ED12F3F56784E1ACCC39, 0x0DA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_7BDE1F8347EFDB266D93A0B968349526, 0x0DF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_BA111DE54EAB71FE4EE00B85DDE3A567, 0x0E38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_D836B698497AB1DBD46BDBAF256338E1, 0x0E80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_21FE62484DD0D385F135A888CF239449, 0x0EC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_2460113344A5B7E35FD23A8D2B50A2FF, 0x0F10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_18021A7C41210837DF44BAB8C066511B, 0x0F58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_CE2F9807406B4D15F62245ACB3C06D91, 0x0FA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_673AA8524B46D76A85FACF94F63470C0, 0x0FE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_BCCCC9A04756D16AFF2B9D8915633E63, 0x1030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_024540454CED4D961FDE26A9E4AC0ADE, 0x1078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_1EA2987A4286131D9FE506AB8DC621DF, 0x10C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_27BA04834D225C108BD9F9A56386538C, 0x1108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_32822BD042310C8111F6C9808845B962, 0x1150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_6EAB9906406CAD1B56EFBB97140BE7A2, 0x1198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_E536D92C486A223E5A195CA5A7635601, 0x11E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_92AA93264A4FB7DB805736B81C900677, 0x1228);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_E7373F1E43FA5868F96AA69ED3D4E513, 0x1270);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_FDCA3EEF405FB5F85517A9A0708975AC, 0x12B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_935254034EFF6E5201AC7A81CD583BB2, 0x1300);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_B5B2998740D4336D2BE4638A7210C117, 0x1348);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_3A327A7D4E05F63CA553CDB94A515D40, 0x1390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_64E4627B4CBDEEFBB1AF61BA912BEEBA, 0x13D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_CAE76F4743438D15DD689F8934DF793B, 0x1420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_292EB92D4DEDAA2F74C043A7607179AA, 0x1468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_1A77519E4C45530251D5EC96CB07EE35, 0x14B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_CC9C8E2B4B994D1DF35948867B5B4B4F, 0x14F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_E7013D5D4F1418239BD8688657EE6D4F, 0x1540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_D64EDA174BE2FFEA67996C962975B4C1, 0x1588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_18B040F449B6F1FFD8A1D9B002BBD84C, 0x15D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_3628576D4FAEA4A0A97FFBA7527411B9, 0x1618);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_5841A49C4B3F71DA70D093B9EBE7B0D3, 0x1660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_73E6056143D4F54CE40C9F88C6676617, 0x16A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_A0B56EC94D8649704F82EA865A62DB1E, 0x16F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_EFB1E39D4FC165F6DA1F3DA7EC0A1107, 0x1738);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_F50B303545DC84DAF699E3B7A70BFD1D, 0x1780);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_3DD254D84FD70C48A388D0881A1F3C09, 0x17C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_C77B3E6C42DBA8D96231E98BAA2841C0, 0x1810);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_1CB1832C4932A27A988C6B86272AF758, 0x1858);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_49685F8943EE0A64152A5790FAD71626, 0x18A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_AB8D91544213AAF2141F75964E2C8169, 0x18E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_94778C974341F451D8632B81537FA293, 0x1930);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_A3E8959F4600CAC5006B6782ECAEA9A3, 0x1978);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_009A147246ED0ED280664CB1530EEFB4, 0x19C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_TransitionResult_5712FD384D8B8FF588948EBCEA970B17, 0x1A08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_SequencePlayer_616D61104B14D933A66CAD8F0ED2C00A, 0x1A50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_StateResult_EA551C1244B9CE646AD4279896157FD0, 0x1AF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_SequencePlayer_2C924AD649695AF3AA5D4AB34DE88129, 0x1B30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_StateResult_94F63BD64A1E05134A93D6BA96FD9684, 0x1BD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_SequencePlayer_39C75E0B453DEC57881B05ABB093490F, 0x1C10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_StateResult_C97CDE76464CD78C2A9C24A9ED85458A, 0x1CB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_SequencePlayer_65378ED64E827F002381A7A00A4FC0BF, 0x1CF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_StateResult_B899D8FE4A4F9DB1EF5B87A46996B631, 0x1D90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_SequencePlayer_AF3CE23E409E0B75D7BB018F7F60F9C5, 0x1DD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_StateResult_D7C105044A4575B60B040C8A5E6CE3D1, 0x1E70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_SequencePlayer_7BBB6E7047FF12545617CB882F7E9BDE, 0x1EB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_StateResult_8DEC580944F65EE2B4A09B8A2337AC71, 0x1F50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_SequencePlayer_50BB355943F308D26A06EDBD227D9CCD, 0x1F90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_StateResult_1B6597134B48A6F268FFA89D357C2513, 0x2030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_SequencePlayer_961D5789428E607AA4ED44B01330A447, 0x2070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_StateResult_21B0DE9C44E646F333C23CB5B44CD54D, 0x2110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_SequencePlayer_C37A0A284B77177775F404B9DE3924A0, 0x2150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_StateResult_DB0AF307431933ECDD9527ABD73CA0EA, 0x21F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_SequencePlayer_A1B23E824EB2CED7A9F6BA9D697FA070, 0x2230);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_StateResult_1A40881D4CCFFA11087A0596C74C9894, 0x22D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_SequencePlayer_3734FB0E4484A3945F5DCF80797D95CB, 0x2310);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_StateResult_4D3E092841D6901080EA5A965D89DCCA, 0x23B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_SequencePlayer_D559091E4A20C1FA21738880789E6F6E, 0x23F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_StateResult_EB2F597241756227496255A5F8D7182B, 0x2490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_SequencePlayer_6A44D75F4BCB27C5A3A295AE12D2B043, 0x24D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_StateResult_C4F529FE4A03B271711874A116AEE8C4, 0x2570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_SequencePlayer_F3D3840C4FA8C12E53A552AEA2275914, 0x25B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_StateResult_2FCAD08D47B258FB43C068B81CFAF457, 0x2650);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_StateMachine_578F78E848B7A3045B12C0BA691D6A41, 0x2690);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_Root_F1A21B15459B1C9C6B9F3285C1E49509, 0x2770);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_SequencePlayer_5A53DF92497E78780D8C898F25E6B54F, 0x27B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_UseCachedPose_407A65F1470AB53D05755DA084E27950, 0x2850);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_UseCachedPose_3A824CCB4725C4B305F732A166BEFA67, 0x2898);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_SaveCachedPose_CB49DA7F4835D319E35F14AA32F4E9C6, 0x28E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_RIdingCharacter_C, AnimGraphNode_UseCachedPose_FD583AAF404F86E89CBE1383C07B6D27, 0x29B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAB_RIdingCharacter_C, 0x2A00);
		}

		// class UMoviePlayerSettings : public UObject
		TEST_METHOD(Class__MoviePlayer__MoviePlayerSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMoviePlayerSettings, bWaitForMoviesToComplete, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMoviePlayerSettings, bMoviesAreSkippable, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMoviePlayerSettings, UnknownData_Z7ST, 0x002A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMoviePlayerSettings, StartupMovies, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMoviePlayerSettings, 0x0040);
		}

		// class ABP_BaseballGamePitcherCharacter_C : public ABaseballGamePitcherCharacter
		TEST_METHOD(BlueprintGeneratedClass__BP_BaseballGamePitcherCharacter__BP_BaseballGamePitcherCharacter_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_BaseballGamePitcherCharacter_C, 0x0770);
		}

		// class UUniqueDataNpc032_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc032__UniqueDataNpc032_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc032_C, 0x0070);
		}

		// class UUniqueDataNpc024_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc024__UniqueDataNpc024_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc024_C, 0x0070);
		}

		// class UUniqueDataNpc023_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc023__UniqueDataNpc023_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc023_C, 0x0070);
		}

		// class UFighting_Power_Param_C062A_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C062A__Fighting_Power_Param_C062A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C062A_C, 0x0060);
		}

		// class UFighting_Power_Param_C064Ac01_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C064Ac01__Fighting_Power_Param_C064Ac01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C064Ac01_C, 0x0060);
		}

		// class UFighting_Power_Param_C065Ac01_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C065Ac01__Fighting_Power_Param_C065Ac01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C065Ac01_C, 0x0060);
		}

		// class UBP_Cpl003Status_SS1_Learning_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl003Status_SS1_Learning__BP_Cpl003Status_SS1_Learning_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl003Status_SS1_Learning_C, 0x00F0);
		}

		// class UBP_Cpl003Status_Learning_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl003Status_Learning__BP_Cpl003Status_Learning_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl003Status_Learning_C, 0x00F0);
		}

		// class UBP_Cpl002Status_Learning_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl002Status_Learning__BP_Cpl002Status_Learning_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl002Status_Learning_C, 0x00F0);
		}

		// class UBP_Cpl002Status_enemy_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl002Status_enemy__BP_Cpl002Status_enemy_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl002Status_enemy_C, 0x00F0);
		}

		// class AGeneralDemoCharacter_BP_N004Abb0_C : public AGeneralDemoCharacterBase_BP_C
		TEST_METHOD(BlueprintGeneratedClass__GeneralDemoCharacter_BP_N004Abb0__GeneralDemoCharacter_BP_N004Abb0_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGeneralDemoCharacter_BP_N004Abb0_C, 0x08E8);
		}

		// class AGeneralDemoCharacter_BP_N007Aab0_C : public AGeneralDemoCharacterBase_BP_C
		TEST_METHOD(BlueprintGeneratedClass__GeneralDemoCharacter_BP_N007Aab0__GeneralDemoCharacter_BP_N007Aab0_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGeneralDemoCharacter_BP_N007Aab0_C, 0x08E8);
		}

		// class AVariation00Cpl059A_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Cpl059A__Variation00Cpl059A_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Cpl059A_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Cpl059A_C, 0x0380);
		}

		// class UAB_C001_RidingFriend_C : public UAB_RidingFriend_C
		TEST_METHOD(AnimBlueprintGeneratedClass__AB_C001_RidingFriend__AB_C001_RidingFriend_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAB_C001_RidingFriend_C, 0x0CC8);
		}

		// class ATriggerBoxSymbolEnemySpawnBP_C : public AATTriggerBoxSymbolEnemySpawn
		TEST_METHOD(BlueprintGeneratedClass__TriggerBoxSymbolEnemySpawnBP__TriggerBoxSymbolEnemySpawnBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATriggerBoxSymbolEnemySpawnBP_C, 0x0360);
		}

		// class USpawnDataValue_Area03_30_Fixed_001_C : public USpawnDataValue
		TEST_METHOD(BlueprintGeneratedClass__SpawnDataValue_Area03_30_Fixed_001__SpawnDataValue_Area03_30_Fixed_001_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnDataValue_Area03_30_Fixed_001_C, 0x0038);
		}

		// class AFishingArea_BP_C : public AFishingArea
		TEST_METHOD(BlueprintGeneratedClass__FishingArea_BP__FishingArea_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AFishingArea_BP_C, ATMapIcon, 0x0438);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFishingArea_BP_C, 0x0440);
		}

		// class UBP_C058A_SkillMoveDash_C : public UATActSkillMoveDash
		TEST_METHOD(BlueprintGeneratedClass__BP_C058A_SkillMoveDash__BP_C058A_SkillMoveDash_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C058A_SkillMoveDash_C, 0x0178);
		}

		// class UBP_C001A_UseRadar_C : public UATActUseRadar
		TEST_METHOD(BlueprintGeneratedClass__BP_C001A_UseRadar__BP_C001A_UseRadar_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C001A_UseRadar_C, 0x0130);
		}

		// class UBP_C001A_Charge_C : public UATActCharge
		TEST_METHOD(BlueprintGeneratedClass__BP_C001A_Charge__BP_C001A_Charge_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C001A_Charge_C, 0x0140);
		}

		// class UBP_C000A_NoOxygen_UpperWater_C : public UATActNoOxygen_UpperWater
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_NoOxygen_UpperWater__BP_C000A_NoOxygen_UpperWater_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_NoOxygen_UpperWater_C, 0x0118);
		}

		// class UBP_C000A_Avoid_C : public UATActAvoid
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_Avoid__BP_C000A_Avoid_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_Avoid_C, 0x0148);
		}

		// class UAB_Veh010_C : public URideAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__AB_Veh010__AB_Veh010_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, UberGraphFrame, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_Root_96BE2B7B4F9914E008F6A3850BA677C0, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_8EF6315C49268782224046B85879E012, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_3889CDA14635259A8C4939B9BDEA487E, 0x0610);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_FB73A1444E9B201E65632EB4C02B656E, 0x0658);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_B2D6B4224F07EAAA13BE75832EBA5190, 0x06A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_5E581A234AEBEB6F069038A9B0C4B54A, 0x06E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_38132E154D4B07682FFA1D841822A6E1, 0x0730);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_D9F3D9DD4F2063FE7F0F869F2507ECF9, 0x0778);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_8987BC1E4AAC64DADECD039EAF4CD0B5, 0x07C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_D2A29A32422530FA0D39749AC9FBC8DD, 0x0808);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_459C767246F5C3661DB87C9D4E41C201, 0x0850);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_31386CB047479F0E9889E8871FFE557A, 0x0898);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_ED948A704CC22F25BBD1358A4874BFA2, 0x08E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_903E9E1141023B686A4CD491BC6BC8BF, 0x0928);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_4F8DC9994D85EE289B61069BD34942B1, 0x0970);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_6592318344826FBB7C2D6AA65CB8DE72, 0x09B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_0BA056514B710F162687DC9782B2AACC, 0x0A00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_88F898A341DED6808EC6EF9042927C47, 0x0A48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_91840D514AF4ED12F3F56784E1ACCC39, 0x0A90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_C616A99746F35CCBBB8DF682EF2C1D9F, 0x0AD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_832A579C40CD4049BD31F1928AC2E48C, 0x0B20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_7A95A8DB4433DD225815E4B9A8E084B5, 0x0B68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_493A3A5D478FA1CD3C8BA09C3D5F4D0A, 0x0BB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_7BDE1F8347EFDB266D93A0B968349526, 0x0BF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_CE39700A4863494916046D965DADB606, 0x0C40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_D836B698497AB1DBD46BDBAF256338E1, 0x0C88);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_21FE62484DD0D385F135A888CF239449, 0x0CD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_97925739447134BFA159679CAC665B43, 0x0D18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_18021A7C41210837DF44BAB8C066511B, 0x0D60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_CE2F9807406B4D15F62245ACB3C06D91, 0x0DA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_168F6A754CF5E95C9617169B79B98B89, 0x0DF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_673AA8524B46D76A85FACF94F63470C0, 0x0E38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_BCCCC9A04756D16AFF2B9D8915633E63, 0x0E80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_1B820417474A241B08157EB563F6965F, 0x0EC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_024540454CED4D961FDE26A9E4AC0ADE, 0x0F10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_1EA2987A4286131D9FE506AB8DC621DF, 0x0F58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_27BA04834D225C108BD9F9A56386538C, 0x0FA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_3687384D493E3C89D34C57A5986648BB, 0x0FE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_32822BD042310C8111F6C9808845B962, 0x1030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_6EAB9906406CAD1B56EFBB97140BE7A2, 0x1078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_E536D92C486A223E5A195CA5A7635601, 0x10C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_92AA93264A4FB7DB805736B81C900677, 0x1108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_E7373F1E43FA5868F96AA69ED3D4E513, 0x1150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_06606A744A13905AD976068E15717658, 0x1198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_FDCA3EEF405FB5F85517A9A0708975AC, 0x11E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_935254034EFF6E5201AC7A81CD583BB2, 0x1228);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_B5B2998740D4336D2BE4638A7210C117, 0x1270);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_3A327A7D4E05F63CA553CDB94A515D40, 0x12B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_64E4627B4CBDEEFBB1AF61BA912BEEBA, 0x1300);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_20B4DE114A4BBC2643801AB33C674779, 0x1348);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_CAE76F4743438D15DD689F8934DF793B, 0x1390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_292EB92D4DEDAA2F74C043A7607179AA, 0x13D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_1A77519E4C45530251D5EC96CB07EE35, 0x1420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_CC9C8E2B4B994D1DF35948867B5B4B4F, 0x1468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_E7013D5D4F1418239BD8688657EE6D4F, 0x14B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_0EA01B5848D616DE45434A9836501C20, 0x14F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_D64EDA174BE2FFEA67996C962975B4C1, 0x1540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_18B040F449B6F1FFD8A1D9B002BBD84C, 0x1588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_3628576D4FAEA4A0A97FFBA7527411B9, 0x15D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_5841A49C4B3F71DA70D093B9EBE7B0D3, 0x1618);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_7F624CD64CA2513E186A94AB56F7D3A7, 0x1660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_73E6056143D4F54CE40C9F88C6676617, 0x16A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_A0B56EC94D8649704F82EA865A62DB1E, 0x16F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_EFB1E39D4FC165F6DA1F3DA7EC0A1107, 0x1738);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_F50B303545DC84DAF699E3B7A70BFD1D, 0x1780);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_3DD254D84FD70C48A388D0881A1F3C09, 0x17C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_0F6FF82144B7D3BB91560A9EAEA7DB08, 0x1810);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_C77B3E6C42DBA8D96231E98BAA2841C0, 0x1858);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_1CB1832C4932A27A988C6B86272AF758, 0x18A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_49685F8943EE0A64152A5790FAD71626, 0x18E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_AB8D91544213AAF2141F75964E2C8169, 0x1930);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_E3E6029641507B72A7A2BD9515AD676F, 0x1978);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_94778C974341F451D8632B81537FA293, 0x19C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_A3E8959F4600CAC5006B6782ECAEA9A3, 0x1A08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_009A147246ED0ED280664CB1530EEFB4, 0x1A50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TransitionResult_5712FD384D8B8FF588948EBCEA970B17, 0x1A98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_SequencePlayer_A66411214EBE11B0ED57FDBF7E97D1C0, 0x1AE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_StateResult_EA551C1244B9CE646AD4279896157FD0, 0x1B80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_SequencePlayer_71583DDF43C8CFAED6517CA224CE8F4A, 0x1BC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_StateResult_94F63BD64A1E05134A93D6BA96FD9684, 0x1C60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_SequencePlayer_8391676842F9D4D0190B3589245273A8, 0x1CA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_StateResult_C97CDE76464CD78C2A9C24A9ED85458A, 0x1D40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_SequencePlayer_4EC6E9AB4A099F3C993BFD904C85DA09, 0x1D80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_StateResult_B899D8FE4A4F9DB1EF5B87A46996B631, 0x1E20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_SequencePlayer_527EFAEC40E0B9625AB331A827178695, 0x1E60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_StateResult_D7C105044A4575B60B040C8A5E6CE3D1, 0x1F00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_SequencePlayer_BD37D398493A9C22B3980081DFA8A9FD, 0x1F40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_StateResult_8DEC580944F65EE2B4A09B8A2337AC71, 0x1FE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_SequencePlayer_81EE893D49D491D8025B7CA90CF8A9A3, 0x2020);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_StateResult_1B6597134B48A6F268FFA89D357C2513, 0x20C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_SequencePlayer_41DC7FC24168C87F80704BAAC37967EB, 0x2100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_StateResult_21B0DE9C44E646F333C23CB5B44CD54D, 0x21A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_SequencePlayer_73553DDE40E9217EECD14098DF6527E3, 0x21E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_StateResult_DB0AF307431933ECDD9527ABD73CA0EA, 0x2280);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_SequencePlayer_6916C0BB4165B0EAFF5EE79309891C66, 0x22C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_StateResult_1A40881D4CCFFA11087A0596C74C9894, 0x2360);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_SequencePlayer_B57243A9460158ECD9A2A2B5894D5C67, 0x23A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_StateResult_4D3E092841D6901080EA5A965D89DCCA, 0x2440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_SequencePlayer_E563DC3C46D206B1DE81B1A6A9BF7FB3, 0x2480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_StateResult_EB2F597241756227496255A5F8D7182B, 0x2520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_SequencePlayer_1E95B0E04CEAE11C89223A95B61C249B, 0x2560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_StateResult_C4F529FE4A03B271711874A116AEE8C4, 0x2600);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_SequencePlayer_599C2C5F40D10767A8200FB56D663771, 0x2640);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_StateResult_2FCAD08D47B258FB43C068B81CFAF457, 0x26E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_StateMachine_2984DC984F179C2DDC8FD88B2ADDAC04, 0x2720);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_Slot_0DB0CC404EFCDDF625DA768D75EAA16B, 0x2800);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, UnknownData_UP1G, 0x2868);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TwoBoneIK_254DD6FA48F226C2D43464A5A51C9D59, 0x2870);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_TwoBoneIK_AD01FE014DCC7422C0954990D6C19159, 0x2AB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_ModifyBone_6CA553C04C8BA714487776845B9E088E, 0x2CF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_BlendListByBool_8C3B253547F7DAC88A9EDBAF15882B0C, 0x2E28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_SaveCachedPose_FCF43D81463EA288A11749846FAE2526, 0x2F08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_UseCachedPose_81F1C1F0460EC28FD4B6FAA35E64D1CF, 0x2FE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_LocalToComponentSpace_0AA1C84C46F09989EBC5AB994BE1E4AE, 0x3028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_UseCachedPose_D64A49F0437614FE3B0D14818B894AB6, 0x3068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_ModifyBone_531EC35A42CBC7150106B297E305001C, 0x30B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_ModifyBone_C101FF234C9A689D88B1C394ED9E3D5C, 0x31E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_ModifyBone_BA3F34EE4C60917E21DEE7805EDD47BA, 0x3320);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_ModifyBone_977903E64111A3984FC23E91257F4B8C, 0x3458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_ModifyBone_58516B07473192F0B2B8A4AD522548FA, 0x3590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_SaveCachedPose_CD585AA644280F5213B1C7BE3B9D49BE, 0x36C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_ComponentToLocalSpace_B1DE61DB4030BC9F35974FB1EF63297E, 0x37A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_Veh010_C, AnimGraphNode_UseCachedPose_A40B2BE94DA292DD964D63B3BA52ADAD, 0x37E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAB_Veh010_C, 0x3828);
		}

		// class UATAnimNotify_PlaySoundBattle_BP_C : public UATAnimNotify_PlaySoundBattleSe
		TEST_METHOD(BlueprintGeneratedClass__ATAnimNotify_PlaySoundBattle_BP__ATAnimNotify_PlaySoundBattle_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_PlaySoundBattle_BP_C, 0x0040);
		}

		// class ACookDataManager_C : public ACookDataManager
		TEST_METHOD(BlueprintGeneratedClass__CookDataManager__CookDataManager_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ACookDataManager_C, DefaultSceneRoot, 0x0370);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACookDataManager_C, 0x0378);
		}

		// class ASub_Cpl026_01_03_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Cpl026_01_03__Sub_Cpl026_01_03_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl026_01_03_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl026_01_03_C, event_battle_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl026_01_03_C, Enemy, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl026_01_03_C, quest_id, 0x04E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Cpl026_01_03_C, 0x04E8);
		}

		// class UEnc_Emo_C : public UAT_UIEncEmo
		TEST_METHOD(WidgetBlueprintGeneratedClass__Enc_Emo__Enc_Emo_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Emo_C, Out, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Emo_C, In, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Emo_C, Ins_Emo, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Emo_C, Ins_Emo_Add, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Emo_C, Ins_Emo_Eff00, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Emo_C, Ins_Emo_Eff01, 0x0458);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnc_Emo_C, 0x0460);
		}

		// class UMgame_Pop_C : public UAT_UIMiniGamePop
		TEST_METHOD(WidgetBlueprintGeneratedClass__Mgame_Pop__Mgame_Pop_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Pop_C, Out, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Pop_C, In, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Pop_C, Img_Mgame_Pop_Base, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Pop_C, Txt_Tips00, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Pop_C, Txt_Tips01, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMgame_Pop_C, 0x03C8);
		}

		// class UNavi_CompZ_C : public UAT_UIZCWNaviItem
		TEST_METHOD(WidgetBlueprintGeneratedClass__Navi_CompZ__Navi_CompZ_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavi_CompZ_C, UberGraphFrame, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavi_CompZ_C, List_StayOut, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavi_CompZ_C, List_StayIn, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavi_CompZ_C, List_Up, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavi_CompZ_C, List_Out, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavi_CompZ_C, List_In, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavi_CompZ_C, All_Navi_CompZ, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavi_CompZ_C, Img_Base_Main00, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavi_CompZ_C, Img_Cloud00_00, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavi_CompZ_C, Img_Dmy_Space, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavi_CompZ_C, Ins_Icon_CompZ, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavi_CompZ_C, Navi_CompZ_Cond00, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavi_CompZ_C, Txt_CompZ, 0x0420);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavi_CompZ_C, 0x0428);
		}

		// class UQuest_Navi_More_C : public UAT_UIZCWNaviMore
		TEST_METHOD(WidgetBlueprintGeneratedClass__Quest_Navi_More__Quest_Navi_More_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_More_C, UberGraphFrame, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_More_C, List_Out, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_More_C, List_In, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_More_C, All_List_More, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_More_C, Img_Base_List, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_More_C, Pnl_List_More, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_More_C, Txt_List_01, 0x03A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuest_Navi_More_C, 0x03B0);
		}

		// class UStart_Item_Win00_C : public UAT_UIStartItemWin00
		TEST_METHOD(WidgetBlueprintGeneratedClass__Start_Item_Win00__Start_Item_Win00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Item_Win00_C, Chang_Out, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Item_Win00_C, Chang_In, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Item_Win00_C, Icon_State00, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Item_Win00_C, Icon_State01, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Item_Win00_C, Icon_State02, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Item_Win00_C, Icon_State03, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Item_Win00_C, Icon_State04, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Item_Win00_C, Icon_State05, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Item_Win00_C, Icon_State06, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Item_Win00_C, Icon_State07, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Item_Win00_C, Icon_State08, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Item_Win00_C, Icon_State09, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Item_Win00_C, Img_Base_Win00, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Item_Win00_C, Img_Xwin01_Title, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Item_Win00_C, Txt_List00, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Item_Win00_C, Txt_List01, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Item_Win00_C, Txt_List02, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Item_Win00_C, Txt_List03, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Item_Win00_C, Txt_List04, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Item_Win00_C, Txt_List05, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Item_Win00_C, Txt_List06, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Item_Win00_C, Txt_List07, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Item_Win00_C, Txt_List08, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Item_Win00_C, Txt_List09, 0x04B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStart_Item_Win00_C, 0x04B8);
		}

		// class UBattle_Hud_E_Main_C : public UAT_UIBattleHudEnemy
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Hud_E_Main__Battle_Hud_E_Main_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Change_Lock_In, 0x06E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Change_Num_Gauge, 0x06E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, In_Warning, 0x06F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Out_Warning, 0x06F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Change_Lock_Out, 0x0700);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Out, 0x0708);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, In, 0x0710);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, All_Nut, 0x0718);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Battle_Gauge_Break, 0x0720);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Battle_Gauge_Hp_E, 0x0728);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Battle_Skill_Name_E, 0x0730);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Icon_State_Lay_E, 0x0738);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Img_Base_E, 0x0740);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Img_Warning_Base00, 0x0748);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Img_Warning_Eff01_00, 0x0750);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Img_Warning_Eff01_01, 0x0758);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Img_Warning_Eff01_02, 0x0760);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Img_Warning_Eff01_03, 0x0768);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Img_Warning_Eff01_04, 0x0770);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Img_Warning_Eff01_05, 0x0778);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Img_Warning_Eff01_06, 0x0780);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Img_Warning_Eff01_07, 0x0788);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Img_Warning_Eff01_08, 0x0790);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Img_Warning_Exc00, 0x0798);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Img_Warning_Exc01, 0x07A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Ins_Char_Fad, 0x07A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Ins_Charicon_D, 0x07B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Ins_Eff_Warning00, 0x07B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Ins_Eff_Warning01, 0x07C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Ins_Num_Hp_Eff_00, 0x07C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Ins_Num_Hp_Eff_01, 0x07D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Ins_Num_Hp_Eff_02, 0x07D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Ins_Num_Hp_Eff_X, 0x07E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Ins_Num_Hud_Hp_00, 0x07E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Ins_Num_Hud_Hp_01, 0x07F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Ins_Num_Hud_Hp_02, 0x07F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Ins_Num_Hud_Hp_X, 0x0800);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Txt_Break, 0x0808);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Txt_Break_Shadow, 0x0810);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Txt_Lv, 0x0818);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Txt_Name_Char, 0x0820);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Txt_Num_Hp, 0x0828);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Txt_Num_Hp_Shadow, 0x0830);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_E_Main_C, Xef_Hud_Eff, 0x0838);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Hud_E_Main_C, 0x0840);
		}

		// class UBattle_Lock_Tps01_C : public UAT_UITPSSkillCursorTypeA
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Lock_Tps01__Battle_Lock_Tps01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps01_C, Out, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps01_C, In, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps01_C, Img_Curs_Parts00, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps01_C, Img_Curs_Parts01, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps01_C, Img_Curs_Parts03_00, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps01_C, Img_Curs_Parts03_01, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps01_C, Img_Curs_Parts03_02, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps01_C, Img_Curs_Parts03_03, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps01_C, Img_Curs_Parts03_04, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps01_C, Img_Curs_Parts03_05, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps01_C, Ins_Curs_Eff00, 0x0490);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Lock_Tps01_C, 0x0498);
		}

		// class UMap_World_Eff_Story_C : public UAT_UIMapWorldEffStory
		TEST_METHOD(WidgetBlueprintGeneratedClass__Map_World_Eff_Story__Map_World_Eff_Story_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Eff_Story_C, Ins_Eff_Fad00, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Eff_Story_C, Ins_Eff_Fad00_01, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Eff_Story_C, Ins_Eff_Pillar_Story00, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Eff_Story_C, Ins_Eff_Pillar_Story00_01, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Eff_Story_C, Ins_Eff_Pillar_Story01, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Eff_Story_C, Ins_Eff_Pillar_Story01_01, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Eff_Story_C, Ins_Eff_Story00, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Eff_Story_C, Ins_Eff_Story00_01, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Eff_Story_C, Ins_Eff_Story01, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Eff_Story_C, Ins_Eff_Story01_01, 0x0408);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMap_World_Eff_Story_C, 0x0410);
		}

		// class UStart_Quest_Bar00_C : public UAT_UIStartQuestBar
		TEST_METHOD(WidgetBlueprintGeneratedClass__Start_Quest_Bar00__Start_Quest_Bar00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Quest_Bar00_C, UberGraphFrame, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Quest_Bar00_C, Txt_Num, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Quest_Bar00_C, Txt_Progress, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Quest_Bar00_C, Xmenu_Check, 0x03B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStart_Quest_Bar00_C, 0x03C0);
		}

		// class UJsonUtilitiesDummyObject : public UObject
		TEST_METHOD(Class__JsonUtilities__JsonUtilitiesDummyObject)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UJsonUtilitiesDummyObject, 0x0028);
		}

		// class UBattle_Hud_Simple_C : public UAT_UIBattleHudEnemySimple
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Hud_Simple__Battle_Hud_Simple_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_Simple_C, Down, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_Simple_C, Out, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_Simple_C, In, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_Simple_C, Img_Base_E_Simple, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_Simple_C, Ins_Gauge_Hp_Simple00, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_Simple_C, Ins_Gauge_Hp_Simple01, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_Simple_C, Txt_Lv, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_Simple_C, Txt_Num_Gauge, 0x04F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Hud_Simple_C, 0x04F8);
		}

		// class UUniqueDataNpc036_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc036__UniqueDataNpc036_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc036_C, 0x0070);
		}

		// class UUniqueDataNpc034_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc034__UniqueDataNpc034_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc034_C, 0x0070);
		}

		// class UUniqueDataCpl001_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl001__UniqueDataCpl001_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl001_C, 0x0070);
		}

		// class UFighting_Power_Param_C002Z_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C002Z__Fighting_Power_Param_C002Z_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C002Z_C, 0x0060);
		}

		// class UFighting_Power_Param_C008A_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C008A__Fighting_Power_Param_C008A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C008A_C, 0x0060);
		}

		// class UBP_Cpl022Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl022Status__BP_Cpl022Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl022Status_C, 0x00F0);
		}

		// class UBP_Cpl019Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl019Status__BP_Cpl019Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl019Status_C, 0x00F0);
		}

		// class UBP_Cpl014StatusC03_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl014StatusC03__BP_Cpl014StatusC03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl014StatusC03_C, 0x00F0);
		}

		// class UBP_Cpl014StatusC02_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl014StatusC02__BP_Cpl014StatusC02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl014StatusC02_C, 0x00F0);
		}

		// class UBP_Cpl013Status_Learning_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl013Status_Learning__BP_Cpl013Status_Learning_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl013Status_Learning_C, 0x00F0);
		}

		// class UGeneralDemoAnim_N007A_BP_C : public UGeneralDemoAnim_Base_BP_C
		TEST_METHOD(AnimBlueprintGeneratedClass__GeneralDemoAnim_N007A_BP__GeneralDemoAnim_N007A_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeneralDemoAnim_N007A_BP_C, 0x2665);
		}

		// class UGeneralDemoAnim_N004A_BP_C : public UGeneralDemoAnim_Base_BP_C
		TEST_METHOD(AnimBlueprintGeneratedClass__GeneralDemoAnim_N004A_BP__GeneralDemoAnim_N004A_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeneralDemoAnim_N004A_BP_C, 0x2665);
		}

		// class ABP_FieldMemoriesActor_C : public AATFieldMemoriesActor
		TEST_METHOD(BlueprintGeneratedClass__BP_FieldMemoriesActor__BP_FieldMemoriesActor_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_FieldMemoriesActor_C, Billboard, 0x0490);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_FieldMemoriesActor_C, 0x0498);
		}

		// class UCheck_AIStop_C : public UBTDecorator_BlueprintBase
		TEST_METHOD(BlueprintGeneratedClass__Check_AIStop__Check_AIStop_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCheck_AIStop_C, 0x00A0);
		}

		// class AAT_Character_cpl014c02_BP_C : public AATCharacterCpl014c02
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl014c02_BP__AT_Character_cpl014c02_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl014c02_BP_C, AtomCueSheetLoader, 0x0FA0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl014c02_BP_C, 0x0FA8);
		}

		// class UBP_C001A_S_SKL003_3_ActionTable_C : public UCharacterActionClassTable
		TEST_METHOD(BlueprintGeneratedClass__BP_C001A_S_SKL003_3_ActionTable__BP_C001A_S_SKL003_3_ActionTable_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C001A_S_SKL003_3_ActionTable_C, 0x0168);
		}

		// class UBP_C001A_S_SKL003_2_ActionTable_C : public UCharacterActionClassTable
		TEST_METHOD(BlueprintGeneratedClass__BP_C001A_S_SKL003_2_ActionTable__BP_C001A_S_SKL003_2_ActionTable_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C001A_S_SKL003_2_ActionTable_C, 0x0168);
		}

		// class AGeneralDemoCharacter_BP_C001Aaa0_C : public AGeneralDemoCharacterBase_BP_C
		TEST_METHOD(BlueprintGeneratedClass__GeneralDemoCharacter_BP_C001Aaa0__GeneralDemoCharacter_BP_C001Aaa0_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGeneralDemoCharacter_BP_C001Aaa0_C, 0x08E8);
		}

		// class AB_LongBlowObject_Area03_C : public AATLongBlowoffObjectManager
		TEST_METHOD(BlueprintGeneratedClass__B_LongBlowObject_Area03__B_LongBlowObject_Area03_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AB_LongBlowObject_Area03_C, DefaultSceneRoot, 0x03F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AB_LongBlowObject_Area03_C, 0x0400);
		}

		// class AA008_BP_C : public AAnimalMob_Pawn_C
		TEST_METHOD(BlueprintGeneratedClass__A008_BP__A008_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AA008_BP_C, AnimalComponentBase, 0x0460);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AA008_BP_C, 0x0468);
		}

		// class UBP_C000A_SkillMoveQuickDash_C : public UATActSkillMoveDash
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_SkillMoveQuickDash__BP_C000A_SkillMoveQuickDash_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_SkillMoveQuickDash_C, 0x0178);
		}

		// class UBP_C000A_SkillMoveDash_C : public UATActSkillMoveDash
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_SkillMoveDash__BP_C000A_SkillMoveDash_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_SkillMoveDash_C, 0x0178);
		}

		// class UBP_C000A_SkillAssistTeleport_C : public UATActSkillAssistTeleport
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_SkillAssistTeleport__BP_C000A_SkillAssistTeleport_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_SkillAssistTeleport_C, 0x0178);
		}

		// class UBP_C057_ActionTableAttack_C : public UCharacterActionClassTable
		TEST_METHOD(BlueprintGeneratedClass__BP_C057_ActionTableAttack__BP_C057_ActionTableAttack_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C057_ActionTableAttack_C, 0x0168);
		}

		// class AFacial00Cpl058C_C : public AATFacialParts
		TEST_METHOD(BlueprintGeneratedClass__Facial00Cpl058C__Facial00Cpl058C_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AFacial00Cpl058C_C, DefaultSceneRoot, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFacial00Cpl058C_C, 0x03E0);
		}

		// class AForm00Cpl058C_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Cpl058C__Form00Cpl058C_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Cpl058C_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Cpl058C_C, 0x0380);
		}

		// class AAT_Character_cpl058c03_BP_C : public AATCharacterCpl058c03
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl058c03_BP__AT_Character_cpl058c03_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl058c03_BP_C, AttachParticle, 0x0FA0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl058c03_BP_C, 0x0FA8);
		}

		// class UBP_C059A_SkillMoveDash_C : public UATActSkillMoveDash
		TEST_METHOD(BlueprintGeneratedClass__BP_C059A_SkillMoveDash__BP_C059A_SkillMoveDash_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C059A_SkillMoveDash_C, 0x0178);
		}

		// class UBP_C000A_SupportProvocation_C : public UATActSupportProvocation
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_SupportProvocation__BP_C000A_SupportProvocation_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_SupportProvocation_C, 0x0110);
		}

		// class UBP_Cpl058Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl058Status_Atrocious__BP_Cpl058Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl058Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl057StatusC02_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl057StatusC02__BP_Cpl057StatusC02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl057StatusC02_C, 0x00F0);
		}

		// class UBP_Cpl057Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl057Status_Atrocious__BP_Cpl057Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl057Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl056StatusC03_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl056StatusC03__BP_Cpl056StatusC03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl056StatusC03_C, 0x00F0);
		}

		// class UUniqueDataCpl075A_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl075A__UniqueDataCpl075A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl075A_C, 0x0070);
		}

		// class UUniqueDataCpl073_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl073__UniqueDataCpl073_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl073_C, 0x0070);
		}

		// class UUniqueDataCpl068_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl068__UniqueDataCpl068_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl068_C, 0x0070);
		}

		// class UUniqueDataCpl061_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl061__UniqueDataCpl061_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl061_C, 0x0070);
		}

		// class UUniqueDataCpl060_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl060__UniqueDataCpl060_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl060_C, 0x0070);
		}

		// class UUniqueDataCpl059C_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl059C__UniqueDataCpl059C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl059C_C, 0x0070);
		}

		// class UBP_Dest_TreeK_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_TreeK__BP_Dest_TreeK_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_TreeK_C, 0x0820);
		}

		// class UAnimNotifyState_ShakeCamera_C : public UATAnimNotifyState_CameraShake
		TEST_METHOD(BlueprintGeneratedClass__AnimNotifyState_ShakeCamera__AnimNotifyState_ShakeCamera_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_ShakeCamera_C, 0x0038);
		}

		// class UBP_AtrociousSubQuest3_Area01_C : public UATAtrociousSubQuest
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousSubQuest3_Area01__BP_AtrociousSubQuest3_Area01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousSubQuest3_Area01_C, 0x00B0);
		}

		// class UBP_AtrociousCondition3_Area01_C : public UATAtrociousCondition
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousCondition3_Area01__BP_AtrociousCondition3_Area01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousCondition3_Area01_C, 0x0040);
		}

		// class UBP_AtrociousBattle3_Area01_020_C : public UATAtrociousEncountBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousBattle3_Area01_020__BP_AtrociousBattle3_Area01_020_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousBattle3_Area01_020_C, 0x0118);
		}

		// class UBP_AtrociousSubQuest2_Area02_C : public UATAtrociousSubQuest
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousSubQuest2_Area02__BP_AtrociousSubQuest2_Area02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousSubQuest2_Area02_C, 0x00B0);
		}

		// class UBP_AtrociousBattle3_Area02_020_C : public UATAtrociousEncountBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousBattle3_Area02_020__BP_AtrociousBattle3_Area02_020_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousBattle3_Area02_020_C, 0x0118);
		}

		// class AVariation00Cpl014A_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Cpl014A__Variation00Cpl014A_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Cpl014A_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Cpl014A_C, 0x0380);
		}

		// class AVariation00Cpl057A_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Cpl057A__Variation00Cpl057A_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Cpl057A_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Cpl057A_C, 0x0380);
		}

		// class UATAnimationBlueprintChanger : public UActorComponent
		TEST_METHOD(Class__ATExt__ATAnimationBlueprintChanger)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimationBlueprintChanger, RequestList, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimationBlueprintChanger, UnknownData_B916, 0x0110);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimationBlueprintChanger, 0x0140);
		}

		// class UATAnimNotify_CtrlBrightness : public UAnimNotify
		TEST_METHOD(Class__ATExt__ATAnimNotify_CtrlBrightness)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_CtrlBrightness, InAnimCurve, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_CtrlBrightness, OutAnimCurve, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_CtrlBrightness, 0x0048);
		}

		// class UATAnimNotify_WearEffectSpawn : public UAnimNotify
		TEST_METHOD(Class__ATExt__ATAnimNotify_WearEffectSpawn)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_WearEffectSpawn, Effect, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_WearEffectSpawn, AttachName, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_WearEffectSpawn, offsetLocation, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_WearEffectSpawn, OffsetRotation, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_WearEffectSpawn, AttachType, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotify_WearEffectSpawn, UnknownData_29FO, 0x0061);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_WearEffectSpawn, 0x0068);
		}

		// class UATAnimNotifyState_LoopWearEffectSpawn : public UAnimNotifyState
		TEST_METHOD(Class__ATExt__ATAnimNotifyState_LoopWearEffectSpawn)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_LoopWearEffectSpawn, Effect, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_LoopWearEffectSpawn, RotationFix, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_LoopWearEffectSpawn, UnknownData_PUMW, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_LoopWearEffectSpawn, AttachName, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_LoopWearEffectSpawn, offsetLocation, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_LoopWearEffectSpawn, OffsetRotation, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_LoopWearEffectSpawn, AttachType, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_LoopWearEffectSpawn, UnknownData_1OXA, 0x0061);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_LoopWearEffectSpawn, ParticleMap, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_LoopWearEffectSpawn, 0x00B8);
		}

		// class UATAnimNotifyState_WearEffect : public UAnimNotifyState
		TEST_METHOD(Class__ATExt__ATAnimNotifyState_WearEffect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_WearEffect, UseHeatUp, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_WearEffect, NotEndHeatUp, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATAnimNotifyState_WearEffect, UnknownData_UL7L, 0x0032);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotifyState_WearEffect, 0x0038);
		}

		// class UATEventBattlePhaseBase : public UObject
		TEST_METHOD(Class__ATExt__ATEventBattlePhaseBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEventBattlePhaseBase, UnknownData_1HWU, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATEventBattlePhaseBase, 0x0030);
		}

		// class UATBossBattle0101MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle0101MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle0101MainPhase, UnknownData_G2I5, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle0101MainPhase, 0x0088);
		}

		// class AATEventBattleRootManagerBase : public AActor
		TEST_METHOD(Class__ATExt__ATEventBattleRootManagerBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATEventBattleRootManagerBase, PhaseClass, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATEventBattleRootManagerBase, PhaseTbl, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATEventBattleRootManagerBase, StuationJudge, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATEventBattleRootManagerBase, BattleCondition, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATEventBattleRootManagerBase, AfterAction, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATEventBattleRootManagerBase, RoofBarrierClass, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATEventBattleRootManagerBase, RoofBarrierOffset, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATEventBattleRootManagerBase, UnknownData_EJQO, 0x037C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATEventBattleRootManagerBase, RoofBarrierActor, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATEventBattleRootManagerBase, UnknownData_KFFL, 0x0388);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATEventBattleRootManagerBase, 0x0390);
		}

		// class AATBossBattle0101RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle0101RootManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle0101RootManager, MarginValue, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle0101RootManager, UnknownData_KV03, 0x0394);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle0101RootManager, 0x0398);
		}

		// class UATBossBattle0102MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle0102MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle0102MainPhase, UnknownData_KTRY, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle0102MainPhase, 0x0090);
		}

		// class AATBossBattle0102RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle0102RootManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle0102RootManager, MarginValue, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle0102RootManager, HeatupValue, 0x0394);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle0102RootManager, 0x0398);
		}

		// class UATBossBattle0201MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle0201MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle0201MainPhase, UnknownData_OHCU, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle0201MainPhase, 0x0088);
		}

		// class AATBossBattle0201RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle0201RootManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle0201RootManager, 0x0390);
		}

		// class UATBossBattle0301MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle0301MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle0301MainPhase, UnknownData_ZBUF, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle0301MainPhase, 0x0090);
		}

		// class AATBossBattle0301RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle0301RootManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle0301RootManager, MarginValue, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle0301RootManager, HeatupValue, 0x0394);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle0301RootManager, 0x0398);
		}

		// class UATBossBattle0302MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle0302MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle0302MainPhase, UnknownData_XIPU, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle0302MainPhase, 0x0088);
		}

		// class AATBossBattle0302RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle0302RootManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle0302RootManager, MarginValue, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle0302RootManager, UnknownData_BS30, 0x0394);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle0302RootManager, 0x0398);
		}

		// class UATBossBattle0401MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle0401MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle0401MainPhase, UnknownData_TDR7, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle0401MainPhase, 0x0090);
		}

		// class AATBossBattle0401RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle0401RootManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle0401RootManager, HeatupValue, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle0401RootManager, UnknownData_5BAL, 0x0394);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle0401RootManager, 0x0398);
		}

		// class UATBossBattle0402MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle0402MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle0402MainPhase, UnknownData_Z616, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle0402MainPhase, 0x0088);
		}

		// class AATBossBattle0402RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle0402RootManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle0402RootManager, 0x0390);
		}

		// class UATBossBattle0501MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle0501MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle0501MainPhase, UnknownData_G6Z3, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle0501MainPhase, 0x0090);
		}

		// class AATBossBattle0501RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle0501RootManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle0501RootManager, HeatupValue, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle0501RootManager, UnknownData_ZVWI, 0x0394);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle0501RootManager, 0x0398);
		}

		// class UATBossBattle0502MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle0502MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle0502MainPhase, UnknownData_AVGC, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle0502MainPhase, 0x0088);
		}

		// class AATBossBattle0502RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle0502RootManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle0502RootManager, 0x0390);
		}

		// class UATBossBattle0601MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle0601MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle0601MainPhase, UnknownData_D6XM, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle0601MainPhase, 0x0088);
		}

		// class AATBossBattle0601RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle0601RootManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle0601RootManager, 0x0390);
		}

		// class UATBossBattle0602MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle0602MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle0602MainPhase, UnknownData_MJT1, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle0602MainPhase, 0x0088);
		}

		// class AATBossBattle0602RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle0602RootManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle0602RootManager, 0x0390);
		}

		// class UATBossBattle0701MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle0701MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle0701MainPhase, UnknownData_9TYX, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle0701MainPhase, 0x0088);
		}

		// class AATBossBattle0701RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle0701RootManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle0701RootManager, MarginValue, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle0701RootManager, UnknownData_BIP0, 0x0394);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle0701RootManager, 0x0398);
		}

		// class UATBossBattle0702MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle0702MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle0702MainPhase, UnknownData_QSNF, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle0702MainPhase, 0x0088);
		}

		// class AATBossBattle0702RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle0702RootManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle0702RootManager, 0x0390);
		}

		// class UATBossBattle0801MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle0801MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle0801MainPhase, UnknownData_39A1, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle0801MainPhase, 0x0090);
		}

		// class AATBossBattle0801RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle0801RootManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle0801RootManager, HeatupValue, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle0801RootManager, UnknownData_BQ98, 0x0394);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle0801RootManager, 0x0398);
		}

		// class UATBossBattle0802MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle0802MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle0802MainPhase, UnknownData_OX9Q, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle0802MainPhase, 0x0090);
		}

		// class AATBossBattle0802RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle0802RootManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle0802RootManager, HeatupValue, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle0802RootManager, UnknownData_NAOE, 0x0394);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle0802RootManager, 0x0398);
		}

		// class UATBossBattle0901MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle0901MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle0901MainPhase, UnknownData_5D3G, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle0901MainPhase, 0x0088);
		}

		// class AATBossBattle0901RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle0901RootManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle0901RootManager, 0x0390);
		}

		// class UATBossBattle0902MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle0902MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle0902MainPhase, UnknownData_GQVV, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle0902MainPhase, 0x0090);
		}

		// class AATBossBattle0902RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle0902RootManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle0902RootManager, MarginValue, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle0902RootManager, HeatupValue, 0x0394);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle0902RootManager, 0x0398);
		}

		// class UATBossBattle1001MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle1001MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle1001MainPhase, UnknownData_I1ZC, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle1001MainPhase, 0x0090);
		}

		// class AATBossBattle1001RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle1001RootManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle1001RootManager, HeatupValue, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle1001RootManager, UnknownData_CBYU, 0x0394);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle1001RootManager, 0x0398);
		}

		// class UATBossBattle1101MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle1101MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle1101MainPhase, UnknownData_ZZJN, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle1101MainPhase, 0x0088);
		}

		// class AATBossBattle1101RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle1101RootManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle1101RootManager, 0x0390);
		}

		// class UATBossBattle1102MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle1102MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle1102MainPhase, UnknownData_G45C, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle1102MainPhase, 0x0088);
		}

		// class AATBossBattle1102RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle1102RootManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle1102RootManager, 0x0390);
		}

		// class UATBossBattle1201MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle1201MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle1201MainPhase, UnknownData_IH2Q, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle1201MainPhase, 0x0088);
		}

		// class AATBossBattle1201RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle1201RootManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle1201RootManager, 0x0390);
		}

		// class UATBossBattle1202MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle1202MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle1202MainPhase, UnknownData_4HP6, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle1202MainPhase, 0x0090);
		}

		// class AATBossBattle1202RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle1202RootManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle1202RootManager, HeatupValue, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle1202RootManager, UnknownData_LMB3, 0x0394);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle1202RootManager, 0x0398);
		}

		// class UATBossBattle1301MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle1301MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle1301MainPhase, UnknownData_PJQG, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle1301MainPhase, 0x0088);
		}

		// class AATBossBattle1301RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle1301RootManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle1301RootManager, 0x0390);
		}

		// class UATBossBattle1302MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle1302MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle1302MainPhase, UnknownData_Z4SG, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle1302MainPhase, 0x0088);
		}

		// class AATBossBattle1302RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle1302RootManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle1302RootManager, 0x0390);
		}

		// class UATBossBattle1401MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle1401MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle1401MainPhase, UnknownData_I4FN, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle1401MainPhase, 0x0090);
		}

		// class AATBossBattle1401RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle1401RootManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle1401RootManager, HeatupValue, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle1401RootManager, UnknownData_10F2, 0x0394);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle1401RootManager, 0x0398);
		}

		// class UATBossBattle1501MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle1501MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle1501MainPhase, UnknownData_OYNO, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle1501MainPhase, 0x0090);
		}

		// class AATBossBattle1501RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle1501RootManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle1501RootManager, HeatupValue, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle1501RootManager, UnknownData_YVNZ, 0x0394);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle1501RootManager, 0x0398);
		}

		// class UATBossBattle1502MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATBossBattle1502MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATBossBattle1502MainPhase, UnknownData_0GXJ, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATBossBattle1502MainPhase, 0x0098);
		}

		// class AATBossBattle1502RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATBossBattle1502RootManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle1502RootManager, ParticleGenkiBall, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle1502RootManager, ParticleGenkiParticle, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle1502RootManager, GenkiBallCollisionClass, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle1502RootManager, GenkiBallLocation, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle1502RootManager, GenkiParticleLocation, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle1502RootManager, ParticleCompGenkiBall, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle1502RootManager, ParticleCompGenkiParticle, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATBossBattle1502RootManager, GenkiBallCollision, 0x03D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATBossBattle1502RootManager, 0x03D8);
		}

		// class AATCharacterCpl001 : public AAT_CharacterPlayableBase
		TEST_METHOD(Class__ATExt__ATCharacterCpl001)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl001, 0x0FA0);
		}

		// class AATCharacterCpl001N : public AATCharacterCpl001
		TEST_METHOD(Class__ATExt__ATCharacterCpl001N)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl001N, 0x0FA0);
		}

		// class AATCharacterCpl002Base : public AAT_CharacterPlayableBase
		TEST_METHOD(Class__ATExt__ATCharacterCpl002Base)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl002Base, 0x0FA0);
		}

		// class AATCharacterCpl002A : public AATCharacterCpl002Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl002A)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl002A, 0x0FA0);
		}

		// class AATCharacterCpl002B : public AATCharacterCpl002Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl002B)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl002B, 0x0FA0);
		}

		// class AATCharacterCpl002C : public AATCharacterCpl002Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl002C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl002C, 0x0FA0);
		}

		// class AATCharacterCpl002D : public AATCharacterCpl002Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl002D)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl002D, 0x0FA0);
		}

		// class AATCharacterCpl002Z : public AAT_CharacterHugeBase
		TEST_METHOD(Class__ATExt__ATCharacterCpl002Z)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl002Z, 0x0FB0);
		}

		// class AATCharacterCpl003Base : public AAT_CharacterPlayableBase
		TEST_METHOD(Class__ATExt__ATCharacterCpl003Base)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl003Base, 0x0FA0);
		}

		// class AATCharacterCpl003A : public AATCharacterCpl003Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl003A)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl003A, 0x0FA0);
		}

		// class AATCharacterCpl003B : public AATCharacterCpl003Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl003B)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl003B, 0x0FA0);
		}

		// class AATCharacterCpl003Z : public AAT_CharacterHugeBase
		TEST_METHOD(Class__ATExt__ATCharacterCpl003Z)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl003Z, 0x0FB0);
		}

		// class AATCharacterCpl004Base : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl004Base)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl004Base, 0x0FA0);
		}

		// class AATCharacterCpl004c01 : public AATCharacterCpl004Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl004c01)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl004c01, 0x0FA0);
		}

		// class AATCharacterCpl004c02 : public AATCharacterCpl004Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl004c02)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl004c02, 0x0FA0);
		}

		// class AATCharacterCpl004c03 : public AATCharacterCpl004Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl004c03)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl004c03, 0x0FA0);
		}

		// class AATCharacterCpl004c04 : public AATCharacterCpl004Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl004c04)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl004c04, 0x0FA0);
		}

		// class AATCharacterCpl005Base : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl005Base)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl005Base, 0x0FA0);
		}

		// class AATCharacterCpl005A : public AATCharacterCpl005Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl005A)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl005A, 0x0FA0);
		}

		// class AATCharacterCpl005B : public AATCharacterCpl005Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl005B)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl005B, 0x0FA0);
		}

		// class AATCharacterCpl005C : public AATCharacterCpl005Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl005C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl005C, 0x0FA0);
		}

		// class AATCharacterCpl005D : public AATCharacterCpl005Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl005D)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl005D, 0x0FA0);
		}

		// class AATCharacterCpl005E : public AATCharacterCpl005Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl005E)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl005E, 0x0FA0);
		}

		// class AATCharacterCpl006 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl006)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl006, 0x0FA0);
		}

		// class AATCharacterCpl007 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl007)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl007, 0x0FA0);
		}

		// class AATCharacterCpl008 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl008)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl008, 0x0FA0);
		}

		// class AATCharacterCpl009 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl009)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl009, 0x0FA0);
		}

		// class AATCharacterCpl010 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl010)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl010, 0x0FA0);
		}

		// class AATCharacterCpl011 : public AAT_CharacterPlayableBase
		TEST_METHOD(Class__ATExt__ATCharacterCpl011)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl011, 0x0FA0);
		}

		// class AATCharacterCpl012 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl012)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl012, 0x0FA0);
		}

		// class AATCharacterCpl013 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl013)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl013, 0x0FA0);
		}

		// class AATCharacterCpl014Base : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl014Base)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl014Base, 0x0FA0);
		}

		// class AATCharacterCpl014c01 : public AATCharacterCpl014Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl014c01)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl014c01, 0x0FA0);
		}

		// class AATCharacterCpl014c02 : public AATCharacterCpl014Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl014c02)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl014c02, 0x0FA0);
		}

		// class AATCharacterCpl014c03 : public AATCharacterCpl014Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl014c03)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl014c03, 0x0FA0);
		}

		// class AATCharacterCpl014c04 : public AATCharacterCpl014Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl014c04)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl014c04, 0x0FA0);
		}

		// class AATCharacterCpl014c05 : public AATCharacterCpl014Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl014c05)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl014c05, 0x0FA0);
		}

		// class AATCharacterCpl017 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl017)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl017, 0x0FA0);
		}

		// class AATCharacterCpl018 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl018)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl018, 0x0FA0);
		}

		// class AATCharacterCpl019Base : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl019Base)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl019Base, 0x0FA0);
		}

		// class AATCharacterCpl019A : public AATCharacterCpl019Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl019A)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl019A, 0x0FA0);
		}

		// class AATCharacterCpl019B : public AATCharacterCpl019Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl019B)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl019B, 0x0FA0);
		}

		// class AATCharacterCpl020 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl020)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl020, 0x0FA0);
		}

		// class AATCharacterCpl021 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl021)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl021, 0x0FA0);
		}

		// class AATCharacterCpl022 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl022)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl022, 0x0FA0);
		}

		// class AATCharacterCpl023 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl023)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl023, 0x0FA0);
		}

		// class AATCharacterCpl024 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl024)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl024, 0x0FA0);
		}

		// class AATCharacterCpl025 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl025)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl025, 0x0FA0);
		}

		// class AATCharacterCpl028Base : public AAT_CharacterPlayableBase
		TEST_METHOD(Class__ATExt__ATCharacterCpl028Base)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl028Base, 0x0FA0);
		}

		// class AATCharacterCpl028A : public AATCharacterCpl028Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl028A)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl028A, 0x0FA0);
		}

		// class AATCharacterCpl028B : public AATCharacterCpl028Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl028B)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl028B, 0x0FA0);
		}

		// class AATCharacterCpl029 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl029)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl029, AbsorbEffect, 0x0FA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl029, AbsorbEffectLocation, 0x0FA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl029, AbsorbLifeRate, 0x0FB4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl029, UnknownData_04I8, 0x0FB8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl029, 0x0FC0);
		}

		// class AATCharacterCpl030 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl030)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl030, ParticleAbsorbST_1, 0x0FA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl030, ParticleAbsorbLP_1, 0x0FA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl030, ParticleAbsorbST_2, 0x0FB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl030, ParticleAbsorbLP_2, 0x0FB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl030, ParticleAbsorbExec, 0x0FC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl030, ParticleCompCameraAttachHitEffect, 0x0FC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl030, BG_Color_IN, 0x0FD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl030, BG_Color_OUT, 0x0FDC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl030, Main_Color_IN, 0x0FE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl030, Main_Color_OUT, 0x0FF4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl030, Ring_Color_IN, 0x1000);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl030, Ring_Color_OUT, 0x100C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl030, Aura_Color_IN, 0x1018);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl030, Aura_Color_OUT, 0x1024);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl030, Aura_Alfa_IN, 0x1030);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl030, Aura_Alfa_OUT, 0x1034);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl030, AbsorbModeTime, 0x1038);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl030, MaxDeleteWaitTime, 0x103C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl030, AbsorbRateLongRange, 0x1040);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl030, AbsorbLifeRate, 0x1044);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl030, UnknownData_QJ9W, 0x1048);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl030, ParticleCompSTNow, 0x10A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl030, ParticleCompSTOld, 0x10B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl030, ParticleCompLPNow, 0x10B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl030, ParticleCompLPOld, 0x10C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl030, UnknownData_ZGWG, 0x10C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl030, 0x10D0);
		}

		// class AATCharacterCpl031 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl031)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl031, 0x0FA0);
		}

		// class AATCharacterCpl032 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl032)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl032, 0x0FA0);
		}

		// class AATCharacterCpl034Base : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl034Base)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl034Base, 0x0FA0);
		}

		// class AATCharacterCpl034A : public AATCharacterCpl034Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl034A)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl034A, 0x0FA0);
		}

		// class AATCharacterCpl034B : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl034B)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl034B, 0x0FA0);
		}

		// class AATCharacterCpl034C : public AATCharacterCpl034Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl034C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl034C, 0x0FA0);
		}

		// class AATCharacterCpl035 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl035)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl035, 0x0FA0);
		}

		// class AATCharacterCpl036 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl036)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl036, 0x0FA0);
		}

		// class AATCharacterCpl038 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl038)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl038, 0x0FA0);
		}

		// class AATCharacterCpl039 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl039)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl039, 0x0FA0);
		}

		// class AATCharacterCpl040 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl040)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl040, AbsorbEffect, 0x0FA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl040, AbsorbEffectLocation, 0x0FA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl040, AbsorbLifeRate, 0x0FB4);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl040, UnknownData_6IOL, 0x0FB8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl040, 0x1010);
		}

		// class AATCharacterCpl041Base : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl041Base)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl041Base, 0x0FA0);
		}

		// class AATCharacterCpl041A : public AATCharacterCpl041Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl041A)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl041A, 0x0FA0);
		}

		// class AATCharacterCpl041B : public AATCharacterCpl041Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl041B)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl041B, 0x0FA0);
		}

		// class AATCharacterCpl041C : public AATCharacterCpl041Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl041C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl041C, 0x0FA0);
		}

		// class AATCharacterCpl041E : public AATCharacterCpl041Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl041E)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl041E, 0x0FA0);
		}

		// class AATCharacterCpl042 : public AAT_CharacterPlayableBase
		TEST_METHOD(Class__ATExt__ATCharacterCpl042)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl042, 0x0FA0);
		}

		// class AATCharacterCpl043 : public AAT_CharacterPlayableBase
		TEST_METHOD(Class__ATExt__ATCharacterCpl043)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl043, 0x0FA0);
		}

		// class AATCharacterCpl056Base : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl056Base)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl056Base, 0x0FA0);
		}

		// class AATCharacterCpl056c01 : public AATCharacterCpl056Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl056c01)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl056c01, 0x0FA0);
		}

		// class AATCharacterCpl056c02 : public AATCharacterCpl056Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl056c02)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl056c02, 0x0FA0);
		}

		// class AATCharacterCpl056c03 : public AATCharacterCpl056Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl056c03)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl056c03, 0x0FA0);
		}

		// class AATCharacterCpl057Base : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl057Base)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl057Base, 0x0FA0);
		}

		// class AATCharacterCpl057c01 : public AATCharacterCpl057Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl057c01)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl057c01, 0x0FA0);
		}

		// class AATCharacterCpl057c02 : public AATCharacterCpl057Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl057c02)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl057c02, 0x0FA0);
		}

		// class AATCharacterCpl057c03 : public AATCharacterCpl057Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl057c03)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl057c03, 0x0FA0);
		}

		// class AATCharacterCpl058Base : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl058Base)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl058Base, 0x0FA0);
		}

		// class AATCharacterCpl058c01 : public AATCharacterCpl058Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl058c01)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl058c01, 0x0FA0);
		}

		// class AATCharacterCpl058c02 : public AATCharacterCpl058Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl058c02)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl058c02, 0x0FA0);
		}

		// class AATCharacterCpl058c03 : public AATCharacterCpl058Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl058c03)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl058c03, 0x0FA0);
		}

		// class AATCharacterCpl059Base : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl059Base)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl059Base, 0x0FA0);
		}

		// class AATCharacterCpl059c01 : public AATCharacterCpl059Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl059c01)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl059c01, 0x0FA0);
		}

		// class AATCharacterCpl059c02 : public AATCharacterCpl059Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl059c02)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl059c02, 0x0FA0);
		}

		// class AATCharacterCpl059c03 : public AATCharacterCpl059Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl059c03)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl059c03, 0x0FA0);
		}

		// class AATCharacterCpl060 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl060)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl060, 0x0FA0);
		}

		// class AATCharacterCpl061 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl061)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl061, 0x0FA0);
		}

		// class AATCharacterCpl062 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl062)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl062, 0x0FA0);
		}

		// class AATCharacterCpl063 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl063)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl063, 0x0FA0);
		}

		// class AATCharacterCpl064Base : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl064Base)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl064Base, UnknownData_ZPUG, 0x0FA0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl064Base, 0x0FB0);
		}

		// class AATCharacterCpl064c01 : public AATCharacterCpl064Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl064c01)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl064c01, 0x0FB0);
		}

		// class AATCharacterCpl064c02 : public AATCharacterCpl064Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl064c02)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl064c02, 0x0FB0);
		}

		// class AATCharacterCpl064c03 : public AATCharacterCpl064Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl064c03)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl064c03, 0x0FB0);
		}

		// class AATCharacterCpl065Base : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl065Base)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl065Base, 0x0FA0);
		}

		// class AATCharacterCpl065c01 : public AATCharacterCpl065Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl065c01)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl065c01, 0x0FA0);
		}

		// class AATCharacterCpl065c02 : public AATCharacterCpl065Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl065c02)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl065c02, 0x0FA0);
		}

		// class AATCharacterCpl065c03 : public AATCharacterCpl065Base
		TEST_METHOD(Class__ATExt__ATCharacterCpl065c03)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl065c03, 0x0FA0);
		}

		// class AATCharacterCpl067 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl067)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl067, 0x0FA0);
		}

		// class AATCharacterCpl069 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl069)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl069, 0x0FA0);
		}

		// class AATCharacterCpl070 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl070)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl070, 0x0FA0);
		}

		// class AATCharacterCpl071 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl071)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl071, SummonCharacters, 0x0FA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl071, UnknownData_PUSR, 0x0FB0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl071, 0x0FE0);
		}

		// class AATCharacterCpl074 : public AAT_Character
		TEST_METHOD(Class__ATExt__ATCharacterCpl074)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl074, UseBarrierEff, 0x0FA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl074, UnknownData_OUOU, 0x0FA1);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl074, BarrierSocketName, 0x0FA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl074, BarrierEffST, 0x0FB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl074, BarrierEff100, 0x0FB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl074, BarrierEff50, 0x0FC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl074, BarrierEff25, 0x0FC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl074, BarrierEndEff100, 0x0FD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl074, BarrierEndEff50, 0x0FD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl074, BarrierEndEff25, 0x0FE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATCharacterCpl074, UnknownData_MBNK, 0x0FE8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATCharacterCpl074, 0x1000);
		}

		// class UATCommunityBoard : public UObject
		TEST_METHOD(Class__ATExt__ATCommunityBoard)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCommunityBoard, UnknownData_ZJNX, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCommunityBoard, 0x0138);
		}

		// class UATCommunityManager : public UActorComponent
		TEST_METHOD(Class__ATExt__ATCommunityManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCommunityManager, UnknownData_9ZHE, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCommunityManager, SoulEmInsMap, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCommunityManager, SoulEmSaveNoToInsMap, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCommunityManager, SoulEmList, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCommunityManager, CommunityBoradIns, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCommunityManager, CommSkillZFighters, 0x01F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCommunityManager, CommSkillCooking, 0x0200);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCommunityManager, CommSkillTraining, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCommunityManager, CommSkillDevelop, 0x0210);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCommunityManager, CommSkillGods, 0x0218);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCommunityManager, CommSkillAdult, 0x0220);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCommunityManager, CommSkillAdventure, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCommunityManager, LinkBonusIns, 0x0230);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCommunityManager, UnknownData_E8FL, 0x0238);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCommunityManager, 0x0258);
		}

		// class UATCommunitySkillBase : public UObject
		TEST_METHOD(Class__ATExt__ATCommunitySkillBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCommunitySkillBase, UnknownData_G0Z0, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCommunitySkillBase, 0x0060);
		}

		// class UATCommunitySkillZFighters : public UATCommunitySkillBase
		TEST_METHOD(Class__ATExt__ATCommunitySkillZFighters)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCommunitySkillZFighters, UnknownData_YJ5C, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCommunitySkillZFighters, 0x0068);
		}

		// class UATCommunitySkillCooking : public UATCommunitySkillBase
		TEST_METHOD(Class__ATExt__ATCommunitySkillCooking)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCommunitySkillCooking, UnknownData_G4ML, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCommunitySkillCooking, 0x0070);
		}

		// class UATCommunitySkillTraining : public UATCommunitySkillBase
		TEST_METHOD(Class__ATExt__ATCommunitySkillTraining)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCommunitySkillTraining, UnknownData_R9CS, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCommunitySkillTraining, 0x0068);
		}

		// class UATCommunitySkillDevelop : public UATCommunitySkillBase
		TEST_METHOD(Class__ATExt__ATCommunitySkillDevelop)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCommunitySkillDevelop, 0x0060);
		}

		// class UATCommunitySkillGods : public UATCommunitySkillBase
		TEST_METHOD(Class__ATExt__ATCommunitySkillGods)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCommunitySkillGods, UnknownData_10BY, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCommunitySkillGods, 0x0068);
		}

		// class UATCommunitySkillAdult : public UATCommunitySkillBase
		TEST_METHOD(Class__ATExt__ATCommunitySkillAdult)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCommunitySkillAdult, UnknownData_GIT4, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCommunitySkillAdult, 0x0070);
		}

		// class UATCommunitySkillAdventure : public UATCommunitySkillBase
		TEST_METHOD(Class__ATExt__ATCommunitySkillAdventure)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATCommunitySkillAdventure, UnknownData_D4DW, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATCommunitySkillAdventure, 0x0070);
		}

		// class UATDataAssetCarParameterArea : public UATDataAssetBase
		TEST_METHOD(Class__ATExt__ATDataAssetCarParameterArea)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetCarParameterArea, CarParameterAreaInfo, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetCarParameterArea, 0x0048);
		}

		// class UATDataAssetTalkAnimAsyncLoad : public UATDataAssetAsyncLoad
		TEST_METHOD(Class__ATExt__ATDataAssetTalkAnimAsyncLoad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetTalkAnimAsyncLoad, UnknownData_ZVIO, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetTalkAnimAsyncLoad, LoadingAsset, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetTalkAnimAsyncLoad, reference, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetTalkAnimAsyncLoad, 0x0070);
		}

		// class UATTalkAnimLoader : public UObject
		TEST_METHOD(Class__ATExt__ATTalkAnimLoader)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATTalkAnimLoader, UnknownData_CVIF, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATTalkAnimLoader, LoaderMap, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATTalkAnimLoader, 0x0088);
		}

		// class UATDataAssetTalkAnimation : public UATDataAssetBase
		TEST_METHOD(Class__ATExt__ATDataAssetTalkAnimation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDataAssetTalkAnimation, AssetInfo, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDataAssetTalkAnimation, 0x0040);
		}

		// class UATDebugDrawTime : public UCFManagerObject
		TEST_METHOD(Class__ATExt__ATDebugDrawTime)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDebugDrawTime, UnknownData_LAA6, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDebugDrawTime, 0x0040);
		}

		// class UATDebugMenuHandler : public UCFDebugMenuHandler
		TEST_METHOD(Class__ATExt__ATDebugMenuHandler)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDebugMenuHandler, EventHandler, 0x00E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDebugMenuHandler, 0x00F0);
		}

		// class UATDebugMenuEventHandler : public UObject
		TEST_METHOD(Class__ATExt__ATDebugMenuEventHandler)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDebugMenuEventHandler, UnknownData_H36A, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDebugMenuEventHandler, LogHandler, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDebugMenuEventHandler, BatchHandler, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDebugMenuEventHandler, BattleSettingHandler, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDebugMenuEventHandler, DrawHandler, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDebugMenuEventHandler, BattlePlayerHandler, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDebugMenuEventHandler, RandomPadSettingHandler, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDebugMenuEventHandler, BattleDebugDisp, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDebugMenuEventHandler, SkillSetting, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDebugMenuEventHandler, DebugHudSetting, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDebugMenuEventHandler, 0x0078);
		}

		// class UCFDMLogSwitchBattle : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__CFDMLogSwitchBattle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDMLogSwitchBattle, 0x0058);
		}

		// class UCFDMLogSwitchProjectile : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__CFDMLogSwitchProjectile)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDMLogSwitchProjectile, 0x0058);
		}

		// class UCFDMLogSwitchStage : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__CFDMLogSwitchStage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDMLogSwitchStage, 0x0058);
		}

		// class UCFDMLogSwitchEffect : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__CFDMLogSwitchEffect)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDMLogSwitchEffect, 0x0058);
		}

		// class UCFDMLogSwitchAI : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__CFDMLogSwitchAI)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDMLogSwitchAI, 0x0058);
		}

		// class UCFDMLogSwitchCamera : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__CFDMLogSwitchCamera)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDMLogSwitchCamera, 0x0058);
		}

		// class UCFDMLogSwitchInput : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__CFDMLogSwitchInput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDMLogSwitchInput, 0x0058);
		}

		// class UCFDMLogSwitchCollision : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__CFDMLogSwitchCollision)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDMLogSwitchCollision, 0x0058);
		}

		// class UCFDMLogSwitchUI : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__CFDMLogSwitchUI)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDMLogSwitchUI, 0x0058);
		}

		// class UCFDMLogSwitchParameter : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__CFDMLogSwitchParameter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDMLogSwitchParameter, 0x0058);
		}

		// class UCFDMLogSwitchAdvLevel : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__CFDMLogSwitchAdvLevel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDMLogSwitchAdvLevel, 0x0058);
		}

		// class UCFDMLogSwitchAdvTalk : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__CFDMLogSwitchAdvTalk)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDMLogSwitchAdvTalk, 0x0058);
		}

		// class UCFDMLogSwitchAdvMob : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__CFDMLogSwitchAdvMob)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDMLogSwitchAdvMob, 0x0058);
		}

		// class UCFDMLogSwitchNetBattle : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__CFDMLogSwitchNetBattle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDMLogSwitchNetBattle, 0x0058);
		}

		// class UCFDMLogSwitchNetLobby : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__CFDMLogSwitchNetLobby)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDMLogSwitchNetLobby, 0x0058);
		}

		// class UCFDMLogSwitchGeneral : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__CFDMLogSwitchGeneral)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCFDMLogSwitchGeneral, 0x0058);
		}

		// class UATDebugMenuEventHandlerLog : public UCFDebugMenuEventHandlerContentsFactory
		TEST_METHOD(Class__ATExt__ATDebugMenuEventHandlerLog)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDebugMenuEventHandlerLog, Handlers, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDebugMenuEventHandlerLog, 0x00B0);
		}

		// class UATDebugMenuEventHandlerBatch : public UCFDebugMenuEventHandlerContentsFactory
		TEST_METHOD(Class__ATExt__ATDebugMenuEventHandlerBatch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATDebugMenuEventHandlerBatch, Handlers, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDebugMenuEventHandlerBatch, 0x0040);
		}

		// class UDMBattleDraw_Base : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__DMBattleDraw_Base)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMBattleDraw_Base, 0x0058);
		}

		// class UDMBattleDraw_Player_All : public UDMBattleDraw_Base
		TEST_METHOD(Class__ATExt__DMBattleDraw_Player_All)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMBattleDraw_Player_All, 0x0058);
		}

		// class UDMBattleDraw_Player_Single : public UDMBattleDraw_Base
		TEST_METHOD(Class__ATExt__DMBattleDraw_Player_Single)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDMBattleDraw_Player_Single, UnknownData_NPJX, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMBattleDraw_Player_Single, 0x0060);
		}

		// class UDMBattleDraw_Skill_All : public UDMBattleDraw_Base
		TEST_METHOD(Class__ATExt__DMBattleDraw_Skill_All)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMBattleDraw_Skill_All, 0x0058);
		}

		// class UDMBattleDraw_Skill_Single : public UDMBattleDraw_Base
		TEST_METHOD(Class__ATExt__DMBattleDraw_Skill_Single)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDMBattleDraw_Skill_Single, UnknownData_I1AD, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMBattleDraw_Skill_Single, 0x0060);
		}

		// class UDMBattleDraw_Stage_All : public UDMBattleDraw_Base
		TEST_METHOD(Class__ATExt__DMBattleDraw_Stage_All)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMBattleDraw_Stage_All, 0x0058);
		}

		// class UDMBattleDraw_Stage_Tree : public UDMBattleDraw_Base
		TEST_METHOD(Class__ATExt__DMBattleDraw_Stage_Tree)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMBattleDraw_Stage_Tree, 0x0058);
		}

		// class UDMBattleDraw_Stage_Background : public UDMBattleDraw_Base
		TEST_METHOD(Class__ATExt__DMBattleDraw_Stage_Background)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMBattleDraw_Stage_Background, 0x0058);
		}

		// class UDMBattleDraw_Stage_Etc : public UDMBattleDraw_Base
		TEST_METHOD(Class__ATExt__DMBattleDraw_Stage_Etc)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMBattleDraw_Stage_Etc, 0x0058);
		}

		// class UDMBattleDraw_Effect_All : public UDMBattleDraw_Base
		TEST_METHOD(Class__ATExt__DMBattleDraw_Effect_All)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMBattleDraw_Effect_All, 0x0058);
		}

		// class UDMBattleDraw_Decal_All : public UDMBattleDraw_Base
		TEST_METHOD(Class__ATExt__DMBattleDraw_Decal_All)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMBattleDraw_Decal_All, 0x0058);
		}

		// class UDMBattleDraw_EnvActor_All : public UDMBattleDraw_Base
		TEST_METHOD(Class__ATExt__DMBattleDraw_EnvActor_All)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMBattleDraw_EnvActor_All, 0x0058);
		}

		// class UDMBattleDraw_ScreenEffect_All : public UDMBattleDraw_Base
		TEST_METHOD(Class__ATExt__DMBattleDraw_ScreenEffect_All)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMBattleDraw_ScreenEffect_All, 0x0058);
		}

		// class UATDebugMenuEventHandlerDraw : public UCFDebugMenuEventHandlerContentsFactory
		TEST_METHOD(Class__ATExt__ATDebugMenuEventHandlerDraw)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDebugMenuEventHandlerDraw, 0x0030);
		}

		// class UDMBoolShowBattleScore : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__DMBoolShowBattleScore)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMBoolShowBattleScore, 0x0058);
		}

		// class UDMBoolStopBattleTimer : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__DMBoolStopBattleTimer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMBoolStopBattleTimer, 0x0058);
		}

		// class UDMBoolInfinityItem : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__DMBoolInfinityItem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMBoolInfinityItem, 0x0058);
		}

		// class UATDebugMenuEventHandlerBattleSetting : public UCFDebugMenuEventHandlerContentsFactory
		TEST_METHOD(Class__ATExt__ATDebugMenuEventHandlerBattleSetting)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDebugMenuEventHandlerBattleSetting, 0x0030);
		}

		// class UDMBattlePlayer_NotDeath : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__DMBattlePlayer_NotDeath)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMBattlePlayer_NotDeath, 0x0058);
		}

		// class UDMBattlePlayer_VisibleActionCancel : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__DMBattlePlayer_VisibleActionCancel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMBattlePlayer_VisibleActionCancel, 0x0058);
		}

		// class UDMBattlePlayer_VisibleSuperArmor : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__DMBattlePlayer_VisibleSuperArmor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMBattlePlayer_VisibleSuperArmor, 0x0058);
		}

		// class UDMChangePlayerControllerToAI : public UCFDebugMenuEventHandlerTrigger
		TEST_METHOD(Class__ATExt__DMChangePlayerControllerToAI)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMChangePlayerControllerToAI, 0x0038);
		}

		// class UDMChangePlayerControllerToAIAll : public UCFDebugMenuEventHandlerTrigger
		TEST_METHOD(Class__ATExt__DMChangePlayerControllerToAIAll)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMChangePlayerControllerToAIAll, 0x0038);
		}

		// class UDMBattlePlayer_DispInfoAI : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__DMBattlePlayer_DispInfoAI)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMBattlePlayer_DispInfoAI, 0x0058);
		}

		// class UDMBattlePlyaer_FriendlyFire_Damage : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__DMBattlePlyaer_FriendlyFire_Damage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMBattlePlyaer_FriendlyFire_Damage, 0x0058);
		}

		// class UDMDebugDispPlayerEffect : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__DMDebugDispPlayerEffect)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMDebugDispPlayerEffect, 0x0058);
		}

		// class UDMDebugDelayDamage : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__DMDebugDelayDamage)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMDebugDelayDamage, 0x0058);
		}

		// class UATDebugMenuEventHandlerBattlePlayer : public UCFDebugMenuEventHandlerContentsFactory
		TEST_METHOD(Class__ATExt__ATDebugMenuEventHandlerBattlePlayer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDebugMenuEventHandlerBattlePlayer, 0x0030);
		}

		// class UDMBoolRandomPadEnable : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__DMBoolRandomPadEnable)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMBoolRandomPadEnable, 0x0058);
		}

		// class UATDebugMenuEventHandlerRandomPadSetting : public UCFDebugMenuEventHandlerContentsFactory
		TEST_METHOD(Class__ATExt__ATDebugMenuEventHandlerRandomPadSetting)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDebugMenuEventHandlerRandomPadSetting, 0x0030);
		}

		// class UDMBattleDebugDispMotionInfo : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__DMBattleDebugDispMotionInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMBattleDebugDispMotionInfo, 0x0058);
		}

		// class UATDebugMenuEventHandlerBattleDebugDisp : public UCFDebugMenuEventHandlerContentsFactory
		TEST_METHOD(Class__ATExt__ATDebugMenuEventHandlerBattleDebugDisp)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDebugMenuEventHandlerBattleDebugDisp, 0x0030);
		}

		// class UATDebugMenuEventHandlerSkillSetting : public UCFDebugMenuEventHandlerContentsFactory
		TEST_METHOD(Class__ATExt__ATDebugMenuEventHandlerSkillSetting)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDebugMenuEventHandlerSkillSetting, 0x0030);
		}

		// class UDMDebugHud_DebugInfo : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__DMDebugHud_DebugInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMDebugHud_DebugInfo, 0x0058);
		}

		// class UDMDebugHud_PrintLog : public UCFDebugMenuEventHandlerBool
		TEST_METHOD(Class__ATExt__DMDebugHud_PrintLog)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDMDebugHud_PrintLog, 0x0058);
		}

		// class UATDebugMenuEventHandlerDebugHudSetting : public UCFDebugMenuEventHandlerContentsFactory
		TEST_METHOD(Class__ATExt__ATDebugMenuEventHandlerDebugHudSetting)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATDebugMenuEventHandlerDebugHudSetting, 0x0030);
		}

		// class UATGeneralBattleMainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATGeneralBattleMainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATGeneralBattleMainPhase, UnknownData_L7YI, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATGeneralBattleMainPhase, 0x0088);
		}

		// class UATEventBattle25MainPhase : public UATGeneralBattleMainPhase
		TEST_METHOD(Class__ATExt__ATEventBattle25MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEventBattle25MainPhase, UnknownData_V1Y0, 0x0088);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATEventBattle25MainPhase, 0x0090);
		}

		// class AATEventBattle25RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATEventBattle25RootManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATEventBattle25RootManager, DiseaseConditionTime, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATEventBattle25RootManager, DiseaseConditionLife, 0x0394);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATEventBattle25RootManager, DiseaseConditionLifeEnemy, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATEventBattle25RootManager, UnknownData_MYDP, 0x039C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATEventBattle25RootManager, 0x03A0);
		}

		// class UATEventBattle41MainPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATEventBattle41MainPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEventBattle41MainPhase, UnknownData_7RBV, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATEventBattle41MainPhase, 0x0090);
		}

		// class AATEventBattle41RootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATEventBattle41RootManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATEventBattle41RootManager, HeatupValue, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATEventBattle41RootManager, UnknownData_9QAO, 0x0394);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATEventBattle41RootManager, 0x0398);
		}

		// class UATEventBattleAccessor : public UObject
		TEST_METHOD(Class__ATExt__ATEventBattleAccessor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEventBattleAccessor, UnknownData_9PL3, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEventBattleAccessor, BattleName, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEventBattleAccessor, UnknownData_8E2S, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEventBattleAccessor, BattleLoader, 0x7D60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEventBattleAccessor, UnknownData_7MZ4, 0x7D68);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATEventBattleAccessor, 0x7D70);
		}

		// class UATEventBattleAfterAction : public UObject
		TEST_METHOD(Class__ATExt__ATEventBattleAfterAction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATEventBattleAfterAction, 0x0028);
		}

		// class UATEventBattleCondition : public UObject
		TEST_METHOD(Class__ATExt__ATEventBattleCondition)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEventBattleCondition, UnknownData_EOQP, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATEventBattleCondition, 0x0040);
		}

		// class AATEventBattleLoader : public AActor
		TEST_METHOD(Class__ATExt__ATEventBattleLoader)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATEventBattleLoader, 0x0338);
		}

		// class UATEventBattleSituationJudge : public UObject
		TEST_METHOD(Class__ATExt__ATEventBattleSituationJudge)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEventBattleSituationJudge, UnknownData_ZO1V, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATEventBattleSituationJudge, 0x0050);
		}

		// class AATEventBattleStartPoint : public AActor
		TEST_METHOD(Class__ATExt__ATEventBattleStartPoint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATEventBattleStartPoint, BattleName, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATEventBattleStartPoint, TeamType, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATEventBattleStartPoint, MemberIndex, 0x0341);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATEventBattleStartPoint, bSetRotation, 0x0342);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATEventBattleStartPoint, UnknownData_1SKT, 0x0343);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATEventBattleStartPoint, 0x0348);
		}

		// class UATEventBattleStartPointManager : public UObject
		TEST_METHOD(Class__ATExt__ATEventBattleStartPointManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATEventBattleStartPointManager, UnknownData_XVF4, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATEventBattleStartPointManager, 0x0078);
		}

		// class AATGameModeBase : public ACFGameMode
		TEST_METHOD(Class__ATExt__ATGameModeBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATGameModeBase, 0x0420);
		}

		// class AATGameModeDevelopmentRoot : public AATGameModeBase
		TEST_METHOD(Class__ATExt__ATGameModeDevelopmentRoot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATGameModeDevelopmentRoot, 0x0420);
		}

		// class AATGameModeRoot : public AATGameModeBase
		TEST_METHOD(Class__ATExt__ATGameModeRoot)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATGameModeRoot, 0x0420);
		}

		// class UATGeneralBattleDirectionPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATGeneralBattleDirectionPhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATGeneralBattleDirectionPhase, UnknownData_2U10, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATGeneralBattleDirectionPhase, 0x0098);
		}

		// class AATGeneralBattleRootManager : public AATEventBattleRootManagerBase
		TEST_METHOD(Class__ATExt__ATGeneralBattleRootManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATGeneralBattleRootManager, 0x0390);
		}

		// class UATGeneralBattleSettlePhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATGeneralBattleSettlePhase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATGeneralBattleSettlePhase, UnknownData_VYY6, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATGeneralBattleSettlePhase, 0x00C0);
		}

		// class UATGeneralBattleSetUpPhase : public UATEventBattlePhaseBase
		TEST_METHOD(Class__ATExt__ATGeneralBattleSetUpPhase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATGeneralBattleSetUpPhase, 0x0030);
		}

		// class UATHUDDebugBootMenu : public UCFHUDDebugNodeSelectorComponent
		TEST_METHOD(Class__ATExt__ATHUDDebugBootMenu)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATHUDDebugBootMenu, DrawTexture, 0x01E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATHUDDebugBootMenu, UnknownData_9F3A, 0x01F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATHUDDebugBootMenu, 0x0218);
		}

		// class AATLake : public AActor
		TEST_METHOD(Class__ATExt__ATLake)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATLake, UnknownData_AV6V, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATLake, 0x0348);
		}

		// class UATLinkBonus : public UObject
		TEST_METHOD(Class__ATExt__ATLinkBonus)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATLinkBonus, UnknownData_ZPWQ, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATLinkBonus, 0x0188);
		}

		// class UATMonitoring : public UObject
		TEST_METHOD(Class__ATExt__ATMonitoring)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMonitoring, UnknownData_E1FN, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMonitoring, bIsBind_OnEndAutoSave, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMonitoring, UnknownData_870N, 0x002D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMonitoring, ParentGameInstance, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMonitoring, UnknownData_U8IP, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMonitoring, 0x0040);
		}

		// class UATMonitoringSaveGame : public USaveGame
		TEST_METHOD(Class__ATExt__ATMonitoringSaveGame)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMonitoringSaveGame, Pack, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMonitoringSaveGame, 0x04C0);
		}

		// class UATPadVibrationManager : public UBaseObject
		TEST_METHOD(Class__ATExt__ATPadVibrationManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATPadVibrationManager, UnknownData_2CQP, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATPadVibrationManager, 0x0058);
		}

		// class UATPushSolverShapeCapsule : public UCFPushSolverShapeCapsule
		TEST_METHOD(Class__ATExt__ATPushSolverShapeCapsule)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATPushSolverShapeCapsule, 0x05B0);
		}

		// class AATRiver : public AActor
		TEST_METHOD(Class__ATExt__ATRiver)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRiver, UnknownData_4A13, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::AATRiver, PostProcessVolume, 0x0348);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AATRiver, 0x0350);
		}

		// class UQuest_Main_Clear_Rank_C : public UAT_UIQuestMainClearRank
		TEST_METHOD(WidgetBlueprintGeneratedClass__Quest_Main_Clear_Rank__Quest_Main_Clear_Rank_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Rank_B_Out, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Rank_A_Out, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Rank_S_Out, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Rank_B_Start, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Rank_A_Start, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Rank_S_Start, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, All_Nut, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, All_Quest_Main_Clear_Rank, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Img_Fad00, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Img_Fad00_00, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Img_Fad00_01, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Img_Fad00_02, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Img_Fad00_03, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Img_Fad00_04, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Img_Fad00_05, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Img_Fad01, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Img_Light01_00, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Img_particle01, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Ins_Light04_00, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Ins_Light04_01, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Ins_Light04_02, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Ins_Light04_03, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Ins_Rate_Eff, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Ins_Rate_M, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Ins_Rate_M02, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Ins_Sprk00_M00, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Ins_Sprk00_M01, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Ins_Sprk00_M02, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Ins_Sun, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Ins_Sun01_00, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Ins_Sun01_01, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Ins_Sun01_02, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Ins_SunM, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Lang_Total00, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Pnl_Eff, 0x05B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Pnl_Light01, 0x05C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Pnl_Sprk00, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Pnl_Sun, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Xef_Fad01_00, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Xef_Fad01_01, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Xef_Fad01_02, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Xef_Fad01_03, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Xef_Light_Sprk_00, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Xef_Light_Sprk_01, 0x0600);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Xef_Light_Sprk_02, 0x0608);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Xef_Shine00_00, 0x0610);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Xef_Shine00_01, 0x0618);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Xef_Sprk00_00, 0x0620);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Xef_Sprk00_01, 0x0628);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Xef_Sprk00_02, 0x0630);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Xef_Sprk00_03, 0x0638);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Xef_Sprk00_04, 0x0640);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, Xef_Sprk00_05, 0x0648);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, pathParam00, 0x0650);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, pathParam01, 0x0678);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, pathParam02, 0x06A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Rank_C, pathParam01_1, 0x06C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuest_Main_Clear_Rank_C, 0x06F0);
		}

		// class UMap_List_Info_C : public UAT_UIMapListInfo
		TEST_METHOD(WidgetBlueprintGeneratedClass__Map_List_Info__Map_List_Info_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_List_Info_C, Out_1, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_List_Info_C, In_1, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_List_Info_C, Img_Icon_Fever_Arrow, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_List_Info_C, Ins_Base_Fad00_Add, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_List_Info_C, Ins_Eff_Fad02, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_List_Info_C, Ins_Icon_Item, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_List_Info_C, Ins_Micon, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_List_Info_C, Ins_Micon01, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_List_Info_C, Ins_Xef_Fad01, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_List_Info_C, Ins_Xef_Line01, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_List_Info_C, Ins_Xef_Line02, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_List_Info_C, Ins_Xef_Sun04_Rot, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_List_Info_C, Txt00, 0x0438);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMap_List_Info_C, 0x0440);
		}

		// class UMap_World_Curs_C : public UAT_UIMapWorldCurs
		TEST_METHOD(WidgetBlueprintGeneratedClass__Map_World_Curs__Map_World_Curs_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs_C, Free_Out_Cur, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs_C, Free_In_Cur, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs_C, Loop_Free_Cur, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs_C, All_Map_World_Curs, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs_C, Img_Curs01_00, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs_C, Img_Curs01_01, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs_C, Img_Curs_Long01_00, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs_C, Img_Curs_Long01_01, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs_C, Ins_Curs01_00, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs_C, Ins_Curs01_01, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs_C, Ins_Curs_Circle02, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs_C, Ins_Curs_Long01_00, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs_C, Ins_Curs_Long01_01, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Curs_C, Pnl_Curs01, 0x03F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMap_World_Curs_C, 0x0400);
		}

		// class UXef_Hud_Eff_C : public UAT_UIUseItemEffect
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xef_Hud_Eff__Xef_Hud_Eff_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, Start, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, All_Nut, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, All_Nut_InvalidationBox, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, All_Xcmn_Hud_Eff, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, Img_Xef_Aura01, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, Ins_Fad_Blink01, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, Ins_Light04_00, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, Ins_Light04_01, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, Ins_Light04_02, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, Ins_Light04_03, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, Ins_Xef_Fad04, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, Ins_Xef_Fad04_00, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, Ins_Xef_Fad07, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, Ins_Xef_Line03_11, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, Ins_Xef_Line03_00, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, Ins_Xef_Line03_01, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, Ins_Xef_Line03_02, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, Ins_Xef_Line03_03, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, Ins_Xef_Line03_04, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, Ins_Xef_Line03_05, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, Ins_Xef_Line03_06, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, Ins_Xef_Line03_07, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, Ins_Xef_Line03_09, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, HP, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, SP, 0x043C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, Breakpoint, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, MaxHP, 0x0444);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, MaxSP, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, UnknownData_34EJ, 0x044C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, CharacterIcon, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, MaxHP_Nums, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, HP_Nums, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, MaxSP_Nums, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, SP_Nums, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXef_Hud_Eff_C, FaceTex, 0x0498);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXef_Hud_Eff_C, 0x04A0);
		}

		// class UBattle_Hud_P_Main_C : public UAT_UIBattleHudPlayer
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Hud_P_Main__Battle_Hud_P_Main_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Out_Battle, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Out_Heat, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, In_Heat, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Out_Change, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, In_Change, 0x0600);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, In_Battle, 0x0608);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Up_Lv_P, 0x0610);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Out, 0x0618);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, In, 0x0620);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, All_Nut, 0x0628);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, All_Nut_InvalidationBox, 0x0630);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Battle_Gauge_Heat, 0x0638);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Battle_Gauge_Hp, 0x0640);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Battle_Gauge_Sp, 0x0648);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Battle_Hud_P_Spo_00, 0x0650);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Battle_Hud_P_Spo_01, 0x0658);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Icon_State_Lay_P, 0x0660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Img_Deco_Cloud01_00, 0x0668);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Img_Deco_Cloud01_01, 0x0670);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Img_P_Base, 0x0678);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Ins_Change_Eff_Elc00, 0x0680);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Ins_Char_Fad, 0x0688);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Ins_Charicon_F00, 0x0690);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Ins_Heat_Eff00, 0x0698);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Ins_Heat_Eff01, 0x06A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Ins_Heat_Eff02, 0x06A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Ins_Xef_Fad04, 0x06B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Ins_Xef_Fad09, 0x06B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Ins_Xef_Fire00_04, 0x06C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Ins_Xef_Fire00_05, 0x06C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Ins_Xef_Fire00_06, 0x06D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Ins_Xef_Fire00_07, 0x06D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Ins_Xef_Fire00_08, 0x06E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Txt_Lv, 0x06E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Txt_Lv_Eff00, 0x06F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Txt_Lv_Eff01, 0x06F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Txt_Name_Char, 0x0700);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Txt_Num_Hp, 0x0708);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Txt_Num_Hp_Shadow, 0x0710);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Txt_Num_Sp, 0x0718);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Txt_Num_Sp_Shadow, 0x0720);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Hud_P_Main_C, Xef_Hud_Eff, 0x0728);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Hud_P_Main_C, 0x0730);
		}

		// class UBattle_Lock_Tps00_C : public UAT_UITPSSkillCursor
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Lock_Tps00__Battle_Lock_Tps00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps00_C, Out, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps00_C, In, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps00_C, Img_Curs_Parts00, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps00_C, Img_Curs_Parts01, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps00_C, Img_Curs_Parts02, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps00_C, Ins_Curs_Eff00, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_Tps00_C, Ins_Curs_Eff01, 0x03F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Lock_Tps00_C, 0x0400);
		}

		// class UField_Search_C : public UAT_UIFieldSearchCore
		TEST_METHOD(WidgetBlueprintGeneratedClass__Field_Search__Field_Search_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Search_C, Out_Race, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Search_C, In_Race, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Search_C, Out, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Search_C, In, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Search_C, Img_Micon22, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Search_C, Img_Search_Base, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Search_C, Ins_Item, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Search_C, Xcmn_Distance, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Search_C, Xcmn_Distance_Race, 0x0420);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UField_Search_C, 0x0428);
		}

		// class UInfo_Log_Bar_C : public UAT_UIInfoLogBar
		TEST_METHOD(WidgetBlueprintGeneratedClass__Info_Log_Bar__Info_Log_Bar_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Bar_C, UberGraphFrame, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Bar_C, Out, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Bar_C, In, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Bar_C, Img_Icon_Info, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Bar_C, Ins_Icon_Group, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Bar_C, Ins_Icon_Item, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Bar_C, Ins_Icon_New, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Bar_C, Ins_Xef_Line01, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Bar_C, Ins_Xef_Line02, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Bar_C, Txt00, 0x0408);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInfo_Log_Bar_C, 0x0410);
		}

		// class UIcon_Db_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Icon_Db__Icon_Db_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_Db_C, Ins_Icon_Db, 0x0208);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UIcon_Db_C, 0x0210);
		}

		// class UMap_Tex_C : public UAT_UIMapTex
		TEST_METHOD(WidgetBlueprintGeneratedClass__Map_Tex__Map_Tex_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Dmy_Map, 0x06A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area00_00_00, 0x06A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area00_00_00_01, 0x06B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area00_00_00_02, 0x06B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area00_00_00_03, 0x06C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area00_00_00_04, 0x06C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area00_00_00_05, 0x06D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area00_00_00_06, 0x06D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area00_00_01, 0x06E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area00_00_01_01, 0x06E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area01_00_00, 0x06F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area01_00_01, 0x06F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area01_00_02, 0x0700);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area01_00_03, 0x0708);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area02_00_00, 0x0710);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area02_00_00_01, 0x0718);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area03_00_00, 0x0720);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area03_00_01, 0x0728);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area03_00_02, 0x0730);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area03_00_03, 0x0738);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area03_00_04, 0x0740);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area03_00_05, 0x0748);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area03_01_00, 0x0750);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area03_01_00_01, 0x0758);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area03_02_00, 0x0760);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area03_02_01, 0x0768);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area04_00_00, 0x0770);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area04_00_01, 0x0778);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area04_00_02, 0x0780);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area05_00_00, 0x0788);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area05_00_00_01, 0x0790);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area05_00_01, 0x0798);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area05_00_02, 0x07A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area06_00_00, 0x07A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area06_00_01, 0x07B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area06_00_02, 0x07B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area07_00_00, 0x07C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area07_00_01, 0x07C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area07_00_02, 0x07D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area07_00_03, 0x07D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area07_02_00, 0x07E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area07_02_00_01, 0x07E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area07_02_01, 0x07F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area07_02_02, 0x07F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area08_00_00, 0x0800);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area09_00_00, 0x0808);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area09_00_01, 0x0810);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area10_00_00, 0x0818);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area11_00_00, 0x0820);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area11_00_01, 0x0828);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area11_00_02, 0x0830);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area11_00_03, 0x0838);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area11_00_04, 0x0840);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area16_00_00, 0x0848);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Img_Icon_Area16_00_01, 0x0850);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Ins_Air01_Curs, 0x0858);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Ins_Air01_Icon, 0x0860);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Ins_Air01_Point, 0x0868);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Ins_Air_Curs, 0x0870);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Ins_Air_Icon, 0x0878);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Tex_C, Ins_Air_Point, 0x0880);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMap_Tex_C, 0x0888);
		}

		// class UMovieScenePropertyTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieScenePropertyTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScenePropertyTrack, PropertyName, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScenePropertyTrack, PropertyPath, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScenePropertyTrack, Sections, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScenePropertyTrack, 0x0080);
		}

		// class UMovieSceneTransformOrigin : public UInterface
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneTransformOrigin)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneTransformOrigin, 0x0028);
		}

		// class UMovieScene3DConstraintSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieScene3DConstraintSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene3DConstraintSection, ConstraintId, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene3DConstraintSection, ConstraintBindingID, 0x00F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScene3DConstraintSection, 0x0108);
		}

		// class UMovieScene3DAttachSection : public UMovieScene3DConstraintSection
		TEST_METHOD(Class__MovieSceneTracks__MovieScene3DAttachSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene3DAttachSection, AttachSocketName, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene3DAttachSection, AttachComponentName, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene3DAttachSection, AttachmentLocationRule, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene3DAttachSection, AttachmentRotationRule, 0x0119);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene3DAttachSection, AttachmentScaleRule, 0x011A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene3DAttachSection, DetachmentLocationRule, 0x011B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene3DAttachSection, DetachmentRotationRule, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene3DAttachSection, DetachmentScaleRule, 0x011D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene3DAttachSection, UnknownData_I0GH, 0x011E);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScene3DAttachSection, 0x0120);
		}

		// class UMovieScene3DConstraintTrack : public UMovieSceneTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieScene3DConstraintTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene3DConstraintTrack, ConstraintSections, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScene3DConstraintTrack, 0x0068);
		}

		// class UMovieScene3DAttachTrack : public UMovieScene3DConstraintTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieScene3DAttachTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScene3DAttachTrack, 0x0068);
		}

		// class UMovieScene3DPathSection : public UMovieScene3DConstraintSection
		TEST_METHOD(Class__MovieSceneTracks__MovieScene3DPathSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene3DPathSection, TimingCurve, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene3DPathSection, FrontAxisEnum, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene3DPathSection, UpAxisEnum, 0x01A9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene3DPathSection, UnknownData_0ICJ, 0x01AA);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene3DPathSection, UnknownData_5RTR, 0x01AD);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScene3DPathSection, 0x01B0);
		}

		// class UMovieScene3DPathTrack : public UMovieScene3DConstraintTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieScene3DPathTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScene3DPathTrack, 0x0068);
		}

		// class UMovieScene3DTransformSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieScene3DTransformSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene3DTransformSection, TransformMask, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene3DTransformSection, UnknownData_16KP, 0x00E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene3DTransformSection, Translation, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene3DTransformSection, Rotation, 0x02C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene3DTransformSection, Scale, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene3DTransformSection, ManualWeight, 0x0688);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene3DTransformSection, UnknownData_8GX2, 0x0728);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene3DTransformSection, bUseQuaternionInterpolation, 0x072C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene3DTransformSection, UnknownData_ODEV, 0x072D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScene3DTransformSection, 0x0730);
		}

		// class UMovieScene3DTransformTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieScene3DTransformTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScene3DTransformTrack, 0x0080);
		}

		// class UMovieSceneActorReferenceSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneActorReferenceSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneActorReferenceSection, ActorReferenceData, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneActorReferenceSection, ActorGuidIndexCurve, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneActorReferenceSection, ActorGuidStrings, 0x01F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneActorReferenceSection, 0x0200);
		}

		// class UMovieSceneActorReferenceTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneActorReferenceTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneActorReferenceTrack, 0x0080);
		}

		// class UMovieSceneAudioSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneAudioSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneAudioSection, Sound, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneAudioSection, StartOffset, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneAudioSection, AudioStartTime, 0x00EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneAudioSection, AudioDilationFactor, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneAudioSection, AudioVolume, 0x00F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneAudioSection, SoundVolume, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneAudioSection, PitchMultiplier, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneAudioSection, bSuppressSubtitles, 0x0238);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneAudioSection, bOverrideAttenuation, 0x0239);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneAudioSection, UnknownData_F6KB, 0x023A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneAudioSection, AttenuationSettings, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneAudioSection, OnQueueSubtitles, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneAudioSection, OnAudioFinished, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneAudioSection, OnAudioPlaybackPercent, 0x0268);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneAudioSection, 0x0278);
		}

		// class UMovieSceneAudioTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneAudioTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneAudioTrack, AudioSections, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneAudioTrack, 0x0068);
		}

		// class UMovieSceneBoolSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneBoolSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneBoolSection, DefaultValue, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneBoolSection, UnknownData_ATY4, 0x00E1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneBoolSection, BoolCurve, 0x00E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneBoolSection, 0x0178);
		}

		// class UMovieSceneBoolTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneBoolTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneBoolTrack, 0x0080);
		}

		// class UMovieSceneByteSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneByteSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneByteSection, ByteCurve, 0x00E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneByteSection, 0x0178);
		}

		// class UMovieSceneByteTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneByteTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneByteTrack, Enum, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneByteTrack, 0x0088);
		}

		// class UMovieSceneCameraAnimSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneCameraAnimSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCameraAnimSection, AnimData, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCameraAnimSection, CameraAnim, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCameraAnimSection, PlayRate, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCameraAnimSection, PlayScale, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCameraAnimSection, BlendInTime, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCameraAnimSection, BlendOutTime, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCameraAnimSection, bLooping, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCameraAnimSection, UnknownData_SPWY, 0x0119);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneCameraAnimSection, 0x0120);
		}

		// class UMovieSceneCameraAnimTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneCameraAnimTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCameraAnimTrack, CameraAnimSections, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneCameraAnimTrack, 0x0068);
		}

		// class UMovieSceneCameraCutSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneCameraCutSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCameraCutSection, CameraGuid, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCameraCutSection, CameraBindingID, 0x00F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneCameraCutSection, 0x0108);
		}

		// class UMovieSceneCameraCutTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneCameraCutTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCameraCutTrack, Sections, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneCameraCutTrack, 0x0068);
		}

		// class UMovieSceneCameraShakeSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneCameraShakeSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCameraShakeSection, ShakeData, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCameraShakeSection, ShakeClass, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCameraShakeSection, PlayScale, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCameraShakeSection, PlaySpace, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCameraShakeSection, UnknownData_SXTG, 0x010D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCameraShakeSection, UserDefinedPlaySpace, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCameraShakeSection, UnknownData_XYPS, 0x011C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneCameraShakeSection, 0x0120);
		}

		// class UMovieSceneCameraShakeTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneCameraShakeTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCameraShakeTrack, CameraShakeSections, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneCameraShakeTrack, 0x0068);
		}

		// class UMovieSceneCinematicShotSection : public UMovieSceneSubSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneCinematicShotSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCinematicShotSection, ShotDisplayName, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneCinematicShotSection, DisplayName, 0x0160);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneCinematicShotSection, 0x0178);
		}

		// class UMovieSceneCinematicShotTrack : public UMovieSceneSubTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneCinematicShotTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneCinematicShotTrack, 0x0068);
		}

		// class UMovieSceneColorSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneColorSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneColorSection, RedCurve, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneColorSection, GreenCurve, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneColorSection, BlueCurve, 0x0220);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneColorSection, AlphaCurve, 0x02C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneColorSection, 0x0360);
		}

		// class UMovieSceneColorTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneColorTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneColorTrack, bIsSlateColor, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneColorTrack, UnknownData_JFXC, 0x0081);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneColorTrack, 0x0088);
		}

		// class UMovieSceneEnumSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneEnumSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneEnumSection, EnumCurve, 0x00E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneEnumSection, 0x0178);
		}

		// class UMovieSceneEnumTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneEnumTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneEnumTrack, Enum, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneEnumTrack, 0x0088);
		}

		// class UMovieSceneEulerTransformTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneEulerTransformTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneEulerTransformTrack, 0x0080);
		}

		// class UMovieSceneEventSectionBase : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneEventSectionBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneEventSectionBase, 0x00E0);
		}

		// class UMovieSceneEventRepeaterSection : public UMovieSceneEventSectionBase
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneEventRepeaterSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneEventRepeaterSection, Event, 0x00E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneEventRepeaterSection, 0x00E8);
		}

		// class UMovieSceneEventSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneEventSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneEventSection, Events, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneEventSection, EventData, 0x0148);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneEventSection, 0x01D0);
		}

		// class UMovieSceneEventTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneEventTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneEventTrack, UnknownData_MPWO, 0x0059);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneEventTrack, EventPosition, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneEventTrack, UnknownData_F610, 0x005D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneEventTrack, EventReceivers, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneEventTrack, Sections, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneEventTrack, 0x0080);
		}

		// class UMovieSceneEventTriggerSection : public UMovieSceneEventSectionBase
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneEventTriggerSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneEventTriggerSection, EventChannel, 0x00E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneEventTriggerSection, 0x0168);
		}

		// class UMovieSceneFloatSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneFloatSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneFloatSection, FloatCurve, 0x00E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneFloatSection, 0x0180);
		}

		// class UMovieSceneFadeSection : public UMovieSceneFloatSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneFadeSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneFadeSection, FadeColor, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneFadeSection, UnknownData_Q4IJ, 0x0191);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneFadeSection, 0x0198);
		}

		// class UMovieSceneFloatTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneFloatTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneFloatTrack, 0x0080);
		}

		// class UMovieSceneFadeTrack : public UMovieSceneFloatTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneFadeTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneFadeTrack, 0x0080);
		}

		// class UMovieSceneIntegerSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneIntegerSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneIntegerSection, IntegerCurve, 0x00E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneIntegerSection, 0x0170);
		}

		// class UMovieSceneIntegerTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneIntegerTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneIntegerTrack, 0x0080);
		}

		// class UMovieSceneLevelVisibilitySection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneLevelVisibilitySection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneLevelVisibilitySection, Visibility, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneLevelVisibilitySection, UnknownData_JFEL, 0x00E1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneLevelVisibilitySection, LevelNames, 0x00E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneLevelVisibilitySection, 0x00F8);
		}

		// class UMovieSceneLevelVisibilityTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneLevelVisibilityTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneLevelVisibilityTrack, Sections, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneLevelVisibilityTrack, 0x0068);
		}

		// class UMovieSceneMaterialTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneMaterialTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneMaterialTrack, Sections, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneMaterialTrack, 0x0068);
		}

		// class UMovieSceneMaterialParameterCollectionTrack : public UMovieSceneMaterialTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneMaterialParameterCollectionTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneMaterialParameterCollectionTrack, MPC, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneMaterialParameterCollectionTrack, 0x0070);
		}

		// class UMovieSceneComponentMaterialTrack : public UMovieSceneMaterialTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneComponentMaterialTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneComponentMaterialTrack, MaterialIndex, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneComponentMaterialTrack, UnknownData_1IOJ, 0x006C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneComponentMaterialTrack, 0x0070);
		}

		// class UMovieSceneParameterSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneParameterSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneParameterSection, ScalarParameterNamesAndCurves, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneParameterSection, VectorParameterNamesAndCurves, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneParameterSection, ColorParameterNamesAndCurves, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneParameterSection, 0x0110);
		}

		// class UMovieSceneParticleParameterTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneParticleParameterTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneParticleParameterTrack, Sections, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneParticleParameterTrack, 0x0068);
		}

		// class UMovieSceneParticleSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneParticleSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneParticleSection, ParticleKeys, 0x00E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneParticleSection, 0x0178);
		}

		// class UMovieSceneParticleTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneParticleTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneParticleTrack, ParticleSections, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneParticleTrack, 0x0068);
		}

		// class UMovieSceneSkeletalAnimationSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneSkeletalAnimationSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSkeletalAnimationSection, Params, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSkeletalAnimationSection, AnimSequence, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSkeletalAnimationSection, Animation, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSkeletalAnimationSection, StartOffset, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSkeletalAnimationSection, EndOffset, 0x01BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSkeletalAnimationSection, PlayRate, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSkeletalAnimationSection, UnknownData_UDWG, 0x01C5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSkeletalAnimationSection, SlotName, 0x01C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneSkeletalAnimationSection, 0x01D0);
		}

		// class UMovieSceneSkeletalAnimationTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneSkeletalAnimationTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSkeletalAnimationTrack, AnimationSections, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSkeletalAnimationTrack, bUseLegacySectionIndexBlend, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSkeletalAnimationTrack, UnknownData_9JUC, 0x0069);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneSkeletalAnimationTrack, 0x0070);
		}

		// class UMovieSceneSlomoSection : public UMovieSceneFloatSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneSlomoSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneSlomoSection, 0x0180);
		}

		// class UMovieSceneSlomoTrack : public UMovieSceneFloatTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneSlomoTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneSlomoTrack, 0x0080);
		}

		// class UMovieSceneSpawnSection : public UMovieSceneBoolSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneSpawnSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneSpawnSection, 0x0178);
		}

		// class UMovieSceneSpawnTrack : public UMovieSceneTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneSpawnTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSpawnTrack, Sections, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSpawnTrack, ObjectGuid, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneSpawnTrack, 0x0078);
		}

		// class UMovieSceneStringSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneStringSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneStringSection, StringCurve, 0x00E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneStringSection, 0x0180);
		}

		// class UMovieSceneStringTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneStringTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneStringTrack, 0x0080);
		}

		// class UMovieSceneTransformTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneTransformTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneTransformTrack, 0x0080);
		}

		// class UMovieSceneVectorSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneVectorSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneVectorSection, Curves, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneVectorSection, ChannelsUsed, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneVectorSection, UnknownData_M04B, 0x0364);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneVectorSection, 0x0368);
		}

		// class UMovieSceneVectorTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneVectorTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneVectorTrack, NumChannelsUsed, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneVectorTrack, UnknownData_BL63, 0x0084);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneVectorTrack, 0x0088);
		}

		// class UMovieSceneVisibilityTrack : public UMovieSceneBoolTrack
		TEST_METHOD(Class__MovieSceneTracks__MovieSceneVisibilityTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneVisibilityTrack, 0x0080);
		}

		// class AArea03_P_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_P__Area03_P_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_P_C, 0x0340);
		}

		// class UQuest_Main_Clear_Bar_C : public UAT_UIQuestMainClearBar
		TEST_METHOD(WidgetBlueprintGeneratedClass__Quest_Main_Clear_Bar__Quest_Main_Clear_Bar_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Bar_C, UberGraphFrame, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Bar_C, Detail_Out, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Bar_C, Detail_In, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Bar_C, In, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Bar_C, Rank_B_Start, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Bar_C, Rank_A_Start, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Bar_C, Rank_S_Start, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Bar_C, Img_Fad00, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Bar_C, Ins_Rate_M, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Bar_C, Ins_Rate_M02, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Bar_C, Ins_Rate_M_Eff, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Bar_C, Ins_Triangle04_00, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Bar_C, Ins_Triangle04_01, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Bar_C, Ins_Triangle04_02, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Bar_C, Ins_Triangle04_Shdw, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Bar_C, Quest_Main_Clear_Detail00, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Bar_C, Quest_Main_Clear_Detail01, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Bar_C, Quest_Main_Clear_Detail02, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Bar_C, Quest_Main_Clear_Detail03, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Bar_C, Quest_Main_Clear_Detail04, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Bar_C, Quest_Main_Clear_Detail05, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Bar_C, Txt_List, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Bar_C, Xef_Shine00_00, 0x04E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuest_Main_Clear_Bar_C, 0x04E8);
		}

		// class UQuest_Main_Clear_Detail_C : public UAT_UIQuestMainClearDetail
		TEST_METHOD(WidgetBlueprintGeneratedClass__Quest_Main_Clear_Detail__Quest_Main_Clear_Detail_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Detail_C, Ins_Rate_S, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Detail_C, Ins_Triangle04, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Detail_C, Ins_Triangle04_Shdw, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Detail_C, Num_Result02_00, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Detail_C, Num_Result02_01, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Detail_C, Num_Result02_02, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Clear_Detail_C, Txt_List, 0x0420);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuest_Main_Clear_Detail_C, 0x0428);
		}

		// class UFoliageInstancedStaticMeshComponent : public UHierarchicalInstancedStaticMeshComponent
		TEST_METHOD(Class__Foliage__FoliageInstancedStaticMeshComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageInstancedStaticMeshComponent, OnInstanceTakePointDamage, 0x0778);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageInstancedStaticMeshComponent, OnInstanceTakeRadialDamage, 0x0788);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageInstancedStaticMeshComponent, UnknownData_6GRH, 0x0798);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFoliageInstancedStaticMeshComponent, 0x07A0);
		}

		// class UFoliageStatistics : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Foliage__FoliageStatistics)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFoliageStatistics, 0x0028);
		}

		// class UFoliageType : public UObject
		TEST_METHOD(Class__Foliage__FoliageType)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, UpdateGuid, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, Density, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, DensityAdjustmentFactor, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, Radius, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, Scaling, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, UnknownData_FZ1C, 0x0045);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, ScaleX, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, ScaleY, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, ScaleZ, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, VertexColorMaskByChannel, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, VertexColorMask, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, UnknownData_XZ9I, 0x0091);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, VertexColorMaskThreshold, 0x0094);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, UnknownData_HEYI, 0x0099);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, ZOffset, 0x009C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, UnknownData_7PX5, 0x00A5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, AlignMaxAngle, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, UnknownData_TD8P, 0x00AD);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, RandomPitchAngle, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, GroundSlopeAngle, 0x00B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, Height, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, UnknownData_6D55, 0x00C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, LandscapeLayers, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, LandscapeLayer, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, UnknownData_PMSX, 0x00E1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, CollisionScale, 0x00E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, MinimumLayerWeight, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, MeshBounds, 0x00F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, LowBoundOriginRadius, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, Mobility, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, UnknownData_27BA, 0x011D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, CullDistance, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, UnknownData_ETTF, 0x012A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, OverriddenLightMapRes, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, LightmapType, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, UnknownData_1GE5, 0x0131);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, UnknownData_EO68, 0x0135);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, BodyInstance, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, CustomNavigableGeometry, 0x0288);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, LightingChannels, 0x0289);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, UnknownData_L9F2, 0x028A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, UnknownData_8FKB, 0x028D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, CustomDepthStencilValue, 0x0290);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, CollisionRadius, 0x0294);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, ShadeRadius, 0x0298);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, NumSteps, 0x029C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, InitialSeedDensity, 0x02A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, AverageSpreadDistance, 0x02A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, SpreadVariance, 0x02A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, SeedsPerStep, 0x02AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, DistributionSeed, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, MaxInitialSeedOffset, 0x02B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, bCanGrowInShade, 0x02B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, bSpawnsInShade, 0x02B9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, UnknownData_46WK, 0x02BA);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, MaxInitialAge, 0x02BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, MaxAge, 0x02C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, OverlapPriority, 0x02C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, ProceduralScale, 0x02C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, ScaleCurve, 0x02D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, ChangeCount, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType, UnknownData_CXKJ, 0x034E);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFoliageType, 0x0350);
		}

		// class UFoliageType_InstancedStaticMesh : public UFoliageType
		TEST_METHOD(Class__Foliage__FoliageType_InstancedStaticMesh)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType_InstancedStaticMesh, Mesh, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType_InstancedStaticMesh, OverrideMaterials, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFoliageType_InstancedStaticMesh, ComponentClass, 0x0368);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFoliageType_InstancedStaticMesh, 0x0370);
		}

		// class AInstancedFoliageActor : public AActor
		TEST_METHOD(Class__Foliage__InstancedFoliageActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AInstancedFoliageActor, UnknownData_MBTI, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInstancedFoliageActor, 0x0388);
		}

		// class AInteractiveFoliageActor : public AStaticMeshActor
		TEST_METHOD(Class__Foliage__InteractiveFoliageActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AInteractiveFoliageActor, CapsuleComponent, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::AInteractiveFoliageActor, TouchingActorEntryPosition, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::AInteractiveFoliageActor, FoliageVelocity, 0x035C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AInteractiveFoliageActor, FoliageForce, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::AInteractiveFoliageActor, FoliagePosition, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::AInteractiveFoliageActor, FoliageDamageImpulseScale, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::AInteractiveFoliageActor, FoliageTouchImpulseScale, 0x0384);
			CHEAT_GEAR_CHECK_OFFSET(CG::AInteractiveFoliageActor, FoliageStiffness, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::AInteractiveFoliageActor, FoliageStiffnessQuadratic, 0x038C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AInteractiveFoliageActor, FoliageDamping, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::AInteractiveFoliageActor, MaxDamageImpulse, 0x0394);
			CHEAT_GEAR_CHECK_OFFSET(CG::AInteractiveFoliageActor, MaxTouchImpulse, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::AInteractiveFoliageActor, MaxForce, 0x039C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AInteractiveFoliageActor, Mass, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AInteractiveFoliageActor, UnknownData_IFIG, 0x03A4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AInteractiveFoliageActor, 0x03A8);
		}

		// class UInteractiveFoliageComponent : public UStaticMeshComponent
		TEST_METHOD(Class__Foliage__InteractiveFoliageComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInteractiveFoliageComponent, UnknownData_GEUA, 0x05F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInteractiveFoliageComponent, 0x0600);
		}

		// class AProceduralFoliageBlockingVolume : public AVolume
		TEST_METHOD(Class__Foliage__ProceduralFoliageBlockingVolume)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AProceduralFoliageBlockingVolume, ProceduralFoliageVolume, 0x0370);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AProceduralFoliageBlockingVolume, 0x0378);
		}

		// class UProceduralFoliageComponent : public UActorComponent
		TEST_METHOD(Class__Foliage__ProceduralFoliageComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralFoliageComponent, FoliageSpawner, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralFoliageComponent, TileOverlap, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralFoliageComponent, UnknownData_AWR3, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralFoliageComponent, SpawningVolume, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralFoliageComponent, ProceduralGuid, 0x0118);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UProceduralFoliageComponent, 0x0128);
		}

		// class UProceduralFoliageSpawner : public UObject
		TEST_METHOD(Class__Foliage__ProceduralFoliageSpawner)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralFoliageSpawner, RandomSeed, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralFoliageSpawner, TileSize, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralFoliageSpawner, NumUniqueTiles, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralFoliageSpawner, MinimumQuadTreeSize, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralFoliageSpawner, UnknownData_HK63, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralFoliageSpawner, FoliageTypes, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralFoliageSpawner, bNeedsSimulation, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralFoliageSpawner, UnknownData_8JUX, 0x0051);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UProceduralFoliageSpawner, 0x0070);
		}

		// class UProceduralFoliageTile : public UObject
		TEST_METHOD(Class__Foliage__ProceduralFoliageTile)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralFoliageTile, FoliageSpawner, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralFoliageTile, UnknownData_N85W, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralFoliageTile, InstancesArray, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProceduralFoliageTile, UnknownData_0MN0, 0x00E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UProceduralFoliageTile, 0x0158);
		}

		// class AProceduralFoliageVolume : public AVolume
		TEST_METHOD(Class__Foliage__ProceduralFoliageVolume)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AProceduralFoliageVolume, ProceduralComponent, 0x0370);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AProceduralFoliageVolume, 0x0378);
		}

		// class UClothingAssetBase : public UObject
		TEST_METHOD(Class__ClothingSystemRuntimeInterface__ClothingAssetBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UClothingAssetBase, ImportedFilePath, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UClothingAssetBase, AssetGuid, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UClothingAssetBase, 0x0048);
		}

		// class UClothingSimulationFactory : public UObject
		TEST_METHOD(Class__ClothingSystemRuntimeInterface__ClothingSimulationFactory)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UClothingSimulationFactory, 0x0028);
		}

		// class UClothingSimulationInteractor : public UObject
		TEST_METHOD(Class__ClothingSystemRuntimeInterface__ClothingSimulationInteractor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UClothingSimulationInteractor, UnknownData_KBEQ, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UClothingSimulationInteractor, 0x0030);
		}

		// class UXcmn_Tab_C : public UAT_UICmnTab
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Tab__Xcmn_Tab_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Tab_C, Image_38, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Tab_C, Image_39, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Tab_C, Xmenu_Arrow_L, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Tab_C, Xmenu_Arrow_R, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Tab_C, 0x03C8);
		}

		// class USynthComponent : public USceneComponent
		TEST_METHOD(Class__AudioMixer__SynthComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USynthComponent, UnknownData_GLSR, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::USynthComponent, AttenuationSettings, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::USynthComponent, AttenuationOverrides, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::USynthComponent, ConcurrencySettings, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::USynthComponent, SoundClass, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::USynthComponent, SourceEffectChain, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::USynthComponent, SoundSubmix, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::USynthComponent, SoundSubmixSends, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::USynthComponent, BusSends, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::USynthComponent, PreEffectBusSends, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::USynthComponent, UnknownData_TRQ6, 0x0551);
			CHEAT_GEAR_CHECK_OFFSET(CG::USynthComponent, EnvelopeFollowerAttackTime, 0x0554);
			CHEAT_GEAR_CHECK_OFFSET(CG::USynthComponent, EnvelopeFollowerReleaseTime, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::USynthComponent, UnknownData_LERW, 0x055C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USynthComponent, OnAudioEnvelopeValue, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::USynthComponent, UnknownData_KH5P, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::USynthComponent, Synth, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::USynthComponent, AudioComponent, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::USynthComponent, UnknownData_2TRY, 0x05A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USynthComponent, 0x05D0);
		}

		// class UAudioMixerBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__AudioMixer__AudioMixerBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAudioMixerBlueprintLibrary, 0x0028);
		}

		// class USubmixEffectDynamicsProcessorPreset : public USoundEffectSubmixPreset
		TEST_METHOD(Class__AudioMixer__SubmixEffectDynamicsProcessorPreset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USubmixEffectDynamicsProcessorPreset, UnknownData_SNTB, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::USubmixEffectDynamicsProcessorPreset, Settings, 0x0090);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USubmixEffectDynamicsProcessorPreset, 0x00B8);
		}

		// class USubmixEffectSubmixEQPreset : public USoundEffectSubmixPreset
		TEST_METHOD(Class__AudioMixer__SubmixEffectSubmixEQPreset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USubmixEffectSubmixEQPreset, UnknownData_OX6J, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::USubmixEffectSubmixEQPreset, Settings, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USubmixEffectSubmixEQPreset, 0x0088);
		}

		// class USubmixEffectReverbPreset : public USoundEffectSubmixPreset
		TEST_METHOD(Class__AudioMixer__SubmixEffectReverbPreset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USubmixEffectReverbPreset, UnknownData_JFDP, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::USubmixEffectReverbPreset, Settings, 0x009C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USubmixEffectReverbPreset, 0x00D0);
		}

		// class USynthSound : public USoundWaveProcedural
		TEST_METHOD(Class__AudioMixer__SynthSound)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USynthSound, UnknownData_7GMC, 0x0260);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USynthSound, 0x0280);
		}

		// class UXmenu_Curs00_C : public UAT_UIXmenuCurs00
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xmenu_Curs00__Xmenu_Curs00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Curs00_C, Cursr_Enter, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Curs00_C, Cursr_Out, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Curs00_C, Cursr_Loop, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Curs00_C, Cursr_In, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Curs00_C, Img_Curs00_Btm, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Curs00_C, Img_Curs00_Top, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Curs00_C, Img_Cursr_Circle, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Curs00_C, Img_Deco00, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Curs00_C, Img_Deco01, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Curs00_C, Img_Deco04, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXmenu_Curs00_C, 0x03E0);
		}

		// class UXlist_List00_Lay9_C : public UAT_UICmn00MenuList9
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xlist_List00_Lay9__Xlist_List00_Lay9_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_Lay9_C, UberGraphFrame, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_Lay9_C, Out, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_Lay9_C, In, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_Lay9_C, Img_List_Base, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_Lay9_C, Shop_Cmn_Bar00, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_Lay9_C, Shop_Cmn_Bar01, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_Lay9_C, Shop_Cmn_Bar02, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_Lay9_C, Shop_Cmn_Bar03, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_Lay9_C, Shop_Cmn_Bar04, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_Lay9_C, Shop_Cmn_Bar05, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_Lay9_C, Shop_Cmn_Bar06, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_Lay9_C, Shop_Cmn_Bar07, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_Lay9_C, Shop_Cmn_Bar08, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_Lay9_C, Txt_Title, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List00_Lay9_C, Xmenu_Scrollbar, 0x04E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXlist_List00_Lay9_C, 0x04F0);
		}

		// class UXlist_List05_C : public UAT_UIXlist_List05
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xlist_List05__Xlist_List05_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List05_C, Enter, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List05_C, All_Nut, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List05_C, Icon_Clear_S, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List05_C, Icon_New, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List05_C, Img_Bar_Shadow, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List05_C, Img_Eff, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List05_C, Img_List_Base, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_List05_C, Txt_List, 0x0498);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXlist_List05_C, 0x04A0);
		}

		// class UXcmn_Emb00_C : public UAT_UIXCmnEmb
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Emb00__Xcmn_Emb00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb00_C, Img_Frame_Base00, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb00_C, Img_Unacquired, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb00_C, Ins_Emb_Mask, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb00_C, Ins_Frame, 0x03E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Emb00_C, 0x03E8);
		}

		// class UXcmn_Emb_Rarity00_C : public UAT_UIXCmnEmb_Reality
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Emb_Rarity00__Xcmn_Emb_Rarity00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_Rarity00_C, Loop01, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_Rarity00_C, Frame_In, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_Rarity00_C, Loop_Bound, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_Rarity00_C, Loop00, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_Rarity00_C, Img_Emblem_Shdw, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_Rarity00_C, Ins_Eff_Fad_Emb, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_Rarity00_C, Ins_Emb_Eff00, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_Rarity00_C, Ins_Emb_Eff01, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_Rarity00_C, Ins_Emb_Eff_Light, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_Rarity00_C, Ins_Emb_Eff_Line, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_Rarity00_C, Ins_Frame_Set, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_Rarity00_C, Ins_Icon_Group, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_Rarity00_C, Ins_Icon_Leader, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_Rarity00_C, Ins_Xef_Fad05, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_Rarity00_C, Ins_Xef_Light01_00, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_Rarity00_C, Ins_Xef_Light02_00, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_Rarity00_C, Ins_Xef_Light02_01, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_Rarity00_C, Ins_Xef_Light02_02, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_Rarity00_C, Ins_Xef_Light02_03, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_Rarity00_C, Ins_Xef_particle00, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_Rarity00_C, Ins_Xef_particle01, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_Rarity00_C, Ins_Xef_Sun01, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_Rarity00_C, Xcmn_Emb00, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb_Rarity00_C, Loop_Count, 0x0498);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Emb_Rarity00_C, 0x049C);
		}

		// class UXcmn_Action_C : public UAT_UICmnActionPopUpCore
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Action__Xcmn_Action_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Action_C, Out, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Action_C, In, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Action_C, Ins_Btn, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Action_C, Ins_Btn2, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Action_C, Ins_Txt, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Action_C, Ins_Txt2, 0x05A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Action_C, 0x05B0);
		}

		// class UCompZ_Navi_C : public UAT_UIZCWNavigation
		TEST_METHOD(WidgetBlueprintGeneratedClass__CompZ_Navi__CompZ_Navi_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Navi_C, Default, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Navi_C, Out_Change_Navi, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Navi_C, In_Change_Navi, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Navi_C, Change_CompZ, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Navi_C, Change_Quest, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Navi_C, All_Nut, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Navi_C, Img_Change_Arrow00, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Navi_C, Img_Change_Arrow01, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Navi_C, Ins_Icon_CompZ00, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Navi_C, Ins_Icon_CompZ01, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Navi_C, Ins_Icon_Quest00, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Navi_C, Ins_Icon_Quest01, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Navi_C, Navi_CompZ_Any, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Navi_C, Navi_CompZ_Auto00, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Navi_C, Navi_CompZ_Auto01, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Navi_C, Pnl_All_Icon, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Navi_C, Quest_Navi_More, 0x0560);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCompZ_Navi_C, 0x0568);
		}

		// class UCompZ_Notice_C : public UAT_UIZCWCompletion
		TEST_METHOD(WidgetBlueprintGeneratedClass__CompZ_Notice__CompZ_Notice_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Notice_C, Out, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Notice_C, In, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Notice_C, Img_Cloud00, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Notice_C, Img_Cloud01, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Notice_C, Img_CompZ_Notice_Baloon, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Notice_C, Img_Icon_CompZ, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Notice_C, Img_Notice_Base, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Notice_C, Img_Spase_Btm, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Notice_C, Img_Spase_L, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Notice_C, Img_Spase_R, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Notice_C, Img_Spase_Top, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Notice_C, Img_Xcmn_Cloud_Tail00, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Notice_C, Ins_Line_CompZ00, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Notice_C, Ins_Line_CompZ01, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Notice_C, Ins_Sirc_CompZ00_00, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Notice_C, Ins_Sirc_CompZ00_01, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCompZ_Notice_C, Txt_Baloon, 0x0480);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCompZ_Notice_C, 0x0488);
		}

		// class UInfo_Log_C : public UAT_UIInfoLog
		TEST_METHOD(WidgetBlueprintGeneratedClass__Info_Log__Info_Log_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_C, Start, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_C, Info_Log_Bar00, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_C, Info_Log_Bar01, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_C, Info_Log_Bar02, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_C, Info_Log_Bar03, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_C, Info_Log_Bar04, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_C, Ins_Xef_Fad10_00, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_C, Ins_Xef_Fad10_01, 0x0450);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInfo_Log_C, 0x0458);
		}

		// class UInfo_Name_Parent_C : public UAT_UIInfoName
		TEST_METHOD(WidgetBlueprintGeneratedClass__Info_Name_Parent__Info_Name_Parent_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Name_Parent_C, Ins_Info00, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Name_Parent_C, Ins_Info01, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInfo_Name_Parent_C, 0x03A0);
		}

		// class UXcmn_Win01_List_C : public UAT_UIGameWindowChoice
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Win01_List__Xcmn_Win01_List_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_List_C, UberGraphFrame, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_List_C, Enter, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_List_C, Icon_Clear_S, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_List_C, Icon_Item00, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_List_C, Img_Bar_Shadow, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_List_C, Img_Eff, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_List_C, Img_Fil, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_List_C, Img_Xwin01_List, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_List_C, Txt_Item, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_List_C, Txt_Num, 0x0408);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Win01_List_C, 0x0410);
		}

		// class UATMovieSceneCharaIntroductionPropertyTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneCharaIntroductionPropertyTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneCharaIntroductionPropertyTrack, 0x0080);
		}

		// class UATMovieSceneCharaIntroductionSection : public UMovieSceneSection
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneCharaIntroductionSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneCharaIntroductionSection, CharacterID, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneCharaIntroductionSection, PopularNameID, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneCharaIntroductionSection, Position, 0x00F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneCharaIntroductionSection, 0x00F8);
		}

		// class UATMovieSceneDirectionPropertyTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneDirectionPropertyTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneDirectionPropertyTrack, 0x0080);
		}

		// class UATMovieSceneDirectionSection : public UMovieSceneSection
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneDirectionSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneDirectionSection, Directions, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneDirectionSection, DirectionData, 0x0148);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneDirectionSection, 0x01D8);
		}

		// class UATMovieSceneFadePropertyTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneFadePropertyTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneFadePropertyTrack, 0x0080);
		}

		// class UATMovieSceneFadeSection : public UMovieSceneSection
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneFadeSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneFadeSection, FadeType, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneFadeSection, FadeColor, 0x00E1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneFadeSection, bImmidiate, 0x00E2);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneFadeSection, bStartZero, 0x00E3);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneFadeSection, bFirstSection, 0x00E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneFadeSection, UnknownData_V524, 0x00E5);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneFadeSection, 0x00E8);
		}

		// class UATMovieSceneFloatSection : public UMovieSceneSection
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneFloatSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneFloatSection, FloatCurve, 0x00E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneFloatSection, 0x0180);
		}

		// class UATMovieSceneForcedLodPropertyTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneForcedLodPropertyTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneForcedLodPropertyTrack, 0x0080);
		}

		// class UATMovieSceneForcedLodForCharacterPropertyTrack : public UATMovieSceneForcedLodPropertyTrack
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneForcedLodForCharacterPropertyTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneForcedLodForCharacterPropertyTrack, 0x0080);
		}

		// class UATMovieSceneForcedLodForLandscapePropertyTrack : public UATMovieSceneForcedLodPropertyTrack
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneForcedLodForLandscapePropertyTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneForcedLodForLandscapePropertyTrack, 0x0080);
		}

		// class UATMovieSceneForcedLodForOtherPropertyTrack : public UATMovieSceneForcedLodPropertyTrack
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneForcedLodForOtherPropertyTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneForcedLodForOtherPropertyTrack, 0x0080);
		}

		// class UATMovieSceneForcedLodSection : public UMovieSceneSection
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneForcedLodSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneForcedLodSection, ForcedLodModel, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneForcedLodSection, UnknownData_P5Y4, 0x00E4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneForcedLodSection, 0x00E8);
		}

		// class UATMovieSceneLipSyncSection : public UMovieSceneSection
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneLipSyncSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneLipSyncSection, SubtitleID, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneLipSyncSection, BlendSpaceAsset, 0x00E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneLipSyncSection, 0x00F0);
		}

		// class UATMovieSceneLipSyncTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneLipSyncTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneLipSyncTrack, AnimationSections, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneLipSyncTrack, 0x0068);
		}

		// class UATMovieSceneLocationPropertyTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneLocationPropertyTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneLocationPropertyTrack, 0x0080);
		}

		// class UATMovieSceneLocationSection : public UMovieSceneSection
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneLocationSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneLocationSection, AreaID, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneLocationSection, DemoType, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneLocationSection, UnknownData_UJNW, 0x00E9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneLocationSection, LocationInfo, 0x00F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneLocationSection, 0x0100);
		}

		// class UATMovieSceneMoviePropertyTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneMoviePropertyTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneMoviePropertyTrack, 0x0080);
		}

		// class UATMovieSceneMovieSection : public UMovieSceneSection
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneMovieSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneMovieSection, 0x00E0);
		}

		// class UATMovieSceneNearClipPropertyTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneNearClipPropertyTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneNearClipPropertyTrack, 0x0080);
		}

		// class UATMovieSceneNextPreviewSection : public UMovieSceneSection
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneNextPreviewSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneNextPreviewSection, UnknownData_07TG, 0x00E1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneNextPreviewSection, TitleData, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneNextPreviewSection, UnknownData_7SWE, 0x00F9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneNextPreviewSection, DetailData, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneNextPreviewSection, 0x0120);
		}

		// class UATMovieSceneNextPreviewTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneNextPreviewTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneNextPreviewTrack, 0x0080);
		}

		// class UATMovieSceneQuestMainLogoPropertyTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneQuestMainLogoPropertyTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneQuestMainLogoPropertyTrack, 0x0080);
		}

		// class UATMovieSceneQuestMainLogoSection : public UMovieSceneSection
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneQuestMainLogoSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneQuestMainLogoSection, 0x00E0);
		}

		// class UATMovieSceneRimLightPropertyTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneRimLightPropertyTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneRimLightPropertyTrack, MPC, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneRimLightPropertyTrack, 0x0088);
		}

		// class UATMovieSceneSoundPropertyTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneSoundPropertyTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneSoundPropertyTrack, 0x0080);
		}

		// class UATMovieSceneSoundSection : public UMovieSceneSection
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneSoundSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneSoundSection, SectionName, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneSoundSection, FuncCallStart, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneSoundSection, FuncCallEnd, 0x00E9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneSoundSection, UnknownData_5LOE, 0x00EA);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneSoundSection, Volume, 0x00EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneSoundSection, SeReqNum, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneSoundSection, SeOption, 0x00F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneSoundSection, BgmOption, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneSoundSection, VoiceOption, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneSoundSection, UnknownData_CCGB, 0x010A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneSoundSection, 0x0110);
		}

		// class UATMovieSceneSubtitlePropertyTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneSubtitlePropertyTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneSubtitlePropertyTrack, 0x0080);
		}

		// class UATMovieSceneSubtitleSection : public UMovieSceneSection
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneSubtitleSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneSubtitleSection, bEnableSubtitle, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneSubtitleSection, UnknownData_A456, 0x00E1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneSubtitleSection, SubtitleID, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneSubtitleSection, bContinue, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneSubtitleSection, UnknownData_X3PO, 0x00F1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneSubtitleSection, CharacterNumber, 0x00F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneSubtitleSection, bEnableLipSync, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneSubtitleSection, UnknownData_CV2G, 0x00F9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneSubtitleSection, BlendSpaceID, 0x00FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneSubtitleSection, bOnlyVoice, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneSubtitleSection, bEnableTargetCh, 0x0101);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneSubtitleSection, UnknownData_46U2, 0x0102);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneSubtitleSection, TargetCh, 0x0104);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneSubtitleSection, 0x0108);
		}

		// class UATMovieSceneTelopSection : public UMovieSceneSection
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneTelopSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneTelopSection, TelopInfo, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UATMovieSceneTelopSection, TelopInfo2, 0x0108);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneTelopSection, 0x0130);
		}

		// class UATMovieSceneTelopTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__ATSpecialTrack__ATMovieSceneTelopTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATMovieSceneTelopTrack, 0x0080);
		}

		// class UEditableMesh : public UObject
		TEST_METHOD(Class__EditableMesh__EditableMesh)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableMesh, UnknownData_8CIS, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableMesh, Adapters, 0x0328);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableMesh, TextureCoordinateCount, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableMesh, UnknownData_V5JQ, 0x033C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableMesh, PendingCompactCounter, 0x0434);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableMesh, SubdivisionCount, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableMesh, UnknownData_JIHG, 0x043C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableMesh, 0x0620);
		}

		// class UEditableMeshAdapter : public UObject
		TEST_METHOD(Class__EditableMesh__EditableMeshAdapter)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableMeshAdapter, 0x0028);
		}

		// class UEditableMeshFactory : public UObject
		TEST_METHOD(Class__EditableMesh__EditableMeshFactory)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableMeshFactory, 0x0028);
		}

		// class UEditableStaticMeshAdapter : public UEditableMeshAdapter
		TEST_METHOD(Class__EditableMesh__EditableStaticMeshAdapter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableStaticMeshAdapter, StaticMesh, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableStaticMeshAdapter, OriginalStaticMesh, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableStaticMeshAdapter, StaticMeshLODIndex, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableStaticMeshAdapter, UnknownData_WR4P, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableStaticMeshAdapter, 0x00E0);
		}

		// class UBattle_Gauge_Hp_P_C : public UAT_UIBattleHudGaugePlayerHp
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Gauge_Hp_P__Battle_Gauge_Hp_P_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_P_C, Charge_Full, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_P_C, Charge_Recovery, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_P_C, Charge_Recovery_Loop, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_P_C, All_Nut_InvalidationBox, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_P_C, Img_Gauge_Base, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_P_C, Img_Gauge_Frame, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_P_C, Ins_Eff00, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_P_C, Ins_Eff01, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_P_C, Ins_Gauge_Base_Eff, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_P_C, Ins_Gauge_Hp00, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_P_C, Ins_Gauge_Hp01, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_P_C, Ins_Gauge_Mark_Full, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_P_C, Ins_Gauge_Recover, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_P_C, Mat_Gauge_Hud_Light, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Gauge_Hp_P_C, Mat_Gauge_Hud_Light01, 0x04E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Gauge_Hp_P_C, 0x04E8);
		}

		// class UXcmn_Win02_List01_C : public UAT_UIXcmnWin02List01
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Win02_List01__Xcmn_Win02_List01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win02_List01_C, Ins_Icon_Item, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win02_List01_C, Txt_List, 0x0390);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Win02_List01_C, 0x0398);
		}

		// class UXcmn_System_Icon_C : public UAT_UIXcmnSystemIcon
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_System_Icon__Xcmn_System_Icon_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_System_Icon_C, Out, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_System_Icon_C, In, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_System_Icon_C, Icon_Load, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_System_Icon_C, Icon_Save, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_System_Icon_C, Xcmn_Fade_Black, 0x0428);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_System_Icon_C, 0x0430);
		}

		// class UAT_MessageManager_BP_C : public UCFMessageManager
		TEST_METHOD(BlueprintGeneratedClass__AT_MessageManager_BP__AT_MessageManager_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_MessageManager_BP_C, 0x00C0);
		}

		// class UBattle_Skill_Name_P_C : public UAT_UISkillName
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Skill_Name_P__Battle_Skill_Name_P_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Skill_Name_P_C, Out, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Skill_Name_P_C, In, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Skill_Name_P_C, Icon_Skill01_01, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Skill_Name_P_C, Img_Base_Skill_Name, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Skill_Name_P_C, Ins_Icon_Rare00, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Skill_Name_P_C, Ins_Icon_Skill01_Line, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Skill_Name_P_C, Txt_Skill_Name, 0x0440);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Skill_Name_P_C, 0x0448);
		}

		// class UAni005p1c01_Skeleton_AnimBP_C : public UAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__Ani005p1c01_Skeleton_AnimBP__Ani005p1c01_Skeleton_AnimBP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAni005p1c01_Skeleton_AnimBP_C, UberGraphFrame, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAni005p1c01_Skeleton_AnimBP_C, AnimGraphNode_Root_A0369C5B43779969C654D3A246762644, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAni005p1c01_Skeleton_AnimBP_C, AnimGraphNode_TransitionResult_7C66DB794678CE76EC16CAAA2F9D6400, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAni005p1c01_Skeleton_AnimBP_C, AnimGraphNode_TransitionResult_3C018FD74B36552F70EAA3B5C00B60C2, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAni005p1c01_Skeleton_AnimBP_C, AnimGraphNode_SequencePlayer_B88ADE03426012B178583EB3974F4C11, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAni005p1c01_Skeleton_AnimBP_C, AnimGraphNode_StateResult_9FB14EDC420963892E8813B1C18ED13D, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAni005p1c01_Skeleton_AnimBP_C, AnimGraphNode_SequencePlayer_5E2D8AC94DA5834AB723E9A38B207343, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAni005p1c01_Skeleton_AnimBP_C, AnimGraphNode_StateResult_13F0C3264F7FA576D1BAD2891B5BB4E0, 0x05B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAni005p1c01_Skeleton_AnimBP_C, AnimGraphNode_StateMachine_93479DD44680A267F8B24DB933B4B9B8, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAni005p1c01_Skeleton_AnimBP_C, IsEscape, 0x06D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAni005p1c01_Skeleton_AnimBP_C, isReturn, 0x06D9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAni005p1c01_Skeleton_AnimBP_C, 0x06DA);
		}

		// class AWishLeaveDemo_C : public APreRenderDemoActor
		TEST_METHOD(BlueprintGeneratedClass__WishLeaveDemo__WishLeaveDemo_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AWishLeaveDemo_C, DefaultSceneRoot, 0x0370);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWishLeaveDemo_C, 0x0378);
		}

		// class AFishingResource_BP2_C : public AFishingResource
		TEST_METHOD(BlueprintGeneratedClass__FishingResource_BP2__FishingResource_BP2_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFishingResource_BP2_C, 0x04C8);
		}

		// class UBP_Dest_RockG_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_RockG__BP_Dest_RockG_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_RockG_C, 0x0820);
		}

		// class UInputCoreTypes : public UObject
		TEST_METHOD(Class__InputCore__InputCoreTypes)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputCoreTypes, 0x0028);
		}

		// class ACameraRig_Crane : public AActor
		TEST_METHOD(Class__CinematicCamera__CameraRig_Crane)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraRig_Crane, CranePitch, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraRig_Crane, CraneYaw, 0x033C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraRig_Crane, CraneArmLength, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraRig_Crane, bLockMountPitch, 0x0344);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraRig_Crane, bLockMountYaw, 0x0345);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraRig_Crane, UnknownData_9O1Z, 0x0346);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraRig_Crane, TransformComponent, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraRig_Crane, CraneYawControl, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraRig_Crane, CranePitchControl, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraRig_Crane, CraneCameraMount, 0x0360);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACameraRig_Crane, 0x0368);
		}

		// class ACameraRig_Rail : public AActor
		TEST_METHOD(Class__CinematicCamera__CameraRig_Rail)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraRig_Rail, CurrentPositionOnRail, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraRig_Rail, bLockOrientationToRail, 0x033C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraRig_Rail, UnknownData_GUKM, 0x033D);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraRig_Rail, TransformComponent, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraRig_Rail, RailSplineComponent, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACameraRig_Rail, RailCameraMount, 0x0350);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACameraRig_Rail, 0x0358);
		}

		// class ACineCameraActor : public ACameraActor
		TEST_METHOD(Class__CinematicCamera__CineCameraActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ACineCameraActor, LookatTrackingSettings, 0x09A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ACineCameraActor, UnknownData_2ALJ, 0x09D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACineCameraActor, 0x09E0);
		}

		// class UCineCameraComponent : public UCameraComponent
		TEST_METHOD(Class__CinematicCamera__CineCameraComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCineCameraComponent, FilmbackSettings, 0x0900);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCineCameraComponent, LensSettings, 0x090C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCineCameraComponent, UnknownData_NY5V, 0x0924);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCineCameraComponent, FocusSettings, 0x0928);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCineCameraComponent, CurrentFocalLength, 0x0960);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCineCameraComponent, CurrentAperture, 0x0964);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCineCameraComponent, CurrentFocusDistance, 0x0968);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCineCameraComponent, UnknownData_5V7J, 0x096C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCineCameraComponent, FilmbackPresets, 0x0978);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCineCameraComponent, LensPresets, 0x0988);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCineCameraComponent, DefaultFilmbackPresetName, 0x0998);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCineCameraComponent, DefaultLensPresetName, 0x09A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCineCameraComponent, DefaultLensFocalLength, 0x09B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCineCameraComponent, DefaultLensFStop, 0x09BC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCineCameraComponent, 0x09C0);
		}

		// class UBlueprintGameplayTagLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__GameplayTags__BlueprintGameplayTagLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlueprintGameplayTagLibrary, 0x0028);
		}

		// class UGameplayTagAssetInterface : public UInterface
		TEST_METHOD(Class__GameplayTags__GameplayTagAssetInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayTagAssetInterface, 0x0028);
		}

		// class UEditableGameplayTagQuery : public UObject
		TEST_METHOD(Class__GameplayTags__EditableGameplayTagQuery)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableGameplayTagQuery, UserDescription, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableGameplayTagQuery, UnknownData_R2NE, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableGameplayTagQuery, RootExpression, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableGameplayTagQuery, TagQueryExportText_Helper, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableGameplayTagQuery, 0x0098);
		}

		// class UEditableGameplayTagQueryExpression : public UObject
		TEST_METHOD(Class__GameplayTags__EditableGameplayTagQueryExpression)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableGameplayTagQueryExpression, 0x0028);
		}

		// class UEditableGameplayTagQueryExpression_AnyTagsMatch : public UEditableGameplayTagQueryExpression
		TEST_METHOD(Class__GameplayTags__EditableGameplayTagQueryExpression_AnyTagsMatch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableGameplayTagQueryExpression_AnyTagsMatch, Tags, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableGameplayTagQueryExpression_AnyTagsMatch, 0x0048);
		}

		// class UEditableGameplayTagQueryExpression_AllTagsMatch : public UEditableGameplayTagQueryExpression
		TEST_METHOD(Class__GameplayTags__EditableGameplayTagQueryExpression_AllTagsMatch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableGameplayTagQueryExpression_AllTagsMatch, Tags, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableGameplayTagQueryExpression_AllTagsMatch, 0x0048);
		}

		// class UEditableGameplayTagQueryExpression_NoTagsMatch : public UEditableGameplayTagQueryExpression
		TEST_METHOD(Class__GameplayTags__EditableGameplayTagQueryExpression_NoTagsMatch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableGameplayTagQueryExpression_NoTagsMatch, Tags, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableGameplayTagQueryExpression_NoTagsMatch, 0x0048);
		}

		// class UEditableGameplayTagQueryExpression_AnyExprMatch : public UEditableGameplayTagQueryExpression
		TEST_METHOD(Class__GameplayTags__EditableGameplayTagQueryExpression_AnyExprMatch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableGameplayTagQueryExpression_AnyExprMatch, Expressions, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableGameplayTagQueryExpression_AnyExprMatch, 0x0038);
		}

		// class UEditableGameplayTagQueryExpression_AllExprMatch : public UEditableGameplayTagQueryExpression
		TEST_METHOD(Class__GameplayTags__EditableGameplayTagQueryExpression_AllExprMatch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableGameplayTagQueryExpression_AllExprMatch, Expressions, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableGameplayTagQueryExpression_AllExprMatch, 0x0038);
		}

		// class UEditableGameplayTagQueryExpression_NoExprMatch : public UEditableGameplayTagQueryExpression
		TEST_METHOD(Class__GameplayTags__EditableGameplayTagQueryExpression_NoExprMatch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableGameplayTagQueryExpression_NoExprMatch, Expressions, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableGameplayTagQueryExpression_NoExprMatch, 0x0038);
		}

		// class UGameplayTagsManager : public UObject
		TEST_METHOD(Class__GameplayTags__GameplayTagsManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTagsManager, UnknownData_93ZS, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTagsManager, TagSources, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTagsManager, UnknownData_JXX8, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTagsManager, RestrictedGameplayTagTables, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTagsManager, GameplayTagTables, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTagsManager, UnknownData_I89M, 0x0140);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayTagsManager, 0x0190);
		}

		// class UGameplayTagsList : public UObject
		TEST_METHOD(Class__GameplayTags__GameplayTagsList)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTagsList, ConfigFileName, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTagsList, GameplayTagList, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayTagsList, 0x0048);
		}

		// class URestrictedGameplayTagsList : public UObject
		TEST_METHOD(Class__GameplayTags__RestrictedGameplayTagsList)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::URestrictedGameplayTagsList, ConfigFileName, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::URestrictedGameplayTagsList, RestrictedGameplayTagList, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URestrictedGameplayTagsList, 0x0048);
		}

		// class UGameplayTagsSettings : public UGameplayTagsList
		TEST_METHOD(Class__GameplayTags__GameplayTagsSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTagsSettings, ImportTagsFromConfig, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTagsSettings, WarnOnInvalidTags, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTagsSettings, UnknownData_VATC, 0x004A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTagsSettings, CategoryRemapping, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTagsSettings, FastReplication, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTagsSettings, UnknownData_MKJR, 0x0061);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTagsSettings, GameplayTagTableList, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTagsSettings, GameplayTagRedirects, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTagsSettings, CommonlyReplicatedTags, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTagsSettings, NumBitsForContainerSize, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTagsSettings, NetIndexFirstBitSegment, 0x009C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTagsSettings, RestrictedConfigFiles, 0x00A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayTagsSettings, 0x00B0);
		}

		// class UGameplayTagsDeveloperSettings : public UObject
		TEST_METHOD(Class__GameplayTags__GameplayTagsDeveloperSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGameplayTagsDeveloperSettings, DeveloperConfigName, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGameplayTagsDeveloperSettings, 0x0038);
		}

		// class AB_DataAssetManager_Shipping_C : public AB_DataAssetManager_C
		TEST_METHOD(BlueprintGeneratedClass__B_DataAssetManager_Shipping__B_DataAssetManager_Shipping_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AB_DataAssetManager_Shipping_C, 0x0530);
		}

		// class UMovieSceneSignedObject : public UObject
		TEST_METHOD(Class__MovieScene__MovieSceneSignedObject)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSignedObject, Signature, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSignedObject, UnknownData_T84S, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneSignedObject, 0x0050);
		}

		// class UMovieSceneTrack : public UMovieSceneSignedObject
		TEST_METHOD(Class__MovieScene__MovieSceneTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneTrack, EvalOptions, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneTrack, UnknownData_OUAC, 0x0054);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneTrack, 0x0058);
		}

		// class UMovieSceneNameableTrack : public UMovieSceneTrack
		TEST_METHOD(Class__MovieScene__MovieSceneNameableTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneNameableTrack, 0x0058);
		}

		// class UMovieSceneSection : public UMovieSceneSignedObject
		TEST_METHOD(Class__MovieScene__MovieSceneSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSection, EvalOptions, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSection, UnknownData_E8UI, 0x0052);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSection, Easing, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSection, SectionRange, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSection, PreRollFrames, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSection, PostRollFrames, 0x00A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSection, RowIndex, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSection, OverlapPriority, 0x00AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSection, UnknownData_MOH7, 0x00B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSection, StartTime, 0x00B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSection, EndTime, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSection, PrerollTime, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSection, PostrollTime, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSection, UnknownData_Q05E, 0x00C5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSection, bSupportsInfiniteRange, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSection, BlendType, 0x00C9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSection, UnknownData_JJYT, 0x00CB);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneSection, 0x00E0);
		}

		// class UMovieSceneSequence : public UMovieSceneSignedObject
		TEST_METHOD(Class__MovieScene__MovieSceneSequence)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSequence, PrecompiledEvaluationTemplate, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSequence, DefaultCompletionMode, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSequence, bParentContextsAreSignificant, 0x0341);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSequence, UnknownData_BXF2, 0x0342);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneSequence, 0x0348);
		}

		// class UMovieSceneSequencePlayer : public UObject
		TEST_METHOD(Class__MovieScene__MovieSceneSequencePlayer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSequencePlayer, UnknownData_L8IP, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSequencePlayer, OnPlay, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSequencePlayer, OnPlayReverse, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSequencePlayer, OnStop, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSequencePlayer, OnPause, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSequencePlayer, OnFinished, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSequencePlayer, Status, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSequencePlayer, UnknownData_L31J, 0x03C1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSequencePlayer, UnknownData_ACV5, 0x03C5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSequencePlayer, Sequence, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSequencePlayer, StartTime, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSequencePlayer, DurationFrames, 0x03DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSequencePlayer, CurrentNumLoops, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSequencePlayer, UnknownData_9TNQ, 0x03E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSequencePlayer, PlaybackSettings, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSequencePlayer, RootTemplateInstance, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSequencePlayer, UnknownData_F7SD, 0x0738);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneSequencePlayer, 0x07C8);
		}

		// class UMovieScene : public UMovieSceneSignedObject
		TEST_METHOD(Class__MovieScene__MovieScene)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene, Spawnables, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene, Possessables, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene, ObjectBindings, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene, MasterTracks, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene, CameraCutTrack, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene, SelectionRange, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene, PlaybackRange, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene, TickResolution, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene, DisplayRate, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene, EvaluationType, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene, ClockSource, 0x00C9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene, UnknownData_0LZ8, 0x00CA);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScene, 0x00D0);
		}

		// class UMovieSceneBindingOverrides : public UObject
		TEST_METHOD(Class__MovieScene__MovieSceneBindingOverrides)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneBindingOverrides, UnknownData_EJAV, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneBindingOverrides, BindingData, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneBindingOverrides, UnknownData_141X, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneBindingOverrides, 0x0098);
		}

		// class UMovieSceneBindingOverridesInterface : public UInterface
		TEST_METHOD(Class__MovieScene__MovieSceneBindingOverridesInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneBindingOverridesInterface, 0x0028);
		}

		// class UMovieSceneBindingOwnerInterface : public UInterface
		TEST_METHOD(Class__MovieScene__MovieSceneBindingOwnerInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneBindingOwnerInterface, 0x0028);
		}

		// class UMovieSceneBuiltInEasingFunction : public UObject
		TEST_METHOD(Class__MovieScene__MovieSceneBuiltInEasingFunction)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneBuiltInEasingFunction, UnknownData_6VTR, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneBuiltInEasingFunction, Type, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneBuiltInEasingFunction, UnknownData_KJDX, 0x0031);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneBuiltInEasingFunction, 0x0038);
		}

		// class UMovieSceneEasingExternalCurve : public UObject
		TEST_METHOD(Class__MovieScene__MovieSceneEasingExternalCurve)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneEasingExternalCurve, UnknownData_5OBZ, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneEasingExternalCurve, Curve, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneEasingExternalCurve, 0x0038);
		}

		// class UMovieSceneEasingFunction : public UInterface
		TEST_METHOD(Class__MovieScene__MovieSceneEasingFunction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneEasingFunction, 0x0028);
		}

		// class UMovieSceneFolder : public UObject
		TEST_METHOD(Class__MovieScene__MovieSceneFolder)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneFolder, FolderName, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneFolder, ChildFolders, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneFolder, ChildMasterTracks, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneFolder, ChildObjectBindingStrings, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneFolder, UnknownData_0UHE, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneFolder, 0x0070);
		}

		// class UMovieSceneKeyProxy : public UInterface
		TEST_METHOD(Class__MovieScene__MovieSceneKeyProxy)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneKeyProxy, 0x0028);
		}

		// class UMovieSceneSubSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieScene__MovieSceneSubSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSubSection, Parameters, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSubSection, StartOffset, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSubSection, TimeScale, 0x00FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSubSection, PrerollTime, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSubSection, UnknownData_JYD9, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSubSection, SubSequence, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSubSection, ActorToRecord, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSubSection, UnknownData_PV9D, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSubSection, TargetSequenceName, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSubSection, TargetPathToRecordTo, 0x0140);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneSubSection, 0x0150);
		}

		// class UMovieSceneSubTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__MovieScene__MovieSceneSubTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneSubTrack, Sections, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneSubTrack, 0x0068);
		}

		// class UTestMovieSceneTrack : public UMovieSceneTrack
		TEST_METHOD(Class__MovieScene__TestMovieSceneTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTestMovieSceneTrack, bHighPassFilter, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTestMovieSceneTrack, UnknownData_1HXN, 0x0059);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTestMovieSceneTrack, SectionArray, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTestMovieSceneTrack, 0x0070);
		}

		// class UTestMovieSceneSection : public UMovieSceneSection
		TEST_METHOD(Class__MovieScene__TestMovieSceneSection)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTestMovieSceneSection, 0x00E0);
		}

		// class UTestMovieSceneSequence : public UMovieSceneSequence
		TEST_METHOD(Class__MovieScene__TestMovieSceneSequence)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTestMovieSceneSequence, MovieScene, 0x0348);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTestMovieSceneSequence, 0x0350);
		}

		// class UUniqueDataNpc086_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc086__UniqueDataNpc086_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc086_C, 0x0070);
		}

		// class UUniqueDataNpc072_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc072__UniqueDataNpc072_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc072_C, 0x0070);
		}

		// class UUniqueDataNpc071_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc071__UniqueDataNpc071_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc071_C, 0x0070);
		}

		// class UUniqueDataNpc063B_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc063B__UniqueDataNpc063B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc063B_C, 0x0070);
		}

		// class UUniqueDataNpc063A_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc063A__UniqueDataNpc063A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc063A_C, 0x0070);
		}

		// class UUniqueDataNpc056_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc056__UniqueDataNpc056_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc056_C, 0x0070);
		}

		// class UUniqueDataNpc055_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc055__UniqueDataNpc055_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc055_C, 0x0070);
		}

		// class UUniqueDataNpc051_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc051__UniqueDataNpc051_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc051_C, 0x0070);
		}

		// class UUniqueDataNpc044_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc044__UniqueDataNpc044_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc044_C, 0x0070);
		}

		// class UUniqueDataNpc033_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc033__UniqueDataNpc033_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc033_C, 0x0070);
		}

		// class UUniqueDataCpl004B_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl004B__UniqueDataCpl004B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl004B_C, 0x0070);
		}

		// class ABP_Area03_Break_RockB_C : public AWideUseBreakablePoint
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Break_RockB__BP_Area03_Break_RockB_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Area03_Break_RockB_C, DamageCollision, 0x05A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Break_RockB_C, 0x05A8);
		}

		// class UFighting_Power_Param_C011A_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C011A__Fighting_Power_Param_C011A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C011A_C, 0x0060);
		}

		// class UFighting_Power_Param_C014Ac02_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C014Ac02__Fighting_Power_Param_C014Ac02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C014Ac02_C, 0x0060);
		}

		// class UFighting_Power_Param_C032A_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C032A__Fighting_Power_Param_C032A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C032A_C, 0x0060);
		}

		// class UBP_Cpl031Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl031Status__BP_Cpl031Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl031Status_C, 0x00F0);
		}

		// class UBP_Cpl028Status_enemy_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl028Status_enemy__BP_Cpl028Status_enemy_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl028Status_enemy_C, 0x00F0);
		}

		// class UBP_Cpl025Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl025Status_Atrocious__BP_Cpl025Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl025Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl024Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl024Status_Atrocious__BP_Cpl024Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl024Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl021Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl021Status_Atrocious__BP_Cpl021Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl021Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl021Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl021Status__BP_Cpl021Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl021Status_C, 0x00F0);
		}

		// class UBP_Cpl019BStatus_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl019BStatus_Atrocious__BP_Cpl019BStatus_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl019BStatus_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl019AStatus_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl019AStatus_Atrocious__BP_Cpl019AStatus_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl019AStatus_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl018Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl018Status__BP_Cpl018Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl018Status_C, 0x00F0);
		}

		// class UBP_Cpl013Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl013Status__BP_Cpl013Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl013Status_C, 0x00F0);
		}

		// class UBP_Cpl012Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl012Status__BP_Cpl012Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl012Status_C, 0x00F0);
		}

		// class UBP_Cpl011Status_F_Learning_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl011Status_F_Learning__BP_Cpl011Status_F_Learning_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl011Status_F_Learning_C, 0x00F0);
		}

		// class UBP_Cpl007Status_enemy_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl007Status_enemy__BP_Cpl007Status_enemy_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl007Status_enemy_C, 0x00F0);
		}

		// class UBP_Cpl006Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl006Status__BP_Cpl006Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl006Status_C, 0x00F0);
		}

		// class UBP_Cpl004Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl004Status_Atrocious__BP_Cpl004Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl004Status_Atrocious_C, 0x00F0);
		}

		// class AArea03_FloorDummyCollision_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_FloorDummyCollision__Area03_FloorDummyCollision_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_FloorDummyCollision_C, 0x0340);
		}

		// class UAnimNotifyState_ShakeCameraInBoost_C : public UATAnimNotifyState_CameraShake
		TEST_METHOD(BlueprintGeneratedClass__AnimNotifyState_ShakeCameraInBoost__AnimNotifyState_ShakeCameraInBoost_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_ShakeCameraInBoost_C, 0x0038);
		}

		// class UAB_C002_C : public UAB_C000_C
		TEST_METHOD(AnimBlueprintGeneratedClass__AB_C002__AB_C002_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAB_C002_C, 0xC5BC);
		}

		// class UBP_C000A_ComboAssistShort_C : public UATActSupportComboAssistShort
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_ComboAssistShort__BP_C000A_ComboAssistShort_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_ComboAssistShort_C, 0x01A8);
		}

		// class AAT_Character_cpl002_A_BP_C : public AATCharacterCpl002A
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl002_A_BP__AT_Character_cpl002_A_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl002_A_BP_C, UberGraphFrame, 0x0FA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl002_A_BP_C, AtomCueSheetLoader, 0x0FA8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl002_A_BP_C, 0x0FB0);
		}

		// class ABP_NoonSky_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_NoonSky__BP_NoonSky_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, UberGraphFrame, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, SkyMesh, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, DefaultSceneRoot, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Direction_Light, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Mid, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Sun_Brightness, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Cloud_Density, 0x0364);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Cloud_Speed, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Background_Cloud_Opacity, 0x036C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Cloud_Opacity, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Cloud_Tiling, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Cloud_Height, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Sun_Highlight_Radius, 0x037C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Sun_Radius, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Sun_Lighting_Intensity, 0x0384);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Cloud_Direction, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Overall_Intensity, 0x038C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Shine_Intensity, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Shine_Variation, 0x0394);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Sun_Color, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Cloud_Dark_Color, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Cloud_Light_Color, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Horizon_Color, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Zenith_Color, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Horizon_Gradiation, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Use_Uniform_Brightness, 0x03EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, UnknownData_E3FE, 0x03ED);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Background_Cloud_Speed, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, UnknownData_FWRE, 0x03F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Clouds_Noize, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Cloud_Reduction_Tiling, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Cloud_Reduction_Speed, 0x0404);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Use_Moon, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, UnknownData_BBZE, 0x0409);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Moon_Scale, 0x040C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Moon_Position, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Lunar_Inclination, 0x0414);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Moon_Color, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Moon_Texture, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Moon_Intensity, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Moon_Glow_Size, 0x0434);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Moon_Glow_Intensity, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Moon_Glow_Blend, 0x043C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Horizon_Gradiation_Cloud, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Cloud_Sun_Dark_Color, 0x0444);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Cloud_Dark_Color_Tiling, 0x0454);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Cloud_Shadow_Contrast, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_NoonSky_C, Cloud_Shadow_Brightness, 0x045C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_NoonSky_C, 0x0460);
		}

		// class ABP_Build_TowerC_Test_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Build_TowerC_Test__BP_Build_TowerC_Test_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerC_Test_C, S_Build_TowerPillarPartC_Test1, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerC_Test_C, S_Build_TowerPillarPartA_Test04, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerC_Test_C, S_Build_TowerPillarPartA_Test03, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerC_Test_C, S_Build_TowerPillarPartA_Test1, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerC_Test_C, S_Build_TowerPillarPartC_Test, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerC_Test_C, S_Build_TowerPillarPartD_Test1, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerC_Test_C, S_Build_TowerPillarPartA_Test02, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerC_Test_C, S_Build_TowerPillarPartA_Test01, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerC_Test_C, S_Build_TowerPillarPartA_Test, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerC_Test_C, S_Build_TowerPillarPartB_Test, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerC_Test_C, S_Build_TowerPillarPartD_Test, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerC_Test_C, S_Build_TowerPillarPartE_Test01, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerC_Test_C, S_Build_TowerPillarPartE_Test, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerC_Test_C, S_Build_TowerGenC_Test, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerC_Test_C, S_Build_TowerGenBaseB_Test, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerC_Test_C, DefaultSceneRoot, 0x03B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Build_TowerC_Test_C, 0x03B8);
		}

		// class ABP_Area03_LakeD_C : public ABP_Lake_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_LakeD__BP_Area03_LakeD_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_LakeD_C, 0x0379);
		}

		// class ABP_Area03_Cliff_TopGrassB_D_C : public AGrassGenerationDestructActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_TopGrassB_D__BP_Area03_Cliff_TopGrassB_D_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_TopGrassB_D_C, 0x0388);
		}

		// class ABP_Area03_Cliff_TopGrassE_D_C : public AGrassGenerationDestructActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_TopGrassE_D__BP_Area03_Cliff_TopGrassE_D_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_TopGrassE_D_C, 0x0388);
		}

		// class AAREA03_ENCOUNT_COMMON_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__AREA03_ENCOUNT_COMMON__AREA03_ENCOUNT_COMMON_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAREA03_ENCOUNT_COMMON_C, 0x0340);
		}

		// class AA001_BP_C : public AAnimalMob_Pawn_C
		TEST_METHOD(BlueprintGeneratedClass__A001_BP__A001_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AA001_BP_C, UberGraphFrame, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::AA001_BP_C, LeftFootCollision, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::AA001_BP_C, RightFootCollision, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::AA001_BP_C, LeftArmCollision, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::AA001_BP_C, RightArmCollision, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::AA001_BP_C, LeftLegCollision, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::AA001_BP_C, RightLegCollision, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::AA001_BP_C, MouthCollision, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::AA001_BP_C, BaseTailCollision, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AA001_BP_C, TailCapsuleCollision, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AA001_BP_C, ATMapIcon, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AA001_BP_C, DamageCollision, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AA001_BP_C, SpringArm, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AA001_BP_C, Camera, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AA001_BP_C, HeadCollision, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AA001_BP_C, BodyCollision, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AA001_BP_C, DinosaurComponent, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AA001_BP_C, KiSearch, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AA001_BP_C, ATNavigationInvoker, 0x04F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AA001_BP_C, 0x04F8);
		}

		// class UMob00_AnimBP_C : public UNpcAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__Mob00_AnimBP__Mob00_AnimBP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, UberGraphFrame, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_Root_B55C785044A27A6EC2262D931D918772, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_D0AE630B4529D28CBD126FA8CF48DB1A, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_6392014F45D4E3F55796FEA95345BEA5, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_7A71BCA544F679455A4F2ABA5D86DAD9, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_627C393548331C15B15D008C1BC2AD6A, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_909E37A94C7EC460E75E7DB7515B33D2, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_C9745C6B4172D3A6CBBCDFA0308384E4, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_A5BF093349A069BCE3AA4F8C3B589CF0, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_A246509E4159EECF718EBC97A9F8505C, 0x0640);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_E03BD24E4CC72CFEAD47FA96239D8F38, 0x0688);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_F922521540DD1BF9A30A9CBBBBE7873F, 0x06D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_3712BF83479C81E15B2A458A368B5CEC, 0x0718);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_2FA6E8D7457D735D3C482F81307698F2, 0x0760);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_01F45D4140E645902271DAB20551B760, 0x07A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_B14256BF44E1F32E6E1F16A464510139, 0x07F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_E7E97916435F177D2E70BAB9FF1E46B2, 0x0838);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_775589B64A317DDB4FCB2EA68457BCD6, 0x0880);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_BFFFE9AC4D7788C465C7CCB3606394B4, 0x08C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_277B1AE243C2C5CCE45D94AD05BDF7D0, 0x0910);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_99CDCD1640336711C2F4518A5C770B50, 0x0958);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_06A6CD4945EEE616FD9B52850FF64B0F, 0x09A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_925FF1FE4A87A19246AB1DBE0D63AA11, 0x09E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_F497DB314489C19D6DD00A951B31483E, 0x0A30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_1264716546403EE08D6CCCBAB508D12C, 0x0A78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_FFE182C74E8353AC0241868F3DB7939B, 0x0AC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_34D9DB0B4FC853A0E08B0BB42F6236DB, 0x0B08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_2B1AD9ED4C7C07C94BAC9D93CC78E4C0, 0x0B50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_E95893B64BA4921598D5699231C7A0F2, 0x0B98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_D90CCD8E43C42187E8998589619406E6, 0x0BE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_3A032262487690D826C26B9218C9AC3B, 0x0C28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_21070E024EC3403CD00E929ED060F748, 0x0C70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_1656345D47BB26E2FDD288B65E9B8574, 0x0CB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_F1B6DE7C4DB4C8FC964A20AF3CF77734, 0x0D00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_A09F1D0E430944D78692F1AD1362DF1B, 0x0D48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_2A733DF248FA45B7BA963FA379E17CE1, 0x0D90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_7ACE76494FEFC7312589468412D34B56, 0x0DD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_2D940BEB4E77B8D1714A138204290A03, 0x0E20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_E904813C4BEE0FB6A38AC4B3FA32F574, 0x0E68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_988403664B95FBC6FE2358B93228C5B1, 0x0EB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_C0BCAE3C42C081D4C44117BC06566455, 0x0EF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_47481A1E455119D41727AEA53213F7C6, 0x0F40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_69F7F3754B3A664DF00569BCCA16C9DE, 0x0F88);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_2E084029462C1150C422958CC0A9FD56, 0x0FD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_618D0595453B39AE3DBE3D83EA1400DE, 0x1018);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_AA1CEB0843C11E738EE5838294C3B3C9, 0x1060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_AF44C23148827B3231A5D58687BB61DF, 0x10A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_252D66D3487BFE5AA6416CA8331758C5, 0x10F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_62699C9E48A1CD3CD3C7A5914E5496C2, 0x1138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_CD64F4B74AF0D8A0A470209E0DD62F18, 0x1180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_04ED5EDA4EE3032220F1E5A9925C1FE6, 0x11C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_FD10C3D9425C8B4D88A5088B0BF1B21A, 0x1210);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_495891C74588670751ACE3A817E84A0E, 0x1258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_ED7EBBBF462DAEF2478FA980F90FB147, 0x12A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_CB04EDD0413C37883069ED851D916F74, 0x12E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_0F6B261F481C68ADBC4F9BA785C543DF, 0x1330);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_1CFD03CA434CA2FE2ED231A2E8897538, 0x1378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_438F66FD4F4153ACAA66098C28BE97D9, 0x13C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_9C21714A4F1829438B0158A4BA253A47, 0x1408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_CB83F6154667033010E31BBF945B39A5, 0x1450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_4348E18642B8931D88EB9E878EB64136, 0x1498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_95DF8289414FE0B36C34C59BF8085696, 0x14E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_82F284EE46C114AD4E0B6BB8B221A89F, 0x1528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_985C01D74916F7B5CAB41782E329D560, 0x1570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_B95C5B3B493A6F9DDD3843B81AE4E30E, 0x15B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_BB4A77B1454D6B22EEE7038CFB249C99, 0x1600);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_2F3A4EF9492A1BB0A9E8199EF9628E3E, 0x1648);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_C458A7B644F0999E52E371A0E3A29AFB, 0x1690);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_6322AD02498B01728F1C6CB27B8C9AFB, 0x16D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_4FAECE754BE6723D17C34DBCBBC63283, 0x1720);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_61EB1BE84EA0A07BCED80DA5D7321FA6, 0x1768);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_BC1FDE07458876679DC18188432B69A6, 0x17B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_BFD591874C7FE7FBF21319A8F7EC63D3, 0x17F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_C257737A41606494A97DC180B043095B, 0x1840);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_8D15934F4AC5AD75BB1F70B868185140, 0x1888);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_A19F07F14C5D9B94226D559D651B5924, 0x18D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_ECF6257D4875BE7CFE06F98333B77A2F, 0x1918);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_76CCCBDF49817FBA9CF588A8325BC26E, 0x19B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_C84EF7B04D836CC05A8CEF8B35E3B145, 0x19F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_31A35B9242AE17976C3766A23AF2B999, 0x1A40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_5F6AD5AB452BB8740F6CFCA63C729FAE, 0x1A88);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_6FBBDABC44E7D29261E02584DD289315, 0x1AD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_F441470F40F86D9D2C96F08EFEC5192E, 0x1B18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_C2C716604AB5D2F01F5431BD74EF356E, 0x1B60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_3EB6CEE743FA19ECC3D426B5DFAAB8B1, 0x1BA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_61F6438E49A75D851408C68F88722981, 0x1BF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_B93FE6CA475C1D21C70AC8AAF56EE12E, 0x1C38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_48E230954CECBFC3CAF15FAD9C1E305D, 0x1CD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_B4460B844D9A3B7C5E53578BA0CDF8C2, 0x1D18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_83BCE8AB42D5A0F50D3025B1764A27AC, 0x1DB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateMachine_C11C84644A356375F507F193AE9F9B92, 0x1DF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_53FD443E45704063A19B29AE8E1AB753, 0x1ED8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_89B79B62470F532B7920F499FA781E9A, 0x1F18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_4839FAC94B9B6D8319DEF39B36C374FF, 0x1F60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_A3325C88439255E88F0A3B9E67CB9E60, 0x1FA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_1F85178B4992660238F472A0EAA5BC23, 0x1FF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_FD99BEFC4F6C00012D7E1DAEC740A0C0, 0x2038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_4322CD9248DED1C2CBFFEC9A01907EC3, 0x2080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_77550E604E749ACAE3F7C1ABF72ECF2A, 0x20C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_TransitionResult_3E8C420D40B84172FED1EE81F373CDF1, 0x2110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_636EADC74A26AFF1C5A750A76272DA28, 0x2158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_87DEDD344A335647867D589406331FD3, 0x21F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_4EBB73B94430911F77F6C39A3A0399BC, 0x2238);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_CCE9EB1B4940F11B6D7E37AA7FEB58CE, 0x22D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateMachine_99968F4940F6F02491AB2095C3DA8927, 0x2318);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_C8117F89483272EE2C51CF9EF67B1C67, 0x23F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_E75AECD140EFED90DB2E46829C41503B, 0x2438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_1BC443E348A7762DF5822D98E3CA0571, 0x24D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_A8E292084C74244537A565A64D5193AE, 0x2518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_DA17D34D4E02468F2E1F9D9A39FB29C9, 0x25B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_69B1956D4B5B6ABAFF065BB2DC241DEA, 0x25F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_F2FDE75742B97684351682A327B4C636, 0x2698);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_DCAB1DCD41CD8F775DC818AE65AA1862, 0x26D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_36D630154246B5D3E3730A8F2F1407BA, 0x2778);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_D6F4DA084A4974E01AACB7969AB2A8BF, 0x27B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_4732136E4DF001A922B361BBCAB7B762, 0x2858);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_10DCEFAB4223C0DC1BCF09AC5FCD057C, 0x2898);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_8DAB86C247470D90A7C5A9B8840957B9, 0x2938);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_37846A0E49CBDA8AE813AD80B61416E5, 0x2978);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_F93D73AF4DF215288FB55AAA338BB18A, 0x2A18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_4E13A4A7485201FD710656B8EA6EECFA, 0x2A58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_C19D4CFF4ADF265A14B164B2FCFDFA0A, 0x2AF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_EC9AB8B5447667717E688C840AFD66AB, 0x2B38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_E1CD82AD43F7722BACEE6DB6AAA23039, 0x2BD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_2CD0E5D0447A85838F259F943B35DFA4, 0x2C18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_CCD1D0BF4308CD6A1250A2BCE0748A57, 0x2CB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_DA0C3D74449E03C1572C738756A600F3, 0x2CF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_8A43934E4475289FB51C5E99D560DDDB, 0x2D98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_6BFF1DEC4B3341CCAD6EAF8D7AFDF1AC, 0x2DD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_D416B6E64EEAA895FF7B2E9512B2E284, 0x2E78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_F666D9B74E89869D8005EDAAEBC8DC5F, 0x2EB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_050E26D742EAD8403E2F8BB37CDFF991, 0x2F58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_90F74CA64D640C09882CD290B39D85BB, 0x2F98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_EAF682634282CC65B04310800B022B75, 0x3038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_BE88E4DF4771A8F0F4F0E08DC445819D, 0x3078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_E2D99F9D4C1512FF91DD89967A27E7DD, 0x3118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_4EEEF4DF46F994862FF274B2EEBAE834, 0x3158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_A3723F34450ABA5ABB170486EC59A6ED, 0x31F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_8DC5BB234060C34CC42883816E7C0059, 0x3238);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_CB9064D4493B86501171BE87993207E6, 0x32D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_1447AD4544A10EDEEC7A02A675359091, 0x3318);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_DE26B3DA4AC5D368C816F6B3D6199C72, 0x33B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_637ED5E440566DB97B7384A49A9BC9D8, 0x33F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_E5707F9A449864EA7A13E183FF7316DD, 0x3498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_4799711C45C7D6131290AEB7BB898820, 0x34D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_5C681194420C0E7C59B29D9796297A5C, 0x3578);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_469D748446C53C4A91AC21873D8884CC, 0x35B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_52CF5C4E45847A958030BB8DA9180F17, 0x3658);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_880A63434E10D3F01721C49CACCD309C, 0x3698);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_DA46AB374B71642F1AFE9887A6E38B3D, 0x3738);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_190D5CFD4C41E389085B91B9A3EED499, 0x3778);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_6A71759D424DB980157919AF0B464B87, 0x3818);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_F0805EAA4EAEC3A8CCF2D3A81BACBF40, 0x3858);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_E9A49F1C4FCB9FC3AB46C0BE1339015D, 0x38F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_9B51ABE34AF31AEE033C209C774DF9B7, 0x3938);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_EFB6B84D4308743D04776791AAFB64A0, 0x39D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_F738CFAB47417E299A36F79AECCB80B7, 0x3A18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_52B643594F2A529E1B1E02973AD9D3BE, 0x3AB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_459D0A214BE66EE6E80B2AA89B4D8E36, 0x3AF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_BD26ED42424A5A8B36D64D889567F06E, 0x3B98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_DAD2F66A4AFD7F84140CB697986CCE7F, 0x3BD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_6D330C8A4A09CF89FC768EA1AB397BAF, 0x3C78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_2476A8EB412B2AAEB6B89491B9FB0164, 0x3CB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_180E65B14A4F603130C614BCA2659B44, 0x3D58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_26ACF09D42807FC1629BC5B77FEFE6C0, 0x3D98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_44432A1E4CC26CEC27E48E8F7133B13B, 0x3E38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_C7B432DF4AB42C66BCD452B99FD857F6, 0x3E78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_EB773C5B4A5016A586C313BD743643AE, 0x3F18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_299CA66041E57935E9F60099070F9CF2, 0x3F58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_3616AC374D7EE1A3A0884D8BCB897BFC, 0x3FF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_9F3000E24D022429A3FE68B9C9A6D38B, 0x4038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_F02D79654CA8FE7394DE2EBC0A182A9B, 0x40D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_AA15F97049888F4FCA4C3C97109156C5, 0x4118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_65ADF5E04BE13D533E1BF5863FFEC056, 0x41B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_56E2B6D74276D704960CC9A6AF30BD07, 0x41F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_433A67A24B691D41C17123B425D841FD, 0x4298);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_5502C7E04515B3CB809E32B38DC97E6E, 0x42D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_3BD8873142DDBD5A7785D692FBC79024, 0x4378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_C6F7CD8340109439469E71830B391A75, 0x43B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_5BCC87AE463FA3F8367D35BFBBE42A27, 0x43F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_DA45A56F479AD56F3FD0688E8B822524, 0x4438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_646DF4554AD3170BE32FB983049D7C86, 0x4478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_C53BBB2B4C9BED1C30F172AAD9B0073F, 0x4518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_13F6081242649CDF7460B18354DA12D2, 0x4558);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_BC06C40B42E116F1ECC6078E8E9EF461, 0x45F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_B1E4D323448CF73AA84DAB89BB6F929F, 0x4638);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_A34D1230465D83B2A8A08F902237093C, 0x46D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_09432717452A8FF2719C269E73B6F695, 0x4718);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_678714B7473C339F21824C8DA6D915E5, 0x47B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SequencePlayer_9B6B40DB427CEC06AA95EF9250B69C2D, 0x47F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateResult_8472855B4C4F540916A4E98EE78D258A, 0x4898);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_StateMachine_91211DDE4B02AAF2C5D99598993E3CBA, 0x48D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_ModifyBone_56E71AEC4515D49D41E0D990EAEBA369, 0x49B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SaveCachedPose_8699C56948824D092AE2F38AE4B875CD, 0x4AF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_LayeredBoneBlend_3965A3EE40AE7854AB96EC84E2D8EF2F, 0x4BC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_Slot_7DB779E8468EF10DB92994BC71CAB2B7, 0x4CA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SaveCachedPose_2DD6DCE046CBFCEC39DDF09BD49085E3, 0x4D08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_LayeredBoneBlend_B13925654B4786FDC031A69C818DB7CE, 0x4DE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_Slot_554F2C584D14000E56847193F1DB8229, 0x4EB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SaveCachedPose_8A93C901485D48648309058C78B16326, 0x4F20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_ModifyBone_218324694C33A92D47DBCF8DCA309C77, 0x4FF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_ModifyBone_25F29FA04EF96CE71E7ABDACF348136D, 0x5130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_A9BE0A3F40A638924785BEB7C55D84CD, 0x5268);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SaveCachedPose_0BC467094FD18AD659E7DAAE7F644117, 0x52A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_ModifyBone_02DC021F40A325B5235C108AF890C7DC, 0x5380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_LocalToComponentSpace_BDB0D8824549C9B4E8306EAA4F00937A, 0x54B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_BlendListByBool_B2E5A75A47561B8E4EFEB594EA1B1B05, 0x54F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_UseCachedPose_0F2FD22F417228F824F30C8F508A9DA0, 0x55D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_LocalToComponentSpace_3104B6E34AAC0CA6A305C5A1AAE06BD1, 0x5620);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_4069EA1548BF625F0F33329B61A3BBEB, 0x5660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_LayeredBoneBlend_1F0D863F49624ACBC9102C964F1AF36A, 0x56A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_Slot_C866C9F841553C9063219B8D3A0CEAC9, 0x5778);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_SaveCachedPose_3A0E1C1C463C3EB83A89229700C480CD, 0x57E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_UseCachedPose_F064E1114A367988528A40BECDFD4897, 0x58B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_UseCachedPose_EAD032F44B6DB2B43FDCA798EE7694E4, 0x5900);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_UseCachedPose_C63A449E4DBFF1A17ECECF8BE1A95DBC, 0x5948);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_UseCachedPose_B92FDBB347750532AAA5B3AAA95C42A6, 0x5990);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_UseCachedPose_2D2E81AD45F5680DD3B702A901E71D43, 0x59D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_UseCachedPose_665169A54414745A9278738A83EBBDB6, 0x5A20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_UseCachedPose_7884B4BD41D6C7AE07C372B384BE6348, 0x5A68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, AnimGraphNode_UseCachedPose_CB2CBF5144F8A30A1643B199AA30CB5E, 0x5AB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMob00_AnimBP_C, NewVar_1, 0x5AF8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMob00_AnimBP_C, 0x5AF9);
		}

		// class ULotTask_C : public UBTTask_BlueprintBase
		TEST_METHOD(BlueprintGeneratedClass__LotTask__LotTask_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULotTask_C, UberGraphFrame, 0x00A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULotTask_C, 0x00A8);
		}

		// class UInterruptBehaviorCheckTask_C : public UBTTask_BlueprintBase
		TEST_METHOD(BlueprintGeneratedClass__InterruptBehaviorCheckTask__InterruptBehaviorCheckTask_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInterruptBehaviorCheckTask_C, UberGraphFrame, 0x00A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInterruptBehaviorCheckTask_C, 0x00A8);
		}

		// class AAT_Character_cpl059c01_BP_C : public AATCharacterCpl059c01
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl059c01_BP__AT_Character_cpl059c01_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl059c01_BP_C, AttachParticle, 0x0FA0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl059c01_BP_C, 0x0FA8);
		}

		// class AVariation00Cpl004C_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Cpl004C__Variation00Cpl004C_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Cpl004C_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Cpl004C_C, 0x0380);
		}

		// class AVariation00Cpl058C_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Cpl058C__Variation00Cpl058C_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Cpl058C_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Cpl058C_C, 0x0380);
		}

		// class AFacial00Cpl004D_C : public AATFacialParts
		TEST_METHOD(BlueprintGeneratedClass__Facial00Cpl004D__Facial00Cpl004D_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AFacial00Cpl004D_C, DefaultSceneRoot, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFacial00Cpl004D_C, 0x03E0);
		}

		// class AAT_Character_Cpl075c02_BP_C : public AAT_Character_cpl075A_BP_C
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_Cpl075c02_BP__AT_Character_Cpl075c02_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_Cpl075c02_BP_C, 0x0FA8);
		}

		// class AFacial00Cpl075C_C : public AATFacialParts
		TEST_METHOD(BlueprintGeneratedClass__Facial00Cpl075C__Facial00Cpl075C_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AFacial00Cpl075C_C, DefaultSceneRoot, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFacial00Cpl075C_C, 0x03E0);
		}

		// class AForm00Cpl075C_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Cpl075C__Form00Cpl075C_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Cpl075C_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Cpl075C_C, 0x0380);
		}

		// class AAT_Character_cpl075Ac01_BP_C : public AAT_Character_cpl075A_BP_C
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl075Ac01_BP__AT_Character_cpl075Ac01_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl075Ac01_BP_C, 0x0FA8);
		}

		// class AForm00Cpl014A_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Cpl014A__Form00Cpl014A_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Cpl014A_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Cpl014A_C, 0x0380);
		}

		// class AAT_Character_cpl059c02_BP_C : public AATCharacterCpl059c02
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl059c02_BP__AT_Character_cpl059c02_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl059c02_BP_C, AttachParticle, 0x0FA0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl059c02_BP_C, 0x0FA8);
		}

		// class UBP_C001A_S_SKL005_ActionTable_C : public UCharacterActionClassTable
		TEST_METHOD(BlueprintGeneratedClass__BP_C001A_S_SKL005_ActionTable__BP_C001A_S_SKL005_ActionTable_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C001A_S_SKL005_ActionTable_C, 0x0168);
		}

		// class UBP_C001A_ActionTableBasic_C : public UBP_C000A_ActionTableBasic_C
		TEST_METHOD(BlueprintGeneratedClass__BP_C001A_ActionTableBasic__BP_C001A_ActionTableBasic_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C001A_ActionTableBasic_C, 0x0168);
		}

		// class UBP_C001A_ActionTableAttack_C : public UBP_C000A_ActionTableAttack_C
		TEST_METHOD(BlueprintGeneratedClass__BP_C001A_ActionTableAttack__BP_C001A_ActionTableAttack_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C001A_ActionTableAttack_C, 0x0168);
		}

		// class UTalkAnimBP_C002A_C : public UTownTalkAnimBlueprint_C
		TEST_METHOD(AnimBlueprintGeneratedClass__TalkAnimBP_C002A__TalkAnimBP_C002A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTalkAnimBP_C002A_C, 0x658C);
		}

		// class UTalkAnimBP_N026A_C : public UTownTalkAnimBlueprint_C
		TEST_METHOD(AnimBlueprintGeneratedClass__TalkAnimBP_N026A__TalkAnimBP_N026A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTalkAnimBP_N026A_C, 0x658C);
		}

		// class ASub_Npc026_01_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc026_01_01__Sub_Npc026_01_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc026_01_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc026_01_01_C, quest_id, 0x04C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc026_01_01_C, 0x04D0);
		}

		// class ACookingDemoDataManager_BP_C : public ACookingDemoDataManager
		TEST_METHOD(BlueprintGeneratedClass__CookingDemoDataManager_BP__CookingDemoDataManager_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ACookingDemoDataManager_BP_C, DefaultSceneRoot, 0x03D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACookingDemoDataManager_BP_C, 0x03D8);
		}

		// class AA007_BP_C : public AAnimalMob_Pawn_C
		TEST_METHOD(BlueprintGeneratedClass__A007_BP__A007_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AA007_BP_C, DamageCollision, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::AA007_BP_C, ATNavigationInvoker, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::AA007_BP_C, DeerComponent, 0x0470);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AA007_BP_C, 0x0478);
		}

		// class AA009_BP_C : public AAnimalMob_Pawn_C
		TEST_METHOD(BlueprintGeneratedClass__A009_BP__A009_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AA009_BP_C, AnimalComponentBase, 0x0460);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AA009_BP_C, 0x0468);
		}

		// class ADinosaur_MoveAreaBP_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__Dinosaur_MoveAreaBP__Dinosaur_MoveAreaBP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ADinosaur_MoveAreaBP_C, Dinosaur_MoveArea, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADinosaur_MoveAreaBP_C, DefaultSceneRoot, 0x0340);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADinosaur_MoveAreaBP_C, 0x0348);
		}

		// class AAREA18_C01_EVT_MAIN_01002_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__AREA18_C01_EVT_MAIN_01002__AREA18_C01_EVT_MAIN_01002_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAREA18_C01_EVT_MAIN_01002_C, 0x0340);
		}

		// class AC01_010_S025_idm_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__C01_010_S025_idm__C01_010_S025_idm_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AC01_010_S025_idm_C, 0x0340);
		}

		// class UBP_C000A_SkillMoveChase_C : public UATActSkillMoveChase
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_SkillMoveChase__BP_C000A_SkillMoveChase_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_SkillMoveChase_C, 0x01C8);
		}

		// class UBP_C000A_Step_C : public UATActStep
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_Step__BP_C000A_Step_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_Step_C, 0x0110);
		}

		// class UAB_C059A_C : public UAB_C059_C
		TEST_METHOD(AnimBlueprintGeneratedClass__AB_C059A__AB_C059A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAB_C059A_C, 0x5F68);
		}

		// class AForm00Cpl056C_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Cpl056C__Form00Cpl056C_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Cpl056C_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Cpl056C_C, 0x0380);
		}

		// class UOculusFunctionLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__OculusHMD__OculusFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UOculusFunctionLibrary, 0x0028);
		}

		// class UOculusHMDRuntimeSettings : public UObject
		TEST_METHOD(Class__OculusHMD__OculusHMDRuntimeSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UOculusHMDRuntimeSettings, bAutoEnabled, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UOculusHMDRuntimeSettings, UnknownData_12WZ, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UOculusHMDRuntimeSettings, SplashDescs, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UOculusHMDRuntimeSettings, 0x0040);
		}

		// class UOculusSceneCaptureCubemap : public UObject
		TEST_METHOD(Class__OculusHMD__OculusSceneCaptureCubemap)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UOculusSceneCaptureCubemap, UnknownData_VGBC, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UOculusSceneCaptureCubemap, CaptureComponents, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UOculusSceneCaptureCubemap, UnknownData_F31Z, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UOculusSceneCaptureCubemap, 0x0090);
		}

		// class AForm00Cpl059C_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Cpl059C__Form00Cpl059C_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Cpl059C_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Cpl059C_C, 0x0380);
		}

		// class AAT_Character_cpl059c03_BP_C : public AATCharacterCpl059c03
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl059c03_BP__AT_Character_cpl059c03_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl059c03_BP_C, AttachParticle, 0x0FA0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl059c03_BP_C, 0x0FA8);
		}

		// class AAT_Character_cpl056A_BP_C : public AATCharacterCpl056Base
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl056A_BP__AT_Character_cpl056A_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl056A_BP_C, UberGraphFrame, 0x0FA0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl056A_BP_C, 0x0FA8);
		}

		// class UBP_C057A_DmgDeathLP_C : public UATActCpl059DmgDeathLP
		TEST_METHOD(BlueprintGeneratedClass__BP_C057A_DmgDeathLP__BP_C057A_DmgDeathLP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C057A_DmgDeathLP_C, 0x0118);
		}

		// class UBP_C014A_SkillMoveTeleport_C : public UATActSkillMoveTeleport
		TEST_METHOD(BlueprintGeneratedClass__BP_C014A_SkillMoveTeleport__BP_C014A_SkillMoveTeleport_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C014A_SkillMoveTeleport_C, 0x0178);
		}

		// class UBP_C059A_DamageHold_C : public UATActDmgHold
		TEST_METHOD(BlueprintGeneratedClass__BP_C059A_DamageHold__BP_C059A_DamageHold_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C059A_DamageHold_C, 0x0158);
		}

		// class UBP_C059A_DmgDeathLP_C : public UATActCpl059DmgDeathLP
		TEST_METHOD(BlueprintGeneratedClass__BP_C059A_DmgDeathLP__BP_C059A_DmgDeathLP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C059A_DmgDeathLP_C, 0x0118);
		}

		// class UBP_C056_LongRangeAttack_C : public UATActLongRangeCombo
		TEST_METHOD(BlueprintGeneratedClass__BP_C056_LongRangeAttack__BP_C056_LongRangeAttack_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C056_LongRangeAttack_C, 0x0150);
		}

		// class UBP_C058A_ShortRangeAttack_C : public UATActShortRangeCombo
		TEST_METHOD(BlueprintGeneratedClass__BP_C058A_ShortRangeAttack__BP_C058A_ShortRangeAttack_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C058A_ShortRangeAttack_C, 0x01A8);
		}

		// class UBP_C058A_LongRangeAttack_C : public UATActLongRangeCombo
		TEST_METHOD(BlueprintGeneratedClass__BP_C058A_LongRangeAttack__BP_C058A_LongRangeAttack_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C058A_LongRangeAttack_C, 0x0150);
		}

		// class UBP_C058A_SkillMoveTeleport_C : public UATActSkillMoveTeleport
		TEST_METHOD(BlueprintGeneratedClass__BP_C058A_SkillMoveTeleport__BP_C058A_SkillMoveTeleport_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C058A_SkillMoveTeleport_C, 0x0178);
		}

		// class UBP_C058A_SkillMoveChase_C : public UATActSkillMoveChase
		TEST_METHOD(BlueprintGeneratedClass__BP_C058A_SkillMoveChase__BP_C058A_SkillMoveChase_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C058A_SkillMoveChase_C, 0x01C8);
		}

		// class UBP_C000A_ActionTableBasic_C : public UCharacterActionClassTable
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_ActionTableBasic__BP_C000A_ActionTableBasic_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_ActionTableBasic_C, 0x0168);
		}

		// class UBP_C000A_DamageLongBlowoffDirection_C : public UATActDmgLongBlowoffDirection
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_DamageLongBlowoffDirection__BP_C000A_DamageLongBlowoffDirection_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_DamageLongBlowoffDirection_C, 0x01B8);
		}

		// class AAT_Character_cpl075A_BP_C : public AATCharacterCpl057Base
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl075A_BP__AT_Character_cpl075A_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl075A_BP_C, UberGraphFrame, 0x0FA0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl075A_BP_C, 0x0FA8);
		}

		// class UBP_C014A_ActionTableBasic_C : public UBP_C000A_ActionTableBasic_C
		TEST_METHOD(BlueprintGeneratedClass__BP_C014A_ActionTableBasic__BP_C014A_ActionTableBasic_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C014A_ActionTableBasic_C, 0x0168);
		}

		// class AAT_Character_cpl057A_BP_C : public AATCharacterCpl057Base
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl057A_BP__AT_Character_cpl057A_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl057A_BP_C, UberGraphFrame, 0x0FA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl057A_BP_C, AttachParticle, 0x0FA8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl057A_BP_C, 0x0FB0);
		}

		// class AForm00Cpl058A_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Cpl058A__Form00Cpl058A_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Cpl058A_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Cpl058A_C, 0x0380);
		}

		// class UBP_Cpl059StatusC02_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl059StatusC02__BP_Cpl059StatusC02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl059StatusC02_C, 0x00F0);
		}

		// class UBP_Cpl057StatusC01_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl057StatusC01__BP_Cpl057StatusC01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl057StatusC01_C, 0x00F0);
		}

		// class UBP_Cpl043Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl043Status_Atrocious__BP_Cpl043Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl043Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl041Status_Bs15A_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl041Status_Bs15A__BP_Cpl041Status_Bs15A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl041Status_Bs15A_C, 0x00F0);
		}

		// class UBP_Cpl041Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl041Status__BP_Cpl041Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl041Status_C, 0x00F0);
		}

		// class UBP_Cpl040Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl040Status_Atrocious__BP_Cpl040Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl040Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl003Status_SS2_Learning_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl003Status_SS2_Learning__BP_Cpl003Status_SS2_Learning_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl003Status_SS2_Learning_C, 0x00F0);
		}

		// class UBP_Cpl003Status_MSS2_Learning_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl003Status_MSS2_Learning__BP_Cpl003Status_MSS2_Learning_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl003Status_MSS2_Learning_C, 0x00F0);
		}

		// class UBP_Cpl003Status_enemy_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl003Status_enemy__BP_Cpl003Status_enemy_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl003Status_enemy_C, 0x00F0);
		}

		// class AAT_Character_cpl014_BP_C : public AATCharacterCpl014c01
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl014_BP__AT_Character_cpl014_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl014_BP_C, AtomCueSheetLoader, 0x0FA0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl014_BP_C, 0x0FA8);
		}

		// class UUniqueDataCpl071_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl071__UniqueDataCpl071_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl071_C, 0x0070);
		}

		// class UUniqueDataCpl067_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl067__UniqueDataCpl067_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl067_C, 0x0070);
		}

		// class UUniqueDataCpl066_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl066__UniqueDataCpl066_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl066_C, 0x0070);
		}

		// class UUniqueDataCpl065C_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl065C__UniqueDataCpl065C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl065C_C, 0x0070);
		}

		// class UUniqueDataCpl059B_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl059B__UniqueDataCpl059B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl059B_C, 0x0070);
		}

		// class UUniqueDataCpl059A_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl059A__UniqueDataCpl059A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl059A_C, 0x0070);
		}

		// class UUniqueDataCpl058C_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl058C__UniqueDataCpl058C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl058C_C, 0x0070);
		}

		// class UUniqueDataCpl014B_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl014B__UniqueDataCpl014B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl014B_C, 0x0070);
		}

		// class UUniqueDataCpl014A_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl014A__UniqueDataCpl014A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl014A_C, 0x0070);
		}

		// class UUniqueDataCpl006_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl006__UniqueDataCpl006_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl006_C, 0x0070);
		}

		// class UBP_AtrociousPhase3_Area09_C : public UATAtrociousPhaseBase
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousPhase3_Area09__BP_AtrociousPhase3_Area09_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousPhase3_Area09_C, 0x00F8);
		}

		// class UBP_AtrociousPhase1_Area09_C : public UATAtrociousPhaseBase
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousPhase1_Area09__BP_AtrociousPhase1_Area09_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousPhase1_Area09_C, 0x00F8);
		}

		// class UBP_AtrociousBattle3_Area04_020_C : public UATAtrociousEncountBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousBattle3_Area04_020__BP_AtrociousBattle3_Area04_020_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousBattle3_Area04_020_C, 0x0118);
		}

		// class UBP_AtrociousBattle3_Area04_C : public UATAtrociousEncountBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousBattle3_Area04__BP_AtrociousBattle3_Area04_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousBattle3_Area04_C, 0x0118);
		}

		// class UBP_AtrociousBattle3_Area06_C : public UATAtrociousEncountBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousBattle3_Area06__BP_AtrociousBattle3_Area06_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousBattle3_Area06_C, 0x0118);
		}

		// class UBP_AtrociousBattle1_Area09_C : public UATAtrociousEncountBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousBattle1_Area09__BP_AtrociousBattle1_Area09_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousBattle1_Area09_C, 0x0118);
		}

		// class UBP_AtrociousSubQuest2_Area09_C : public UATAtrociousSubQuest
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousSubQuest2_Area09__BP_AtrociousSubQuest2_Area09_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousSubQuest2_Area09_C, 0x00B0);
		}

		// class UBP_AtrociousSubQuest3_Area09_C : public UATAtrociousSubQuest
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousSubQuest3_Area09__BP_AtrociousSubQuest3_Area09_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousSubQuest3_Area09_C, 0x00B0);
		}

		// class UBP_AtrociousEventBattle3_Area16_C : public UATAtrociousEventBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousEventBattle3_Area16__BP_AtrociousEventBattle3_Area16_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousEventBattle3_Area16_C, 0x00A0);
		}

		// class UBP_AtrociousCondition3_Area16_AfterLap_C : public UATAtrociousCondition
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousCondition3_Area16_AfterLap__BP_AtrociousCondition3_Area16_AfterLap_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousCondition3_Area16_AfterLap_C, 0x0040);
		}

		// class UUniqueDataNpc008_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc008__UniqueDataNpc008_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc008_C, 0x0070);
		}

		// class UUniqueDataNpc007_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc007__UniqueDataNpc007_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc007_C, 0x0070);
		}

		// class UUniqueDataNpc005_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc005__UniqueDataNpc005_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc005_C, 0x0070);
		}

		// class UFighting_Power_Param_C057Ac01_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C057Ac01__Fighting_Power_Param_C057Ac01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C057Ac01_C, 0x0060);
		}

		// class UBP_Cpl001Status_SS3_Learning_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl001Status_SS3_Learning__BP_Cpl001Status_SS3_Learning_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl001Status_SS3_Learning_C, 0x00F0);
		}

		// class UBP_Cpl001Status_SS1_Learning_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl001Status_SS1_Learning__BP_Cpl001Status_SS1_Learning_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl001Status_SS1_Learning_C, 0x00F0);
		}

		// class UBP_Cpl001Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl001Status__BP_Cpl001Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl001Status_C, 0x00F0);
		}

		// class ABP_CookShop_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_CookShop__BP_CookShop_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_CookShop_C, Collision, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_CookShop_C, PointLight, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_CookShop_C, MobIcon, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_CookShop_C, StaticMesh, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_CookShop_C, DefaultSceneRoot, 0x0358);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_CookShop_C, 0x0360);
		}

		// class AMob00_BP_C : public ANpcBase_C
		TEST_METHOD(BlueprintGeneratedClass__Mob00_BP__Mob00_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AMob00_BP_C, MeshPartsUnion, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::AMob00_BP_C, TownMob, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::AMob00_BP_C, NavigationInvoker, 0x0410);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMob00_BP_C, 0x0418);
		}

		// class ABP_River_C : public AATRiver
		TEST_METHOD(BlueprintGeneratedClass__BP_River__BP_River_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_River_C, DefaultSceneRoot, 0x0350);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_River_C, 0x0358);
		}

		// class UBP_Dest_RootB_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_RootB__BP_Dest_RootB_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_RootB_C, 0x0820);
		}

		// class UBP_Dest_RootF_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_RootF__BP_Dest_RootF_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_RootF_C, 0x0820);
		}

		// class ADMedalTreasure_BP_C : public ATreasureAccessPoint
		TEST_METHOD(BlueprintGeneratedClass__DMedalTreasure_BP__DMedalTreasure_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ADMedalTreasure_BP_C, Billboard, 0x0580);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADMedalTreasure_BP_C, 0x0588);
		}

		// class AArea03_Env_Heightmap_x3_y0_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Heightmap_x3_y0__Area03_Env_Heightmap_x3_y0_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Heightmap_x3_y0_C, 0x0340);
		}

		// class ABP_BaseLevelLimitBreakableCave_C : public ALevelLimitSaveBreakablePoint
		TEST_METHOD(BlueprintGeneratedClass__BP_BaseLevelLimitBreakableCave__BP_BaseLevelLimitBreakableCave_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_BaseLevelLimitBreakableCave_C, 0x0600);
		}

		// class ALostPropertyItem_N_C : public ALostPropertyItem_C
		TEST_METHOD(BlueprintGeneratedClass__LostPropertyItem_N__LostPropertyItem_N_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ALostPropertyItem_N_C, Billboard, 0x0540);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALostPropertyItem_N_C, 0x0548);
		}

		// class AArea03_Env_Satancity_00_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Satancity_00__Area03_Env_Satancity_00_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Satancity_00_C, 0x0340);
		}

		// class AArea03_Env_Satancity_01_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Satancity_01__Area03_Env_Satancity_01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Satancity_01_C, 0x0340);
		}

		// class AArea03_Env_Satancity_04_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Satancity_04__Area03_Env_Satancity_04_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Satancity_04_C, 0x0340);
		}

		// class UStart_Commu_Detail_C : public UAT_UIStartCommuDetail
		TEST_METHOD(WidgetBlueprintGeneratedClass__Start_Commu_Detail__Start_Commu_Detail_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, UberGraphFrame, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Slide_L_Out, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Slide_L_In, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Slide_R_Out, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Slide_R_In, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Out, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, In, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Commu_Lv00_00, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Commu_Lv00_01, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Commu_Lv00_02, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Commu_Lv00_03, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Commu_Lv00_04, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Commu_Lv00_05, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Commu_Lv00_06, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Emb_Rarity00, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Img_Link_Bar, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Img_Win_Heading00_00, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Img_Win_Heading00_01, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Img_Win_hr00, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Img_Win_hr00_01, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Ins_Base_Fad03_00, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Ins_Base_Fad03_01, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Ins_Base_Fad03_02, 0x05B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Ins_Base_Head01, 0x05C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Ins_Win02, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Ins_Win_Base00, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Ins_Win_Bg00, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Linkbonus00_00, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Linkbonus00_01, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Linkbonus00_02, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Linkbonus00_03, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Popular_Gage00, 0x0600);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Reward_Bar00, 0x0608);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Reward_Bar01, 0x0610);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Reward_Bar02, 0x0618);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Start_Commu_Pr_Btn, 0x0620);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Txt_Char_Detail, 0x0628);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Txt_Commu_Lv, 0x0630);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Txt_Link, 0x0638);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Txt_Link_Detail, 0x0640);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Txt_Name, 0x0648);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Txt_Popular00, 0x0650);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Xmenu_Bg, 0x0658);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Xmenu_Cloud_Btm, 0x0660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Detail_C, Loop_Count, 0x0668);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStart_Commu_Detail_C, 0x066C);
		}

		// class UPopular_Gage00_C : public UAT_UIPopularGage
		TEST_METHOD(WidgetBlueprintGeneratedClass__Popular_Gage00__Popular_Gage00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPopular_Gage00_C, Achieve, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPopular_Gage00_C, Img_Icon_Popular01, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPopular_Gage00_C, Img_Popular_Gage00, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPopular_Gage00_C, Ins_Popular_Gage00, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPopular_Gage00_C, Ins_Xef_Fad10, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPopular_Gage00_C, Ins_Xef_Sprk00_00, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPopular_Gage00_C, Ins_Xef_Sprk00_01, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPopular_Gage00_C, Ins_Xef_Sprk00_03, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPopular_Gage00_C, Ins_Xef_Sprk00_04, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPopular_Gage00_C, Ins_Xef_Sprk00_05, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPopular_Gage00_C, Ins_Xef_Sun01, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPopular_Gage00_C, Popular_Memory00, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPopular_Gage00_C, Popular_Memory01, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPopular_Gage00_C, Popular_Memory02, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPopular_Gage00_C, Txt_Max00, 0x04C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPopular_Gage00_C, 0x04D0);
		}

		// class ABP_Area03_Cliff_PrecipiceA_N_C : public AGrassGenerationStaticMeshActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_PrecipiceA_N__BP_Area03_Cliff_PrecipiceA_N_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_PrecipiceA_N_C, 0x0360);
		}

		// class ABP_Area03_Cliff_PrecipiceB_N_C : public AGrassGenerationStaticMeshActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_PrecipiceB_N__BP_Area03_Cliff_PrecipiceB_N_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_PrecipiceB_N_C, 0x0360);
		}

		// class ABP_Area03_Cliff_PrecipiceC_N_C : public AGrassGenerationStaticMeshActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_PrecipiceC_N__BP_Area03_Cliff_PrecipiceC_N_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_PrecipiceC_N_C, 0x0360);
		}

		// class AArea03_Env_Heightmap_x1_y2_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Heightmap_x1_y2__Area03_Env_Heightmap_x1_y2_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Heightmap_x1_y2_C, 0x0340);
		}

		// class AArea03_Env_Heightmap_x2_y2_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Heightmap_x2_y2__Area03_Env_Heightmap_x2_y2_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Heightmap_x2_y2_C, 0x0340);
		}

		// class AArea03_Env_Heightmap_x2_y3_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Heightmap_x2_y3__Area03_Env_Heightmap_x2_y3_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Heightmap_x2_y3_C, 0x0340);
		}

		// class AArea03_Env_Heightmap_x2_y1_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Heightmap_x2_y1__Area03_Env_Heightmap_x2_y1_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Heightmap_x2_y1_C, 0x0340);
		}

		// class AArea03_Env_Heightmap_x1_y1_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Heightmap_x1_y1__Area03_Env_Heightmap_x1_y1_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Heightmap_x1_y1_C, 0x0340);
		}

		// class AArea03_Env_Road_00_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Road_00__Area03_Env_Road_00_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Road_00_C, 0x0340);
		}

		// class ABP_Build_TowerE_Test_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Build_TowerE_Test__BP_Build_TowerE_Test_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerE_Test_C, S_Build_TowerPillarPartC_Test02, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerE_Test_C, S_Build_TowerPillarPartC_Test01, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerE_Test_C, S_Build_TowerExtraA_test, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerE_Test_C, S_Build_TowerGenBase_Test, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerE_Test_C, S_Build_TowerPillarPartD_Test, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerE_Test_C, S_Build_TowerPillarPartC_Test, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerE_Test_C, S_Build_TowerPillarPartE_Test, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerE_Test_C, S_Build_TowerGenE_Test, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerE_Test_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Build_TowerE_Test_C, 0x0380);
		}

		// class ABP_Build_TowerG_Test_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Build_TowerG_Test__BP_Build_TowerG_Test_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerG_Test_C, S_Build_TowerGenBase_Test, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerG_Test_C, S_Build_TowerGenSupport_Test02, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerG_Test_C, S_Build_TowerGenSupport_Test01, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerG_Test_C, S_Build_TowerPillarPartD_Test01, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerG_Test_C, S_Build_TowerPillarPartB_Test01, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerG_Test_C, S_Build_TowerGenSphereA_Test01, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerG_Test_C, S_Build_TowerPillarPartA_Test, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerG_Test_C, S_Build_TowerPillarPartB_Test, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerG_Test_C, S_Build_TowerPillarPartD_Test, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerG_Test_C, S_Build_TowerGenSupport_Test, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerG_Test_C, S_Build_TowerGenSphereB_Test, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerG_Test_C, S_Build_TowerGenSphereA_Test, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerG_Test_C, S_Build_TowerGenG_Test, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerG_Test_C, DefaultSceneRoot, 0x03A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Build_TowerG_Test_C, 0x03A8);
		}

		// class UBP_Dest_PalmB_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_PalmB__BP_Dest_PalmB_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_PalmB_C, 0x0820);
		}

		// class AArea03_Env_Desert_Cliff_00_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Desert_Cliff_00__Area03_Env_Desert_Cliff_00_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Desert_Cliff_00_C, 0x0340);
		}

		// class ASupportCrossTalkTrigger_C : public ATriggerStaticActor
		TEST_METHOD(BlueprintGeneratedClass__SupportCrossTalkTrigger__SupportCrossTalkTrigger_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASupportCrossTalkTrigger_C, UberGraphFrame, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASupportCrossTalkTrigger_C, crosstalk_id, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASupportCrossTalkTrigger_C, Distance, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASupportCrossTalkTrigger_C, 0x039C);
		}

		// class ASub_Cpl014_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Cpl014_01__Sub_Cpl014_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl014_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl014_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl014_01_C, told, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl014_01_C, canceled, 0x04D1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Cpl014_01_C, 0x04D2);
		}

		// class ASub_Cpl009_02_02_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Cpl009_02_02__Sub_Cpl009_02_02_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl009_02_02_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl009_02_02_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl009_02_02_C, event_battle_id, 0x04D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Cpl009_02_02_C, 0x04D8);
		}

		// class AProjectile_EnemyRushShotAll_C : public AProjectile_EnemyRushShot
		TEST_METHOD(BlueprintGeneratedClass__Projectile_EnemyRushShotAll__Projectile_EnemyRushShotAll_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AProjectile_EnemyRushShotAll_C, 0x0608);
		}

		// class UBP_DamageType_CmnRushL_C : public UAT_DamageType
		TEST_METHOD(BlueprintGeneratedClass__BP_DamageType_CmnRushL__BP_DamageType_CmnRushL_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_DamageType_CmnRushL_C, 0x0070);
		}

		// class UBP_DamageType_CmnBlowS_C : public UAT_DamageType
		TEST_METHOD(BlueprintGeneratedClass__BP_DamageType_CmnBlowS__BP_DamageType_CmnBlowS_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_DamageType_CmnBlowS_C, 0x0070);
		}

		// class UBP_DamageType_CmnBlowL_C : public UAT_DamageType
		TEST_METHOD(BlueprintGeneratedClass__BP_DamageType_CmnBlowL__BP_DamageType_CmnBlowL_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_DamageType_CmnBlowL_C, 0x0070);
		}

		// class UAT_DamageType_NoReaction_C : public UAT_DamageType
		TEST_METHOD(BlueprintGeneratedClass__AT_DamageType_NoReaction__AT_DamageType_NoReaction_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_DamageType_NoReaction_C, 0x0070);
		}

		// class AAtrociousEnemyNamedEvent_Area09_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__AtrociousEnemyNamedEvent_Area09__AtrociousEnemyNamedEvent_Area09_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAtrociousEnemyNamedEvent_Area09_C, UberGraphFrame, 0x04C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAtrociousEnemyNamedEvent_Area09_C, 0x04C8);
		}

		// class AAtrociousEnemyNamedEvent_Area02_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__AtrociousEnemyNamedEvent_Area02__AtrociousEnemyNamedEvent_Area02_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAtrociousEnemyNamedEvent_Area02_C, UberGraphFrame, 0x04C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAtrociousEnemyNamedEvent_Area02_C, 0x04C8);
		}

		// class AEVT_AtrociousEnemy_050_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__EVT_AtrociousEnemy_050__EVT_AtrociousEnemy_050_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AEVT_AtrociousEnemy_050_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEVT_AtrociousEnemy_050_C, event_battle_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEVT_AtrociousEnemy_050_C, chara, 0x04D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AEVT_AtrociousEnemy_050_C, 0x04E0);
		}

		// class AEVT_AtrociousEnemy_030_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__EVT_AtrociousEnemy_030__EVT_AtrociousEnemy_030_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AEVT_AtrociousEnemy_030_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEVT_AtrociousEnemy_030_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEVT_AtrociousEnemy_030_C, event_battle_id, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEVT_AtrociousEnemy_030_C, AtrociousEnemy_Cpl012, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEVT_AtrociousEnemy_030_C, AtrociousEnemy_Cpl013, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEVT_AtrociousEnemy_030_C, AtrociousEnemy_Cpl068, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEVT_AtrociousEnemy_030_C, AtrociousEnemy_Itm126, 0x04F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AEVT_AtrociousEnemy_030_C, 0x04F8);
		}

		// class UMediaSource : public UObject
		TEST_METHOD(Class__MediaAssets__MediaSource)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaSource, UnknownData_K9AL, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMediaSource, 0x0030);
		}

		// class UBaseMediaSource : public UMediaSource
		TEST_METHOD(Class__MediaAssets__BaseMediaSource)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBaseMediaSource, PlayerName, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBaseMediaSource, 0x0038);
		}

		// class UFileMediaSource : public UBaseMediaSource
		TEST_METHOD(Class__MediaAssets__FileMediaSource)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UFileMediaSource, FilePath, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFileMediaSource, PrecacheFile, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFileMediaSource, UnknownData_MKJ4, 0x0049);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFileMediaSource, 0x0060);
		}

		// class UMediaBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__MediaAssets__MediaBlueprintFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMediaBlueprintFunctionLibrary, 0x0028);
		}

		// class UMediaPlayer : public UObject
		TEST_METHOD(Class__MediaAssets__MediaPlayer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaPlayer, OnEndReached, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaPlayer, OnMediaClosed, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaPlayer, OnMediaOpened, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaPlayer, OnMediaOpenFailed, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaPlayer, OnPlaybackResumed, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaPlayer, OnPlaybackSuspended, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaPlayer, OnSeekCompleted, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaPlayer, OnTracksChanged, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaPlayer, CacheAhead, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaPlayer, CacheBehind, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaPlayer, CacheBehindGame, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaPlayer, NativeAudioOut, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaPlayer, PlayOnOpen, 0x00C1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaPlayer, UnknownData_8V1X, 0x00C2);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaPlayer, UnknownData_YQ68, 0x00C5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaPlayer, Playlist, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaPlayer, PlaylistIndex, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaPlayer, UnknownData_TIV9, 0x00D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaPlayer, TimeDelay, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaPlayer, HorizontalFieldOfView, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaPlayer, VerticalFieldOfView, 0x00E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaPlayer, ViewRotation, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaPlayer, UnknownData_TONM, 0x00F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaPlayer, PlayerGuid, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaPlayer, UnknownData_QIF9, 0x0130);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMediaPlayer, 0x0138);
		}

		// class UMediaPlaylist : public UObject
		TEST_METHOD(Class__MediaAssets__MediaPlaylist)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaPlaylist, Items, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMediaPlaylist, 0x0038);
		}

		// class UMediaSoundComponent : public USynthComponent
		TEST_METHOD(Class__MediaAssets__MediaSoundComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaSoundComponent, Channels, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaSoundComponent, UnknownData_HRNQ, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaSoundComponent, DynamicRateAdjustment, 0x05D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaSoundComponent, UnknownData_69F8, 0x05D5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaSoundComponent, RateAdjustmentFactor, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaSoundComponent, RateAdjustmentRange, 0x05DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaSoundComponent, UnknownData_N8M6, 0x05EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaSoundComponent, MediaPlayer, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaSoundComponent, UnknownData_I6H3, 0x05F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMediaSoundComponent, 0x0670);
		}

		// class UMediaTexture : public UTexture
		TEST_METHOD(Class__MediaAssets__MediaTexture)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaTexture, AddressX, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaTexture, AddressY, 0x00B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaTexture, AutoClear, 0x00B2);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaTexture, UnknownData_CS41, 0x00B3);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaTexture, ClearColor, 0x00B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaTexture, UnknownData_WX5B, 0x00C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaTexture, MediaPlayer, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMediaTexture, UnknownData_EUKX, 0x00D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMediaTexture, 0x0140);
		}

		// class UPlatformMediaSource : public UMediaSource
		TEST_METHOD(Class__MediaAssets__PlatformMediaSource)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlatformMediaSource, MediaSource, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlatformMediaSource, 0x0038);
		}

		// class UStreamMediaSource : public UBaseMediaSource
		TEST_METHOD(Class__MediaAssets__StreamMediaSource)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UStreamMediaSource, StreamUrl, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStreamMediaSource, 0x0048);
		}

		// class UTimeSynchronizableMediaSource : public UBaseMediaSource
		TEST_METHOD(Class__MediaAssets__TimeSynchronizableMediaSource)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTimeSynchronizableMediaSource, bUseTimeSynchronization, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTimeSynchronizableMediaSource, UnknownData_Y02Q, 0x0039);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTimeSynchronizableMediaSource, 0x0040);
		}

		// class ASub_Npc005_02_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc005_02__Sub_Npc005_02_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc005_02_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc005_02_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc005_02_C, canceled, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc005_02_C, UnknownData_0JFC, 0x04D1);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc005_02_C, Npc005, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc005_02_C, Cpl007, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc005_02_C, Arrival01, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc005_02_C, Arrival02, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc005_02_C, Arrival03, 0x04F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc005_02_C, 0x0500);
		}

		// class UAudioCurveSourceComponent : public UAudioComponent
		TEST_METHOD(Class__FacialAnimation__AudioCurveSourceComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioCurveSourceComponent, CurveSourceBindingName, 0x0660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioCurveSourceComponent, CurveSyncOffset, 0x0668);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioCurveSourceComponent, UnknownData_C9KG, 0x066C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAudioCurveSourceComponent, 0x06A0);
		}

		// class UQuest_Navi_C : public UAT_UIQuestNavigation
		TEST_METHOD(WidgetBlueprintGeneratedClass__Quest_Navi__Quest_Navi_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Change_CompZ, 0x0830);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Change_Quest, 0x0838);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Main_Title, 0x0840);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Sub_Out, 0x0848);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Main_Out, 0x0850);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Sub_Title, 0x0858);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Sub_Update, 0x0860);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Main_Update, 0x0868);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, All_Navi_Main, 0x0870);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, All_Navi_Sub, 0x0878);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, All_Nut, 0x0880);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, All_Title_Main, 0x0888);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, All_Title_Sub, 0x0890);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Img_Base_Main00, 0x0898);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Img_Base_Sub00, 0x08A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Img_Cloud00, 0x08A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Img_Cloud00_00, 0x08B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Ins_Bg_Main, 0x08B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Ins_Bg_Sub, 0x08C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Ins_Cloud01, 0x08C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Ins_Cloud01_Tail, 0x08D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Ins_Eff_Main00, 0x08D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Ins_Eff_Main01, 0x08E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Ins_Eff_Sub00, 0x08E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Ins_Eff_Sub01, 0x08F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Ins_Icon_Quest02, 0x08F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Ins_Line_Main, 0x0900);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Ins_Line_Sub, 0x0908);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Pnl_Eff_Main00, 0x0910);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Pnl_Quest_Title, 0x0918);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Pnl_Title, 0x0920);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Quest_Navi_Eff00_Sub, 0x0928);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Quest_Navi_Eff_Main, 0x0930);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Quest_Navi_M00, 0x0938);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Quest_Navi_M01, 0x0940);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Quest_Navi_M02, 0x0948);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Quest_Navi_S00, 0x0950);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Quest_Navi_S01, 0x0958);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Quest_Navi_S02, 0x0960);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Txt_Main00, 0x0968);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Txt_Navi_Detail, 0x0970);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Txt_Sub00, 0x0978);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Navi_C, Txt_Title, 0x0980);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuest_Navi_C, 0x0988);
		}

		// class UQuest_Retry_Info_C : public UAT_UIQuestRetryInfo
		TEST_METHOD(WidgetBlueprintGeneratedClass__Quest_Retry_Info__Quest_Retry_Info_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Retry_Info_C, Out, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Retry_Info_C, In, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Retry_Info_C, Img_Icon_Replay, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Retry_Info_C, Txt_Replay00, 0x03E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuest_Retry_Info_C, 0x03F0);
		}

		// class UShop_Cmn_C : public UAT_UIShopCommon
		TEST_METHOD(WidgetBlueprintGeneratedClass__Shop_Cmn__Shop_Cmn_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, UberGraphFrame, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, In, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Out, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Img_Cap_Base00, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Img_Cap_Base01, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Img_Win00, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Img_Win01, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Img_Win02, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Ins_Base_Hex00_00, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Ins_Base_Hex00_01, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Ins_Icon_Money, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Ins_Mask_Db02, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Ins_Triangle00_00, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Ins_Triangle00_01, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Txt_Cap00, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Txt_Cap01, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Txt_Detail, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Txt_Have, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Txt_Num, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Txt_Num_Money, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Txt_Num_Total, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Txt_Price, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Txt_Stock, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Txt_Title, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Txt_Total, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Xcmn_Scrollbar, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Xlist_Bar04_00, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Xlist_Bar04_01, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Xlist_Bar04_02, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Xlist_Bar04_03, 0x05B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Xlist_Bar04_04, 0x05C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Xlist_Bar04_05, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Cmn_C, Xmenu_Bg, 0x05D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UShop_Cmn_C, 0x05D8);
		}

		// class UMap_World_Win_C : public UAT_UIMapWorldWin
		TEST_METHOD(WidgetBlueprintGeneratedClass__Map_World_Win__Map_World_Win_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Out, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, In, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Img_Base_Info_Fad00, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Img_Win_Heading00_01, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Img_Win_Heading00_02, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Map_Win_List01_11, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Map_Win_List01_00, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Map_Win_List01_01, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Map_Win_List01_02, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Map_Win_List01_03, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Map_Win_List01_04, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Map_Win_List01_05, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Map_Win_List01_06, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Map_Win_List01_07, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Map_Win_List01_08, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Map_Win_List01_09, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Txt_Cap00, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Txt_Cap01, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Txt_None, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Xcmn_Emb01_11, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Xcmn_Emb01_12, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Xcmn_Emb01_13, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Xcmn_Emb01_14, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Xcmn_Emb01_00, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Xcmn_Emb01_01, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Xcmn_Emb01_02, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Xcmn_Emb01_03, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Xcmn_Emb01_04, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Xcmn_Emb01_05, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Xcmn_Emb01_06, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Xcmn_Emb01_07, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Xcmn_Emb01_08, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Win_C, Xcmn_Emb01_09, 0x0530);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMap_World_Win_C, 0x0538);
		}

		// class UStart_Option_C : public UAT_UIStartOption
		TEST_METHOD(WidgetBlueprintGeneratedClass__Start_Option__Start_Option_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Option_C, UberGraphFrame, 0x0798);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Option_C, Slide_R_Out, 0x07A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Option_C, Slide_R_In, 0x07A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Option_C, Slide_L_Out, 0x07B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Option_C, Slide_L_In, 0x07B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Option_C, Out, 0x07C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Option_C, In, 0x07C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Option_C, Img_Base_Cap01_Mask, 0x07D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Option_C, Img_Win_Heading01, 0x07D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Option_C, Img_Win_Heading01_BG, 0x07E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Option_C, Ins_Base_Fad03_00, 0x07E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Option_C, Ins_Base_Fad03_01, 0x07F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Option_C, Ins_Base_Title00, 0x07F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Option_C, Txt_Tab_L, 0x0800);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Option_C, Txt_Tab_R, 0x0808);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Option_C, Txt_Title, 0x0810);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Option_C, Txt_Title_Steam, 0x0818);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Option_C, Xlist_Bar03_Lay10, 0x0820);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Option_C, Xmenu_Arrow_L, 0x0828);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Option_C, Xmenu_Arrow_R, 0x0830);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Option_C, Xmenu_Bg, 0x0838);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStart_Option_C, 0x0840);
		}

		// class UBattle_Command_C : public UAT_UICommandPalette
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Command__Battle_Command_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Change_Back_R01, 0x0C58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Change_Enter_R01, 0x0C60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Change_Enter_R00, 0x0C68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Change_Back_R00, 0x0C70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Change_Back_L01, 0x0C78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Change_Enter_L01, 0x0C80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Change_Enter_L00, 0x0C88);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Change_Back_L00, 0x0C90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, In_01, 0x0C98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Out_01, 0x0CA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Change_Back_01, 0x0CA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Change_Enter_01, 0x0CB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Change_Enter_00, 0x0CB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Change_Back_00, 0x0CC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Out_00, 0x0CC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, In, 0x0CD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, In_Cooperation, 0x0CD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Out_Cooperation, 0x0CE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Battle_Command_List00_00, 0x0CE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Battle_Command_List00_01, 0x0CF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Battle_Command_List00_02, 0x0CF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Battle_Command_List00_03, 0x0D00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Battle_Command_List00_04, 0x0D08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Battle_Command_List00_05, 0x0D10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Battle_Command_List00_06, 0x0D18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Battle_Command_List00_07, 0x0D20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Battle_Command_List01, 0x0D28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Battle_Command_List02_00, 0x0D30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Battle_Command_List02_01, 0x0D38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Battle_Skill_Name_P, 0x0D40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Btn_Plat00, 0x0D48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Btn_Plat01, 0x0D50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Img_Base_Title, 0x0D58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Img_Base_Title_01, 0x0D60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Txt_Title00, 0x0D68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Txt_Title01, 0x0D70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_C, Txt_Title02, 0x0D78);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Command_C, 0x0D80);
		}

		// class UXmenu_Arrow01_C : public UAT_UIXcmnArrow
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xmenu_Arrow01__Xmenu_Arrow01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Arrow01_C, UberGraphFrame, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Arrow01_C, Start, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Arrow01_C, All_Nut, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Arrow01_C, Ins_Arrow01, 0x03C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXmenu_Arrow01_C, 0x03D0);
		}

		// class UChoice_Cmd_C : public UAT_UIChoiceCmd
		TEST_METHOD(WidgetBlueprintGeneratedClass__Choice_Cmd__Choice_Cmd_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UChoice_Cmd_C, UberGraphFrame, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChoice_Cmd_C, Out, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChoice_Cmd_C, Loop, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChoice_Cmd_C, In, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChoice_Cmd_C, All_Nut, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChoice_Cmd_C, Dmy_Choice_Hover, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChoice_Cmd_C, Dmy_Choice_Link, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChoice_Cmd_C, Ins_Dmy_Choice00_Shdw, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UChoice_Cmd_C, Txt_Choice, 0x03F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UChoice_Cmd_C, 0x0400);
		}

		// class UTips_Win_C : public UAT_UITipsWin
		TEST_METHOD(WidgetBlueprintGeneratedClass__Tips_Win__Tips_Win_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, ENter_R01, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Enter_L01, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Enter_R00, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Enter_L00, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Out, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, In, 0x0600);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Dmy_Img, 0x0608);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Dmy_Img_Ctrl, 0x0610);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Dmy_Img_Wide, 0x0618);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Img_Base_Page, 0x0620);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Img_Base_Title, 0x0628);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Img_Deco00, 0x0630);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Img_Deco01, 0x0638);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Img_Deco02, 0x0640);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Img_Deco03, 0x0648);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Img_Deco04, 0x0650);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Img_Deco05, 0x0658);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Img_Line00, 0x0660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Img_Win01, 0x0668);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Tips_List00_L00_00, 0x0670);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Tips_List00_L00_01, 0x0678);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Tips_List00_L00_02, 0x0680);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Tips_List00_L01_00, 0x0688);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Tips_List00_L01_01, 0x0690);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Tips_List00_L01_02, 0x0698);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Tips_List00_R00_00, 0x06A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Tips_List00_R00_01, 0x06A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Tips_List00_R00_02, 0x06B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Tips_List00_R01_00, 0x06B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Tips_List00_R01_02, 0x06C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Tips_List00_R01_03, 0x06C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Txt_Detail00, 0x06D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Txt_Detail01, 0x06D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Txt_Detail03, 0x06E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Txt_Page, 0x06E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Txt_Subtitle, 0x06F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTips_Win_C, Txt_Title, 0x06F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTips_Win_C, 0x0700);
		}

		// class UStart_Top_CompZ01_C : public UAT_UIXtexPartsDb00
		TEST_METHOD(WidgetBlueprintGeneratedClass__Start_Top_CompZ01__Start_Top_CompZ01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_CompZ01_C, Loop, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_CompZ01_C, Ins_Line_CompZ00, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_CompZ01_C, Ins_Line_CompZ01, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStart_Top_CompZ01_C, 0x03A0);
		}

		// class UXmenu_Bg_C : public UAT_UIXcmnBg
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xmenu_Bg__Xmenu_Bg_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Bg_C, UberGraphFrame, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Bg_C, Out, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Bg_C, In, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Bg_C, Ins_Bg00, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Bg_C, Ins_Bg00_Line, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Bg_C, Ins_Bg01, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Bg_C, Ins_Bg_Deco00, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Bg_C, Ins_Bg_Deco01, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Bg_C, Ins_Bg_Deco02, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Bg_C, Ins_Deco_Db00_00, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Bg_C, Ins_Deco_Db00_01, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Bg_C, Ins_Deco_Db00_02, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Bg_C, Ins_Rot_Star00, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Bg_C, Ins_Rot_Star01, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Bg_C, Ins_Rot_Star02, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Bg_C, Pnl_Deco_Alpha, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Bg_C, Xtex_Deco_Db00, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Bg_C, Xtex_Deco_Db01, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Bg_C, Xtex_Deco_Db02, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Bg_C, Xtex_Deco_Db03, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Bg_C, Xtex_Deco_Db04, 0x0460);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXmenu_Bg_C, 0x0468);
		}

		// class UPopular_Memory_C : public UAT_UIPopularGageMemory
		TEST_METHOD(WidgetBlueprintGeneratedClass__Popular_Memory__Popular_Memory_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPopular_Memory_C, Start00, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPopular_Memory_C, Ins_Xef_Fad01, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPopular_Memory_C, Ins_Xef_Fad10, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPopular_Memory_C, 0x03A0);
		}

		// class UXlist_Bar03_Gauge_C : public UCFUIUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xlist_Bar03_Gauge__Xlist_Bar03_Gauge_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, UberGraphFrame, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_Off00, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_Off01, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_Off02, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_Off03, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_Off04, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_Off05, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_Off06, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_Off07, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_Off08, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_Off09, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_Off10, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_Off11, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_Off12, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_Off13, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_Off14, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_Off15, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_Off16, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_Off17, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_Off18, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_Off19, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_On00, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_On01, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_On02, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_On03, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_On04, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_On05, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_On06, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_On07, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_On08, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_On09, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_On10, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_On11, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_On12, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_On13, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_On14, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_On15, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_On16, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_On17, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_On18, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, Ins_System_On19, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, SystemOnList, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar03_Gauge_C, SystemOffList, 0x04C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXlist_Bar03_Gauge_C, 0x04D8);
		}

		// class UBP_DamageType_CmnBeamS_C : public UAT_DamageType
		TEST_METHOD(BlueprintGeneratedClass__BP_DamageType_CmnBeamS__BP_DamageType_CmnBeamS_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_DamageType_CmnBeamS_C, 0x0070);
		}

		// class AArchVisCharacter : public ACharacter
		TEST_METHOD(Class__ArchVisCharacter__ArchVisCharacter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AArchVisCharacter, LookUpAxisName, 0x0748);
			CHEAT_GEAR_CHECK_OFFSET(CG::AArchVisCharacter, LookUpAtRateAxisName, 0x0758);
			CHEAT_GEAR_CHECK_OFFSET(CG::AArchVisCharacter, TurnAxisName, 0x0768);
			CHEAT_GEAR_CHECK_OFFSET(CG::AArchVisCharacter, TurnAtRateAxisName, 0x0778);
			CHEAT_GEAR_CHECK_OFFSET(CG::AArchVisCharacter, MoveForwardAxisName, 0x0788);
			CHEAT_GEAR_CHECK_OFFSET(CG::AArchVisCharacter, MoveRightAxisName, 0x0798);
			CHEAT_GEAR_CHECK_OFFSET(CG::AArchVisCharacter, MouseSensitivityScale_Pitch, 0x07A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AArchVisCharacter, MouseSensitivityScale_Yaw, 0x07AC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArchVisCharacter, 0x07B0);
		}

		// class UArchVisCharMovementComponent : public UCharacterMovementComponent
		TEST_METHOD(Class__ArchVisCharacter__ArchVisCharMovementComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UArchVisCharMovementComponent, RotationalAcceleration, 0x0730);
			CHEAT_GEAR_CHECK_OFFSET(CG::UArchVisCharMovementComponent, RotationalDeceleration, 0x073C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UArchVisCharMovementComponent, MaxRotationalVelocity, 0x0748);
			CHEAT_GEAR_CHECK_OFFSET(CG::UArchVisCharMovementComponent, MinPitch, 0x0754);
			CHEAT_GEAR_CHECK_OFFSET(CG::UArchVisCharMovementComponent, MaxPitch, 0x0758);
			CHEAT_GEAR_CHECK_OFFSET(CG::UArchVisCharMovementComponent, WalkingFriction, 0x075C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UArchVisCharMovementComponent, WalkingSpeed, 0x0760);
			CHEAT_GEAR_CHECK_OFFSET(CG::UArchVisCharMovementComponent, WalkingAcceleration, 0x0764);
			CHEAT_GEAR_CHECK_OFFSET(CG::UArchVisCharMovementComponent, UnknownData_6K15, 0x0768);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UArchVisCharMovementComponent, 0x0780);
		}

		// class UAudioCaptureComponent : public USynthComponent
		TEST_METHOD(Class__AudioCapture__AudioCaptureComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioCaptureComponent, JitterLatencyFrames, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAudioCaptureComponent, UnknownData_2PLS, 0x05D4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAudioCaptureComponent, 0x0680);
		}

		// class UXcmn_Header_S_C : public UAT_UIXcmnHeaderS
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Header_S__Xcmn_Header_S_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Header_S_C, UberGraphFrame, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Header_S_C, Out, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Header_S_C, Loop, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Header_S_C, In, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Header_S_C, Dmy_Header000, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Header_S_C, Img_Base_Head00, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Header_S_C, Xcmn_Cloud_S00, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Header_S_C, Xcmn_Cloud_S01, 0x0418);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Header_S_C, 0x0420);
		}

		// class UNum_S_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Num_S__Num_S_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNum_S_C, UberGraphFrame, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNum_S_C, NewAnimation_2, 0x0210);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNum_S_C, Ins_Num_S, 0x0218);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNum_S_C, Icon_UVArray, 0x0220);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNum_S_C, matPattern, 0x0230);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNum_S_C, UnknownData_1RNR, 0x0234);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNum_S_C, TextureAry, 0x0238);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNum_S_C, 0x0248);
		}

		// class UBP_CharacterStatusList_C : public UATCharacterStatusList
		TEST_METHOD(BlueprintGeneratedClass__BP_CharacterStatusList__BP_CharacterStatusList_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_CharacterStatusList_C, 0x0410);
		}

		// class UUniqueDataNpc031_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc031__UniqueDataNpc031_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc031_C, 0x0070);
		}

		// class UUniqueDataNpc020_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc020__UniqueDataNpc020_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc020_C, 0x0070);
		}

		// class UUniqueDataNpc019_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc019__UniqueDataNpc019_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc019_C, 0x0070);
		}

		// class UUniqueDataNpc018_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc018__UniqueDataNpc018_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc018_C, 0x0070);
		}

		// class UUniqueDataNpc016_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc016__UniqueDataNpc016_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc016_C, 0x0070);
		}

		// class UFighting_Power_Param_C059Ac01_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C059Ac01__Fighting_Power_Param_C059Ac01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C059Ac01_C, 0x0060);
		}

		// class UFighting_Power_Param_C059Ac03_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C059Ac03__Fighting_Power_Param_C059Ac03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C059Ac03_C, 0x0060);
		}

		// class UFighting_Power_Param_C064Ac03_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C064Ac03__Fighting_Power_Param_C064Ac03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C064Ac03_C, 0x0060);
		}

		// class UBP_Cpl075StatusC03_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl075StatusC03__BP_Cpl075StatusC03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl075StatusC03_C, 0x00F0);
		}

		// class ABP_Area03_LakeC_C : public ABP_Lake_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_LakeC__BP_Area03_LakeC_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_LakeC_C, 0x0379);
		}

		// class ABP_Area03_Cliff_WildernessA_D2_C : public AGrassGenerationDestructActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_WildernessA_D2__BP_Area03_Cliff_WildernessA_D2_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_WildernessA_D2_C, 0x0388);
		}

		// class ABP_Area03_Cliff_TopGrassE_N_C : public AGrassGenerationStaticMeshActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_TopGrassE_N__BP_Area03_Cliff_TopGrassE_N_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_TopGrassE_N_C, 0x0360);
		}

		// class ABlockCollision_Box_NotTurn_C : public AATPlayerAutoControlTrigger
		TEST_METHOD(BlueprintGeneratedClass__BlockCollision_Box_NotTurn__BlockCollision_Box_NotTurn_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABlockCollision_Box_NotTurn_C, UberGraphFrame, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABlockCollision_Box_NotTurn_C, blockCollision, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABlockCollision_Box_NotTurn_C, overlapCollision, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABlockCollision_Box_NotTurn_C, DefaultSceneRoot, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABlockCollision_Box_NotTurn_C, IsTurn, 0x0428);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABlockCollision_Box_NotTurn_C, 0x0429);
		}

		// class AVariation00Cpl004A_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Cpl004A__Variation00Cpl004A_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Cpl004A_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Cpl004A_C, 0x0380);
		}

		// class AVariation00Cpl004D_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Cpl004D__Variation00Cpl004D_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Cpl004D_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Cpl004D_C, 0x0380);
		}

		// class AVariation00Cpl059C_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Cpl059C__Variation00Cpl059C_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Cpl059C_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Cpl059C_C, 0x0380);
		}

		// class AFacial00Cpl059A_C : public AATFacialParts
		TEST_METHOD(BlueprintGeneratedClass__Facial00Cpl059A__Facial00Cpl059A_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AFacial00Cpl059A_C, DefaultSceneRoot, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFacial00Cpl059A_C, 0x03E0);
		}

		// class UBP_BattleGroupAI_En01_C : public UBattleGroupAIInfo
		TEST_METHOD(BlueprintGeneratedClass__BP_BattleGroupAI_En01__BP_BattleGroupAI_En01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_BattleGroupAI_En01_C, 0x00A0);
		}

		// class USpawnDataValue_Area03_00_001_C : public USpawnDataValue
		TEST_METHOD(BlueprintGeneratedClass__SpawnDataValue_Area03_00_001__SpawnDataValue_Area03_00_001_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnDataValue_Area03_00_001_C, 0x0038);
		}

		// class USpawnDataValue_Area03_20_Fixed_001_C : public USpawnDataValue
		TEST_METHOD(BlueprintGeneratedClass__SpawnDataValue_Area03_20_Fixed_001__SpawnDataValue_Area03_20_Fixed_001_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnDataValue_Area03_20_Fixed_001_C, 0x0038);
		}

		// class AEventItemTreasure_BP_C : public ATreasureAccessPoint
		TEST_METHOD(BlueprintGeneratedClass__EventItemTreasure_BP__EventItemTreasure_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AEventItemTreasure_BP_C, Billboard, 0x0580);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AEventItemTreasure_BP_C, 0x0588);
		}

		// class AVariation00Cpl075B_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Cpl075B__Variation00Cpl075B_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Cpl075B_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Cpl075B_C, 0x0380);
		}

		// class UBP_C058A_ActionTableBasic_C : public UBP_C000A_ActionTableBasic_C
		TEST_METHOD(BlueprintGeneratedClass__BP_C058A_ActionTableBasic__BP_C058A_ActionTableBasic_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C058A_ActionTableBasic_C, 0x0168);
		}

		// class UBP_C058A_ActionTableAttack_C : public UBP_C000A_ActionTableAttack_C
		TEST_METHOD(BlueprintGeneratedClass__BP_C058A_ActionTableAttack__BP_C058A_ActionTableAttack_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C058A_ActionTableAttack_C, 0x0168);
		}

		// class UAB_C000_C : public UATCharacterAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__AB_C000__AB_C000_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, UberGraphFrame, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_LayeredBoneBlend_97BDDCD54CE241E820FEACBCF7FBB5FE, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SaveCachedPose_4C068BF74335E61B02900DBC4BB6B285, 0x0640);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_5214470445F119F7B02D2ABEF25B224A, 0x0718);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_836ED438447867892EA9378390DB3392, 0x0760);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_Slot_0891F2414850AB5E48EA6D8CB642DAAE, 0x07A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_LayeredBoneBlend_1956FDE144DB4CCEFE0E1684AADF2266, 0x0810);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SaveCachedPose_F4317DF341158397D09DF299C845C852, 0x08E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_8B75EE72404CD50BC24EA28A9EBD8611, 0x09C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_4F27E9F24F98067BF13DAC8510BF3ABF, 0x0A08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_LayeredBoneBlend_1E7AEF99451069C846DD839D5B18403C, 0x0A50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SaveCachedPose_CD3C74614CB93E34816DDABD90939F3B, 0x0B28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SaveCachedPose_F239467E4D35ED12D076EEA1739BD399, 0x0C00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_Slot_1D1D214D49298CED4DA1A09F6301D861, 0x0CD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_LayeredBoneBlend_7619B57046464EA869AB83A7FC35981B, 0x0D40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_Slot_2AAC404044F15561D27CFD8CFA8D3EA4, 0x0E18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_LayeredBoneBlend_EA112DC842D416BECAAC578EE0076828, 0x0E80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SaveCachedPose_6EFF7E7E4CC5D7057156D0BEF1C61224, 0x0F58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SaveCachedPose_9B1F919A4B1CBFF1C870729E5D0B1D9E, 0x1030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_Slot_20F5EFDA407A5CA6B1F871ACF7E620E5, 0x1108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_Slot_228A697E4BE10D2F76FDE7ACFA39DFD6, 0x1170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_Slot_F2B2AA6B4F08CA7D9489E2B9FBE66A02, 0x11D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SaveCachedPose_B74669204145FD6F7B154FB8EB2937D8, 0x1240);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SaveCachedPose_241E088D40E9665605C485A0B64852D4, 0x1318);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_Slot_35EC1A274DA9A9BAA00A6E9D80657E23, 0x13F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_LayeredBoneBlend_C92999834B33CE46929CED94FC0CF4B5, 0x1458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SaveCachedPose_D7CE0AB146BECBAF2EAC219F0C901291, 0x1530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_ModifyBone_3F0192D84F815F3F20885192E8AA549A, 0x1608);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_LocalToComponentSpace_B99F44A04DBA970800935293CEF56B3F, 0x1740);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_ComponentToLocalSpace_6DF352F84410EBC755B3EEB4E449331E, 0x1780);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByBool_8352978648589F450AF148AA29ADEE32, 0x17C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SaveCachedPose_2DEEDF534BA85F92779578AB2C0DAD79, 0x18A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_CF69D9FD475284FC45DD488633EE32B4, 0x1978);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_E9D4AAA7440408923D03679BD16E98A2, 0x19C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_472FCE674AD2069341EE728CA2C9C3AF, 0x1A08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_AB94D8F542471A44FE19BD8AF4EC6B43, 0x1A50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_B2A3E11F42771CEC3EEFA48CDFB0DA34, 0x1A98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_BDD2CFB649FFCDF13F0CC59D9ED0036B, 0x1AE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_7D85B0A7483A3AEEDD023F864FB3BDEA, 0x1B28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_75A5F88B4ABC2D902F53B0AD1F86BA11, 0x1B70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_47C0CD834AABB31BA9B50DAAA475C307, 0x1BB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_A15CDA584681DA82EB8FB2B13A49ABFA, 0x1C00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_664E321E40D893B62559C892E7ED3EB0, 0x1C48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_700E8A864A8E7628D25FBE8EDB31270A, 0x1C90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_68D1F75A49C36C50592A6599CE50A945, 0x1CD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_AE88631449BACB6BAC973BB77D02C1F6, 0x1D20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_4D1833A14E80B1E94307A78D91979061, 0x1D68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_DF62CDE647B38A04AD32FC97366908C3, 0x1DB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_B3C052684C332759E2203591EE0DF7AA, 0x1DF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_ED36C69E44EB7328F8455AB760B7278B, 0x1E40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_C895B4B94E6802916C15B48789A25FD2, 0x1E88);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_F2C530F94681ABF8EE275DA2C2D43A43, 0x1ED0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_1AE9A29F404684E129B67590647E9CB7, 0x1F18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_C215F564429C0755008866A1EC056E2F, 0x1F60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_7F359EC340AD294E4BFE44848D87D1F7, 0x1FA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_1AF1645147F84D688B7AEB98CE173EBE, 0x1FF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_C96E766D48E9BF2B88A0D1ADBF64F474, 0x2038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_B9E5B00B4D48ADC8CD916C991F7FF01B, 0x2080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_12B7BA5D401F2570A411A590E59D479B, 0x20C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_23C3068D42910205F271899E333511F3, 0x2110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_D6C9A4114DE7957DFD49E5B0F1854E3D, 0x2158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_88745CBA40288E350F22F7B1D8E24C82, 0x21A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_DE35E89343F6C0F159A232A4EBAC0A2D, 0x21E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_DB1CF37B4FBAEA9B85A238A4A3E83ECF, 0x2230);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_6C3F6B18456F8B506776B3A949F6EA11, 0x2278);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_D266D36F47D2914FE7FC829F4237809E, 0x22C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_7BCFF42F44E3CFA8152CEE97B032D256, 0x2308);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_9FDBD97245FF7A2326DBD697845F6B90, 0x2350);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_30212C30407AD9ACC3FE1D9E4BDF756D, 0x2398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_7428A73944A0D3958D57388C26BD5D65, 0x23E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_8BA85A9A4A6EDA8F2D4762A27827BD88, 0x2428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_C16DE71B4EB866826FBEE69C3FE81111, 0x2470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_5ACB9E374C7F2F8A9C409494DB723891, 0x24B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_CD89144C472FC22D5C6A259D4423FEF3, 0x2500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_886BB8AF4E2CA0B1A80144BE8E2F756A, 0x2548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_A108449440EDB3AB35332CA4F6BB4BBE, 0x2590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_E9EBE6D34A46321CD6EB18A2BA5DF577, 0x25D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_F5E5477B4F800D93F646619D4B88993B, 0x2620);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_4C4DC1DC4032C5592F8931B29857B2DC, 0x2668);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_573145D1491E382D04114491A41C55E2, 0x26B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_54D7D7D349D789FC4E6EFD92FA143F27, 0x26F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_FE81400942C33BF179E016807B79E95A, 0x2740);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_3373CBC843AC55C2790D109F83AD2EE7, 0x2788);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_D309FFB64ED007BEA93F09885D7C2FF8, 0x27D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_F4B8C9C24EE4D857003613B0248B8C3C, 0x2818);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_CAA8EA814C920C304034D1A9EF22D0A0, 0x2860);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_A39F32FE46E1373905CBEFA3331B0EDA, 0x28A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_F62F2B9041B1EEEDD18B59B70EF0EBBF, 0x28F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_D27F7E4D43DA87B159B8349E4E6F14B3, 0x2938);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_78B36D144005B41E3E9D6196BB4C4BDA, 0x2980);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_343DB8EC456C0468EBBB0C98F16ECFFE, 0x29C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_64C3CF874460D016A6B9CBBCF242912B, 0x2A10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_72A7434545F86DF12DE771983C80F9FF, 0x2A58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_0BA3F1ED4D7847C267D28FAC934E9477, 0x2AA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_1D7D9A5C45D990CDAAD5BEB49935CC34, 0x2AE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_DE7D1C9942C8CEA832376CA34921B543, 0x2B30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_3D56B5CA40A2C446D64C8FB328F77575, 0x2B78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_AEED98384E306DF78BF793BD0B61EA76, 0x2BC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_C8A311D346498429B1155A98F75BD20A, 0x2C08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_47D34C8743484D8A05A7F489E5C7A821, 0x2C50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_98346F4D45BC56522852CF89DBF8B6A1, 0x2C98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_41B315B74658077738D43F86015A6C4E, 0x2CE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_2D04F6AF4FF19259EE1C5DA65B8D0E13, 0x2D28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_E7B7CF3F4270B2B2C98D1DADBABA9823, 0x2D70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_29D0EB134DC57666B98CB9974755712B, 0x2DB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_EEA7519741CF6B4DA76A4699A6BB532E, 0x2E00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_8AADBEAB4599A5F095A983B0BFE28470, 0x2E48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_A8A8F33344EA6FEE137C09BC8DB594A4, 0x2E90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_12688E35465CBFED8D5320B7183E283B, 0x2ED8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_6F07A3BE4E1285A3BCC32DA6F3B1D901, 0x2F20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_AE95C9DD44FA5BB1A84B9EBF2A1E6673, 0x2F68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_A2BB1C3F48D7B20B4469B3880BD39776, 0x2FB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_D5DEC452484A3E25A9E867BFFED6CCB1, 0x2FF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_8F725A8146281E77A8498B846C11D18D, 0x3040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_F27C33794C5C3ED20D58F7BE8FBD0CD0, 0x3088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_4362C66D43E5EDC4F4C7BC8E54E3C918, 0x30D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_6D0D72884D135302FD272498FD460EF7, 0x3118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_F97DB7D34E49B511626D11975F037562, 0x3160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_B51A1B5A4B0CCC5C69223A9F8B1E82E6, 0x31A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_4F4AE3C14CD277B09B6E2DB604E77D7E, 0x31F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_22C903A44100B3424A0E23BA01B25C13, 0x3238);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_AC434CE547A6B59264EB969B24A0FA46, 0x3280);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_8D61DA7F4BD97652D23FD4B6361926B0, 0x32C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_7982B7BB44D6461CE442AA92BE00346D, 0x3310);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_B79D4C5B4E7CAB6D4AF954BE1775F525, 0x3358);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_12E662054D678F1887FE6AAF244122C0, 0x33A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_4BF6323C4357951B4CB6BD859A43BF26, 0x33E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_96DAC3D345270EE82E36A0B077B8AE34, 0x3430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_2B3491E749F17C38FB17F688A1AB2B9E, 0x3478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_995E888E47ECB5ED118C9286EA99634A, 0x34C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_368ED987473BE0815F52B78E6721F894, 0x3508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_90CED8B243CD9DE6CA99528AB0427FA0, 0x3550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_038BEF1A42C84044069356A8EC45E680, 0x3598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_DE8198FA4A3F2609ED304FBCE582D1B1, 0x35E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_CBC04D044A4F98A3153D469902750CFC, 0x3628);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_8A6BADC648BEF1B400A4E3B31A03EE2C, 0x3670);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_91874C224DAE0596AC750996620DA0F9, 0x36B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_B28DCE664A73035E55D92CAB2BC8C07D, 0x3700);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_83F80F67422EAED9B760BCB8496CA612, 0x3748);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_98DAF8554E42CE35444FDBAE9F37CE52, 0x3790);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_3237FC72478DAE46AE5C938946E4DBC4, 0x37D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_6B73ECA74FA79920D4CF99A217FC93EE, 0x3820);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_61694F6D4599A1530802C6A52842E96D, 0x3868);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_448309834E3A3D99FEE0E0B711EF3FAE, 0x38B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_C4F88A1A4F75AB003162E58E25DE93E8, 0x38F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_017E04F94C50AECFEB8E4C9A2A7D0D03, 0x3940);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_50ECDDAB49A52F83AA0EF98B837D3D86, 0x3988);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_E2E3623642C1848C8ADD57A5CF67C5C7, 0x39D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_855588744E483C5A1DB599B2BFDE0B70, 0x3A18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_903AF80B49D58C928A97938230AAC17D, 0x3A60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_41B09261454172E7566378B29FEB3D15, 0x3AA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_36042C5D4CDA4F6766E85482B8FFD878, 0x3AF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_8F62E6344BD74CE77738568E9AF5191D, 0x3B38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_3C56052340D16B874A5D5D80AD4DEFE6, 0x3B80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_FD26F9E24FAC13849A6DBEB8797EE5D1, 0x3BC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_BF35CC3E43382F86AEE5BD8AE7E0A864, 0x3C10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_C47EEFBA4E60C11C22209496F6CD5E4E, 0x3C58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_3B5AAA9E4C2C165C78FE69BF0C8BBF4E, 0x3CA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_2A8F38CA42C8F4CF9397AA862E8437B2, 0x3CE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_730C416A450A79177520BFB0486DB82A, 0x3D30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_C244459643D344114A2704AA8D146EC7, 0x3DD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendSpacePlayer_8658289E4360E2295322AAA439230276, 0x3E10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_26C527BE47EE886F1B7501993B855221, 0x3F38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendSpacePlayer_8E55BE594051CD485CACFC9AFA0BB10D, 0x3F78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_91B8B4DF409CCB16C740E080FE6B8BBE, 0x40A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendSpacePlayer_8344DF3B4A5867829C54EB999F964663, 0x40E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_EFF82749485AA9AFB4A2F08FE0AC120D, 0x4208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_81DB105143A934D4AF9E3087B68FEDAF, 0x4248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_ECB4AB1A458A19959E0F8B9902FB3747, 0x42E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_1F1A4BFB4494A54BC26227881362E495, 0x4328);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_3AF1C62F471BA4D1C419A1A391319A57, 0x43C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionPoseEvaluator_17672B374732BF17C9573A9801149F3C, 0x4408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionPoseEvaluator_AC2F994B46E6BA0EE9636ABFCB3B42C8, 0x4480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_CustomTransitionResult_C70411E84C44AA250F6C72B52055813D, 0x44F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_2E033DC042DE75AB6FAB17AE283DE6CC, 0x4538);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_19F4695C4241F2101B48309256C9D156, 0x4580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_511C77524B17C31C6C52499525E19579, 0x4620);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_44AE3E05460AA2072857B4AA028ED394, 0x4660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_056B283D452A7AE419E541A323A8DB8E, 0x4700);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateMachine_1EF4B3EA40BA8EAD372B2C9DE536D511, 0x4740);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_2286818041229BBCEB9D67AE182B72DD, 0x4820);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_3E9B9EF64E4CC28A5B23C2A739C9089D, 0x4860);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_B22B6D644B554D179999539364BB2F57, 0x4900);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_4FA0C0404A2D93E271F7ACADE3777D24, 0x4940);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByEnum_9D72CBA34231D233F83EBE90D4C741E9, 0x49E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendSpacePlayer_F927D248486F71165916A7B13CD3597B, 0x4AD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendSpacePlayer_476505434355E1F2D373A599D96F9712, 0x4BF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_22EC7DDC4C521A61D33A8A9D33825E11, 0x4D20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendSpacePlayer_FF2D8B904DD92745A16E0C9DFCBD9894, 0x4D60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_245B9B774D9D760EF6D73BAA9E3840E6, 0x4E88);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_5098A1F4478CA924F3FFC590EA5D58AF, 0x4EC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_A54191EA415E8BFE06B046A457926CA3, 0x4F68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_2EA81AAC43E93A95597BD4A2DB437DF0, 0x4FA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_569400E949C7FB408DB4C89D38C5807F, 0x5048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByEnum_FF8EFAF3419CCDBD36D15FA7E32DE80A, 0x50E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_B5A8793244DB18AAF500B6BE1DEF602F, 0x51D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_70378B824B4AE2D9EC1792BDC5BE00EA, 0x5218);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByBool_D96AFB1A491AA419486CD5BFF296F45C, 0x52B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_728FFAB44C1F2A7FBF0FFA9845929DDB, 0x5398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_17BA3F1D4772E66D5452D0A189042417, 0x5438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByBool_6D7CBE0F4E23B9F27E4BBF9A3DF85A12, 0x5478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_8AE18D2240458DA263404B824510F266, 0x5558);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendSpacePlayer_FFAD43304B1FE02764724F80E6D5A984, 0x55F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_A32B7354458EBCBEFE9DC986A0FA7471, 0x5720);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_4543FB884290F836F259FE8DD1D20723, 0x5760);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByBool_401C5D62498F2B43391F4D90710E1DA7, 0x5800);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_A62147394E86A18C2BDF2E8544F9F471, 0x58E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_3BFA6D40496901AB53A987835344CA0F, 0x5980);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_FEBDF4194450796C64E4CE95A59FB32E, 0x59C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_472CB9654F21729A48D216875804A7D9, 0x5A60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_37160EB249D470A48B08C889EF44F200, 0x5AA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_AB09F1D2424F3F9564FDD992376521A4, 0x5AE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_DCFD48494F657E5EEB63DCAAF57909F0, 0x5B30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_7A6A26834F6B5A00576A48BB0C7C9344, 0x5BD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByEnum_F0B876284AC2240156617BBF933FA742, 0x5C10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_3EBFA33E4B0D937CBBFA4BA2A43FDC48, 0x5D00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_C9DA686A4D8256E5826F76B95BECBA6A, 0x5DA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_AA9B8E504457CE95144F63A0E08B77A8, 0x5E40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_2198271C4FF4A99DD1EA4BB66B806CC1, 0x5E80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_D422841540C8567A7F44F990372AE6B3, 0x5F20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_0C2F4AF1418A1B688C38A98A112561A3, 0x5F60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_CEB5AEFA47DFFB00C33878B445C33E1A, 0x6000);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_CA76204F48BFAB3AF948C19416A1BDD3, 0x6040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_D7662A42468D07419F7AE7A55418AFA7, 0x60E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_DD3D874B47A0E2EFEC974A8689715ACF, 0x6120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByEnum_B0CE65794B219551E3A5B09964761A8F, 0x61C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendSpacePlayer_B406DA524861C2BF77EBAF834282E267, 0x62B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendSpacePlayer_C0ED28BE4ED73070A2D5AEBDBAAE6AD9, 0x63D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_16DB3FB9464F5E9004B80FB40E235E38, 0x6500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_BE179F46463E8A7FAA4ADF98951C2C76, 0x6540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByEnum_5706189F4500C2A4E22081A125992C2B, 0x65E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_7E9CD5144BBF8E57E9A49CA152D0E134, 0x66D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_6667E7D1422321E8468991BE49201D0C, 0x6770);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_60302E04408F1DEABCB33AA209F75296, 0x6810);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_9709F34542CC46157098318582E7B285, 0x6850);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_15C8E3A0439D344A26F2C390BB2335A6, 0x68F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendSpacePlayer_B2B761534BD29573E00C7494F33EFD7F, 0x6930);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_C70321964B0AEE4F76D916862DE6FCB9, 0x6A58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendSpacePlayer_D61F6E9D41610F02A004C7B2337C395E, 0x6A98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_C9DDAC914F76F2341EE734A159E4384D, 0x6BC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendSpacePlayer_C9A4208540B765543A2E37827E0E2235, 0x6C00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_6852B2AE47F7BB8F4A33E2B93D301990, 0x6D28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendSpacePlayer_F7E9689A45E6432084796D8132F40BD5, 0x6D68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_B2CC524F4CC0AA05697AE885EB266F86, 0x6E90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_334B0F244AF267EFAFDF4DBB99B6D29F, 0x6ED0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_17F918A245668BD0BF77D0A56895E9C6, 0x6F70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByEnum_1D33451E42D04AFA8B8235B8A4AEB101, 0x7010);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_12B75D424E2CEF67ECC7199ED62FDAE4, 0x7100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_2A79FC0B4FE870B7AF0684BE18EDECC2, 0x71A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_547F83E942A7E836F2F66DB1D22BF5F5, 0x71E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_1FAE61374E309D2FBD5A679BE1CDC4C8, 0x7228);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_9892C18B4B6593278B3177B506A30D4D, 0x7270);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_7C504E2E4084A24B6B27DE95FF032242, 0x7310);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByEnum_62D6CA6443D9A913A51718BB3E64FA33, 0x73B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_0AE221984C049D19CD52F08699030176, 0x74A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendSpacePlayer_AA15CDA54F2D6912431529B3BFC473BC, 0x74E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByEnum_13FD08414DD5A3D9461991953A6DBA8A, 0x7608);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendSpacePlayer_159B6E444443D4FE85A572926F3A71DF, 0x76F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_5075597042653611A5A121AC79B76BC3, 0x7820);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_050CD0A74219C21FCCB9CABE073C5F05, 0x7860);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_4225537A4A49C78621599D8AE1112421, 0x7900);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByEnum_6996576D4EDF58F3A89DB4A8FE1D7B3D, 0x79A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_FB04767D4BBCEA993C7F3081AAD79BD7, 0x7A90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_9D1F429A4ADC00F1A9037898024B555D, 0x7AD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_E41709624FF12E0F279534840AFB109D, 0x7B18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_3ABEA6114BBBD1BDB91DC69201B8D45E, 0x7B60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_C2E8DB5F4534AB0ACC87C9AA4999D985, 0x7C00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByEnum_9A7B335D42D670A5943B528561D32374, 0x7CA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_5077331D41DB7B0C479527862E914746, 0x7D90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_B32526924C6EC24C626697A95DAA4A51, 0x7E30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_9EB18D224D261596276C17BC93E856E6, 0x7E70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_D609D42248CCF2E2A42203B672920F1A, 0x7EB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_7825CBA1468AF1B22533718B1398437C, 0x7F00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_9970E73B49DED0E316A9EFACD8B3C3E3, 0x7F48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_C4D736A34FF2B45528DAFB89EC2172BE, 0x7F90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_03EF975B41C6E5EC41CDF8BBCB76F186, 0x7FD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_09064D19431CC3C7F431F19C430B96B7, 0x8020);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_AF881B414602334AABC7188DF784A256, 0x8068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_61662B054E766CAFDF931AB7F5E85ABB, 0x8108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByBool_AEB9E6D047F17AAD2D513A836ED74118, 0x8148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_2B4AA8214554EAB90B46628EE5608914, 0x8228);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_071BE90B4B88514B21DC638A7E4A9035, 0x82C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_2F740DC34C1703467DFD51B1B201B70E, 0x8368);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByEnum_B8CE562344AF2F2ACA4A9389E9647E9B, 0x8408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_3D3E43F943D0EA019FB35E81258451FF, 0x84F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_FC20EC914B1D552A577050BBB8A8EDD5, 0x8598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_03B213A141DC0F4450743A8ABD84CCB5, 0x8638);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_DA9D43DE4F4B0E5EC06317880061D4D4, 0x8678);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_2094FA6041E6B431A0E2739E20EB97AF, 0x8718);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendSpacePlayer_C1E76DC345B91CB880406AB77C85130B, 0x8758);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_28DF13084A71B5B7659EEA8802EB845C, 0x8880);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_1E52ECD34E8465D79F1ABBA3408DF7AB, 0x88C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_D477A8704D122E4901E11DADA8CC69A9, 0x8960);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_AF01F17146A94EBD400FA7B07F270E57, 0x89A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_4881177C46E50FD85EA80484E84F331D, 0x8A40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByEnum_03CBC33C4BF76700EB3E4A8341242C6A, 0x8AE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_470DDDD24B06F421771A7196E03C152E, 0x8BD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_450E389049D3A5220ED0719465A45C68, 0x8C70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_F85ED106444B24C93C12CFB764335EB5, 0x8D10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_E996DE7F4D805432049D9F99C53837D0, 0x8D50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_6E9B1B0A4DD1A16A76258A8F635E59E4, 0x8DF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_18B6FAFE47B37FF899C2D9ADA32C5665, 0x8E30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendSpacePlayer_71FC6A9541C8E72ECBB6C08418BCBC19, 0x8ED0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByEnum_A9E51AF64EBFA42103A8D988756A15F1, 0x8FF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_EA8B6E134E5649D3AB3CEAB5B1A0E0AB, 0x90E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendSpacePlayer_E770D7AB47FB23F520212EB92574BDB5, 0x9128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_E45645FF432C45DF75CF12B1696A6A9C, 0x9250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_579F1BFB48E24ECDCEDE6280DBF1806A, 0x9290);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_AB53C43B486B22CD45405ABC39921880, 0x9330);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByEnum_A900730847F7316200576A9CBB4DEA85, 0x93D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_6E9395214B9A661EBEB0A1B2AF6981D5, 0x94C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_FACCEE9D41F6E1A520F1139EB7A17F38, 0x9500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_C940E0104D7B1A92267C2299291706EB, 0x95A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_CA6E0D9F4799AABFFEDF61AB06479EEB, 0x9640);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_87F0740A49E7BF9B6962FDB4395CACBA, 0x96E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByEnum_3E445E29409E5D2D893E7787875C623A, 0x9780);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_E1C9A439475E17A1085060BF145AAA05, 0x9870);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateResult_5C970F4A49384CF8D006B38E6BA2FB5D, 0x9910);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TransitionResult_AC0C04334205AB5F42D41C8C5F018A56, 0x9950);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_StateMachine_2EAB5E6D49B9BF3C5236D69E940700E7, 0x9998);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_Root_51C586FD43047A8883C4B0AFAE2B486A, 0x9A78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendSpacePlayer_282D7D7744E3B2A9C3FB1180CEBD9C7F, 0x9AB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByBool_80B0B43F493FE8B7903EC8A764BD3A4E, 0x9BE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SaveCachedPose_2232DF5E47D1107915714EA73E8656A1, 0x9CC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_ApplyMeshSpaceAdditive_B2A2CF3F4C4241380560D0A183D0CF78, 0x9D98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_FAE6642E4F82C22B7A5886992D182CAE, 0x9E00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_82D16FA742C512CA0AE221955537E866, 0x9E48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_084E173542B0D9BF19EFE1806CF45C55, 0x9E90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByBool_0DA8D1E34A2643D3F810F4955DC160B3, 0x9ED8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_LocalToComponentSpace_C3A9170D45B181314431CC8F9A22EFF9, 0x9FB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_LayeredBoneBlend_959044C847FF9409242151BAB7D71FEF, 0x9FF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SaveCachedPose_77D5B272425D75B2E171AFA6E15802BC, 0xA0D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendSpacePlayer_CD97181B4DE741C720992FBD973EE2E7, 0xA1A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_LayeredBoneBlend_942663934BDF3CFFE68FECAEDC8A9903, 0xA2D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_ComponentToLocalSpace_628D2D924532B27E6195628B06D663CA, 0xA3A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_ModifyCurve_38BDAB7D4AB59812D71A57BD9B5B7CF5, 0xA3E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, UnknownData_0NC3, 0xA468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_LookAtEyeBlend_0EE326A048E656C0276A2B8067B56FAB, 0xA470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByBool_7433597846BAB9BCB142FEAF7329BD7D, 0xA5F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SaveCachedPose_084863DC49CFE4616CCD2880F0B471AA, 0xA6D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_6ED09C2E4740B4096FDB56A3930DF007, 0xA7A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_BB87D230453200C132F5C0B68515A500, 0xA7F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_7F61477A4015D72AC690D98237758AA0, 0xA838);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SaveCachedPose_40A7E88541E1160A9982199191ACB4B6, 0xA880);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_271BA3464DDD0297C5B3689662E63E7F, 0xA958);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_ApplyAdditive_5A42CAEB4679A5A00D5888B5652E61E2, 0xA9A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByBool_A0B120C84CD7C030F867DBB9B2A5284F, 0xAA90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_1F1C44214B1B97146BAD7A8ED13E0D16, 0xAB70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SaveCachedPose_5EFEE1A5494ABD8E1D713E99DCF1A1E6, 0xABB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_FC1FB8E540F7FAFD498339B9FB6B3C6B, 0xAC90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_8D0EB487400D9B6913DC96BA34177FBA, 0xACD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_ApplyAdditive_6A698CD647E2E239DDE06BBAD580CD98, 0xAD20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByBool_843A70AF489A100C575FFEA0BDFF8849, 0xAE10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_9B28489B429F61DC88AD4EA7DA30FBBA, 0xAEF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_ApplyAdditive_DA911D104822AE7F4877ED8C7E908053, 0xAF90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_4AAF735C463302714EE981A8EBED8B0B, 0xB080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByBool_A10668B041387A6371C16BB3AE26DD4A, 0xB120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SaveCachedPose_9BA766424159CD51DD38C8919793CD3B, 0xB200);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_LocalToComponentSpace_77FA541143AD721E7E3E418953687BB3, 0xB2D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_ComponentToLocalSpace_169BB639453CD9AAF89121AEB366B8E0, 0xB318);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, UnknownData_ULQ4, 0xB358);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TwoBoneIK_F2385C1943BF9647479788A81B31A4C6, 0xB360);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_TwoBoneIK_0B1322EE490D3374E25C448F698EE09E, 0xB5A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_47129C774F462D5066C8CA8DF5811212, 0xB7E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SaveCachedPose_FAB3644A45FA20B4FE866F9FA45EC4F9, 0xB828);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_1C5704E64DF75F705267848AAC68624F, 0xB900);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_306C721A4116CDED59BDAA9CCD49F169, 0xB948);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByBool_F2F4F4AF47785592268483B98EE4ECF0, 0xB990);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_D922E45345B95F82DCD79EA5BF594D66, 0xBA70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SequencePlayer_22AA255A455342AEDCFE4BA5F750CB82, 0xBAB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_SaveCachedPose_7DD4B5ED486C50754CDE9F8E8EC545F9, 0xBB58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_70649027459D3FDC43C973ACB4AD08BE, 0xBC30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_297763CE476B45A47B6A4E9318EC8DE2, 0xBC78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_A8DA905A4770592EF17394916A36E361, 0xBCC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, UnknownData_PO8T, 0xBD08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AT_TalkAnimGraphNode_LookAt_28AA5BDB4ECE1E934569C28A693F8D89, 0xBD10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AT_TalkAnimGraphNode_LookAt_11E5FA6245ADA0E6B064FAA86082A7DC, 0xBF90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AT_TalkAnimGraphNode_LookAt_530678734C14B71625C3F7B1472119D0, 0xC210);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_BlendListByBool_DD4710FF45ECC08A3FDF16A167DF9370, 0xC490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, AnimGraphNode_UseCachedPose_1899EB9E4A029216B2A7839967E40EF4, 0xC570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C000_C, OptinalAlphaOW, 0xC5B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAB_C000_C, 0xC5BC);
		}

		// class UBP_C001A_S_SKL005_Action_C : public UATActSkillSparking
		TEST_METHOD(BlueprintGeneratedClass__BP_C001A_S_SKL005_Action__BP_C001A_S_SKL005_Action_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C001A_S_SKL005_Action_C, 0x0170);
		}

		// class UBP_C001A_S_SKL003_Action_C : public UATActSkillSparking
		TEST_METHOD(BlueprintGeneratedClass__BP_C001A_S_SKL003_Action__BP_C001A_S_SKL003_Action_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C001A_S_SKL003_Action_C, 0x0170);
		}

		// class UBP_C001A_Search_C : public UATActSearch
		TEST_METHOD(BlueprintGeneratedClass__BP_C001A_Search__BP_C001A_Search_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C001A_Search_C, 0x0130);
		}

		// class UBP_C000A_NoOxygen_UnderWater_C : public UATActNoOxygen_UnderWater
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_NoOxygen_UnderWater__BP_C000A_NoOxygen_UnderWater_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_NoOxygen_UnderWater_C, 0x0128);
		}

		// class UBP_C000A_FieldShotCharge_C : public UATActFieldShotCharge
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_FieldShotCharge__BP_C000A_FieldShotCharge_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_FieldShotCharge_C, 0x0140);
		}

		// class UBP_C000A_FieldShot_C : public UATActFieldShot
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_FieldShot__BP_C000A_FieldShot_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_FieldShot_C, 0x0140);
		}

		// class UAnimNotifyState_CancelFlagCombo_C : public UATAnimNotifyState_CancelFlag
		TEST_METHOD(BlueprintGeneratedClass__AnimNotifyState_CancelFlagCombo__AnimNotifyState_CancelFlagCombo_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_CancelFlagCombo_C, 0x0038);
		}

		// class UAB_C064A_C : public UAB_C000_C
		TEST_METHOD(AnimBlueprintGeneratedClass__AB_C064A__AB_C064A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAB_C064A_C, 0xC5BC);
		}

		// class UB_CharacterMoveParam_C : public UATCharacterMoveParam
		TEST_METHOD(BlueprintGeneratedClass__B_CharacterMoveParam__B_CharacterMoveParam_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UB_CharacterMoveParam_C, 0x0430);
		}

		// class UAnimNotify_CharacterTargetMove_C : public UATAnimNotify_CharacterTargetMove
		TEST_METHOD(BlueprintGeneratedClass__AnimNotify_CharacterTargetMove__AnimNotify_CharacterTargetMove_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_CharacterTargetMove_C, 0x0050);
		}

		// class AProjectile_Kidan_Sml_scmb04_ss2_BP_C : public AATProjectileBullet
		TEST_METHOD(BlueprintGeneratedClass__Projectile_Kidan_Sml_scmb04_ss2_BP__Projectile_Kidan_Sml_scmb04_ss2_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AProjectile_Kidan_Sml_scmb04_ss2_BP_C, 0x0528);
		}

		// class AProjectile_Kidan_EnemyBigCharge_BP_C : public AATProjectileBullet
		TEST_METHOD(BlueprintGeneratedClass__Projectile_Kidan_EnemyBigCharge_BP__Projectile_Kidan_EnemyBigCharge_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AProjectile_Kidan_EnemyBigCharge_BP_C, 0x0528);
		}

		// class UQuest_Main_Telop_C : public UAT_UIQuestMainTelop
		TEST_METHOD(WidgetBlueprintGeneratedClass__Quest_Main_Telop__Quest_Main_Telop_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Telop_C, Out, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Telop_C, In, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Telop_C, Img_Space_L_Bottom00, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Telop_C, Img_Space_L_Bottom01, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Telop_C, Img_Space_L_Top00, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Telop_C, Img_Space_L_Top01, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Telop_C, Img_Space_R_Bottom00, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Telop_C, Img_Space_R_Bottom01, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Telop_C, Img_Space_R_Top00, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Telop_C, Img_Space_R_Top01, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Telop_C, Telop_Txt_L_Bottom00, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Telop_C, Telop_Txt_L_Bottom01, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Telop_C, Telop_Txt_L_Bottom02, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Telop_C, Telop_Txt_L_Top00, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Telop_C, Telop_Txt_L_Top01, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Telop_C, Telop_Txt_L_Top02, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Telop_C, Telop_Txt_R_Bottom00, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Telop_C, Telop_Txt_R_Bottom01, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Telop_C, Telop_Txt_R_Bottom02, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Telop_C, Telop_Txt_R_Top00, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Telop_C, Telop_Txt_R_Top01, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Main_Telop_C, Telop_Txt_R_Top02, 0x04B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuest_Main_Telop_C, 0x04C0);
		}

		// class UDeer_AnimBP_C : public UNpcAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__Deer_AnimBP__Deer_AnimBP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, UberGraphFrame, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_Root_0E57529D47146AA459FC2588C63DAE4F, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_F0E5597044B6E0600E62B49C63E68FA3, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_F4F3932B4AA434A0868CA68BEE3B29EA, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_7936DF1E40E7310592AF7792F1B1EB7A, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_4FEA1F634AE61C10756A9693DBCF1930, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_B7C0BBF9429651BA8B59DDAD3C60CAAB, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_SequencePlayer_BAEE24A341E8975F8357A78C83C6730C, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_StateResult_ACF09986445E24C1AD4024BEF1E6B574, 0x0650);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_SequencePlayer_4F8658DC451FE2DE60E07D8D1AEB838E, 0x0690);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_StateResult_CB0431574602DBD7B849419AF474FBC9, 0x0730);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_SequencePlayer_718ED3F54B8DF79D5D84DB91BF63A6AD, 0x0770);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_StateResult_7DD7D8FD4EDED3473E95DF99ACC0427B, 0x0810);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_CFA870F7427364C991008CB7C06B62AD, 0x0850);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_C5964695465759BE52B696B2B653EF24, 0x0898);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_8C682EF04EF3C3FA76DF7CA15FDFE038, 0x08E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_F7EC5191487C497BC1A371AABA89DD2C, 0x0928);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_E895D512488B9F52491C7CB0C9C8CE33, 0x0970);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_AF5FA3FD40CBEF8508A2528A7743E6B1, 0x09B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_04748C824EAE73C68363BC8D880C8937, 0x0A00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_6B588B68487CD84DE55CD0A02DB57DDB, 0x0A48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_16FE2756444D393345E166BE1C421392, 0x0A90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_C13494174F51A8800C6A9B8F623CF4AF, 0x0AD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_A805E42D4819870B84BB6B8C19ECF347, 0x0B20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_C46BF4C149B77CCD7948968EA76F7B80, 0x0B68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_860CBC354DE1BBC25244EFB185244AB3, 0x0BB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_1310095F4392BAD20C424BB888F6C019, 0x0BF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_A03FE94341FC1B56FF3B138C2C3EF32B, 0x0C40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_5C85DFA444BBD2AEB40BCA86DFE732B8, 0x0C88);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_EE82DC5245FEAF2F3B1FD3A17F8F4AC5, 0x0CD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_E058B44946A83C715B0316AC3DF3B370, 0x0D18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_302A45214D0B22F1C450949F380B0E61, 0x0D60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_358A59C44F89445ADF5DB2A8DE052CD6, 0x0DA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_EE3E43D145E4D35789A4F2B0C2E58EC6, 0x0DF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_07EB406A44E9680EFB08C9A0E8124E46, 0x0E38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_B5CD66944EC0E180ABFA4F80F538EB5C, 0x0E80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_417E886C4C5B26BC3429F48E95BF11F9, 0x0EC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_40BEE8944B5A1994E4D139A00034C403, 0x0F10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_0F850307470E2EC7FE98B2B7D5D7F067, 0x0F58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_FBE02D524027D7D99B9456BE9CA2AE07, 0x0FA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_8EB5A6B3470D5C2624C83BA8763DC3BD, 0x0FE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_SequencePlayer_6A26068D4331C818CC6BE5A3C956092B, 0x1030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_StateResult_2E1845F4465B75F38C311DAA3BA880A8, 0x10D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_TransitionResult_B677B83349782C7653D7B4BBB5237C38, 0x1110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_SequencePlayer_9129568C404872DC868E7DB20FD27C4D, 0x1158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_StateResult_2025F02245078E070A0DB9A01EB9CDC3, 0x11F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_SequencePlayer_E985C25741B3CFA4EDD12292C41B3AEC, 0x1238);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_StateResult_6C7A0E8D4E1676558DC21EA5F53B8E82, 0x12D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_SequencePlayer_1ECF0D184C600434685FE78CC637B5C0, 0x1318);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_StateResult_552EB0BD48D67C205CA2EAAF81ACEC80, 0x13B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_SequencePlayer_FA903E274FC8B0A3F4FBD39C502456BD, 0x13F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_StateResult_3CA9A35046CA5B4E01F5AD9E04D40227, 0x1498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_SequencePlayer_554785804BD59CFB784698B2FDFA8279, 0x14D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_StateResult_9A33911A4141697A68F97BBEB38497C2, 0x1578);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_SequencePlayer_AD34206F4B0D4C947CD4359C452CD0CB, 0x15B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_StateResult_A14482A64B185527DA1AA89709290A84, 0x1658);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_SequencePlayer_009DE4BE43697673F2B44EB935B2C4DB, 0x1698);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_StateResult_138FB1D14FAF78FDB4E18297CF8AFDE9, 0x1738);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_SequencePlayer_808CF1F448C32D55CB3E7E93E62D31F3, 0x1778);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_StateResult_799DCA234AC33A7C7A1BE08A077A42E3, 0x1818);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_SequencePlayer_DC2EDAC84FC47F22AB304FA93104AD95, 0x1858);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_BlendListByInt_00EBDE8A4EDE039395CDBEABE00CC9F5, 0x18F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_SequencePlayer_96D39EF04BF450FD93D9F3B4FA28514D, 0x19D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_StateResult_6A1174264A92593247FC2FBEFB10ADDE, 0x1A78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_SequencePlayer_1D703AEF47D7E672CFDC2DB81E9B068D, 0x1AB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_StateResult_678714B7473C339F21824C8DA6D915E5, 0x1B58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_StateMachine_EEFBF9814C1977B691991B8EEAA6F833, 0x1B98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_StateResult_917EB2D94897EB49CDDDDAA3D786BDDA, 0x1C78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_StateMachine_3E6D140742D5DF973A42ABA82F21EF0C, 0x1CB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_LocalToComponentSpace_9B5F84814B720E0ED8A86184D384EBF3, 0x1D98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_ModifyBone_13CD8BFB44B4DF9F95F7EC8650DBD22A, 0x1DD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_ModifyBone_73F0E9FF40E9859F38CC119FB3DB819B, 0x1F10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_E5E489A94DC280064DE5FBAA216C187F, 0x2048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_ModifyBone_D0AF03234995577FA305FBAFF38DC76A, 0x2088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_LayeredBoneBlend_CEB8DD4840484194C5A704AA739ABB64, 0x21C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_Slot_748730EC41C225D97B84D79C4A2CB979, 0x2298);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_SaveCachedPose_B02EF31941A4D95D9AC4F0907C1727AC, 0x2300);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_UseCachedPose_B799432B470AC077CF0F49B412AB9860, 0x23D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, AnimGraphNode_UseCachedPose_D2E0BB7A405B52B499F4E1B1AA93BC12, 0x2420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDeer_AnimBP_C, Neck01Rotation_1, 0x2468);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDeer_AnimBP_C, 0x2474);
		}

		// class AArea03_Env_Satancity_Art_00_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Satancity_Art_00__Area03_Env_Satancity_Art_00_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Satancity_Art_00_C, 0x0340);
		}

		// class UMap_Icon_P_Marker_C : public UAT_UIMapPlayerMarker
		TEST_METHOD(WidgetBlueprintGeneratedClass__Map_Icon_P_Marker__Map_Icon_P_Marker_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_P_Marker_C, UberGraphFrame, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_P_Marker_C, Out_Navi, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_P_Marker_C, In_Navi, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_P_Marker_C, Img_Micon_Navi00, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_P_Marker_C, Img_Micon_Navi01_Btm, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_P_Marker_C, Img_Micon_Navi01_Left, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_P_Marker_C, Img_Micon_Navi01_Right, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_P_Marker_C, Img_Micon_Navi01_Top, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_P_Marker_C, Ins_Micon_Navi_Blink, 0x03F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMap_Icon_P_Marker_C, 0x03F8);
		}

		// class UTelop_Txt_C : public UAT_UITelopTxt
		TEST_METHOD(WidgetBlueprintGeneratedClass__Telop_Txt__Telop_Txt_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTelop_Txt_C, Img_Space_Cap_L, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTelop_Txt_C, Img_Space_Cap_R, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTelop_Txt_C, Img_Space_Lang_L00, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTelop_Txt_C, Img_Space_Lang_R00, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTelop_Txt_C, Img_Space_Name_L, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTelop_Txt_C, Img_Space_Name_R, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTelop_Txt_C, Txt_Caption, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTelop_Txt_C, Txt_Name, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTelop_Txt_C, Txt_Name_Foreign_Lang00, 0x0408);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTelop_Txt_C, 0x0410);
		}

		// class UWolf_AnimBP_C : public UNpcAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__Wolf_AnimBP__Wolf_AnimBP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, UberGraphFrame, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_Root_EF1F80DB454E82FCD083EB979B5F281D, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_93A533A74A021128DF286394ACBFC926, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_32EC030340D3CF09E18C5EAE5583ECD2, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_2FD9ADD14B8413D53BD2568149C06586, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_BB1FD90D4F7E0C7F8FFBE19EC379B69E, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_5352AF3A4B31A8657EA7AEA255F0F700, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_SequencePlayer_634451884018388054765786D4D91451, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateResult_B5BE77684A10951E67D9F6AEC476CFFA, 0x0650);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_SequencePlayer_2728FD2F402878631E1818A00D5AFB98, 0x0690);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateResult_A3DBBC9A46304A4DF08386837CBA5952, 0x0730);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_SequencePlayer_AAA230494A0202D57763E78CB14D7A29, 0x0770);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateResult_3A615F11487A4413DDFA6CB4873D1A4C, 0x0810);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_51C7D9824AD30BDF01EE2ABD3E1AB709, 0x0850);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_3EA05EC84D07E0202B8894912C2B6237, 0x0898);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_AEA47FC2456EC25D4643708084EE6C42, 0x08E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_531CF15043AC149B838B9788585467D0, 0x0928);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_664C1F814EAF25D741EF91B705E63DFD, 0x0970);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_DC13896B440C5715424C96B7DFB02904, 0x09B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_918429D040EF4F2BE8589A9A60FDA14B, 0x0A00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_237728BC41269F0949689BA6CF8E3016, 0x0A48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_56C40F9E41FC22284EC551AAEFABA437, 0x0A90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_A22A2CD5400E8E25DD08999F52E6458F, 0x0AD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_E237860548E3C86782739C9BC1EA8613, 0x0B20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_6FA927C340E2D8556A9698B5845DC960, 0x0B68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_1E1A747143DAF60CF8AC81ABD3235320, 0x0BB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_4856E1EB47B114747FE3DE92693B274E, 0x0BF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_2F42EF814811D627294649A10FA532BF, 0x0C40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_857391F34117E65199AAAE9FCDB15EAC, 0x0C88);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_3F3B3F094625A7C0CA0207A35D3B567B, 0x0CD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_0460DE484E8141D77EDCC883D51B2632, 0x0D18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_369E5A38446CA1EB828AFD8A9E037981, 0x0D60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_528E3CC442772FAC6083F7BCFB34F549, 0x0DA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_22CFD1FA4A3EDEEAC9DCDAB14300C9A8, 0x0DF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_315ABC13466FB4988CFCC482810330F7, 0x0E38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_D15CC26B46AD268481CD22892315F256, 0x0E80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_0F7FE95C422896D751D394B8878784B1, 0x0EC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_5692FE1A4411C7035831ECAA9EB5BC0A, 0x0F10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_4CE56D07480A474B8FD5879B09BA8C02, 0x0F58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_17D25E1F464B7427142956A75101652A, 0x0FA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_4FDE25EC410037FC8F0BBF82C324B0AA, 0x0FE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_ABE21F634D5206AE67A9EEAF349C562B, 0x1030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_0C6DF95C46E2A15F6DA5319FDFDB3E78, 0x1078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_823832004983142C070A8DBBCA1AE7B4, 0x10C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_78DE19F54264B312F6D067A9667FC8B0, 0x1108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_D2A53EEE4615DA3BF2B39EB39F8B4513, 0x1150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_5AD8C79E4D34D27A7B56C98F70D92E07, 0x1198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_59368F98477E28BFD6B474AD0A65529E, 0x11E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_D536ABA04A955FDC1DA5F59FC016CB59, 0x1228);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_D6D052B14E7965C5408068ACC14BD0B2, 0x1270);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_711AD6B04DCABD80BAA737884A59A8DF, 0x12B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_8B6C4C04496C82127F75B498068E15A4, 0x1300);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_TransitionResult_021110CC4CFF34FF9F9395BC669549E9, 0x1348);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_SequencePlayer_1588867E4C60EF9F791730B91A253296, 0x1390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateResult_5D562AB04F938AA0203034A9AEFAC271, 0x1430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_SequencePlayer_A1AA2AEB4B55938D003E438106CB4993, 0x1470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateResult_B0138A2745811BFD1282F9B710D65DB0, 0x1510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_SequencePlayer_31281ACD4F9898EAEE77628830A2D396, 0x1550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateResult_F72C016241785E03EB740BB2F2CF8F35, 0x15F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_SequencePlayer_A0C335924945D2845DFBFD839E10BF64, 0x1630);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateResult_E34C37BC4E2C9ACFDB3954B27140A036, 0x16D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_SequencePlayer_316D44BC48784AB15F356FB53990BC7D, 0x1710);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateResult_07F8CB664B57C8B9127A1FA87104F00D, 0x17B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_SequencePlayer_7144094246C671AAC631EEA8070D0606, 0x17F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateResult_6E7E92984ED2927F8C395199AC66E020, 0x1890);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_SequencePlayer_3275C4EB463DCB722A89F0B5945E4EF0, 0x18D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateResult_27233AF84D89D1285B97C488F1C92D9A, 0x1970);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_SequencePlayer_8AD18E8042528FFD53658990EB757A6D, 0x19B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateResult_D31210C44362EE92BE901EB51BB672B4, 0x1A50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateMachine_A0D112FD480DFF93EB67C4940D9F567A, 0x1A90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateResult_A0A05FC74DE0D65C552C7F9225CED252, 0x1B70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_SequencePlayer_6015A924454C0E2EC1AD74872D4D13B7, 0x1BB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateResult_C475869C4F0A3D9BDE5069922566243B, 0x1C50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_SequencePlayer_0C80F91F4D2409B5805448ACDEB239FF, 0x1C90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateResult_9C59FA0F4F324895FEE390B50A45CBEA, 0x1D30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_SequencePlayer_274A0F6F446DA3A338277CAA35515C68, 0x1D70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateResult_0CE2A5B047CEDAC031A36A952C853D27, 0x1E10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_SequencePlayer_8A51C8CB461FAC3900DF839B5B5319AA, 0x1E50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateResult_AA0DBE2E4DD4FF564FDF3385E02E1588, 0x1EF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_SequencePlayer_84E1D561409DEA3BE8BEA2859F36DBE9, 0x1F30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateResult_25BEC5944674024EA98663BD1F0F0086, 0x1FD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_SequencePlayer_F00D448248CFE1ECB8B2FB8E90224827, 0x2010);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateResult_273058DC4FF548BA98C7D190C346EFDA, 0x20B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_SequencePlayer_99E68DC1459EBB75F8BAC9BABDBFF58D, 0x20F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateResult_0E919F8E43C1CAFAC32497AD9DBB681A, 0x2190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_SequencePlayer_E232FBAD44B05305EBFEDFB9E46D98ED, 0x21D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateResult_67D4824B443210E5F886C591C8CC185D, 0x2270);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_SequencePlayer_862635BB42F0A096902A5EB20D5C92A1, 0x22B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateResult_72BACF55416DDF533F1270999F89CFED, 0x2350);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_SequencePlayer_A6EEB00E4E24815809B71AA38E37AFE0, 0x2390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateResult_AA29274946839ECA272272BDD767AD3F, 0x2430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_SequencePlayer_1D1C7F994B2EFC9C1C749484DD3C551C, 0x2470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateResult_AF1A923C436F6107BCE61C93FCFFF5E0, 0x2510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_SequencePlayer_7B015D154142155FC6C40ABE24CF6E8E, 0x2550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateResult_6A5FDA1F4CBE4EA48EE77E8E580EFA7B, 0x25F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateMachine_6E2ECFE14158CCFB925DC7AB0A08AEAE, 0x2630);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateResult_3F76123F43ECF982FD437BB4EE655894, 0x2710);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_StateMachine_114A0730464FD0241719889A58E4E1DE, 0x2750);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_LocalToComponentSpace_A98A00D44CD31ACA50D46A8EDE5A8FE3, 0x2830);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_ModifyBone_482CDDBF4D5490306E6FD7A7548C988D, 0x2870);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_ModifyBone_AB7BDFBE4C60E3C3BC4C0F93F46696AF, 0x29A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_ComponentToLocalSpace_D78BFC4444C84003D56E56822DFC6D8B, 0x2AE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_ModifyBone_DB9E6D3C4F371B3B257ECB81AB1684D3, 0x2B20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_LayeredBoneBlend_43F884984821AD63388381B6CC933A9F, 0x2C58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_Slot_D5164F214719DB48212C35828D2F8D79, 0x2D30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_SaveCachedPose_DB90E744417890B34BDF85A50CFFE547, 0x2D98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_UseCachedPose_AFEF95904944597A40A26594FDAFB2A1, 0x2E70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWolf_AnimBP_C, AnimGraphNode_UseCachedPose_D619F764423596C0BCF9A0A06C55C3F4, 0x2EB8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWolf_AnimBP_C, 0x2F00);
		}

		// class ASub_Npc005_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc005_01__Sub_Npc005_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc005_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc005_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc005_01_C, canceled, 0x04D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc005_01_C, 0x04D1);
		}

		// class ASub_Cpl041E_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Cpl041E_01__Sub_Cpl041E_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl041E_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl041E_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl041E_01_C, Cpl041, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl041E_01_C, Npc013, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl041E_01_C, canceled, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl041E_01_C, UnknownData_3ICT, 0x04E1);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl041E_01_C, arrival_name, 0x04E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Cpl041E_01_C, 0x04F0);
		}

		// class ASub_Cpl026_01_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Cpl026_01_01__Sub_Cpl026_01_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl026_01_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl026_01_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl026_01_01_C, Cpl026, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl026_01_01_C, canceled, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl026_01_01_C, UnknownData_KTMS, 0x04D9);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl026_01_01_C, Sub_Cpl026_01_02, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl026_01_01_C, Sub_Cpl026_01_03, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl026_01_01_C, Sub_Cpl026_01_04, 0x04F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Cpl026_01_01_C, 0x04F8);
		}

		// class ASub_Npc035_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc035_01__Sub_Npc035_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc035_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc035_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc035_01_C, canceled, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc035_01_C, UnknownData_BYWK, 0x04D1);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc035_01_C, Sequencer, 0x04D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc035_01_C, 0x04E0);
		}

		// class ASub_Npc033_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc033_01__Sub_Npc033_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc033_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc033_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc033_01_C, Npc033, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc033_01_C, Npc034, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc033_01_C, Npc004, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc033_01_C, Npc013, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc033_01_C, MobA, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc033_01_C, MobB, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc033_01_C, Cpl059, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc033_01_C, Cpl059_02, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc033_01_C, Cpl059_03, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc033_01_C, Veh032, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc033_01_C, canceled, 0x0520);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc033_01_C, 0x0521);
		}

		// class ASub_Npc032_02_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc032_02__Sub_Npc032_02_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc032_02_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc032_02_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc032_02_C, canceled, 0x04D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc032_02_C, 0x04D1);
		}

		// class UField_Navi_Win_C : public UAT_UIFieldNaviWin
		TEST_METHOD(WidgetBlueprintGeneratedClass__Field_Navi_Win__Field_Navi_Win_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Navi_Win_C, Change_In, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Navi_Win_C, Change_Out, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Navi_Win_C, Navi_In, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Navi_Win_C, Navi_Out, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Navi_Win_C, Navi_Loop, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Navi_Win_C, Img_Arrow, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Navi_Win_C, Img_Eff_Wave00, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Navi_Win_C, Img_Eff_Wave01, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Navi_Win_C, Img_Elc00, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Navi_Win_C, Img_Elc01, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Navi_Win_C, Img_Navi_Base, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Navi_Win_C, Ins_Char_Mask, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Navi_Win_C, Txt_Msg, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Navi_Win_C, Txt_Speaker, 0x0548);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UField_Navi_Win_C, 0x0550);
		}

		// class UInfo_Log02_C : public UAT_UIInfoLog02
		TEST_METHOD(WidgetBlueprintGeneratedClass__Info_Log02__Info_Log02_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log02_C, Start, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log02_C, Info_Log_Bar_00, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log02_C, Info_Log_Bar_01, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log02_C, Info_Log_Bar_02, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log02_C, Info_Log_Bar_03, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log02_C, Info_Log_Bar_04, 0x0440);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInfo_Log02_C, 0x0448);
		}

		// class UMigratoryBird_AnimBP_C : public UNpcAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__MigratoryBird_AnimBP__MigratoryBird_AnimBP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMigratoryBird_AnimBP_C, UberGraphFrame, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMigratoryBird_AnimBP_C, AnimGraphNode_Root_C87960A14AD1465E582D1590A1C2FCEA, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMigratoryBird_AnimBP_C, AnimGraphNode_TransitionResult_A72EEF4941A3A0DF97E77F94ACF0CDA0, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMigratoryBird_AnimBP_C, AnimGraphNode_TransitionResult_49A4F10A4E604B1F0FAF09AC4932B4F6, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMigratoryBird_AnimBP_C, AnimGraphNode_TransitionResult_CB83F6154667033010E31BBF945B39A5, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMigratoryBird_AnimBP_C, AnimGraphNode_TransitionResult_E4BFD86D45AC2331B52B08A0E9BDB685, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMigratoryBird_AnimBP_C, AnimGraphNode_TransitionResult_985C01D74916F7B5CAB41782E329D560, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMigratoryBird_AnimBP_C, AnimGraphNode_TransitionResult_ADDB767D4A405D4F8C324395AEC11114, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMigratoryBird_AnimBP_C, AnimGraphNode_SequencePlayer_CAA6327448DE69733375F7A6E91C84CC, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMigratoryBird_AnimBP_C, AnimGraphNode_StateResult_FBD77D2B484565DDB10B188674ECEA7E, 0x0698);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMigratoryBird_AnimBP_C, AnimGraphNode_SequencePlayer_58BC84E94F787AA031CD43B583E5926C, 0x06D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMigratoryBird_AnimBP_C, AnimGraphNode_StateResult_95F7C6E94AF93BE66031DDBE7C5E0002, 0x0778);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMigratoryBird_AnimBP_C, AnimGraphNode_SequencePlayer_91A5600945704335609E0B9179789ECA, 0x07B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMigratoryBird_AnimBP_C, AnimGraphNode_StateResult_678714B7473C339F21824C8DA6D915E5, 0x0858);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMigratoryBird_AnimBP_C, AnimGraphNode_SequencePlayer_2378755F43D555200E91048186DD1787, 0x0898);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMigratoryBird_AnimBP_C, AnimGraphNode_StateResult_8472855B4C4F540916A4E98EE78D258A, 0x0938);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMigratoryBird_AnimBP_C, AnimGraphNode_StateMachine_B631772849858DA7318ACEA66976E15E, 0x0978);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMigratoryBird_AnimBP_C, 0x0A58);
		}

		// class ASub_Npc011_02_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc011_02__Sub_Npc011_02_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc011_02_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc011_02_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc011_02_C, canceled, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc011_02_C, UnknownData_ZLBX, 0x04D1);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc011_02_C, treasureAccessPoints, 0x04D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc011_02_C, 0x04E8);
		}

		// class ASub_Npc011_00_03_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc011_00_03__Sub_Npc011_00_03_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc011_00_03_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc011_00_03_C, quest_id, 0x04C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc011_00_03_C, 0x04D0);
		}

		// class ASub_Npc011_00_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc011_00_01__Sub_Npc011_00_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc011_00_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc011_00_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc011_00_01_C, canceled, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc011_00_01_C, UnknownData_01SZ, 0x04D1);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc011_00_01_C, Npc011, 0x04D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc011_00_01_C, 0x04E0);
		}

		// class ASub_Cpl026_01_04_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Cpl026_01_04__Sub_Cpl026_01_04_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl026_01_04_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl026_01_04_C, event_battle_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl026_01_04_C, Enemy, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl026_01_04_C, quest_id, 0x04E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Cpl026_01_04_C, 0x04E8);
		}

		// class UXmenu_Arrow_L_C : public UAT_UIXcmnArrow
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xmenu_Arrow_L__Xmenu_Arrow_L_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Arrow_L_C, UberGraphFrame, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Arrow_L_C, Loop, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Arrow_L_C, Start, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Arrow_L_C, Img_Icon_Switching, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXmenu_Arrow_L_C, Xcmn_Btn_Plat, 0x03D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXmenu_Arrow_L_C, 0x03D8);
		}

		// class UGauge_Qte_Cmn00_C : public UAT_UIQteTingGauge
		TEST_METHOD(WidgetBlueprintGeneratedClass__Gauge_Qte_Cmn00__Gauge_Qte_Cmn00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGauge_Qte_Cmn00_C, Img_Base_Gauge00, 0x03B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGauge_Qte_Cmn00_C, 0x03C0);
		}

		// class AB_DataAssetManager_Area03_C : public AB_DataAssetManager_Shipping_C
		TEST_METHOD(BlueprintGeneratedClass__B_DataAssetManager_Area03__B_DataAssetManager_Area03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AB_DataAssetManager_Area03_C, 0x0530);
		}

		// class AB_LevelManager_Area03_C : public AATLevelManager
		TEST_METHOD(BlueprintGeneratedClass__B_LevelManager_Area03__B_LevelManager_Area03_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AB_LevelManager_Area03_C, DefaultSceneRoot, 0x0518);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AB_LevelManager_Area03_C, 0x0520);
		}

		// class UBP_Dest_TreeA_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_TreeA__BP_Dest_TreeA_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_TreeA_C, 0x0820);
		}

		// class UUniqueDataCpl031_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl031__UniqueDataCpl031_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl031_C, 0x0070);
		}

		// class UUniqueDataCpl028A_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl028A__UniqueDataCpl028A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl028A_C, 0x0070);
		}

		// class UUniqueDataCpl026_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl026__UniqueDataCpl026_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl026_C, 0x0070);
		}

		// class UUniqueDataCpl018_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl018__UniqueDataCpl018_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl018_C, 0x0070);
		}

		// class UUniqueDataCpl014D_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl014D__UniqueDataCpl014D_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl014D_C, 0x0070);
		}

		// class UBP_Cpl038Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl038Status_Atrocious__BP_Cpl038Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl038Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl038Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl038Status__BP_Cpl038Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl038Status_C, 0x00F0);
		}

		// class UBP_Cpl036Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl036Status__BP_Cpl036Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl036Status_C, 0x00F0);
		}

		// class UBP_Cpl032Status_enemy_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl032Status_enemy__BP_Cpl032Status_enemy_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl032Status_enemy_C, 0x00F0);
		}

		// class UBP_Cpl032Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl032Status__BP_Cpl032Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl032Status_C, 0x00F0);
		}

		// class UBP_Cpl031Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl031Status_Atrocious__BP_Cpl031Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl031Status_Atrocious_C, 0x00F0);
		}

		// class ABP_Area03_Cliff_TopGrassJ_N_C : public AGrassGenerationStaticMeshActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_TopGrassJ_N__BP_Area03_Cliff_TopGrassJ_N_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_TopGrassJ_N_C, 0x0360);
		}

		// class AVariation00Cpl001_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Cpl001__Variation00Cpl001_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Cpl001_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Cpl001_C, 0x0380);
		}

		// class UBattleAIService_C : public UBTService_BlueprintBase
		TEST_METHOD(BlueprintGeneratedClass__BattleAIService__BattleAIService_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattleAIService_C, UberGraphFrame, 0x0098);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattleAIService_C, 0x00A0);
		}

		// class AFacial00Cpl058B_C : public AATFacialParts
		TEST_METHOD(BlueprintGeneratedClass__Facial00Cpl058B__Facial00Cpl058B_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AFacial00Cpl058B_C, DefaultSceneRoot, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFacial00Cpl058B_C, 0x03E0);
		}

		// class AFacial00Cpl004C_C : public AATFacialParts
		TEST_METHOD(BlueprintGeneratedClass__Facial00Cpl004C__Facial00Cpl004C_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AFacial00Cpl004C_C, DefaultSceneRoot, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFacial00Cpl004C_C, 0x03E0);
		}

		// class AForm00Cpl004C_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Cpl004C__Form00Cpl004C_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Cpl004C_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Cpl004C_C, 0x0380);
		}

		// class AForm00Cpl014C_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Cpl014C__Form00Cpl014C_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Cpl014C_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Cpl014C_C, 0x0380);
		}

		// class UBP_C001A_LongBlowoffChase_C : public UATActLongBlowoffChase
		TEST_METHOD(BlueprintGeneratedClass__BP_C001A_LongBlowoffChase__BP_C001A_LongBlowoffChase_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C001A_LongBlowoffChase_C, 0x0140);
		}

		// class UBP_C001A_ShortRangeAttack_C : public UATActShortRangeCombo
		TEST_METHOD(BlueprintGeneratedClass__BP_C001A_ShortRangeAttack__BP_C001A_ShortRangeAttack_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C001A_ShortRangeAttack_C, 0x01A8);
		}

		// class AFacial00Cpl014D_C : public AATFacialParts
		TEST_METHOD(BlueprintGeneratedClass__Facial00Cpl014D__Facial00Cpl014D_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AFacial00Cpl014D_C, DefaultSceneRoot, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFacial00Cpl014D_C, 0x03E0);
		}

		// class UUniqueDataCpl056A_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl056A__UniqueDataCpl056A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl056A_C, 0x0070);
		}

		// class UUniqueDataCpl041_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl041__UniqueDataCpl041_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl041_C, 0x0070);
		}

		// class UUniqueDataCpl040_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl040__UniqueDataCpl040_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl040_C, 0x0070);
		}

		// class UUniqueDataCpl039_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl039__UniqueDataCpl039_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl039_C, 0x0070);
		}

		// class UBP_AtrociousBattle2_Area04_020_C : public UATAtrociousEncountBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousBattle2_Area04_020__BP_AtrociousBattle2_Area04_020_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousBattle2_Area04_020_C, 0x0118);
		}

		// class UBP_AtrociousCondition1_Area04_C : public UATAtrociousCondition
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousCondition1_Area04__BP_AtrociousCondition1_Area04_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousCondition1_Area04_C, 0x0040);
		}

		// class UBP_Cpl075Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl075Status_Atrocious__BP_Cpl075Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl075Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl065Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl065Status_Atrocious__BP_Cpl065Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl065Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl063StatusC01_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl063StatusC01__BP_Cpl063StatusC01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl063StatusC01_C, 0x00F0);
		}

		// class UBP_Cpl062StatusC01_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl062StatusC01__BP_Cpl062StatusC01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl062StatusC01_C, 0x00F0);
		}

		// class ABP_Area03_Cliff_TopGrassM_D_C : public AGrassGenerationDestructActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_TopGrassM_D__BP_Area03_Cliff_TopGrassM_D_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_TopGrassM_D_C, 0x0388);
		}

		// class UBP_Dest_TreeB_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_TreeB__BP_Dest_TreeB_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_TreeB_C, 0x0820);
		}

		// class ABP_Memories_Area18_C : public AMiniQuest
		TEST_METHOD(BlueprintGeneratedClass__BP_Memories_Area18__BP_Memories_Area18_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Memories_Area18_C, UberGraphFrame, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Memories_Area18_C, DefaultSceneRoot, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Memories_Area18_C, memoriry_item_05, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Memories_Area18_C, memoriry_item_19, 0x0368);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Memories_Area18_C, 0x0370);
		}

		// class UAT_UIMiniGameManager_BP_C : public UAT_UIMiniGameManager
		TEST_METHOD(BlueprintGeneratedClass__AT_UIMiniGameManager_BP__AT_UIMiniGameManager_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIMiniGameManager_BP_C, 0x0080);
		}

		// class AAtrociousEnemyBossEvent_Area06_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__AtrociousEnemyBossEvent_Area06__AtrociousEnemyBossEvent_Area06_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAtrociousEnemyBossEvent_Area06_C, UberGraphFrame, 0x04C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAtrociousEnemyBossEvent_Area06_C, 0x04C8);
		}

		// class AAtrociousEnemyBossEvent_Area04_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__AtrociousEnemyBossEvent_Area04__AtrociousEnemyBossEvent_Area04_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAtrociousEnemyBossEvent_Area04_C, UberGraphFrame, 0x04C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAtrociousEnemyBossEvent_Area04_C, 0x04C8);
		}

		// class UBP_AtrociousCondition1_Area02_C : public UATAtrociousCondition
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousCondition1_Area02__BP_AtrociousCondition1_Area02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousCondition1_Area02_C, 0x0040);
		}

		// class UBP_AtrociousBattle2_Area02_020_C : public UATAtrociousEncountBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousBattle2_Area02_020__BP_AtrociousBattle2_Area02_020_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousBattle2_Area02_020_C, 0x0118);
		}

		// class UBP_AtrociousBattle3_Area02_C : public UATAtrociousEncountBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousBattle3_Area02__BP_AtrociousBattle3_Area02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousBattle3_Area02_C, 0x0118);
		}

		// class AVariation00Cpl075A_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Cpl075A__Variation00Cpl075A_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Cpl075A_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Cpl075A_C, 0x0380);
		}

		// class AVariation00Npc026_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Npc026__Variation00Npc026_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Npc026_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Npc026_C, 0x0380);
		}

		// class UBP_C004A_ActionTableDamage_C : public UBP_C000A_ActionTableDamage_C
		TEST_METHOD(BlueprintGeneratedClass__BP_C004A_ActionTableDamage__BP_C004A_ActionTableDamage_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C004A_ActionTableDamage_C, 0x0168);
		}

		// class UBP_C004A_ActionTableBasic_C : public UBP_C000A_ActionTableBasic_C
		TEST_METHOD(BlueprintGeneratedClass__BP_C004A_ActionTableBasic__BP_C004A_ActionTableBasic_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C004A_ActionTableBasic_C, 0x0168);
		}

		// class UBP_C000A_ComboCut_C : public UATActSupportComboCut
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_ComboCut__BP_C000A_ComboCut_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_ComboCut_C, 0x0128);
		}

		// class UBP_C056A_DmgDeathLP_C : public UATActCpl059DmgDeathLP
		TEST_METHOD(BlueprintGeneratedClass__BP_C056A_DmgDeathLP__BP_C056A_DmgDeathLP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C056A_DmgDeathLP_C, 0x0118);
		}

		// class UHandlerComponentFactory : public UObject
		TEST_METHOD(Class__PacketHandler__HandlerComponentFactory)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHandlerComponentFactory, 0x0028);
		}

		// class UNetAnalyticsAggregatorConfig : public UObject
		TEST_METHOD(Class__PacketHandler__NetAnalyticsAggregatorConfig)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNetAnalyticsAggregatorConfig, NetAnalyticsData, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNetAnalyticsAggregatorConfig, 0x0038);
		}

		// class USteamAuthComponentModuleInterface : public UHandlerComponentFactory
		TEST_METHOD(Class__OnlineSubsystemSteam__SteamAuthComponentModuleInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USteamAuthComponentModuleInterface, 0x0028);
		}

		// class USteamNetConnection : public UIpConnection
		TEST_METHOD(Class__OnlineSubsystemSteam__SteamNetConnection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USteamNetConnection, bIsPassthrough, 0x1978);
			CHEAT_GEAR_CHECK_OFFSET(CG::USteamNetConnection, UnknownData_BCW5, 0x1979);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USteamNetConnection, 0x1980);
		}

		// class USteamNetDriver : public UIpNetDriver
		TEST_METHOD(Class__OnlineSubsystemSteam__SteamNetDriver)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USteamNetDriver, UnknownData_ECBL, 0x06D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USteamNetDriver, 0x06E0);
		}

		// class UNamedInterfaces : public UObject
		TEST_METHOD(Class__OnlineSubsystem__NamedInterfaces)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNamedInterfaces, NamedInterfaces, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNamedInterfaces, NamedInterfaceDefs, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNamedInterfaces, UnknownData_0NNO, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNamedInterfaces, 0x0060);
		}

		// class UTurnBasedMatchInterface : public UInterface
		TEST_METHOD(Class__OnlineSubsystem__TurnBasedMatchInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTurnBasedMatchInterface, 0x0028);
		}

		// class UMaterialExpressionSpriteTextureSampler : public UMaterialExpressionTextureSampleParameter2D
		TEST_METHOD(Class__Paper2D__MaterialExpressionSpriteTextureSampler)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSpriteTextureSampler, bSampleAdditionalTextures, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSpriteTextureSampler, UnknownData_Q72W, 0x0119);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSpriteTextureSampler, AdditionalSlotIndex, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionSpriteTextureSampler, SlotDisplayName, 0x0120);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionSpriteTextureSampler, 0x0138);
		}

		// class APaperCharacter : public ACharacter
		TEST_METHOD(Class__Paper2D__PaperCharacter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::APaperCharacter, Sprite, 0x0748);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APaperCharacter, 0x0750);
		}

		// class UPaperFlipbook : public UObject
		TEST_METHOD(Class__Paper2D__PaperFlipbook)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperFlipbook, FramesPerSecond, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperFlipbook, UnknownData_FR6A, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperFlipbook, KeyFrames, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperFlipbook, DefaultMaterial, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperFlipbook, CollisionSource, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperFlipbook, UnknownData_S5KY, 0x0049);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperFlipbook, 0x0050);
		}

		// class APaperFlipbookActor : public AActor
		TEST_METHOD(Class__Paper2D__PaperFlipbookActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::APaperFlipbookActor, RenderComponent, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APaperFlipbookActor, 0x0340);
		}

		// class UPaperFlipbookComponent : public UMeshComponent
		TEST_METHOD(Class__Paper2D__PaperFlipbookComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperFlipbookComponent, SourceFlipbook, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperFlipbookComponent, Material, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperFlipbookComponent, PlayRate, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperFlipbookComponent, UnknownData_ZG76, 0x05A5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperFlipbookComponent, AccumulatedTime, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperFlipbookComponent, CachedFrameIndex, 0x05AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperFlipbookComponent, SpriteColor, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperFlipbookComponent, CachedBodySetup, 0x05C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperFlipbookComponent, OnFinishedPlaying, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperFlipbookComponent, UnknownData_CPI1, 0x05D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperFlipbookComponent, 0x05E0);
		}

		// class APaperGroupedSpriteActor : public AActor
		TEST_METHOD(Class__Paper2D__PaperGroupedSpriteActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::APaperGroupedSpriteActor, RenderComponent, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APaperGroupedSpriteActor, 0x0340);
		}

		// class UPaperGroupedSpriteComponent : public UMeshComponent
		TEST_METHOD(Class__Paper2D__PaperGroupedSpriteComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperGroupedSpriteComponent, InstanceMaterials, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperGroupedSpriteComponent, PerInstanceSpriteData, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperGroupedSpriteComponent, UnknownData_KWV0, 0x05B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperGroupedSpriteComponent, 0x05C0);
		}

		// class UPaperRuntimeSettings : public UObject
		TEST_METHOD(Class__Paper2D__PaperRuntimeSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperRuntimeSettings, bEnableSpriteAtlasGroups, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperRuntimeSettings, bEnableTerrainSplineEditing, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperRuntimeSettings, bResizeSpriteDataToMatchTextures, 0x002A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperRuntimeSettings, UnknownData_IV9K, 0x002B);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperRuntimeSettings, 0x0030);
		}

		// class UPaperSprite : public UObject
		TEST_METHOD(Class__Paper2D__PaperSprite)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperSprite, UnknownData_UI7K, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperSprite, SourceUV, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperSprite, SourceDimension, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperSprite, SourceTexture, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperSprite, AdditionalSourceTextures, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperSprite, BakedSourceUV, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperSprite, BakedSourceDimension, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperSprite, BakedSourceTexture, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperSprite, DefaultMaterial, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperSprite, AlternateMaterial, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperSprite, Sockets, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperSprite, SpriteCollisionDomain, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperSprite, UnknownData_XLR5, 0x0099);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperSprite, PixelsPerUnrealUnit, 0x009C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperSprite, BodySetup, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperSprite, AlternateMaterialSplitIndex, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperSprite, UnknownData_2GMN, 0x00AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperSprite, BakedRenderData, 0x00B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperSprite, 0x00C0);
		}

		// class APaperSpriteActor : public AActor
		TEST_METHOD(Class__Paper2D__PaperSpriteActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::APaperSpriteActor, RenderComponent, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APaperSpriteActor, 0x0340);
		}

		// class UPaperSpriteAtlas : public UObject
		TEST_METHOD(Class__Paper2D__PaperSpriteAtlas)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperSpriteAtlas, 0x0028);
		}

		// class UPaperSpriteBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Paper2D__PaperSpriteBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperSpriteBlueprintLibrary, 0x0028);
		}

		// class UPaperSpriteComponent : public UMeshComponent
		TEST_METHOD(Class__Paper2D__PaperSpriteComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperSpriteComponent, SourceSprite, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperSpriteComponent, MaterialOverride, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperSpriteComponent, SpriteColor, 0x05A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperSpriteComponent, 0x05B0);
		}

		// class APaperTerrainActor : public AActor
		TEST_METHOD(Class__Paper2D__PaperTerrainActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::APaperTerrainActor, DummyRoot, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::APaperTerrainActor, SplineComponent, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::APaperTerrainActor, RenderComponent, 0x0348);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APaperTerrainActor, 0x0350);
		}

		// class UPaperTerrainComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Paper2D__PaperTerrainComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTerrainComponent, TerrainMaterial, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTerrainComponent, bClosedSpline, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTerrainComponent, bFilledSpline, 0x0571);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTerrainComponent, UnknownData_9FUI, 0x0572);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTerrainComponent, AssociatedSpline, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTerrainComponent, RandomSeed, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTerrainComponent, SegmentOverlapAmount, 0x0584);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTerrainComponent, TerrainColor, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTerrainComponent, ReparamStepsPerSegment, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTerrainComponent, SpriteCollisionDomain, 0x059C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTerrainComponent, UnknownData_8X9K, 0x059D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTerrainComponent, CollisionThickness, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTerrainComponent, UnknownData_LXLW, 0x05A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTerrainComponent, CachedBodySetup, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTerrainComponent, UnknownData_ZJV8, 0x05B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperTerrainComponent, 0x05C0);
		}

		// class UPaperTerrainMaterial : public UDataAsset
		TEST_METHOD(Class__Paper2D__PaperTerrainMaterial)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTerrainMaterial, Rules, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTerrainMaterial, InteriorFill, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperTerrainMaterial, 0x0048);
		}

		// class UPaperTerrainSplineComponent : public USplineComponent
		TEST_METHOD(Class__Paper2D__PaperTerrainSplineComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTerrainSplineComponent, UnknownData_0DFL, 0x0650);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperTerrainSplineComponent, 0x0660);
		}

		// class UPaperTileLayer : public UObject
		TEST_METHOD(Class__Paper2D__PaperTileLayer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileLayer, LayerName, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileLayer, LayerWidth, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileLayer, LayerHeight, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileLayer, UnknownData_UO64, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileLayer, CollisionThicknessOverride, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileLayer, CollisionOffsetOverride, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileLayer, LayerColor, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileLayer, AllocatedWidth, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileLayer, AllocatedHeight, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileLayer, UnknownData_GKUJ, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileLayer, AllocatedCells, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileLayer, TileSet, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileLayer, AllocatedGrid, 0x0088);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperTileLayer, 0x0098);
		}

		// class UPaperTileMap : public UObject
		TEST_METHOD(Class__Paper2D__PaperTileMap)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMap, MapWidth, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMap, MapHeight, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMap, TileWidth, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMap, TileHeight, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMap, PixelsPerUnrealUnit, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMap, SeparationPerTileX, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMap, SeparationPerTileY, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMap, SeparationPerLayer, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMap, SelectedTileSet, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMap, Material, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMap, TileLayers, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMap, CollisionThickness, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMap, SpriteCollisionDomain, 0x008C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMap, ProjectionMode, 0x008D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMap, UnknownData_D0EC, 0x008E);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMap, HexSideLength, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMap, UnknownData_9L0L, 0x0094);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMap, BodySetup, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMap, LayerNameIndex, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMap, UnknownData_PM9M, 0x00A4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperTileMap, 0x00A8);
		}

		// class APaperTileMapActor : public AActor
		TEST_METHOD(Class__Paper2D__PaperTileMapActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::APaperTileMapActor, RenderComponent, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::APaperTileMapActor, 0x0340);
		}

		// class UPaperTileMapComponent : public UMeshComponent
		TEST_METHOD(Class__Paper2D__PaperTileMapComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMapComponent, MapWidth, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMapComponent, MapHeight, 0x0594);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMapComponent, TileWidth, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMapComponent, TileHeight, 0x059C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMapComponent, DefaultLayerTileSet, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMapComponent, Material, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMapComponent, TileLayers, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMapComponent, TileMapColor, 0x05C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMapComponent, UseSingleLayerIndex, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMapComponent, bUseSingleLayer, 0x05D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMapComponent, UnknownData_FH8O, 0x05D5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileMapComponent, TileMap, 0x05D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperTileMapComponent, 0x05E0);
		}

		// class UPaperTileSet : public UObject
		TEST_METHOD(Class__Paper2D__PaperTileSet)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileSet, TileSize, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileSet, TileSheet, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileSet, AdditionalSourceTextures, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileSet, BorderMargin, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileSet, PerTileSpacing, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileSet, DrawingOffset, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileSet, WidthInTiles, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileSet, HeightInTiles, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileSet, AllocatedWidth, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileSet, AllocatedHeight, 0x0074);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileSet, PerTileData, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileSet, Terrains, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileSet, TileWidth, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileSet, TileHeight, 0x009C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileSet, Margin, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPaperTileSet, Spacing, 0x00A4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPaperTileSet, 0x00A8);
		}

		// class UTileMapBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__Paper2D__TileMapBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTileMapBlueprintLibrary, 0x0028);
		}

		// class UDatasmithObjectTemplate : public UObject
		TEST_METHOD(Class__DatasmithContent__DatasmithObjectTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithObjectTemplate, 0x0028);
		}

		// class UDatasmithActorTemplate : public UDatasmithObjectTemplate
		TEST_METHOD(Class__DatasmithContent__DatasmithActorTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithActorTemplate, Layers, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithActorTemplate, Tags, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithActorTemplate, 0x00C8);
		}

		// class ADatasmithAreaLightActor : public AActor
		TEST_METHOD(Class__DatasmithContent__DatasmithAreaLightActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ADatasmithAreaLightActor, LightShape, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADatasmithAreaLightActor, UnknownData_2QI2, 0x0339);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADatasmithAreaLightActor, Dimensions, 0x033C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADatasmithAreaLightActor, Color, 0x0344);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADatasmithAreaLightActor, Intensity, 0x0354);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADatasmithAreaLightActor, 0x0358);
		}

		// class UDatasmithAreaLightActorTemplate : public UDatasmithObjectTemplate
		TEST_METHOD(Class__DatasmithContent__DatasmithAreaLightActorTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithAreaLightActorTemplate, LightShape, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithAreaLightActorTemplate, UnknownData_UFS4, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithAreaLightActorTemplate, Dimensions, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithAreaLightActorTemplate, Color, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithAreaLightActorTemplate, Intensity, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithAreaLightActorTemplate, UnknownData_PX5E, 0x0049);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithAreaLightActorTemplate, 0x0050);
		}

		// class UDatasmithAssetImportData : public UAssetImportData
		TEST_METHOD(Class__DatasmithContent__DatasmithAssetImportData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithAssetImportData, 0x0028);
		}

		// class UDatasmithStaticMeshImportData : public UDatasmithAssetImportData
		TEST_METHOD(Class__DatasmithContent__DatasmithStaticMeshImportData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithStaticMeshImportData, 0x0028);
		}

		// class UDatasmithStaticMeshCADImportData : public UDatasmithStaticMeshImportData
		TEST_METHOD(Class__DatasmithContent__DatasmithStaticMeshCADImportData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithStaticMeshCADImportData, 0x0028);
		}

		// class UDatasmithSceneImportData : public UAssetImportData
		TEST_METHOD(Class__DatasmithContent__DatasmithSceneImportData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithSceneImportData, 0x0028);
		}

		// class UDatasmithCADImportSceneData : public UDatasmithSceneImportData
		TEST_METHOD(Class__DatasmithContent__DatasmithCADImportSceneData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithCADImportSceneData, 0x0028);
		}

		// class UDatasmithMDLSceneImportData : public UDatasmithSceneImportData
		TEST_METHOD(Class__DatasmithContent__DatasmithMDLSceneImportData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithMDLSceneImportData, 0x0028);
		}

		// class UDatasmithDeltaGenAssetImportData : public UDatasmithAssetImportData
		TEST_METHOD(Class__DatasmithContent__DatasmithDeltaGenAssetImportData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithDeltaGenAssetImportData, 0x0028);
		}

		// class UDatasmithDeltaGenSceneImportData : public UDatasmithSceneImportData
		TEST_METHOD(Class__DatasmithContent__DatasmithDeltaGenSceneImportData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithDeltaGenSceneImportData, 0x0028);
		}

		// class UDatasmithVREDAssetImportData : public UDatasmithAssetImportData
		TEST_METHOD(Class__DatasmithContent__DatasmithVREDAssetImportData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithVREDAssetImportData, UnknownData_TPH7, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithVREDAssetImportData, 0x0030);
		}

		// class UDatasmithVREDSceneImportData : public UDatasmithSceneImportData
		TEST_METHOD(Class__DatasmithContent__DatasmithVREDSceneImportData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithVREDSceneImportData, 0x0028);
		}

		// class UDatasmithAssetUserData : public UAssetUserData
		TEST_METHOD(Class__DatasmithContent__DatasmithAssetUserData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithAssetUserData, MetaData, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithAssetUserData, 0x0078);
		}

		// class UDatasmithCineCameraComponentTemplate : public UDatasmithObjectTemplate
		TEST_METHOD(Class__DatasmithContent__DatasmithCineCameraComponentTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithCineCameraComponentTemplate, FilmbackSettings, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithCineCameraComponentTemplate, LensSettings, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithCineCameraComponentTemplate, FocusSettings, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithCineCameraComponentTemplate, CurrentFocalLength, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithCineCameraComponentTemplate, CurrentAperture, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithCineCameraComponentTemplate, UnknownData_I841, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithCineCameraComponentTemplate, PostProcessSettings, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithCineCameraComponentTemplate, 0x0090);
		}

		// class UDatasmithContentBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__DatasmithContent__DatasmithContentBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithContentBlueprintLibrary, 0x0028);
		}

		// class UDatasmithImportOptions : public UObject
		TEST_METHOD(Class__DatasmithContent__DatasmithImportOptions)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithImportOptions, SearchPackagePolicy, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithImportOptions, MaterialConflictPolicy, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithImportOptions, TextureConflictPolicy, 0x002A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithImportOptions, StaticMeshActorImportPolicy, 0x002B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithImportOptions, LightImportPolicy, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithImportOptions, CameraImportPolicy, 0x002D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithImportOptions, OtherActorImportPolicy, 0x002E);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithImportOptions, MaterialQuality, 0x002F);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithImportOptions, UnknownData_BFP9, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithImportOptions, BaseOptions, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithImportOptions, TessellationOptions, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithImportOptions, ReimportOptions, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithImportOptions, UnknownData_3JLO, 0x005E);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithImportOptions, 0x0088);
		}

		// class UDatasmithLandscapeTemplate : public UDatasmithObjectTemplate
		TEST_METHOD(Class__DatasmithContent__DatasmithLandscapeTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithLandscapeTemplate, LandscapeMaterial, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithLandscapeTemplate, StaticLightingLOD, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithLandscapeTemplate, UnknownData_Y1UM, 0x0034);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithLandscapeTemplate, 0x0038);
		}

		// class UDatasmithLightComponentTemplate : public UDatasmithObjectTemplate
		TEST_METHOD(Class__DatasmithContent__DatasmithLightComponentTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithLightComponentTemplate, UnknownData_0IDE, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithLightComponentTemplate, UnknownData_V26T, 0x002D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithLightComponentTemplate, Intensity, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithLightComponentTemplate, Temperature, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithLightComponentTemplate, IESBrightnessScale, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithLightComponentTemplate, LightColor, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithLightComponentTemplate, UnknownData_3MVL, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithLightComponentTemplate, LightFunctionMaterial, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithLightComponentTemplate, IESTexture, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithLightComponentTemplate, 0x0060);
		}

		// class UDatasmithPointLightComponentTemplate : public UDatasmithObjectTemplate
		TEST_METHOD(Class__DatasmithContent__DatasmithPointLightComponentTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithPointLightComponentTemplate, IntensityUnits, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithPointLightComponentTemplate, UnknownData_KF9I, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithPointLightComponentTemplate, SourceRadius, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithPointLightComponentTemplate, SourceLength, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithPointLightComponentTemplate, AttenuationRadius, 0x0034);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithPointLightComponentTemplate, 0x0038);
		}

		// class UDatasmithScene : public UObject
		TEST_METHOD(Class__DatasmithContent__DatasmithScene)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithScene, 0x0028);
		}

		// class ADatasmithSceneActor : public AActor
		TEST_METHOD(Class__DatasmithContent__DatasmithSceneActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ADatasmithSceneActor, Scene, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ADatasmithSceneActor, RelatedActors, 0x0340);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADatasmithSceneActor, 0x0390);
		}

		// class UDatasmithSceneComponentTemplate : public UDatasmithObjectTemplate
		TEST_METHOD(Class__DatasmithContent__DatasmithSceneComponentTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithSceneComponentTemplate, UnknownData_4PM3, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithSceneComponentTemplate, RelativeTransform, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithSceneComponentTemplate, Mobility, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithSceneComponentTemplate, UnknownData_HOBU, 0x0061);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithSceneComponentTemplate, AttachParent, 0x0061);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithSceneComponentTemplate, Tags, 0x0090);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithSceneComponentTemplate, 0x00E0);
		}

		// class UDatasmithSkyLightComponentTemplate : public UDatasmithObjectTemplate
		TEST_METHOD(Class__DatasmithContent__DatasmithSkyLightComponentTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithSkyLightComponentTemplate, SourceType, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithSkyLightComponentTemplate, UnknownData_014T, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithSkyLightComponentTemplate, CubemapResolution, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithSkyLightComponentTemplate, Cubemap, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithSkyLightComponentTemplate, 0x0038);
		}

		// class UDatasmithSpotLightComponentTemplate : public UDatasmithObjectTemplate
		TEST_METHOD(Class__DatasmithContent__DatasmithSpotLightComponentTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithSpotLightComponentTemplate, InnerConeAngle, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithSpotLightComponentTemplate, OuterConeAngle, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithSpotLightComponentTemplate, 0x0030);
		}

		// class UDatasmithStaticMeshComponentTemplate : public UDatasmithSceneComponentTemplate
		TEST_METHOD(Class__DatasmithContent__DatasmithStaticMeshComponentTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithStaticMeshComponentTemplate, StaticMesh, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithStaticMeshComponentTemplate, OverrideMaterials, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithStaticMeshComponentTemplate, UnknownData_UC87, 0x00F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithStaticMeshComponentTemplate, 0x0100);
		}

		// class UDatasmithStaticMeshTemplate : public UDatasmithObjectTemplate
		TEST_METHOD(Class__DatasmithContent__DatasmithStaticMeshTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithStaticMeshTemplate, SectionInfoMap, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithStaticMeshTemplate, LightMapCoordinateIndex, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithStaticMeshTemplate, LightMapResolution, 0x007C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithStaticMeshTemplate, BuildSettings, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDatasmithStaticMeshTemplate, StaticMaterials, 0x0090);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDatasmithStaticMeshTemplate, 0x00A0);
		}

		// class UMovieSceneGeometryCacheSection : public UMovieSceneSection
		TEST_METHOD(Class__GeometryCacheTracks__MovieSceneGeometryCacheSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneGeometryCacheSection, Params, 0x00E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneGeometryCacheSection, 0x0108);
		}

		// class UMovieSceneGeometryCacheTrack : public UMovieSceneNameableTrack
		TEST_METHOD(Class__GeometryCacheTracks__MovieSceneGeometryCacheTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneGeometryCacheTrack, AnimationSections, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneGeometryCacheTrack, 0x0068);
		}

		// class UActorSequence : public UMovieSceneSequence
		TEST_METHOD(Class__ActorSequence__ActorSequence)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorSequence, MovieScene, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorSequence, ObjectReferences, 0x0350);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UActorSequence, 0x0370);
		}

		// class UActorSequenceComponent : public UActorComponent
		TEST_METHOD(Class__ActorSequence__ActorSequenceComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorSequenceComponent, bAutoPlay, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorSequenceComponent, UnknownData_RGXH, 0x0101);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorSequenceComponent, PlaybackSettings, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorSequenceComponent, Sequence, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UActorSequenceComponent, SequencePlayer, 0x0150);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UActorSequenceComponent, 0x0158);
		}

		// class UActorSequencePlayer : public UMovieSceneSequencePlayer
		TEST_METHOD(Class__ActorSequence__ActorSequencePlayer)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UActorSequencePlayer, 0x07C8);
		}

		// class UAndroidPermissionCallbackProxy : public UObject
		TEST_METHOD(Class__AndroidPermission__AndroidPermissionCallbackProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAndroidPermissionCallbackProxy, OnPermissionsGrantedDynamicDelegate, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAndroidPermissionCallbackProxy, UnknownData_FKXM, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAndroidPermissionCallbackProxy, 0x0048);
		}

		// class UAndroidPermissionFunctionLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__AndroidPermission__AndroidPermissionFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAndroidPermissionFunctionLibrary, 0x0028);
		}

		// class UVisual : public UObject
		TEST_METHOD(Class__UMG__Visual)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVisual, 0x0028);
		}

		// class UWidget : public UVisual
		TEST_METHOD(Class__UMG__Widget)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidget, Slot, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidget, bIsEnabledDelegate, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidget, ToolTipText, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidget, ToolTipTextDelegate, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidget, ToolTipWidget, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidget, ToolTipWidgetDelegate, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidget, VisibilityDelegate, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidget, RenderTransform, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidget, RenderTransformPivot, 0x00AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidget, Cursor, 0x00B5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidget, Clipping, 0x00B6);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidget, Visibility, 0x00B7);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidget, RenderOpacity, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidget, UnknownData_33SO, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidget, Navigation, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidget, UnknownData_FF9H, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidget, NativeBindings, 0x00F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidget, 0x0100);
		}

		// class UUserWidget : public UWidget
		TEST_METHOD(Class__UMG__UserWidget)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserWidget, UnknownData_SRQP, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserWidget, ColorAndOpacity, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserWidget, ColorAndOpacityDelegate, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserWidget, ForegroundColor, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserWidget, ForegroundColorDelegate, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserWidget, Padding, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserWidget, ActiveSequencePlayers, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserWidget, StoppedSequencePlayers, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserWidget, NamedSlotBindings, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserWidget, WidgetTree, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserWidget, Priority, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserWidget, TickFrequency, 0x01AD);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserWidget, UnknownData_GKDN, 0x01AE);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserWidget, InputComponent, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUserWidget, UnknownData_Z7M7, 0x01B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUserWidget, 0x0208);
		}

		// class UImage : public UWidget
		TEST_METHOD(Class__UMG__Image)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UImage, Brush, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UImage, ChangeImagePath, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UImage, bMatchTextureSize, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UImage, UnknownData_LQFT, 0x0199);
			CHEAT_GEAR_CHECK_OFFSET(CG::UImage, BrushDelegate, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UImage, ColorAndOpacity, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UImage, ColorAndOpacityDelegate, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UImage, OnMouseButtonDownEvent, 0x01D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UImage, UnknownData_UYCJ, 0x01E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UImage, 0x0200);
		}

		// class UTextLayoutWidget : public UWidget
		TEST_METHOD(Class__UMG__TextLayoutWidget)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextLayoutWidget, ShapedTextOptions, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextLayoutWidget, Justification, 0x0103);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextLayoutWidget, WrappingPolicy, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextLayoutWidget, UnknownData_BP3D, 0x0106);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextLayoutWidget, WrapTextAt, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextLayoutWidget, Margin, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextLayoutWidget, LineHeightPercentage, 0x011C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextLayoutWidget, 0x0120);
		}

		// class URichTextBlockDecorator : public UObject
		TEST_METHOD(Class__UMG__RichTextBlockDecorator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URichTextBlockDecorator, 0x0028);
		}

		// class URichTextBlock : public UTextLayoutWidget
		TEST_METHOD(Class__UMG__RichTextBlock)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::URichTextBlock, Text, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::URichTextBlock, TextStyleSet, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::URichTextBlock, DecoratorClasses, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::URichTextBlock, UnknownData_HGI2, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::URichTextBlock, InstanceDecorators, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::URichTextBlock, UnknownData_20H5, 0x0358);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URichTextBlock, 0x0368);
		}

		// class UAsyncTaskDownloadImage : public UBlueprintAsyncActionBase
		TEST_METHOD(Class__UMG__AsyncTaskDownloadImage)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAsyncTaskDownloadImage, OnSuccess, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAsyncTaskDownloadImage, OnFail, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAsyncTaskDownloadImage, 0x0050);
		}

		// class UPanelWidget : public UWidget
		TEST_METHOD(Class__UMG__PanelWidget)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPanelWidget, Slots, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPanelWidget, UnknownData_5SU6, 0x0110);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPanelWidget, 0x0118);
		}

		// class UContentWidget : public UPanelWidget
		TEST_METHOD(Class__UMG__ContentWidget)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UContentWidget, 0x0118);
		}

		// class UBackgroundBlur : public UContentWidget
		TEST_METHOD(Class__UMG__BackgroundBlur)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBackgroundBlur, Padding, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBackgroundBlur, HorizontalAlignment, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBackgroundBlur, VerticalAlignment, 0x0129);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBackgroundBlur, bApplyAlphaToBlur, 0x012A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBackgroundBlur, UnknownData_INLX, 0x012B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBackgroundBlur, BlurStrength, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBackgroundBlur, bOverrideAutoRadiusCalculation, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBackgroundBlur, UnknownData_4IRM, 0x0131);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBackgroundBlur, BlurRadius, 0x0134);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBackgroundBlur, LowQualityFallbackBrush, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBackgroundBlur, UnknownData_XEIS, 0x01C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBackgroundBlur, 0x01D0);
		}

		// class UPanelSlot : public UVisual
		TEST_METHOD(Class__UMG__PanelSlot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPanelSlot, Parent, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPanelSlot, Content, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPanelSlot, 0x0038);
		}

		// class UBackgroundBlurSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__BackgroundBlurSlot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBackgroundBlurSlot, Padding, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBackgroundBlurSlot, HorizontalAlignment, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBackgroundBlurSlot, VerticalAlignment, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBackgroundBlurSlot, UnknownData_SYNL, 0x004A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBackgroundBlurSlot, 0x0060);
		}

		// class UPropertyBinding : public UObject
		TEST_METHOD(Class__UMG__PropertyBinding)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPropertyBinding, SourceObject, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPropertyBinding, SourcePath, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPropertyBinding, DestinationProperty, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPropertyBinding, 0x0060);
		}

		// class UBoolBinding : public UPropertyBinding
		TEST_METHOD(Class__UMG__BoolBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBoolBinding, 0x0060);
		}

		// class UBorder : public UContentWidget
		TEST_METHOD(Class__UMG__Border)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBorder, HorizontalAlignment, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBorder, VerticalAlignment, 0x0119);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBorder, UnknownData_K9FH, 0x011B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBorder, ContentColorAndOpacity, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBorder, UnknownData_TGAH, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBorder, ContentColorAndOpacityDelegate, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBorder, Padding, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBorder, Background, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBorder, BackgroundDelegate, 0x01D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBorder, BrushColor, 0x01E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBorder, BrushColorDelegate, 0x01F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBorder, DesiredSizeScale, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBorder, OnMouseButtonDownEvent, 0x0210);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBorder, OnMouseButtonUpEvent, 0x0220);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBorder, OnMouseMoveEvent, 0x0230);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBorder, OnMouseDoubleClickEvent, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBorder, UnknownData_3CYV, 0x0250);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBorder, 0x0260);
		}

		// class UBorderSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__BorderSlot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBorderSlot, Padding, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBorderSlot, HorizontalAlignment, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBorderSlot, VerticalAlignment, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBorderSlot, UnknownData_LVTP, 0x004A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBorderSlot, 0x0060);
		}

		// class UBrushBinding : public UPropertyBinding
		TEST_METHOD(Class__UMG__BrushBinding)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBrushBinding, UnknownData_ST5N, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBrushBinding, 0x0068);
		}

		// class UButton : public UContentWidget
		TEST_METHOD(Class__UMG__Button)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UButton, Style, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UButton, WidgetStyle, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UButton, ColorAndOpacity, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UButton, BackgroundColor, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UButton, ClickMethod, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UButton, TouchMethod, 0x03B9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UButton, PressMethod, 0x03BA);
			CHEAT_GEAR_CHECK_OFFSET(CG::UButton, IsFocusable, 0x03BB);
			CHEAT_GEAR_CHECK_OFFSET(CG::UButton, UnknownData_LRUV, 0x03BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UButton, OnClicked, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UButton, OnPressed, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UButton, OnReleased, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UButton, OnHovered, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UButton, OnUnhovered, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UButton, UnknownData_XDA6, 0x0410);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UButton, 0x0420);
		}

		// class UButtonSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__ButtonSlot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UButtonSlot, Padding, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UButtonSlot, HorizontalAlignment, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UButtonSlot, VerticalAlignment, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UButtonSlot, UnknownData_KK5D, 0x004A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UButtonSlot, 0x0060);
		}

		// class UCanvasPanel : public UPanelWidget
		TEST_METHOD(Class__UMG__CanvasPanel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCanvasPanel, UnknownData_4FKO, 0x0118);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCanvasPanel, 0x0128);
		}

		// class UCanvasPanelSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__CanvasPanelSlot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCanvasPanelSlot, LayoutData, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCanvasPanelSlot, bAutoSize, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCanvasPanelSlot, UnknownData_PYTK, 0x0061);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCanvasPanelSlot, ZOrder, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCanvasPanelSlot, UnknownData_V4E7, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCanvasPanelSlot, 0x0070);
		}

		// class UCheckBox : public UContentWidget
		TEST_METHOD(Class__UMG__CheckBox)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckBox, CheckedState, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckBox, UnknownData_MTVK, 0x0119);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckBox, CheckedStateDelegate, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckBox, WidgetStyle, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckBox, Style, 0x06B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckBox, UncheckedImage, 0x06B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckBox, UncheckedHoveredImage, 0x06C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckBox, UncheckedPressedImage, 0x06C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckBox, CheckedImage, 0x06D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckBox, CheckedHoveredImage, 0x06D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckBox, CheckedPressedImage, 0x06E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckBox, UndeterminedImage, 0x06E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckBox, UndeterminedHoveredImage, 0x06F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckBox, UndeterminedPressedImage, 0x06F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckBox, HorizontalAlignment, 0x0700);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckBox, UnknownData_DTP6, 0x0701);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckBox, Padding, 0x0704);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckBox, UnknownData_HO1C, 0x0714);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckBox, BorderBackgroundColor, 0x0718);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckBox, IsFocusable, 0x0740);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckBox, UnknownData_QD05, 0x0741);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckBox, OnCheckStateChanged, 0x0748);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckBox, UnknownData_XOTY, 0x0758);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCheckBox, 0x0768);
		}

		// class UCheckedStateBinding : public UPropertyBinding
		TEST_METHOD(Class__UMG__CheckedStateBinding)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckedStateBinding, UnknownData_85UG, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCheckedStateBinding, 0x0068);
		}

		// class UCircularThrobber : public UWidget
		TEST_METHOD(Class__UMG__CircularThrobber)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCircularThrobber, NumberOfPieces, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCircularThrobber, Period, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCircularThrobber, Radius, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCircularThrobber, UnknownData_J7BY, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCircularThrobber, PieceImage, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCircularThrobber, Image, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCircularThrobber, bEnableRadius, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCircularThrobber, UnknownData_4C5I, 0x01A1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCircularThrobber, 0x01B8);
		}

		// class UColorBinding : public UPropertyBinding
		TEST_METHOD(Class__UMG__ColorBinding)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UColorBinding, UnknownData_2ZWD, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UColorBinding, 0x0068);
		}

		// class UComboBox : public UWidget
		TEST_METHOD(Class__UMG__ComboBox)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UComboBox, Items, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UComboBox, OnGenerateWidgetEvent, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UComboBox, bIsFocusable, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UComboBox, UnknownData_9JX5, 0x0121);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UComboBox, 0x0138);
		}

		// class UComboBoxString : public UWidget
		TEST_METHOD(Class__UMG__ComboBoxString)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UComboBoxString, DefaultOptions, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UComboBoxString, SelectedOption, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UComboBoxString, WidgetStyle, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UComboBoxString, ItemStyle, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UComboBoxString, ContentPadding, 0x0BB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UComboBoxString, MaxListHeight, 0x0BC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UComboBoxString, HasDownArrow, 0x0BC4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UComboBoxString, EnableGamepadNavigationMode, 0x0BC5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UComboBoxString, UnknownData_D6ZP, 0x0BC6);
			CHEAT_GEAR_CHECK_OFFSET(CG::UComboBoxString, Font, 0x0BC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UComboBoxString, ForegroundColor, 0x0C20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UComboBoxString, bIsFocusable, 0x0C48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UComboBoxString, UnknownData_2RIX, 0x0C49);
			CHEAT_GEAR_CHECK_OFFSET(CG::UComboBoxString, OnGenerateWidgetEvent, 0x0C50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UComboBoxString, OnSelectionChanged, 0x0C60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UComboBoxString, OnOpening, 0x0C70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UComboBoxString, UnknownData_5FE4, 0x0C80);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UComboBoxString, 0x0CC0);
		}

		// class UDragDropOperation : public UObject
		TEST_METHOD(Class__UMG__DragDropOperation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDragDropOperation, Tag, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDragDropOperation, Payload, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDragDropOperation, DefaultDragVisual, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDragDropOperation, Pivot, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDragDropOperation, UnknownData_CTE4, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDragDropOperation, Offset, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDragDropOperation, UnknownData_8QE7, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDragDropOperation, OnDrop, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDragDropOperation, OnDragCancelled, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDragDropOperation, OnDragged, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDragDropOperation, 0x0088);
		}

		// class UDynamicEntryBox : public UWidget
		TEST_METHOD(Class__UMG__DynamicEntryBox)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UDynamicEntryBox, EntryBoxType, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDynamicEntryBox, UnknownData_EHLC, 0x0101);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDynamicEntryBox, EntrySpacing, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDynamicEntryBox, UnknownData_53JC, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDynamicEntryBox, SpacingPattern, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDynamicEntryBox, EntrySizeRule, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDynamicEntryBox, EntryHorizontalAlignment, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDynamicEntryBox, EntryVerticalAlignment, 0x0129);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDynamicEntryBox, UnknownData_BGNK, 0x012A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDynamicEntryBox, MaxElementSize, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDynamicEntryBox, UnknownData_IRX2, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDynamicEntryBox, EntryWidgetClass, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UDynamicEntryBox, UnknownData_AXHC, 0x0148);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDynamicEntryBox, 0x01D0);
		}

		// class UEditableText : public UWidget
		TEST_METHOD(Class__UMG__EditableText)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, Text, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, TextDelegate, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, HintText, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, HintTextDelegate, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, WidgetStyle, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, Style, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, BackgroundImageSelected, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, BackgroundImageComposing, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, CaretImage, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, Font, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, ColorAndOpacity, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, IsReadOnly, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, IsPassword, 0x0411);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, UnknownData_X7BP, 0x0412);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, MinimumDesiredWidth, 0x0414);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, IsCaretMovedWhenGainFocus, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, SelectAllTextWhenFocused, 0x0419);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, RevertTextOnEscape, 0x041A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, ClearKeyboardFocusOnCommit, 0x041B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, SelectAllTextOnCommit, 0x041C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, AllowContextMenu, 0x041D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, KeyboardType, 0x041E);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, VirtualKeyboardOptions, 0x041F);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, VirtualKeyboardDismissAction, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, Justification, 0x0421);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, ShapedTextOptions, 0x0422);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, UnknownData_3VR9, 0x0425);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, OnTextChanged, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, OnTextCommitted, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableText, UnknownData_4OV6, 0x0448);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableText, 0x0458);
		}

		// class UEditableTextBox : public UWidget
		TEST_METHOD(Class__UMG__EditableTextBox)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, Text, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, TextDelegate, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, WidgetStyle, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, Style, 0x0920);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, HintText, 0x0928);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, HintTextDelegate, 0x0940);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, Font, 0x0950);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, ForegroundColor, 0x09A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, BackgroundColor, 0x09B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, ReadOnlyForegroundColor, 0x09C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, IsReadOnly, 0x09D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, IsPassword, 0x09D9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, UnknownData_UOM8, 0x09DA);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, MinimumDesiredWidth, 0x09DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, Padding, 0x09E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, IsCaretMovedWhenGainFocus, 0x09F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, SelectAllTextWhenFocused, 0x09F1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, RevertTextOnEscape, 0x09F2);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, ClearKeyboardFocusOnCommit, 0x09F3);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, SelectAllTextOnCommit, 0x09F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, AllowContextMenu, 0x09F5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, KeyboardType, 0x09F6);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, VirtualKeyboardOptions, 0x09F7);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, VirtualKeyboardDismissAction, 0x09F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, Justification, 0x09F9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, ShapedTextOptions, 0x09FA);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, UnknownData_B0GZ, 0x09FD);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, OnTextChanged, 0x0A00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, OnTextCommitted, 0x0A10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEditableTextBox, UnknownData_AXDK, 0x0A20);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEditableTextBox, 0x0A30);
		}

		// class UExpandableArea : public UWidget
		TEST_METHOD(Class__UMG__ExpandableArea)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UExpandableArea, UnknownData_G99P, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExpandableArea, Style, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExpandableArea, BorderBrush, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExpandableArea, BorderColor, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExpandableArea, bIsExpanded, 0x02D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExpandableArea, UnknownData_0A8K, 0x02D9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExpandableArea, MaxHeight, 0x02DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExpandableArea, HeaderPadding, 0x02E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExpandableArea, AreaPadding, 0x02F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExpandableArea, OnExpansionChanged, 0x0300);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExpandableArea, HeaderContent, 0x0310);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExpandableArea, BodyContent, 0x0318);
			CHEAT_GEAR_CHECK_OFFSET(CG::UExpandableArea, UnknownData_RIVO, 0x0320);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UExpandableArea, 0x0330);
		}

		// class UFloatBinding : public UPropertyBinding
		TEST_METHOD(Class__UMG__FloatBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFloatBinding, 0x0060);
		}

		// class UGridPanel : public UPanelWidget
		TEST_METHOD(Class__UMG__GridPanel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGridPanel, ColumnFill, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGridPanel, RowFill, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGridPanel, UnknownData_1PH8, 0x0138);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGridPanel, 0x0148);
		}

		// class UGridSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__GridSlot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGridSlot, Padding, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGridSlot, HorizontalAlignment, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGridSlot, VerticalAlignment, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGridSlot, UnknownData_HHB3, 0x004A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGridSlot, Row, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGridSlot, RowSpan, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGridSlot, Column, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGridSlot, ColumnSpan, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGridSlot, Layer, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGridSlot, Nudge, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGridSlot, UnknownData_NN2N, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGridSlot, 0x0070);
		}

		// class UHorizontalBox : public UPanelWidget
		TEST_METHOD(Class__UMG__HorizontalBox)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UHorizontalBox, UnknownData_JZ6A, 0x0118);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHorizontalBox, 0x0128);
		}

		// class UHorizontalBoxSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__HorizontalBoxSlot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UHorizontalBoxSlot, Padding, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UHorizontalBoxSlot, Size, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UHorizontalBoxSlot, HorizontalAlignment, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UHorizontalBoxSlot, VerticalAlignment, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::UHorizontalBoxSlot, UnknownData_Q0WJ, 0x0052);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHorizontalBoxSlot, 0x0060);
		}

		// class UInputKeySelector : public UWidget
		TEST_METHOD(Class__UMG__InputKeySelector)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputKeySelector, WidgetStyle, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputKeySelector, TextStyle, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputKeySelector, SelectedKey, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputKeySelector, Font, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputKeySelector, Margin, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputKeySelector, ColorAndOpacity, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputKeySelector, KeySelectionText, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputKeySelector, NoKeySpecifiedText, 0x0610);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputKeySelector, bAllowModifierKeys, 0x0628);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputKeySelector, bAllowGamepadKeys, 0x0629);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputKeySelector, UnknownData_VYZA, 0x062A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputKeySelector, EscapeKeys, 0x0630);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputKeySelector, OnKeySelected, 0x0640);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputKeySelector, OnIsSelectingKeyChanged, 0x0650);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInputKeySelector, UnknownData_TTHQ, 0x0660);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInputKeySelector, 0x0670);
		}

		// class UInt32Binding : public UPropertyBinding
		TEST_METHOD(Class__UMG__Int32Binding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInt32Binding, 0x0060);
		}

		// class UInvalidationBox : public UContentWidget
		TEST_METHOD(Class__UMG__InvalidationBox)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInvalidationBox, bCanCache, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInvalidationBox, CacheRelativeTransforms, 0x0119);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInvalidationBox, UnknownData_18T8, 0x011A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInvalidationBox, 0x0130);
		}

		// class UNativeUserListEntry : public UInterface
		TEST_METHOD(Class__UMG__NativeUserListEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNativeUserListEntry, 0x0028);
		}

		// class UUserListEntry : public UNativeUserListEntry
		TEST_METHOD(Class__UMG__UserListEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUserListEntry, 0x0028);
		}

		// class UUserObjectListEntry : public UUserListEntry
		TEST_METHOD(Class__UMG__UserObjectListEntry)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUserObjectListEntry, 0x0028);
		}

		// class UListViewBase : public UWidget
		TEST_METHOD(Class__UMG__ListViewBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UListViewBase, EntryWidgetClass, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UListViewBase, BP_OnEntryGenerated, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UListViewBase, BP_OnEntryReleased, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UListViewBase, UnknownData_1IA3, 0x0128);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UListViewBase, 0x0208);
		}

		// class UListView : public UListViewBase
		TEST_METHOD(Class__UMG__ListView)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UListView, UnknownData_SM7F, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UListView, SelectionMode, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UListView, ConsumeMouseWheel, 0x02B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UListView, bClearSelectionOnClick, 0x02B2);
			CHEAT_GEAR_CHECK_OFFSET(CG::UListView, UnknownData_S281, 0x02B3);
			CHEAT_GEAR_CHECK_OFFSET(CG::UListView, EntrySpacing, 0x02B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UListView, ListItems, 0x02B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UListView, UnknownData_BW0L, 0x02C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UListView, BP_OnItemClicked, 0x02D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UListView, BP_OnItemDoubleClicked, 0x02E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UListView, BP_OnItemIsHoveredChanged, 0x02F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UListView, BP_OnItemSelectionChanged, 0x0308);
			CHEAT_GEAR_CHECK_OFFSET(CG::UListView, BP_OnItemScrolledIntoView, 0x0318);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UListView, 0x0328);
		}

		// class UListViewDesignerPreviewItem : public UObject
		TEST_METHOD(Class__UMG__ListViewDesignerPreviewItem)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UListViewDesignerPreviewItem, 0x0028);
		}

		// class UMenuAnchor : public UContentWidget
		TEST_METHOD(Class__UMG__MenuAnchor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMenuAnchor, MenuClass, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMenuAnchor, OnGetMenuContentEvent, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMenuAnchor, Placement, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMenuAnchor, ShouldDeferPaintingAfterWindowContent, 0x0131);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMenuAnchor, UseApplicationMenuStack, 0x0132);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMenuAnchor, UnknownData_FUSI, 0x0133);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMenuAnchor, OnMenuOpenChanged, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMenuAnchor, UnknownData_TUEF, 0x0148);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMenuAnchor, 0x0158);
		}

		// class UMouseCursorBinding : public UPropertyBinding
		TEST_METHOD(Class__UMG__MouseCursorBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMouseCursorBinding, 0x0060);
		}

		// class UMovieScene2DTransformSection : public UMovieSceneSection
		TEST_METHOD(Class__UMG__MovieScene2DTransformSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene2DTransformSection, TransformMask, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene2DTransformSection, UnknownData_9K8M, 0x00E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene2DTransformSection, Translation, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene2DTransformSection, Rotation, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene2DTransformSection, Scale, 0x02C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene2DTransformSection, Shear, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieScene2DTransformSection, UnknownData_0R87, 0x0548);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScene2DTransformSection, 0x0550);
		}

		// class UMovieScene2DTransformTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__UMG__MovieScene2DTransformTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieScene2DTransformTrack, 0x0080);
		}

		// class UMovieSceneMarginSection : public UMovieSceneSection
		TEST_METHOD(Class__UMG__MovieSceneMarginSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneMarginSection, TopCurve, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneMarginSection, LeftCurve, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneMarginSection, RightCurve, 0x0220);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneMarginSection, BottomCurve, 0x02C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneMarginSection, 0x0360);
		}

		// class UMovieSceneMarginTrack : public UMovieScenePropertyTrack
		TEST_METHOD(Class__UMG__MovieSceneMarginTrack)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneMarginTrack, 0x0080);
		}

		// class UMovieSceneWidgetMaterialTrack : public UMovieSceneMaterialTrack
		TEST_METHOD(Class__UMG__MovieSceneWidgetMaterialTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneWidgetMaterialTrack, BrushPropertyNamePath, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMovieSceneWidgetMaterialTrack, TrackName, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMovieSceneWidgetMaterialTrack, 0x0080);
		}

		// class UMultiLineEditableText : public UTextLayoutWidget
		TEST_METHOD(Class__UMG__MultiLineEditableText)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableText, Text, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableText, HintText, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableText, HintTextDelegate, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableText, WidgetStyle, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableText, bIsReadOnly, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableText, UnknownData_513Z, 0x0349);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableText, Font, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableText, SelectAllTextWhenFocused, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableText, ClearTextSelectionOnFocusLoss, 0x03A9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableText, RevertTextOnEscape, 0x03AA);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableText, ClearKeyboardFocusOnCommit, 0x03AB);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableText, AllowContextMenu, 0x03AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableText, VirtualKeyboardOptions, 0x03AD);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableText, VirtualKeyboardDismissAction, 0x03AE);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableText, UnknownData_OL1L, 0x03AF);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableText, OnTextChanged, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableText, OnTextCommitted, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableText, UnknownData_8I6E, 0x03D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMultiLineEditableText, 0x03E0);
		}

		// class UMultiLineEditableTextBox : public UTextLayoutWidget
		TEST_METHOD(Class__UMG__MultiLineEditableTextBox)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableTextBox, Text, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableTextBox, HintText, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableTextBox, HintTextDelegate, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableTextBox, WidgetStyle, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableTextBox, TextStyle, 0x0958);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableTextBox, bIsReadOnly, 0x0B40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableTextBox, AllowContextMenu, 0x0B41);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableTextBox, VirtualKeyboardOptions, 0x0B42);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableTextBox, VirtualKeyboardDismissAction, 0x0B43);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableTextBox, UnknownData_JKMK, 0x0B44);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableTextBox, Style, 0x0B48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableTextBox, Font, 0x0B50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableTextBox, ForegroundColor, 0x0BA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableTextBox, BackgroundColor, 0x0BB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableTextBox, ReadOnlyForegroundColor, 0x0BC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableTextBox, OnTextChanged, 0x0BD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableTextBox, OnTextCommitted, 0x0BE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMultiLineEditableTextBox, UnknownData_FIXH, 0x0BF8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMultiLineEditableTextBox, 0x0C08);
		}

		// class UNamedSlot : public UContentWidget
		TEST_METHOD(Class__UMG__NamedSlot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNamedSlot, UnknownData_CTJX, 0x0118);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNamedSlot, 0x0128);
		}

		// class UNamedSlotInterface : public UInterface
		TEST_METHOD(Class__UMG__NamedSlotInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNamedSlotInterface, 0x0028);
		}

		// class UNativeWidgetHost : public UWidget
		TEST_METHOD(Class__UMG__NativeWidgetHost)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNativeWidgetHost, UnknownData_B9QZ, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNativeWidgetHost, 0x0110);
		}

		// class UOverlay : public UPanelWidget
		TEST_METHOD(Class__UMG__Overlay)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UOverlay, UnknownData_BOYW, 0x0118);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UOverlay, 0x0128);
		}

		// class UOverlaySlot : public UPanelSlot
		TEST_METHOD(Class__UMG__OverlaySlot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UOverlaySlot, UnknownData_DKFN, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UOverlaySlot, Padding, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UOverlaySlot, HorizontalAlignment, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UOverlaySlot, VerticalAlignment, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::UOverlaySlot, UnknownData_P61B, 0x0052);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UOverlaySlot, 0x0058);
		}

		// class UProgressBar : public UWidget
		TEST_METHOD(Class__UMG__ProgressBar)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UProgressBar, WidgetStyle, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProgressBar, Style, 0x02A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProgressBar, BackgroundImage, 0x02A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProgressBar, FillImage, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProgressBar, MarqueeImage, 0x02B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProgressBar, Percent, 0x02C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProgressBar, BarFillType, 0x02C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProgressBar, bIsMarquee, 0x02C5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProgressBar, UnknownData_BDYK, 0x02C6);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProgressBar, BorderPadding, 0x02C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProgressBar, PercentDelegate, 0x02D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProgressBar, FillColorAndOpacity, 0x02E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProgressBar, FillColorAndOpacityDelegate, 0x02F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UProgressBar, UnknownData_H5T0, 0x0300);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UProgressBar, 0x0310);
		}

		// class URetainerBox : public UContentWidget
		TEST_METHOD(Class__UMG__RetainerBox)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::URetainerBox, RenderOnInvalidation, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::URetainerBox, RenderOnPhase, 0x0119);
			CHEAT_GEAR_CHECK_OFFSET(CG::URetainerBox, UnknownData_MLJF, 0x011A);
			CHEAT_GEAR_CHECK_OFFSET(CG::URetainerBox, phase, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::URetainerBox, PhaseCount, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::URetainerBox, UnknownData_18GF, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::URetainerBox, EffectMaterial, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::URetainerBox, TextureParameter, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::URetainerBox, UnknownData_W3V2, 0x0138);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URetainerBox, 0x0148);
		}

		// class URichTextBlockImageDecorator : public URichTextBlockDecorator
		TEST_METHOD(Class__UMG__RichTextBlockImageDecorator)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::URichTextBlockImageDecorator, ImageSet, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URichTextBlockImageDecorator, 0x0030);
		}

		// class USafeZone : public UContentWidget
		TEST_METHOD(Class__UMG__SafeZone)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USafeZone, PadLeft, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::USafeZone, PadRight, 0x0119);
			CHEAT_GEAR_CHECK_OFFSET(CG::USafeZone, PadTop, 0x011A);
			CHEAT_GEAR_CHECK_OFFSET(CG::USafeZone, PadBottom, 0x011B);
			CHEAT_GEAR_CHECK_OFFSET(CG::USafeZone, UnknownData_O6I1, 0x011C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USafeZone, 0x0130);
		}

		// class USafeZoneSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__SafeZoneSlot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USafeZoneSlot, bIsTitleSafe, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::USafeZoneSlot, UnknownData_79O8, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::USafeZoneSlot, SafeAreaScale, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USafeZoneSlot, HAlign, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USafeZoneSlot, VAlign, 0x004D);
			CHEAT_GEAR_CHECK_OFFSET(CG::USafeZoneSlot, UnknownData_KN07, 0x004E);
			CHEAT_GEAR_CHECK_OFFSET(CG::USafeZoneSlot, Padding, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USafeZoneSlot, 0x0060);
		}

		// class UScaleBox : public UContentWidget
		TEST_METHOD(Class__UMG__ScaleBox)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UScaleBox, Stretch, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScaleBox, StretchDirection, 0x0119);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScaleBox, UnknownData_MVX7, 0x011A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScaleBox, UserSpecifiedScale, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScaleBox, IgnoreInheritedScale, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScaleBox, bSingleLayoutPass, 0x0121);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScaleBox, UnknownData_ZOPI, 0x0122);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UScaleBox, 0x0138);
		}

		// class UScaleBoxSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__ScaleBoxSlot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UScaleBoxSlot, Padding, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScaleBoxSlot, HorizontalAlignment, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScaleBoxSlot, VerticalAlignment, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScaleBoxSlot, UnknownData_PC8R, 0x004A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UScaleBoxSlot, 0x0060);
		}

		// class UScrollBar : public UWidget
		TEST_METHOD(Class__UMG__ScrollBar)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBar, WidgetStyle, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBar, Style, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBar, bAlwaysShowScrollbar, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBar, Orientation, 0x05D9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBar, UnknownData_S5RE, 0x05DA);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBar, Thickness, 0x05DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBar, UnknownData_57MH, 0x05E4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UScrollBar, 0x05F8);
		}

		// class UScrollBox : public UPanelWidget
		TEST_METHOD(Class__UMG__ScrollBox)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBox, WidgetStyle, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBox, WidgetBarStyle, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBox, Style, 0x0810);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBox, BarStyle, 0x0818);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBox, Orientation, 0x0820);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBox, ScrollBarVisibility, 0x0821);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBox, ConsumeMouseWheel, 0x0822);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBox, UnknownData_RVQ8, 0x0823);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBox, ScrollbarThickness, 0x0824);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBox, AlwaysShowScrollbar, 0x082C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBox, AllowOverscroll, 0x082D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBox, NavigationDestination, 0x082E);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBox, UnknownData_VL3G, 0x082F);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBox, NavigationScrollPadding, 0x0830);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBox, bAllowRightClickDragScrolling, 0x0834);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBox, UnknownData_LJPH, 0x0835);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBox, OnUserScrolled, 0x0838);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBox, UnknownData_ONB9, 0x0848);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UScrollBox, 0x0860);
		}

		// class UScrollBoxSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__ScrollBoxSlot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBoxSlot, Padding, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBoxSlot, HorizontalAlignment, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBoxSlot, VerticalAlignment, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UScrollBoxSlot, UnknownData_00SI, 0x004A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UScrollBoxSlot, 0x0058);
		}

		// class USizeBox : public UContentWidget
		TEST_METHOD(Class__UMG__SizeBox)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USizeBox, UnknownData_3RI0, 0x0119);
			CHEAT_GEAR_CHECK_OFFSET(CG::USizeBox, WidthOverride, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USizeBox, HeightOverride, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::USizeBox, MinDesiredWidth, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::USizeBox, MinDesiredHeight, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::USizeBox, MaxDesiredWidth, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USizeBox, MaxDesiredHeight, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::USizeBox, MaxAspectRatio, 0x0134);
			CHEAT_GEAR_CHECK_OFFSET(CG::USizeBox, UnknownData_2AR0, 0x0138);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USizeBox, 0x0148);
		}

		// class USizeBoxSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__SizeBoxSlot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USizeBoxSlot, Padding, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::USizeBoxSlot, HorizontalAlignment, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::USizeBoxSlot, VerticalAlignment, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::USizeBoxSlot, UnknownData_CISM, 0x004A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USizeBoxSlot, 0x0060);
		}

		// class USlateBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__UMG__SlateBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USlateBlueprintLibrary, 0x0028);
		}

		// class USlateVectorArtData : public UObject
		TEST_METHOD(Class__UMG__SlateVectorArtData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USlateVectorArtData, VertexData, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::USlateVectorArtData, IndexData, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::USlateVectorArtData, Material, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::USlateVectorArtData, ExtentMin, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::USlateVectorArtData, ExtentMax, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USlateVectorArtData, 0x0060);
		}

		// class USlider : public UWidget
		TEST_METHOD(Class__UMG__Slider)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USlider, Value, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::USlider, UnknownData_JK9B, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::USlider, ValueDelegate, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::USlider, WidgetStyle, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::USlider, Orientation, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::USlider, UnknownData_ZACZ, 0x0459);
			CHEAT_GEAR_CHECK_OFFSET(CG::USlider, SliderBarColor, 0x045C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USlider, SliderHandleColor, 0x046C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USlider, IndentHandle, 0x047C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USlider, Locked, 0x047D);
			CHEAT_GEAR_CHECK_OFFSET(CG::USlider, MouseUsesStep, 0x047E);
			CHEAT_GEAR_CHECK_OFFSET(CG::USlider, RequiresControllerLock, 0x047F);
			CHEAT_GEAR_CHECK_OFFSET(CG::USlider, StepSize, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::USlider, IsFocusable, 0x0484);
			CHEAT_GEAR_CHECK_OFFSET(CG::USlider, UnknownData_TFOQ, 0x0485);
			CHEAT_GEAR_CHECK_OFFSET(CG::USlider, OnMouseCaptureBegin, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::USlider, OnMouseCaptureEnd, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::USlider, OnControllerCaptureBegin, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USlider, OnControllerCaptureEnd, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USlider, OnValueChanged, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USlider, UnknownData_AT99, 0x04D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USlider, 0x04E8);
		}

		// class USpacer : public UWidget
		TEST_METHOD(Class__UMG__Spacer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USpacer, Size, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpacer, UnknownData_PPE9, 0x0108);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpacer, 0x0118);
		}

		// class USpinBox : public UWidget
		TEST_METHOD(Class__UMG__SpinBox)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USpinBox, Value, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpinBox, UnknownData_PDW4, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpinBox, ValueDelegate, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpinBox, WidgetStyle, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpinBox, Style, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpinBox, Delta, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpinBox, SliderExponent, 0x040C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpinBox, Font, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpinBox, Justification, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpinBox, UnknownData_MWDL, 0x0469);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpinBox, MinDesiredWidth, 0x046C);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpinBox, ClearKeyboardFocusOnCommit, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpinBox, SelectAllTextOnCommit, 0x0471);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpinBox, UnknownData_20G3, 0x0472);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpinBox, ForegroundColor, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpinBox, OnValueChanged, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpinBox, OnValueCommitted, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpinBox, OnBeginSliderMovement, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpinBox, OnEndSliderMovement, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpinBox, UnknownData_GAU5, 0x04E1);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpinBox, MinValue, 0x04E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpinBox, MaxValue, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpinBox, MinSliderValue, 0x04EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpinBox, MaxSliderValue, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USpinBox, UnknownData_XLDZ, 0x04F4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpinBox, 0x0508);
		}

		// class UTextBinding : public UPropertyBinding
		TEST_METHOD(Class__UMG__TextBinding)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextBinding, UnknownData_ACMS, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextBinding, 0x0068);
		}

		// class UTextBlock : public UTextLayoutWidget
		TEST_METHOD(Class__UMG__TextBlock)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextBlock, Text, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextBlock, TextDelegate, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextBlock, ColorAndOpacity, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextBlock, ColorAndOpacityDelegate, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextBlock, Font, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextBlock, ShadowOffset, 0x01D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextBlock, ShadowColorAndOpacity, 0x01E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextBlock, ShadowColorAndOpacityDelegate, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextBlock, MinDesiredWidth, 0x0200);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextBlock, bWrapWithInvalidationPanel, 0x0204);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextBlock, bAutoWrapText, 0x0205);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTextBlock, UnknownData_VCXT, 0x0206);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTextBlock, 0x0218);
		}

		// class UThrobber : public UWidget
		TEST_METHOD(Class__UMG__Throbber)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UThrobber, NumberOfPieces, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UThrobber, bAnimateHorizontally, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UThrobber, bAnimateVertically, 0x0105);
			CHEAT_GEAR_CHECK_OFFSET(CG::UThrobber, bAnimateOpacity, 0x0106);
			CHEAT_GEAR_CHECK_OFFSET(CG::UThrobber, UnknownData_QHYF, 0x0107);
			CHEAT_GEAR_CHECK_OFFSET(CG::UThrobber, PieceImage, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UThrobber, Image, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UThrobber, UnknownData_8D9F, 0x0198);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UThrobber, 0x01A8);
		}

		// class UTileView : public UListView
		TEST_METHOD(Class__UMG__TileView)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTileView, EntryHeight, 0x0328);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTileView, EntryWidth, 0x032C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTileView, TileAlignment, 0x0330);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTileView, bWrapHorizontalNavigation, 0x0331);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTileView, UnknownData_7W5W, 0x0332);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTileView, 0x0348);
		}

		// class UTreeView : public UListView
		TEST_METHOD(Class__UMG__TreeView)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTreeView, UnknownData_F5CE, 0x0328);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTreeView, BP_OnGetItemChildren, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTreeView, BP_OnItemExpansionChanged, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTreeView, UnknownData_YDZF, 0x0358);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTreeView, 0x0380);
		}

		// class UUMGSequencePlayer : public UObject
		TEST_METHOD(Class__UMG__UMGSequencePlayer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UUMGSequencePlayer, UnknownData_BFFL, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUMGSequencePlayer, Animation, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUMGSequencePlayer, UnknownData_72TE, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUMGSequencePlayer, 0x06E8);
		}

		// class UUniformGridPanel : public UPanelWidget
		TEST_METHOD(Class__UMG__UniformGridPanel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UUniformGridPanel, SlotPadding, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUniformGridPanel, MinDesiredSlotWidth, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUniformGridPanel, MinDesiredSlotHeight, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUniformGridPanel, UnknownData_TX2E, 0x0130);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniformGridPanel, 0x0140);
		}

		// class UUniformGridSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__UniformGridSlot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UUniformGridSlot, HorizontalAlignment, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUniformGridSlot, VerticalAlignment, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUniformGridSlot, UnknownData_K0B7, 0x003A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUniformGridSlot, Row, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUniformGridSlot, Column, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UUniformGridSlot, UnknownData_O45P, 0x0044);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniformGridSlot, 0x0050);
		}

		// class UVerticalBox : public UPanelWidget
		TEST_METHOD(Class__UMG__VerticalBox)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UVerticalBox, UnknownData_8TQU, 0x0118);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVerticalBox, 0x0128);
		}

		// class UVerticalBoxSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__VerticalBoxSlot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UVerticalBoxSlot, Padding, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVerticalBoxSlot, Size, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVerticalBoxSlot, HorizontalAlignment, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVerticalBoxSlot, VerticalAlignment, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVerticalBoxSlot, UnknownData_RO3P, 0x0052);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVerticalBoxSlot, 0x0060);
		}

		// class UViewport : public UContentWidget
		TEST_METHOD(Class__UMG__Viewport)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UViewport, BackgroundColor, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UViewport, UnknownData_U04P, 0x0128);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UViewport, 0x0140);
		}

		// class UVisibilityBinding : public UPropertyBinding
		TEST_METHOD(Class__UMG__VisibilityBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVisibilityBinding, 0x0060);
		}

		// class UWidgetAnimation : public UMovieSceneSequence
		TEST_METHOD(Class__UMG__WidgetAnimation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetAnimation, OnAnimationStarted, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetAnimation, OnAnimationFinished, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetAnimation, MovieScene, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetAnimation, AnimationBindings, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetAnimation, bLegacyFinishOnStop, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetAnimation, UnknownData_45SC, 0x0381);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetAnimation, DisplayLabel, 0x0388);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetAnimation, 0x0398);
		}

		// class UWidgetBinding : public UPropertyBinding
		TEST_METHOD(Class__UMG__WidgetBinding)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetBinding, 0x0060);
		}

		// class UWidgetBlueprintGeneratedClass : public UBlueprintGeneratedClass
		TEST_METHOD(Class__UMG__WidgetBlueprintGeneratedClass)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetBlueprintGeneratedClass, WidgetTree, 0x02E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetBlueprintGeneratedClass, UnknownData_1F9Q, 0x02E9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetBlueprintGeneratedClass, Bindings, 0x02F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetBlueprintGeneratedClass, Animations, 0x0300);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetBlueprintGeneratedClass, NamedSlots, 0x0310);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetBlueprintGeneratedClass, TemplateAsset, 0x0320);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetBlueprintGeneratedClass, Template, 0x0348);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetBlueprintGeneratedClass, 0x0350);
		}

		// class UWidgetBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__UMG__WidgetBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetBlueprintLibrary, 0x0028);
		}

		// class UWidgetComponent : public UMeshComponent
		TEST_METHOD(Class__UMG__WidgetComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, Space, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, TimingPolicy, 0x0591);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, UnknownData_L1GD, 0x0592);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, WidgetClass, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, DrawSize, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, bManuallyRedraw, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, bRedrawRequested, 0x05A9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, UnknownData_2SV2, 0x05AA);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, RedrawTime, 0x05AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, UnknownData_WI0T, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, CurrentDrawSize, 0x05B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, bDrawAtDesiredSize, 0x05C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, UnknownData_LQB7, 0x05C1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, Pivot, 0x05C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, bReceiveHardwareInput, 0x05CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, bWindowFocusable, 0x05CD);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, bApplyGammaCorrection, 0x05CE);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, UnknownData_7DAV, 0x05CF);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, OwnerPlayer, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, BackgroundColor, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, TintColorAndOpacity, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, OpacityFromTexture, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, BlendMode, 0x05FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, bIsTwoSided, 0x05FD);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, bAsSprite, 0x05FE);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, UnknownData_WCI7, 0x05FF);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, pixelDepthOffset, 0x0600);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, TickWhenOffscreen, 0x0604);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, UnknownData_OWZG, 0x0605);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, Widget, 0x0608);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, UnknownData_0TQH, 0x0610);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, BodySetup, 0x0630);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, TranslucentMaterial, 0x0638);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, TranslucentMaterial_OneSided, 0x0640);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, OpaqueMaterial, 0x0648);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, OpaqueMaterial_OneSided, 0x0650);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, MaskedMaterial, 0x0658);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, MaskedMaterial_OneSided, 0x0660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, TranslucentMaterial_Sprite, 0x0668);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, OpaqueMaterial_Sprite, 0x0670);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, MaskedMaterial_Sprite, 0x0678);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, RenderTarget, 0x0680);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, MaterialInstance, 0x0688);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, bAddedToScreen, 0x0690);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, bEditTimeUsable, 0x0691);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, UnknownData_06Y2, 0x0692);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, SharedLayerName, 0x0698);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, LayerZOrder, 0x06A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, GeometryMode, 0x06A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, UnknownData_7M5B, 0x06A5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, CylinderArcAngle, 0x06A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetComponent, UnknownData_8NH8, 0x06AC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetComponent, 0x06D0);
		}

		// class UWidgetInteractionComponent : public USceneComponent
		TEST_METHOD(Class__UMG__WidgetInteractionComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetInteractionComponent, OnHoveredWidgetChanged, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetInteractionComponent, UnknownData_3PCC, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetInteractionComponent, VirtualUserIndex, 0x0268);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetInteractionComponent, PointerIndex, 0x026C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetInteractionComponent, TraceChannel, 0x0270);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetInteractionComponent, UnknownData_1SZ6, 0x0271);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetInteractionComponent, InteractionDistance, 0x0274);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetInteractionComponent, InteractionSource, 0x0278);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetInteractionComponent, bEnableHitTesting, 0x0279);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetInteractionComponent, bShowDebug, 0x027A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetInteractionComponent, UnknownData_Q2HB, 0x027B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetInteractionComponent, DebugColor, 0x027C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetInteractionComponent, UnknownData_PHXK, 0x028C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetInteractionComponent, CustomHitResult, 0x0308);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetInteractionComponent, LocalHitLocation, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetInteractionComponent, LastLocalHitLocation, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetInteractionComponent, HoveredWidgetComponent, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetInteractionComponent, LastHitResult, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetInteractionComponent, bIsHoveredWidgetInteractable, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetInteractionComponent, bIsHoveredWidgetFocusable, 0x0431);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetInteractionComponent, bIsHoveredWidgetHitTestVisible, 0x0432);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetInteractionComponent, UnknownData_HG8A, 0x0433);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetInteractionComponent, 0x0440);
		}

		// class UWidgetLayoutLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__UMG__WidgetLayoutLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetLayoutLibrary, 0x0028);
		}

		// class UWidgetNavigation : public UObject
		TEST_METHOD(Class__UMG__WidgetNavigation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetNavigation, Up, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetNavigation, Down, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetNavigation, Left, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetNavigation, Right, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetNavigation, Next, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetNavigation, Previous, 0x00F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetNavigation, 0x0118);
		}

		// class UWidgetSwitcher : public UPanelWidget
		TEST_METHOD(Class__UMG__WidgetSwitcher)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetSwitcher, ActiveWidgetIndex, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetSwitcher, UnknownData_06I4, 0x011C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetSwitcher, 0x0130);
		}

		// class UWidgetSwitcherSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__WidgetSwitcherSlot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetSwitcherSlot, Padding, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetSwitcherSlot, HorizontalAlignment, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetSwitcherSlot, VerticalAlignment, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetSwitcherSlot, UnknownData_ZKEH, 0x004A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetSwitcherSlot, 0x0058);
		}

		// class UWidgetTree : public UObject
		TEST_METHOD(Class__UMG__WidgetTree)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UWidgetTree, RootWidget, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWidgetTree, 0x0030);
		}

		// class UWindowTitleBarArea : public UContentWidget
		TEST_METHOD(Class__UMG__WindowTitleBarArea)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UWindowTitleBarArea, bWindowButtonsEnabled, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWindowTitleBarArea, bDoubleClickTogglesFullscreen, 0x0119);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWindowTitleBarArea, UnknownData_OUB9, 0x011A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWindowTitleBarArea, 0x0138);
		}

		// class UWindowTitleBarAreaSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__WindowTitleBarAreaSlot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UWindowTitleBarAreaSlot, Padding, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWindowTitleBarAreaSlot, HorizontalAlignment, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWindowTitleBarAreaSlot, VerticalAlignment, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWindowTitleBarAreaSlot, UnknownData_Y71A, 0x004A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWindowTitleBarAreaSlot, 0x0060);
		}

		// class UWrapBox : public UPanelWidget
		TEST_METHOD(Class__UMG__WrapBox)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UWrapBox, InnerSlotPadding, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWrapBox, WrapWidth, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWrapBox, bExplicitWrapWidth, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWrapBox, UnknownData_9JY1, 0x0125);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWrapBox, 0x0138);
		}

		// class UWrapBoxSlot : public UPanelSlot
		TEST_METHOD(Class__UMG__WrapBoxSlot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UWrapBoxSlot, Padding, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWrapBoxSlot, bFillEmptySpace, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWrapBoxSlot, UnknownData_6EI9, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWrapBoxSlot, FillSpanWhenLessThan, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWrapBoxSlot, HorizontalAlignment, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWrapBoxSlot, VerticalAlignment, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::UWrapBoxSlot, UnknownData_A2Q4, 0x0052);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UWrapBoxSlot, 0x0060);
		}

		// class AArea03_Env_WaterFall_00_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_WaterFall_00__Area03_Env_WaterFall_00_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_WaterFall_00_C, 0x0340);
		}

		// class UMap_Win_List01_C : public UAT_UIMapWinList
		TEST_METHOD(WidgetBlueprintGeneratedClass__Map_Win_List01__Map_Win_List01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Win_List01_C, Ins_Item, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Win_List01_C, Txt_Name, 0x03A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMap_Win_List01_C, 0x03B0);
		}

		// class UMap_World_Icon_C : public UAT_UIMapWorldIcon
		TEST_METHOD(WidgetBlueprintGeneratedClass__Map_World_Icon__Map_World_Icon_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Icon_C, Out, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Icon_C, In, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Icon_C, Choose_Out, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Icon_C, Choose_In, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Icon_C, Enter, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Icon_C, Dmy_Area, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Icon_C, Dmy_Area_Eff, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Icon_C, Img_Base_Name_Area, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Icon_C, Img_Micon27, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Icon_C, Ins_Area_Eff01, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_World_Icon_C, Txt_Name, 0x0438);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMap_World_Icon_C, 0x0440);
		}

		// class UEnc_Direction_C : public UAT_UIEncounterDirectionChild
		TEST_METHOD(WidgetBlueprintGeneratedClass__Enc_Direction__Enc_Direction_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Direction_C, UberGraphFrame, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Direction_C, All_Nut, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Direction_C, Ins_Hud_Csr, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Direction_C, Nut_Direction, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Direction_C, Xcmn_Distance_122, 0x03D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnc_Direction_C, 0x03D8);
		}

		// class UHeadMountedDisplayFunctionLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__HeadMountedDisplay__HeadMountedDisplayFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UHeadMountedDisplayFunctionLibrary, 0x0028);
		}

		// class UMotionControllerComponent : public UPrimitiveComponent
		TEST_METHOD(Class__HeadMountedDisplay__MotionControllerComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMotionControllerComponent, UnknownData_T4M9, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMotionControllerComponent, MotionSource, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMotionControllerComponent, UnknownData_XR0Q, 0x0579);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMotionControllerComponent, CurrentTrackingStatus, 0x057C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMotionControllerComponent, bDisplayDeviceModel, 0x057D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMotionControllerComponent, UnknownData_OS31, 0x057E);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMotionControllerComponent, DisplayModelSource, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMotionControllerComponent, CustomDisplayMesh, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMotionControllerComponent, DisplayMeshMaterialOverrides, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMotionControllerComponent, UnknownData_ISKM, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMotionControllerComponent, DisplayComponent, 0x0600);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMotionControllerComponent, UnknownData_TP2N, 0x0608);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMotionControllerComponent, 0x0620);
		}

		// class UMotionTrackedDeviceFunctionLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__HeadMountedDisplay__MotionTrackedDeviceFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMotionTrackedDeviceFunctionLibrary, 0x0028);
		}

		// class UVRNotificationsComponent : public UActorComponent
		TEST_METHOD(Class__HeadMountedDisplay__VRNotificationsComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UVRNotificationsComponent, HMDTrackingInitializingAndNeedsHMDToBeTrackedDelegate, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVRNotificationsComponent, HMDTrackingInitializedDelegate, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVRNotificationsComponent, HMDRecenteredDelegate, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVRNotificationsComponent, HMDLostDelegate, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVRNotificationsComponent, HMDReconnectedDelegate, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVRNotificationsComponent, HMDConnectCanceledDelegate, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVRNotificationsComponent, HMDPutOnHeadDelegate, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVRNotificationsComponent, HMDRemovedFromHeadDelegate, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UVRNotificationsComponent, VRControllerRecenteredDelegate, 0x0180);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVRNotificationsComponent, 0x0190);
		}

		// class UXRAssetFunctionLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__HeadMountedDisplay__XRAssetFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXRAssetFunctionLibrary, 0x0028);
		}

		// class UAsyncTask_LoadXRDeviceVisComponent : public UBlueprintAsyncActionBase
		TEST_METHOD(Class__HeadMountedDisplay__AsyncTask_LoadXRDeviceVisComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAsyncTask_LoadXRDeviceVisComponent, OnModelLoaded, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAsyncTask_LoadXRDeviceVisComponent, OnLoadFailure, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAsyncTask_LoadXRDeviceVisComponent, UnknownData_QVNG, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAsyncTask_LoadXRDeviceVisComponent, SpawnedComponent, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAsyncTask_LoadXRDeviceVisComponent, 0x0060);
		}

		// class UControlPointMeshComponent : public UStaticMeshComponent
		TEST_METHOD(Class__Landscape__ControlPointMeshComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UControlPointMeshComponent, UnknownData_TOQZ, 0x05F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UControlPointMeshComponent, 0x0600);
		}

		// class ALandscapeProxy : public AActor
		TEST_METHOD(Class__Landscape__LandscapeProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, SplineComponent, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, LandscapeGuid, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, LandscapeSectionOffset, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, MaxLODLevel, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, LODDistanceFactor, 0x035C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, LODFalloff, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, UnknownData_R1QS, 0x0361);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, ComponentScreenSizeToUseSubSections, 0x0364);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, LOD0DistributionSetting, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, LODDistributionSetting, 0x036C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, TessellationComponentScreenSize, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, UseTessellationComponentScreenSizeFalloff, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, UnknownData_GBLF, 0x0375);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, TessellationComponentScreenSizeFalloff, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, OccluderGeometryLOD, 0x037C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, StaticLightingLOD, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, UnknownData_MF1E, 0x0384);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, DefaultPhysMaterial, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, StreamingDistanceMultiplier, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, UnknownData_OQAB, 0x0394);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, LandscapeMaterial, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, LandscapeHoleMaterial, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, LandscapeMaterialsOverride, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, NegativeZBoundsExtension, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, PositiveZBoundsExtension, 0x03BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, LandscapeComponents, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, CollisionComponents, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, FoliageComponents, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, UnknownData_YNLL, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, bHasLandscapeGrass, 0x0454);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, UnknownData_DF77, 0x0455);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, StaticLightingResolution, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, UnknownData_GR30, 0x045D);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, LightingChannels, 0x0461);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, UnknownData_ZZTH, 0x0462);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, UnknownData_Q91H, 0x0465);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, CustomDepthStencilValue, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, LDMaxDrawDistance, 0x046C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, LightmassSettings, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, CollisionMipLevel, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, SimpleCollisionMipLevel, 0x048C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, CollisionThickness, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, UnknownData_1L82, 0x0494);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, BodyInstance, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, UnknownData_XR0D, 0x05E9);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, ComponentSizeQuads, 0x05EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, SubsectionSizeQuads, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, NumSubsections, 0x05F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, UnknownData_N970, 0x05F9);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, bUseDynamicMaterialInstance, 0x05FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, NavigationGeometryGatheringMode, 0x05FD);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, bUseLandscapeForCullingInvisibleHLODVertices, 0x05FE);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeProxy, UnknownData_DTWO, 0x05FF);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALandscapeProxy, 0x0650);
		}

		// class ALandScape : public ALandscapeProxy
		TEST_METHOD(Class__Landscape__LandScape)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALandScape, 0x0650);
		}

		// class ULandscapeComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Landscape__LandscapeComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, UnknownData_XPSV, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, SectionBaseY, 0x056C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, ComponentSizeQuads, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, SubsectionSizeQuads, 0x0574);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, NumSubsections, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, UnknownData_CFKN, 0x057C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, OverrideMaterial, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, OverrideHoleMaterial, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, OverrideMaterials, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, MaterialInstances, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, MaterialInstancesDynamic, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, LODIndexToMaterialIndex, 0x05C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, MaterialIndexToDisabledTessellationMaterial, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, WeightmapLayerAllocations, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, WeightmapTextures, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, XYOffsetmapTexture, 0x0600);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, UnknownData_LSBK, 0x0608);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, WeightmapScaleBias, 0x0610);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, WeightmapSubsectionOffset, 0x0620);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, UnknownData_JJAN, 0x0624);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, HeightmapScaleBias, 0x0630);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, HeightmapTexture, 0x0640);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, CachedLocalBox, 0x0648);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, CollisionComponent, 0x0664);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, MapBuildDataId, 0x0680);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, IrrelevantLights, 0x0690);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, CollisionMipLevel, 0x06A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, SimpleCollisionMipLevel, 0x06A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, NegativeZBoundsExtension, 0x06A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, PositiveZBoundsExtension, 0x06AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, StaticLightingResolution, 0x06B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, ForcedLOD, 0x06B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, LODBias, 0x06B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, StateId, 0x06BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, BakedTextureMaterialGuid, 0x06CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, UnknownData_OS6A, 0x06DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, GIBakedBaseColorTexture, 0x06E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, MobileBlendableLayerMask, 0x06E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, UnknownData_9FEE, 0x06E9);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, MobileMaterialInterface, 0x06F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, MobileMaterialInterfaces, 0x06F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, MobileWeightmapTextures, 0x0708);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeComponent, UnknownData_9JUQ, 0x0718);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULandscapeComponent, 0x0750);
		}

		// class ALandscapeGizmoActor : public AActor
		TEST_METHOD(Class__Landscape__LandscapeGizmoActor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALandscapeGizmoActor, 0x0338);
		}

		// class ALandscapeGizmoActiveActor : public ALandscapeGizmoActor
		TEST_METHOD(Class__Landscape__LandscapeGizmoActiveActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeGizmoActiveActor, UnknownData_JKUI, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALandscapeGizmoActiveActor, 0x0388);
		}

		// class ULandscapeGizmoRenderComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Landscape__LandscapeGizmoRenderComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeGizmoRenderComponent, UnknownData_D0DN, 0x0568);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULandscapeGizmoRenderComponent, 0x0570);
		}

		// class ULandscapeGrassType : public UObject
		TEST_METHOD(Class__Landscape__LandscapeGrassType)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeGrassType, GrassVarieties, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeGrassType, UnknownData_RBUA, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeGrassType, GrassMesh, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeGrassType, GrassDensity, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeGrassType, PlacementJitter, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeGrassType, StartCullDistance, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeGrassType, EndCullDistance, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeGrassType, RandomRotation, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeGrassType, AlignToSurface, 0x0059);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeGrassType, UnknownData_725I, 0x005A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULandscapeGrassType, 0x0060);
		}

		// class ULandscapeHeightfieldCollisionComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Landscape__LandscapeHeightfieldCollisionComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeHeightfieldCollisionComponent, ComponentLayerInfos, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeHeightfieldCollisionComponent, SectionBaseX, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeHeightfieldCollisionComponent, SectionBaseY, 0x057C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeHeightfieldCollisionComponent, CollisionSizeQuads, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeHeightfieldCollisionComponent, CollisionScale, 0x0584);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeHeightfieldCollisionComponent, SimpleCollisionSizeQuads, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeHeightfieldCollisionComponent, UnknownData_KCCX, 0x058C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeHeightfieldCollisionComponent, CollisionQuadFlags, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeHeightfieldCollisionComponent, HeightfieldGuid, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeHeightfieldCollisionComponent, CachedLocalBox, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeHeightfieldCollisionComponent, RenderComponent, 0x05CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeHeightfieldCollisionComponent, UnknownData_1T9S, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeHeightfieldCollisionComponent, CookedPhysicalMaterials, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeHeightfieldCollisionComponent, UnknownData_N20M, 0x0608);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULandscapeHeightfieldCollisionComponent, 0x0648);
		}

		// class ULandscapeInfo : public UObject
		TEST_METHOD(Class__Landscape__LandscapeInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeInfo, LandscapeActor, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeInfo, LandscapeGuid, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeInfo, ComponentSizeQuads, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeInfo, SubsectionSizeQuads, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeInfo, ComponentNumSubsections, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeInfo, DrawScale, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeInfo, UnknownData_66JH, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeInfo, Proxies, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeInfo, UnknownData_YMBQ, 0x0110);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULandscapeInfo, 0x0200);
		}

		// class ULandscapeInfoMap : public UObject
		TEST_METHOD(Class__Landscape__LandscapeInfoMap)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeInfoMap, UnknownData_84HX, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULandscapeInfoMap, 0x0080);
		}

		// class ULandscapeLayerInfoObject : public UObject
		TEST_METHOD(Class__Landscape__LandscapeLayerInfoObject)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeLayerInfoObject, LayerName, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeLayerInfoObject, PhysMaterial, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeLayerInfoObject, Hardness, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeLayerInfoObject, LayerUsageDebugColor, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeLayerInfoObject, UnknownData_3D3G, 0x004C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULandscapeLayerInfoObject, 0x0050);
		}

		// class ULandscapeMaterialInstanceConstant : public UMaterialInstanceConstant
		TEST_METHOD(Class__Landscape__LandscapeMaterialInstanceConstant)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeMaterialInstanceConstant, UnknownData_62L0, 0x01E9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULandscapeMaterialInstanceConstant, 0x01F0);
		}

		// class ULandscapeMeshCollisionComponent : public ULandscapeHeightfieldCollisionComponent
		TEST_METHOD(Class__Landscape__LandscapeMeshCollisionComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeMeshCollisionComponent, MeshGuid, 0x0648);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeMeshCollisionComponent, UnknownData_KFV8, 0x0658);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULandscapeMeshCollisionComponent, 0x0660);
		}

		// class ALandscapeMeshProxyActor : public AActor
		TEST_METHOD(Class__Landscape__LandscapeMeshProxyActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeMeshProxyActor, LandscapeMeshProxyComponent, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALandscapeMeshProxyActor, 0x0340);
		}

		// class ULandscapeMeshProxyComponent : public UStaticMeshComponent
		TEST_METHOD(Class__Landscape__LandscapeMeshProxyComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeMeshProxyComponent, LandscapeGuid, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeMeshProxyComponent, ProxyComponentBases, 0x0608);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeMeshProxyComponent, ProxyLOD, 0x0618);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeMeshProxyComponent, UnknownData_PS0K, 0x0619);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULandscapeMeshProxyComponent, 0x0620);
		}

		// class ULandscapeSplinesComponent : public UPrimitiveComponent
		TEST_METHOD(Class__Landscape__LandscapeSplinesComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeSplinesComponent, ControlPoints, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeSplinesComponent, Segments, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeSplinesComponent, CookedForeignMeshComponents, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeSplinesComponent, UnknownData_S816, 0x0598);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULandscapeSplinesComponent, 0x05A0);
		}

		// class ULandscapeSplineControlPoint : public UObject
		TEST_METHOD(Class__Landscape__LandscapeSplineControlPoint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeSplineControlPoint, Location, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeSplineControlPoint, Rotation, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeSplineControlPoint, Width, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeSplineControlPoint, SideFalloff, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeSplineControlPoint, EndFalloff, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeSplineControlPoint, UnknownData_8QHF, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeSplineControlPoint, ConnectedSegments, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeSplineControlPoint, Points, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeSplineControlPoint, Bounds, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeSplineControlPoint, UnknownData_MPK0, 0x008C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeSplineControlPoint, LocalMeshComponent, 0x0090);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULandscapeSplineControlPoint, 0x0098);
		}

		// class ULandscapeSplineSegment : public UObject
		TEST_METHOD(Class__Landscape__LandscapeSplineSegment)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeSplineSegment, Connections, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeSplineSegment, SplineInfo, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeSplineSegment, Points, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeSplineSegment, Bounds, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeSplineSegment, UnknownData_M5FG, 0x009C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULandscapeSplineSegment, LocalMeshComponents, 0x00A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULandscapeSplineSegment, 0x00B0);
		}

		// class ALandscapeStreamingProxy : public ALandscapeProxy
		TEST_METHOD(Class__Landscape__LandscapeStreamingProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeStreamingProxy, LandscapeActor, 0x0650);
			CHEAT_GEAR_CHECK_OFFSET(CG::ALandscapeStreamingProxy, UnknownData_0GDW, 0x066C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ALandscapeStreamingProxy, 0x0670);
		}

		// class UMaterialExpressionLandscapeGrassOutput : public UMaterialExpressionCustomOutput
		TEST_METHOD(Class__Landscape__MaterialExpressionLandscapeGrassOutput)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeGrassOutput, GrassTypes, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionLandscapeGrassOutput, 0x0050);
		}

		// class UMaterialExpressionLandscapeLayerBlend : public UMaterialExpression
		TEST_METHOD(Class__Landscape__MaterialExpressionLandscapeLayerBlend)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerBlend, Layers, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerBlend, ExpressionGUID, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionLandscapeLayerBlend, 0x0060);
		}

		// class UMaterialExpressionLandscapeLayerCoords : public UMaterialExpression
		TEST_METHOD(Class__Landscape__MaterialExpressionLandscapeLayerCoords)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerCoords, MappingType, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerCoords, CustomUVType, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerCoords, UnknownData_UFO5, 0x0042);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerCoords, MappingScale, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerCoords, MappingRotation, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerCoords, MappingPanU, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerCoords, MappingPanV, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerCoords, UnknownData_RPUE, 0x0054);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionLandscapeLayerCoords, 0x0058);
		}

		// class UMaterialExpressionLandscapeLayerSample : public UMaterialExpression
		TEST_METHOD(Class__Landscape__MaterialExpressionLandscapeLayerSample)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerSample, ParameterName, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerSample, PreviewWeight, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerSample, ExpressionGUID, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerSample, UnknownData_RFR0, 0x005C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionLandscapeLayerSample, 0x0060);
		}

		// class UMaterialExpressionLandscapeLayerSwitch : public UMaterialExpression
		TEST_METHOD(Class__Landscape__MaterialExpressionLandscapeLayerSwitch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerSwitch, LayerUsed, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerSwitch, UnknownData_MPXN, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerSwitch, LayerNotUsed, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerSwitch, UnknownData_6MVH, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerSwitch, ParameterName, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerSwitch, UnknownData_4L5K, 0x0079);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerSwitch, ExpressionGUID, 0x007C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerSwitch, UnknownData_X6TL, 0x008C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionLandscapeLayerSwitch, 0x0090);
		}

		// class UMaterialExpressionLandscapeLayerWeight : public UMaterialExpression
		TEST_METHOD(Class__Landscape__MaterialExpressionLandscapeLayerWeight)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerWeight, Base, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerWeight, UnknownData_KGSI, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerWeight, Layer, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerWeight, UnknownData_0KWU, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerWeight, ParameterName, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerWeight, PreviewWeight, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerWeight, ConstBase, 0x007C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeLayerWeight, ExpressionGUID, 0x0088);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionLandscapeLayerWeight, 0x0098);
		}

		// class UMaterialExpressionLandscapeVisibilityMask : public UMaterialExpression
		TEST_METHOD(Class__Landscape__MaterialExpressionLandscapeVisibilityMask)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMaterialExpressionLandscapeVisibilityMask, ExpressionGUID, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMaterialExpressionLandscapeVisibilityMask, 0x0050);
		}

		// class UXcmn_Tab_Icon_C : public UAT_UICmnTabIcon
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Tab_Icon__Xcmn_Tab_Icon_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Tab_Icon_C, Icon_Group_Eff, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Tab_Icon_C, Ins_Icon_Group, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Tab_Icon_C, Ins_Icon_Group_On, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Tab_Icon_C, Pnl_Group, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Tab_Icon_C, Pnl_Group_On, 0x03D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Tab_Icon_C, 0x03D8);
		}

		// class UIcon_Clear_C : public UAT_UIIconClear
		TEST_METHOD(WidgetBlueprintGeneratedClass__Icon_Clear__Icon_Clear_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_Clear_C, UberGraphFrame, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_Clear_C, Clear00, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_Clear_C, Img_Clear00, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_Clear_C, Ins_Clear00, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_Clear_C, Ins_Eff_Particle, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_Clear_C, Ins_Xef_Burst02_00, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_Clear_C, Ins_Xef_Burst02_01, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UIcon_Clear_C, Ins_Xef_Fad05, 0x03F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UIcon_Clear_C, 0x0400);
		}

		// class UMap_Icon_Switch_C : public UAT_UIMapIconSwitch
		TEST_METHOD(WidgetBlueprintGeneratedClass__Map_Icon_Switch__Map_Icon_Switch_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, UberGraphFrame, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon00, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon01, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon02, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon03, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon04, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon05, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon06, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon07, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon08, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon09, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon10, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon11, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon12, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon13, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon14, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon15, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon16, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon17, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon18, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon20, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon22, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon23, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon24, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon25, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon26, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon27, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon28, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon29, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon31, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon32, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon33, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon34, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon35, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon36, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon_Navi00, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon_Navi01_Btm, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon_Navi01_Left, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon_Navi01_Right, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Img_Micon_Navi01_Top, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Ins_Eff_Fad01, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Ins_Eff_Fad_01, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Ins_Eff_Fad_Commu, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Ins_Micon_Navi_Blink, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Icon_Switch_C, Map_Icon_Switcher, 0x0500);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMap_Icon_Switch_C, 0x0508);
		}

		// class USkill_Chain_C : public UAT_UISkillChain
		TEST_METHOD(WidgetBlueprintGeneratedClass__Skill_Chain__Skill_Chain_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_Chain_C, In_Chain, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_Chain_C, Chain_Finish, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_Chain_C, Chain04, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_Chain_C, Chain03, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_Chain_C, Chain02, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_Chain_C, Chain01, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_Chain_C, All_Nut, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_Chain_C, Img_Base_Skillchain, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_Chain_C, Img_Lang_Chain00, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_Chain_C, Ins_Lang_Chain00, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_Chain_C, Ins_Lang_Chain01, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_Chain_C, Ins_Num_Chain00_00, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_Chain_C, Ins_Num_Chain00_01, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_Chain_C, Ins_Num_Chain00_02, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_Chain_C, Ins_Num_Chain00_Eff00, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_Chain_C, Ins_Num_Chain00_Eff01, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_Chain_C, Ins_Num_Chain00_Eff02, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_Chain_C, Ins_Xef_Elc_Run00_00, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_Chain_C, Ins_Xef_Elc_Run00_02, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_Chain_C, Ins_Xef_Elc_Run00_03, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_Chain_C, Ins_Xef_Sprk00_00, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_Chain_C, Ins_Xef_Sprk00_02, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_Chain_C, Pnl_Chain, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_Chain_C, Pnl_Chain_Eff, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::USkill_Chain_C, loopCount, 0x0530);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USkill_Chain_C, 0x0534);
		}

		// class UOverlays : public UObject
		TEST_METHOD(Class__Overlay__Overlays)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UOverlays, 0x0028);
		}

		// class UBasicOverlays : public UOverlays
		TEST_METHOD(Class__Overlay__BasicOverlays)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBasicOverlays, Overlays, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBasicOverlays, 0x0038);
		}

		// class ULocalizedOverlays : public UOverlays
		TEST_METHOD(Class__Overlay__LocalizedOverlays)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULocalizedOverlays, DefaultOverlays, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULocalizedOverlays, LocaleToOverlaysMap, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULocalizedOverlays, 0x0080);
		}

		// class UClothingAssetCustomData : public UObject
		TEST_METHOD(Class__ClothingSystemRuntime__ClothingAssetCustomData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UClothingAssetCustomData, 0x0028);
		}

		// class UClothingAsset : public UClothingAssetBase
		TEST_METHOD(Class__ClothingSystemRuntime__ClothingAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UClothingAsset, PhysicsAsset, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UClothingAsset, ClothConfig, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UClothingAsset, UnknownData_9Z9T, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UClothingAsset, LODData, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UClothingAsset, LodMap, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UClothingAsset, UsedBoneNames, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UClothingAsset, UsedBoneIndices, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UClothingAsset, ReferenceBoneIndex, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UClothingAsset, UnknownData_39BG, 0x016C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UClothingAsset, CustomData, 0x0170);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UClothingAsset, 0x0178);
		}

		// class UClothingSimulationFactoryNv : public UClothingSimulationFactory
		TEST_METHOD(Class__ClothingSystemRuntime__ClothingSimulationFactoryNv)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UClothingSimulationFactoryNv, 0x0028);
		}

		// class UClothingSimulationInteractorNv : public UClothingSimulationInteractor
		TEST_METHOD(Class__ClothingSystemRuntime__ClothingSimulationInteractorNv)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UClothingSimulationInteractorNv, UnknownData_PNRH, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UClothingSimulationInteractorNv, 0x0040);
		}

		// class UNavigationInvokerComponent : public UActorComponent
		TEST_METHOD(Class__NavigationSystem__NavigationInvokerComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationInvokerComponent, TileGenerationRadius, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationInvokerComponent, TileRemovalRadius, 0x0104);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavigationInvokerComponent, 0x0108);
		}

		// class ANavigationData : public AActor
		TEST_METHOD(Class__NavigationSystem__NavigationData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationData, UnknownData_ZVTT, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationData, RenderingComp, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationData, NavDataConfig, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationData, UnknownData_7X06, 0x03B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationData, RuntimeGeneration, 0x03B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationData, UnknownData_FZKM, 0x03B5);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationData, ObservedPathsTickInterval, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationData, DataVersion, 0x03BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationData, UnknownData_M0M6, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationData, SupportedAreas, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationData, UnknownData_RVU1, 0x04A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ANavigationData, 0x04F8);
		}

		// class AAbstractNavData : public ANavigationData
		TEST_METHOD(Class__NavigationSystem__AbstractNavData)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAbstractNavData, 0x04F8);
		}

		// class UCrowdManagerBase : public UObject
		TEST_METHOD(Class__NavigationSystem__CrowdManagerBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCrowdManagerBase, 0x0028);
		}

		// class UNavArea : public UNavAreaBase
		TEST_METHOD(Class__NavigationSystem__NavArea)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavArea, DefaultCost, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavArea, FixedAreaEnteringCost, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavArea, DrawColor, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavArea, SupportedAgents, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavArea, UnknownData_F28I, 0x0042);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavArea, 0x0048);
		}

		// class UNavArea_Default : public UNavArea
		TEST_METHOD(Class__NavigationSystem__NavArea_Default)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavArea_Default, 0x0048);
		}

		// class UNavArea_LowHeight : public UNavArea
		TEST_METHOD(Class__NavigationSystem__NavArea_LowHeight)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavArea_LowHeight, 0x0048);
		}

		// class UNavArea_Null : public UNavArea
		TEST_METHOD(Class__NavigationSystem__NavArea_Null)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavArea_Null, 0x0048);
		}

		// class UNavArea_Obstacle : public UNavArea
		TEST_METHOD(Class__NavigationSystem__NavArea_Obstacle)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavArea_Obstacle, 0x0048);
		}

		// class UNavAreaMeta : public UNavArea
		TEST_METHOD(Class__NavigationSystem__NavAreaMeta)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavAreaMeta, 0x0048);
		}

		// class UNavAreaMeta_SwitchByAgent : public UNavAreaMeta
		TEST_METHOD(Class__NavigationSystem__NavAreaMeta_SwitchByAgent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavAreaMeta_SwitchByAgent, Agent0Area, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavAreaMeta_SwitchByAgent, Agent1Area, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavAreaMeta_SwitchByAgent, Agent2Area, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavAreaMeta_SwitchByAgent, Agent3Area, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavAreaMeta_SwitchByAgent, Agent4Area, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavAreaMeta_SwitchByAgent, Agent5Area, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavAreaMeta_SwitchByAgent, Agent6Area, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavAreaMeta_SwitchByAgent, Agent7Area, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavAreaMeta_SwitchByAgent, Agent8Area, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavAreaMeta_SwitchByAgent, Agent9Area, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavAreaMeta_SwitchByAgent, Agent10Area, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavAreaMeta_SwitchByAgent, Agent11Area, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavAreaMeta_SwitchByAgent, Agent12Area, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavAreaMeta_SwitchByAgent, Agent13Area, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavAreaMeta_SwitchByAgent, Agent14Area, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavAreaMeta_SwitchByAgent, Agent15Area, 0x00C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavAreaMeta_SwitchByAgent, 0x00C8);
		}

		// class UNavCollision : public UNavCollisionBase
		TEST_METHOD(Class__NavigationSystem__NavCollision)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavCollision, UnknownData_N3GX, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavCollision, CylinderCollision, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavCollision, BoxCollision, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavCollision, AreaClass, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavCollision, UnknownData_IKG0, 0x00A9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavCollision, 0x00D8);
		}

		// class ANavigationGraph : public ANavigationData
		TEST_METHOD(Class__NavigationSystem__NavigationGraph)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ANavigationGraph, 0x04F8);
		}

		// class ANavigationGraphNode : public AActor
		TEST_METHOD(Class__NavigationSystem__NavigationGraphNode)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ANavigationGraphNode, 0x0338);
		}

		// class UNavigationGraphNodeComponent : public USceneComponent
		TEST_METHOD(Class__NavigationSystem__NavigationGraphNodeComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationGraphNodeComponent, Node, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationGraphNodeComponent, NextNodeComponent, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationGraphNodeComponent, PrevNodeComponent, 0x0268);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavigationGraphNodeComponent, 0x0270);
		}

		// class UNavigationPath : public UObject
		TEST_METHOD(Class__NavigationSystem__NavigationPath)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationPath, PathUpdatedNotifier, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationPath, PathPoints, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationPath, RecalculateOnInvalidation, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationPath, UnknownData_CO32, 0x0049);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavigationPath, 0x0088);
		}

		// class UNavigationPathGenerator : public UInterface
		TEST_METHOD(Class__NavigationSystem__NavigationPathGenerator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavigationPathGenerator, 0x0028);
		}

		// class UNavigationQueryFilter : public UObject
		TEST_METHOD(Class__NavigationSystem__NavigationQueryFilter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationQueryFilter, Areas, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationQueryFilter, IncludeFlags, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationQueryFilter, ExcludeFlags, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationQueryFilter, UnknownData_ILXQ, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavigationQueryFilter, 0x0048);
		}

		// class UNavigationSystemV1 : public UNavigationSystemBase
		TEST_METHOD(Class__NavigationSystem__NavigationSystemV1)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationSystemV1, MainNavData, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationSystemV1, AbstractNavData, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationSystemV1, CrowdManagerClass, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationSystemV1, UnknownData_DAEY, 0x0042);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationSystemV1, DataGatheringMode, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationSystemV1, UnknownData_YRYN, 0x0045);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationSystemV1, UnknownData_8CGV, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationSystemV1, ActiveTilesUpdateInterval, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationSystemV1, SupportedAgents, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationSystemV1, DirtyAreasUpdateFreq, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationSystemV1, UnknownData_17UR, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationSystemV1, NavDataSet, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationSystemV1, NavDataRegistrationQueue, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationSystemV1, UnknownData_ZVHE, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationSystemV1, OnNavDataRegisteredEvent, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationSystemV1, OnNavigationGenerationFinishedDelegate, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationSystemV1, UnknownData_TC7I, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationSystemV1, OperationMode, 0x01D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationSystemV1, UnknownData_H9UO, 0x01D5);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavigationSystemV1, 0x0410);
		}

		// class UNavigationSystemModuleConfig : public UNavigationSystemConfig
		TEST_METHOD(Class__NavigationSystem__NavigationSystemModuleConfig)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavigationSystemModuleConfig, UnknownData_2HLG, 0x0049);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavigationSystemModuleConfig, 0x0050);
		}

		// class ANavigationTestingActor : public AActor
		TEST_METHOD(Class__NavigationSystem__NavigationTestingActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationTestingActor, UnknownData_C5QY, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationTestingActor, CapsuleComponent, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationTestingActor, InvokerComponent, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationTestingActor, UnknownData_7KF6, 0x0359);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationTestingActor, NavAgentProps, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationTestingActor, QueryingExtent, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationTestingActor, UnknownData_FMKZ, 0x039C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationTestingActor, MyNavData, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationTestingActor, ProjectedLocation, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationTestingActor, UnknownData_3BMM, 0x03B6);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationTestingActor, CostDisplayMode, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationTestingActor, UnknownData_11NK, 0x03B9);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationTestingActor, TextCanvasOffset, 0x03BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationTestingActor, UnknownData_8RXE, 0x03C5);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationTestingActor, PathfindingTime, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationTestingActor, PathCost, 0x03CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationTestingActor, PathfindingSteps, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationTestingActor, UnknownData_EHYQ, 0x03D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationTestingActor, OtherActor, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationTestingActor, FilterClass, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationTestingActor, ShowStepIndex, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationTestingActor, OffsetFromCornersDistance, 0x03EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavigationTestingActor, UnknownData_F1FK, 0x03F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ANavigationTestingActor, 0x0420);
		}

		// class UNavLinkComponent : public UPrimitiveComponent
		TEST_METHOD(Class__NavigationSystem__NavLinkComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavLinkComponent, UnknownData_8F8U, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavLinkComponent, Links, 0x0570);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavLinkComponent, 0x0580);
		}

		// class UNavRelevantComponent : public UActorComponent
		TEST_METHOD(Class__NavigationSystem__NavRelevantComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavRelevantComponent, UnknownData_TCJR, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavRelevantComponent, UnknownData_COJF, 0x0125);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavRelevantComponent, CachedNavParent, 0x0128);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavRelevantComponent, 0x0130);
		}

		// class UNavLinkCustomComponent : public UNavRelevantComponent
		TEST_METHOD(Class__NavigationSystem__NavLinkCustomComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavLinkCustomComponent, UnknownData_056O, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavLinkCustomComponent, NavLinkUserId, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavLinkCustomComponent, UnknownData_2HE0, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavLinkCustomComponent, EnabledAreaClass, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavLinkCustomComponent, DisabledAreaClass, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavLinkCustomComponent, LinkRelativeStart, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavLinkCustomComponent, LinkRelativeEnd, 0x015C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavLinkCustomComponent, LinkDirection, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavLinkCustomComponent, UnknownData_WEIL, 0x0169);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavLinkCustomComponent, UnknownData_SF0P, 0x016D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavLinkCustomComponent, ObstacleOffset, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavLinkCustomComponent, ObstacleExtent, 0x017C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavLinkCustomComponent, ObstacleAreaClass, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavLinkCustomComponent, BroadcastRadius, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavLinkCustomComponent, BroadcastInterval, 0x0194);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavLinkCustomComponent, BroadcastChannel, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavLinkCustomComponent, UnknownData_H9G0, 0x0199);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavLinkCustomComponent, 0x01D8);
		}

		// class UNavLinkCustomInterface : public UInterface
		TEST_METHOD(Class__NavigationSystem__NavLinkCustomInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavLinkCustomInterface, 0x0028);
		}

		// class UNavLinkHostInterface : public UInterface
		TEST_METHOD(Class__NavigationSystem__NavLinkHostInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavLinkHostInterface, 0x0028);
		}

		// class UNavLinkRenderingComponent : public UPrimitiveComponent
		TEST_METHOD(Class__NavigationSystem__NavLinkRenderingComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavLinkRenderingComponent, UnknownData_7VGG, 0x0568);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavLinkRenderingComponent, 0x0570);
		}

		// class UNavLinkTrivial : public UNavLinkDefinition
		TEST_METHOD(Class__NavigationSystem__NavLinkTrivial)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavLinkTrivial, 0x0050);
		}

		// class ANavMeshBoundsVolume : public AVolume
		TEST_METHOD(Class__NavigationSystem__NavMeshBoundsVolume)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavMeshBoundsVolume, SupportedAgents, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavMeshBoundsVolume, UnknownData_SHUC, 0x0374);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ANavMeshBoundsVolume, 0x0378);
		}

		// class UNavMeshRenderingComponent : public UPrimitiveComponent
		TEST_METHOD(Class__NavigationSystem__NavMeshRenderingComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavMeshRenderingComponent, UnknownData_VU5G, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavMeshRenderingComponent, UnknownData_S32N, 0x0570);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavMeshRenderingComponent, 0x0580);
		}

		// class UNavModifierComponent : public UNavRelevantComponent
		TEST_METHOD(Class__NavigationSystem__NavModifierComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavModifierComponent, AreaClass, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavModifierComponent, FailsafeExtent, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavModifierComponent, UnknownData_BN82, 0x0145);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavModifierComponent, 0x0158);
		}

		// class ANavModifierVolume : public AVolume
		TEST_METHOD(Class__NavigationSystem__NavModifierVolume)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavModifierVolume, UnknownData_X4WE, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavModifierVolume, AreaClass, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ANavModifierVolume, 0x0380);
		}

		// class UNavNodeInterface : public UInterface
		TEST_METHOD(Class__NavigationSystem__NavNodeInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavNodeInterface, 0x0028);
		}

		// class ANavSystemConfigOverride : public AActor
		TEST_METHOD(Class__NavigationSystem__NavSystemConfigOverride)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavSystemConfigOverride, NavigationSystemConfig, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavSystemConfigOverride, UnknownData_H2O8, 0x0341);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ANavSystemConfigOverride, 0x0348);
		}

		// class UNavTestRenderingComponent : public UPrimitiveComponent
		TEST_METHOD(Class__NavigationSystem__NavTestRenderingComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavTestRenderingComponent, UnknownData_806E, 0x0568);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavTestRenderingComponent, 0x0570);
		}

		// class URecastFilter_UseDefaultArea : public UNavigationQueryFilter
		TEST_METHOD(Class__NavigationSystem__RecastFilter_UseDefaultArea)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URecastFilter_UseDefaultArea, 0x0048);
		}

		// class ARecastNavMesh : public ANavigationData
		TEST_METHOD(Class__NavigationSystem__RecastNavMesh)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, UnknownData_BU5Z, 0x04FB);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, DrawOffset, 0x04FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, UnknownData_9BFW, 0x0501);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, TilePoolSize, 0x0504);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, TileSizeUU, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, CellSize, 0x050C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, CellHeight, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, AgentRadius, 0x0514);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, AgentHeight, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, AgentMaxHeight, 0x051C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, AgentMaxSlope, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, AgentMaxStepHeight, 0x0524);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, MinRegionArea, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, MergeRegionSize, 0x052C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, MaxSimplificationError, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, MaxSimultaneousTileGenerationJobsCount, 0x0534);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, TileNumberHardLimit, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, PolyRefTileBits, 0x053C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, PolyRefNavPolyBits, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, PolyRefSaltBits, 0x0544);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, NavMeshOriginOffset, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, DefaultDrawDistance, 0x0554);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, DefaultMaxSearchNodes, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, DefaultMaxHierarchicalSearchNodes, 0x055C);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, RegionPartitioning, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, LayerPartitioning, 0x0561);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, UnknownData_9R2Y, 0x0562);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, RegionChunkSplits, 0x0564);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, LayerChunkSplits, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, UnknownData_9PO1, 0x056E);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, TileSetUpdateInterval, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, HeuristicScale, 0x0574);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, VerticalDeviationFromGroundCompensation, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::ARecastNavMesh, UnknownData_78E4, 0x057C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ARecastNavMesh, 0x05B0);
		}

		// class URecastNavMeshDataChunk : public UNavigationDataChunk
		TEST_METHOD(Class__NavigationSystem__RecastNavMeshDataChunk)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::URecastNavMeshDataChunk, UnknownData_V3UI, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URecastNavMeshDataChunk, 0x0040);
		}

		// class UStart_Top_List_C : public UAT_UIStartTopList
		TEST_METHOD(WidgetBlueprintGeneratedClass__Start_Top_List__Start_Top_List_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_List_C, Cursr_Out, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_List_C, Cursr_Loop, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_List_C, Cursr_In, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_List_C, Img_Curs00_Btm, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_List_C, Img_Curs00_Top, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_List_C, Img_Cursr_Circle, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_List_C, Img_Cursr_Long, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_List_C, Img_Deco00, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_List_C, Img_Deco01, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_List_C, Img_Deco03, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_List_C, Ins_List, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_List_C, Ins_List_On, 0x04E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStart_Top_List_C, 0x04F0);
		}

		// class UStart_Top_List_Z_C : public UAT_UIStartTopListZ
		TEST_METHOD(WidgetBlueprintGeneratedClass__Start_Top_List_Z__Start_Top_List_Z_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_List_Z_C, Ins_Base_Fad03, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_List_Z_C, Ins_Item, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_List_Z_C, Txt_Num_Z, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStart_Top_List_Z_C, 0x03A0);
		}

		// class UStart_Top_State_C : public UAT_UIStartTopState
		TEST_METHOD(WidgetBlueprintGeneratedClass__Start_Top_State__Start_Top_State_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Top_State_C, Time_Up, 0x04C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStart_Top_State_C, 0x04C8);
		}

		// class UAIAsyncTaskBlueprintProxy : public UObject
		TEST_METHOD(Class__AIModule__AIAsyncTaskBlueprintProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIAsyncTaskBlueprintProxy, OnSuccess, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIAsyncTaskBlueprintProxy, OnFail, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIAsyncTaskBlueprintProxy, UnknownData_91KD, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIAsyncTaskBlueprintProxy, 0x0068);
		}

		// class UAIBlueprintHelperLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__AIModule__AIBlueprintHelperLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIBlueprintHelperLibrary, 0x0028);
		}

		// class AAIController : public AController
		TEST_METHOD(Class__AIModule__AIController)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAIController, UnknownData_E8RQ, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAIController, UnknownData_2XXX, 0x03F1);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAIController, PathFollowingComponent, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAIController, BrainComponent, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAIController, PerceptionComponent, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAIController, ActionsComp, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAIController, Blackboard, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAIController, CachedGameplayTasksComponent, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAIController, DefaultNavigationFilterClass, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAIController, ReceiveMoveCompleted, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAIController, UnknownData_LI82, 0x0440);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAIController, 0x0448);
		}

		// class UAIDataProvider : public UObject
		TEST_METHOD(Class__AIModule__AIDataProvider)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIDataProvider, 0x0028);
		}

		// class UAIDataProvider_QueryParams : public UAIDataProvider
		TEST_METHOD(Class__AIModule__AIDataProvider_QueryParams)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIDataProvider_QueryParams, ParamName, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIDataProvider_QueryParams, FloatValue, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIDataProvider_QueryParams, IntValue, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIDataProvider_QueryParams, BoolValue, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIDataProvider_QueryParams, UnknownData_CLU2, 0x0039);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIDataProvider_QueryParams, 0x0040);
		}

		// class UAIDataProvider_Random : public UAIDataProvider_QueryParams
		TEST_METHOD(Class__AIModule__AIDataProvider_Random)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIDataProvider_Random, Min, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIDataProvider_Random, Max, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIDataProvider_Random, UnknownData_VYYU, 0x0049);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIDataProvider_Random, 0x0050);
		}

		// class UAIHotSpotManager : public UObject
		TEST_METHOD(Class__AIModule__AIHotSpotManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIHotSpotManager, 0x0028);
		}

		// class UAIPerceptionComponent : public UActorComponent
		TEST_METHOD(Class__AIModule__AIPerceptionComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIPerceptionComponent, SensesConfig, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIPerceptionComponent, DominantSense, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIPerceptionComponent, UnknownData_E9MZ, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIPerceptionComponent, AIOwner, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIPerceptionComponent, UnknownData_NMSC, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIPerceptionComponent, OnPerceptionUpdated, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIPerceptionComponent, OnTargetPerceptionUpdated, 0x01C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIPerceptionComponent, 0x01D0);
		}

		// class UAIPerceptionListenerInterface : public UInterface
		TEST_METHOD(Class__AIModule__AIPerceptionListenerInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIPerceptionListenerInterface, 0x0028);
		}

		// class UAIPerceptionStimuliSourceComponent : public UActorComponent
		TEST_METHOD(Class__AIModule__AIPerceptionStimuliSourceComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIPerceptionStimuliSourceComponent, UnknownData_VURJ, 0x0101);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIPerceptionStimuliSourceComponent, RegisterAsSourceForSenses, 0x0108);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIPerceptionStimuliSourceComponent, 0x0118);
		}

		// class UAIPerceptionSystem : public UObject
		TEST_METHOD(Class__AIModule__AIPerceptionSystem)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIPerceptionSystem, UnknownData_0VCJ, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIPerceptionSystem, Senses, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIPerceptionSystem, PerceptionAgingRate, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAIPerceptionSystem, UnknownData_KH44, 0x0094);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIPerceptionSystem, 0x0130);
		}

		// class UAIResourceInterface : public UInterface
		TEST_METHOD(Class__AIModule__AIResourceInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIResourceInterface, 0x0028);
		}

		// class UAIResource_Movement : public UGameplayTaskResource
		TEST_METHOD(Class__AIModule__AIResource_Movement)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIResource_Movement, 0x0038);
		}

		// class UAIResource_Logic : public UGameplayTaskResource
		TEST_METHOD(Class__AIModule__AIResource_Logic)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAIResource_Logic, 0x0038);
		}

		// class UAISense : public UObject
		TEST_METHOD(Class__AIModule__AISense)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISense, DefaultExpirationAge, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISense, NotifyType, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISense, UnknownData_QF4L, 0x002D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISense, UnknownData_MLA2, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISense, PerceptionSystemInstance, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISense, UnknownData_VVLY, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISense, 0x0088);
		}

		// class UAISense_Blueprint : public UAISense
		TEST_METHOD(Class__AIModule__AISense_Blueprint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISense_Blueprint, ListenerDataType, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISense_Blueprint, ListenerContainer, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISense_Blueprint, UnprocessedEvents, 0x00A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISense_Blueprint, 0x00B0);
		}

		// class UAISense_Damage : public UAISense
		TEST_METHOD(Class__AIModule__AISense_Damage)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISense_Damage, RegisteredEvents, 0x0088);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISense_Damage, 0x0098);
		}

		// class UAISense_Hearing : public UAISense
		TEST_METHOD(Class__AIModule__AISense_Hearing)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISense_Hearing, NoiseEvents, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISense_Hearing, SpeedOfSoundSq, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISense_Hearing, UnknownData_F94T, 0x009C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISense_Hearing, 0x00F0);
		}

		// class UAISense_Prediction : public UAISense
		TEST_METHOD(Class__AIModule__AISense_Prediction)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISense_Prediction, RegisteredEvents, 0x0088);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISense_Prediction, 0x0098);
		}

		// class UAISense_Sight : public UAISense
		TEST_METHOD(Class__AIModule__AISense_Sight)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISense_Sight, UnknownData_GEVM, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISense_Sight, MaxTracesPerTick, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISense_Sight, MinQueriesPerTimeSliceCheck, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISense_Sight, MaxTimeSlicePerTick, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISense_Sight, HighImportanceQueryDistanceThreshold, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISense_Sight, UnknownData_CS54, 0x014C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISense_Sight, MaxQueryImportance, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISense_Sight, SightLimitQueryImportance, 0x0154);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISense_Sight, UnknownData_PT8Z, 0x0158);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISense_Sight, 0x0160);
		}

		// class UAISense_Team : public UAISense
		TEST_METHOD(Class__AIModule__AISense_Team)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISense_Team, RegisteredEvents, 0x0088);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISense_Team, 0x0098);
		}

		// class UAISense_Touch : public UAISense
		TEST_METHOD(Class__AIModule__AISense_Touch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISense_Touch, RegisteredEvents, 0x0088);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISense_Touch, 0x0098);
		}

		// class UAISenseBlueprintListener : public UUserDefinedStruct
		TEST_METHOD(Class__AIModule__AISenseBlueprintListener)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISenseBlueprintListener, 0x00E0);
		}

		// class UAISenseConfig : public UObject
		TEST_METHOD(Class__AIModule__AISenseConfig)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISenseConfig, DebugColor, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISenseConfig, MaxAge, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISenseConfig, UnknownData_0K9S, 0x0031);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISenseConfig, 0x0048);
		}

		// class UAISenseConfig_Blueprint : public UAISenseConfig
		TEST_METHOD(Class__AIModule__AISenseConfig_Blueprint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISenseConfig_Blueprint, Implementation, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISenseConfig_Blueprint, 0x0050);
		}

		// class UAISenseConfig_Damage : public UAISenseConfig
		TEST_METHOD(Class__AIModule__AISenseConfig_Damage)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISenseConfig_Damage, Implementation, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISenseConfig_Damage, 0x0050);
		}

		// class UAISenseConfig_Hearing : public UAISenseConfig
		TEST_METHOD(Class__AIModule__AISenseConfig_Hearing)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISenseConfig_Hearing, Implementation, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISenseConfig_Hearing, HearingRange, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISenseConfig_Hearing, LoSHearingRange, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISenseConfig_Hearing, UnknownData_J38T, 0x0059);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISenseConfig_Hearing, DetectionByAffiliation, 0x005C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISenseConfig_Hearing, 0x0060);
		}

		// class UAISenseConfig_Prediction : public UAISenseConfig
		TEST_METHOD(Class__AIModule__AISenseConfig_Prediction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISenseConfig_Prediction, 0x0048);
		}

		// class UAISenseConfig_Sight : public UAISenseConfig
		TEST_METHOD(Class__AIModule__AISenseConfig_Sight)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISenseConfig_Sight, Implementation, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISenseConfig_Sight, SightRadius, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISenseConfig_Sight, LoseSightRadius, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISenseConfig_Sight, PeripheralVisionAngleDegrees, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISenseConfig_Sight, DetectionByAffiliation, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISenseConfig_Sight, AutoSuccessRangeFromLastSeenLocation, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISenseConfig_Sight, UnknownData_8OJ6, 0x0064);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISenseConfig_Sight, 0x0068);
		}

		// class UAISenseConfig_Team : public UAISenseConfig
		TEST_METHOD(Class__AIModule__AISenseConfig_Team)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISenseConfig_Team, 0x0048);
		}

		// class UAISenseConfig_Touch : public UAISenseConfig
		TEST_METHOD(Class__AIModule__AISenseConfig_Touch)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISenseConfig_Touch, 0x0048);
		}

		// class UAISenseEvent : public UObject
		TEST_METHOD(Class__AIModule__AISenseEvent)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISenseEvent, 0x0028);
		}

		// class UAISenseEvent_Damage : public UAISenseEvent
		TEST_METHOD(Class__AIModule__AISenseEvent_Damage)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISenseEvent_Damage, Event, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISenseEvent_Damage, 0x0058);
		}

		// class UAISenseEvent_Hearing : public UAISenseEvent
		TEST_METHOD(Class__AIModule__AISenseEvent_Hearing)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISenseEvent_Hearing, Event, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISenseEvent_Hearing, 0x0058);
		}

		// class UAISightTargetInterface : public UInterface
		TEST_METHOD(Class__AIModule__AISightTargetInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISightTargetInterface, 0x0028);
		}

		// class UAISystem : public UAISystemBase
		TEST_METHOD(Class__AIModule__AISystem)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISystem, PerceptionSystemClassName, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISystem, HotSpotManagerClassName, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISystem, AcceptanceRadius, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISystem, PathfollowingRegularPathPointAcceptanceRadius, 0x008C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISystem, PathfollowingNavLinkAcceptanceRadius, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISystem, bFinishMoveOnGoalOverlap, 0x0094);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISystem, bAcceptPartialPaths, 0x0095);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISystem, bAllowStrafing, 0x0096);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISystem, bEnableBTAITasks, 0x0097);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISystem, bAllowControllersAsEQSQuerier, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISystem, bEnableDebuggerPlugin, 0x0099);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISystem, DefaultSightCollisionChannel, 0x009A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISystem, UnknownData_EB3K, 0x009B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISystem, BehaviorTreeManager, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISystem, EnvironmentQueryManager, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISystem, PerceptionSystem, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISystem, AllProxyObjects, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISystem, HotSpotManager, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISystem, NavLocalGrids, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAISystem, UnknownData_233C, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAISystem, 0x0130);
		}

		// class UAITask : public UGameplayTask
		TEST_METHOD(Class__AIModule__AITask)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAITask, OwnerController, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAITask, 0x0070);
		}

		// class UAITask_LockLogic : public UAITask
		TEST_METHOD(Class__AIModule__AITask_LockLogic)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAITask_LockLogic, 0x0070);
		}

		// class UAITask_MoveTo : public UAITask
		TEST_METHOD(Class__AIModule__AITask_MoveTo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAITask_MoveTo, OnRequestFailed, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAITask_MoveTo, OnMoveFinished, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAITask_MoveTo, MoveRequest, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAITask_MoveTo, UnknownData_AZN4, 0x00D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAITask_MoveTo, 0x0110);
		}

		// class UAITask_RunEQS : public UAITask
		TEST_METHOD(Class__AIModule__AITask_RunEQS)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAITask_RunEQS, UnknownData_S8HA, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAITask_RunEQS, 0x00E8);
		}

		// class UBehaviorTree : public UObject
		TEST_METHOD(Class__AIModule__BehaviorTree)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBehaviorTree, RootNode, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBehaviorTree, BlackboardAsset, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBehaviorTree, RootDecorators, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBehaviorTree, RootDecoratorOps, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBehaviorTree, UnknownData_DMJ2, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBehaviorTree, 0x0060);
		}

		// class UBrainComponent : public UActorComponent
		TEST_METHOD(Class__AIModule__BrainComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBrainComponent, UnknownData_3TPG, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBrainComponent, BlackboardComp, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBrainComponent, AIOwner, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBrainComponent, UnknownData_DU1T, 0x0118);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBrainComponent, 0x0160);
		}

		// class UBehaviorTreeComponent : public UBrainComponent
		TEST_METHOD(Class__AIModule__BehaviorTreeComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBehaviorTreeComponent, UnknownData_9R1A, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBehaviorTreeComponent, NodeInstances, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBehaviorTreeComponent, UnknownData_72VU, 0x0190);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBehaviorTreeComponent, 0x02B0);
		}

		// class UBehaviorTreeManager : public UObject
		TEST_METHOD(Class__AIModule__BehaviorTreeManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBehaviorTreeManager, MaxDebuggerSteps, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBehaviorTreeManager, UnknownData_UKKV, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBehaviorTreeManager, LoadedTemplates, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBehaviorTreeManager, ActiveComponents, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBehaviorTreeManager, 0x0050);
		}

		// class UBehaviorTreeTypes : public UObject
		TEST_METHOD(Class__AIModule__BehaviorTreeTypes)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBehaviorTreeTypes, 0x0028);
		}

		// class UBlackboardComponent : public UActorComponent
		TEST_METHOD(Class__AIModule__BlackboardComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlackboardComponent, BrainComp, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlackboardComponent, BlackboardAsset, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlackboardComponent, UnknownData_CFGQ, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlackboardComponent, KeyInstances, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlackboardComponent, UnknownData_TBI6, 0x0140);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardComponent, 0x01F8);
		}

		// class UBlackboardData : public UDataAsset
		TEST_METHOD(Class__AIModule__BlackboardData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlackboardData, Parent, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlackboardData, Keys, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlackboardData, UnknownData_KFQ7, 0x0049);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardData, 0x0050);
		}

		// class UBlackboardKeyType : public UObject
		TEST_METHOD(Class__AIModule__BlackboardKeyType)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlackboardKeyType, UnknownData_J5OQ, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardKeyType, 0x0030);
		}

		// class UBlackboardKeyType_Bool : public UBlackboardKeyType
		TEST_METHOD(Class__AIModule__BlackboardKeyType_Bool)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardKeyType_Bool, 0x0030);
		}

		// class UBlackboardKeyType_Class : public UBlackboardKeyType
		TEST_METHOD(Class__AIModule__BlackboardKeyType_Class)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlackboardKeyType_Class, BaseClass, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardKeyType_Class, 0x0038);
		}

		// class UBlackboardKeyType_Enum : public UBlackboardKeyType
		TEST_METHOD(Class__AIModule__BlackboardKeyType_Enum)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlackboardKeyType_Enum, EnumType, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlackboardKeyType_Enum, EnumName, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlackboardKeyType_Enum, UnknownData_JN3D, 0x0049);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardKeyType_Enum, 0x0050);
		}

		// class UBlackboardKeyType_Float : public UBlackboardKeyType
		TEST_METHOD(Class__AIModule__BlackboardKeyType_Float)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardKeyType_Float, 0x0030);
		}

		// class UBlackboardKeyType_Int : public UBlackboardKeyType
		TEST_METHOD(Class__AIModule__BlackboardKeyType_Int)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardKeyType_Int, 0x0030);
		}

		// class UBlackboardKeyType_Name : public UBlackboardKeyType
		TEST_METHOD(Class__AIModule__BlackboardKeyType_Name)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardKeyType_Name, 0x0030);
		}

		// class UBlackboardKeyType_NativeEnum : public UBlackboardKeyType
		TEST_METHOD(Class__AIModule__BlackboardKeyType_NativeEnum)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlackboardKeyType_NativeEnum, EnumName, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlackboardKeyType_NativeEnum, EnumType, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardKeyType_NativeEnum, 0x0048);
		}

		// class UBlackboardKeyType_Object : public UBlackboardKeyType
		TEST_METHOD(Class__AIModule__BlackboardKeyType_Object)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlackboardKeyType_Object, BaseClass, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardKeyType_Object, 0x0038);
		}

		// class UBlackboardKeyType_Rotator : public UBlackboardKeyType
		TEST_METHOD(Class__AIModule__BlackboardKeyType_Rotator)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardKeyType_Rotator, 0x0030);
		}

		// class UBlackboardKeyType_String : public UBlackboardKeyType
		TEST_METHOD(Class__AIModule__BlackboardKeyType_String)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBlackboardKeyType_String, StringValue, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardKeyType_String, 0x0040);
		}

		// class UBlackboardKeyType_Vector : public UBlackboardKeyType
		TEST_METHOD(Class__AIModule__BlackboardKeyType_Vector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBlackboardKeyType_Vector, 0x0030);
		}

		// class UBTNode : public UObject
		TEST_METHOD(Class__AIModule__BTNode)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTNode, UnknownData_21J0, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTNode, NodeName, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTNode, TreeAsset, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTNode, ParentNode, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTNode, UnknownData_6AF2, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTNode, 0x0058);
		}

		// class UBTAuxiliaryNode : public UBTNode
		TEST_METHOD(Class__AIModule__BTAuxiliaryNode)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTAuxiliaryNode, UnknownData_N319, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTAuxiliaryNode, 0x0060);
		}

		// class UBTCompositeNode : public UBTNode
		TEST_METHOD(Class__AIModule__BTCompositeNode)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTCompositeNode, Children, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTCompositeNode, Services, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTCompositeNode, UnknownData_CU41, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTCompositeNode, UnknownData_D1T6, 0x0089);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTCompositeNode, 0x0090);
		}

		// class UBTComposite_Selector : public UBTCompositeNode
		TEST_METHOD(Class__AIModule__BTComposite_Selector)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTComposite_Selector, 0x0090);
		}

		// class UBTComposite_Sequence : public UBTCompositeNode
		TEST_METHOD(Class__AIModule__BTComposite_Sequence)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTComposite_Sequence, 0x0090);
		}

		// class UBTComposite_SimpleParallel : public UBTCompositeNode
		TEST_METHOD(Class__AIModule__BTComposite_SimpleParallel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTComposite_SimpleParallel, FinishMode, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTComposite_SimpleParallel, UnknownData_LNRP, 0x0091);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTComposite_SimpleParallel, 0x0098);
		}

		// class UBTDecorator : public UBTAuxiliaryNode
		TEST_METHOD(Class__AIModule__BTDecorator)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator, UnknownData_VYU7, 0x0061);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator, FlowAbortMode, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator, UnknownData_94L2, 0x0065);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator, 0x0068);
		}

		// class UBTDecorator_BlackboardBase : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_BlackboardBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_BlackboardBase, BlackboardKey, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_BlackboardBase, 0x0090);
		}

		// class UBTDecorator_Blackboard : public UBTDecorator_BlackboardBase
		TEST_METHOD(Class__AIModule__BTDecorator_Blackboard)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_Blackboard, IntValue, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_Blackboard, FloatValue, 0x0094);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_Blackboard, StringValue, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_Blackboard, CachedDescription, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_Blackboard, OperationType, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_Blackboard, NotifyObserver, 0x00B9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_Blackboard, UnknownData_5LKU, 0x00BA);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_Blackboard, 0x00C0);
		}

		// class UBTDecorator_BlueprintBase : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_BlueprintBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_BlueprintBase, AIOwner, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_BlueprintBase, ActorOwner, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_BlueprintBase, ObservedKeyNames, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_BlueprintBase, UnknownData_O6N7, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_BlueprintBase, UnknownData_VH4K, 0x0099);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_BlueprintBase, 0x00A0);
		}

		// class UBTDecorator_CheckGameplayTagsOnActor : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_CheckGameplayTagsOnActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_CheckGameplayTagsOnActor, ActorToCheck, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_CheckGameplayTagsOnActor, TagsToMatch, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_CheckGameplayTagsOnActor, UnknownData_90H0, 0x0091);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_CheckGameplayTagsOnActor, GameplayTags, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_CheckGameplayTagsOnActor, CachedDescription, 0x00B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_CheckGameplayTagsOnActor, 0x00C8);
		}

		// class UBTDecorator_CompareBBEntries : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_CompareBBEntries)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_CompareBBEntries, Operator, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_CompareBBEntries, UnknownData_FOO8, 0x0069);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_CompareBBEntries, BlackboardKeyA, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_CompareBBEntries, BlackboardKeyB, 0x0098);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_CompareBBEntries, 0x00C0);
		}

		// class UBTDecorator_ConditionalLoop : public UBTDecorator_Blackboard
		TEST_METHOD(Class__AIModule__BTDecorator_ConditionalLoop)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_ConditionalLoop, 0x00C0);
		}

		// class UBTDecorator_ConeCheck : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_ConeCheck)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_ConeCheck, ConeHalfAngle, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_ConeCheck, UnknownData_7N9O, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_ConeCheck, ConeOrigin, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_ConeCheck, ConeDirection, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_ConeCheck, Observed, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_ConeCheck, UnknownData_3GBV, 0x00E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_ConeCheck, 0x00F0);
		}

		// class UBTDecorator_Cooldown : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_Cooldown)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_Cooldown, CoolDownTime, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_Cooldown, UnknownData_YCHB, 0x006C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_Cooldown, 0x0070);
		}

		// class UBTDecorator_DoesPathExist : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_DoesPathExist)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_DoesPathExist, BlackboardKeyA, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_DoesPathExist, BlackboardKeyB, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_DoesPathExist, UnknownData_KAHR, 0x00B9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_DoesPathExist, PathQueryType, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_DoesPathExist, UnknownData_MV75, 0x00BD);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_DoesPathExist, FilterClass, 0x00C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_DoesPathExist, 0x00C8);
		}

		// class UBTDecorator_ForceSuccess : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_ForceSuccess)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_ForceSuccess, 0x0068);
		}

		// class UBTDecorator_IsAtLocation : public UBTDecorator_BlackboardBase
		TEST_METHOD(Class__AIModule__BTDecorator_IsAtLocation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_IsAtLocation, AcceptableRadius, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_IsAtLocation, UnknownData_JHBF, 0x0094);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_IsAtLocation, ParametrizedAcceptableRadius, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_IsAtLocation, GeometricDistanceType, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_IsAtLocation, UnknownData_G7VM, 0x00C9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_IsAtLocation, UnknownData_PEO0, 0x00CD);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_IsAtLocation, 0x00D0);
		}

		// class UBTDecorator_IsBBEntryOfClass : public UBTDecorator_BlackboardBase
		TEST_METHOD(Class__AIModule__BTDecorator_IsBBEntryOfClass)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_IsBBEntryOfClass, TestClass, 0x0090);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_IsBBEntryOfClass, 0x0098);
		}

		// class UBTDecorator_KeepInCone : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_KeepInCone)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_KeepInCone, ConeHalfAngle, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_KeepInCone, UnknownData_TN56, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_KeepInCone, ConeOrigin, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_KeepInCone, Observed, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_KeepInCone, UnknownData_XUWO, 0x00C1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_KeepInCone, 0x00C8);
		}

		// class UBTDecorator_Loop : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_Loop)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_Loop, NumLoops, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_Loop, bInfiniteLoop, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_Loop, UnknownData_QAM4, 0x006D);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_Loop, InfiniteLoopTimeoutTime, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_Loop, UnknownData_IIO8, 0x0074);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_Loop, 0x0078);
		}

		// class UBTDecorator_ReachedMoveGoal : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_ReachedMoveGoal)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_ReachedMoveGoal, 0x0068);
		}

		// class UBTDecorator_SetTagCooldown : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_SetTagCooldown)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_SetTagCooldown, CooldownTag, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_SetTagCooldown, CooldownDuration, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_SetTagCooldown, bAddToExistingDuration, 0x0074);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_SetTagCooldown, UnknownData_SWCS, 0x0075);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_SetTagCooldown, 0x0078);
		}

		// class UBTDecorator_TagCooldown : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_TagCooldown)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_TagCooldown, CooldownTag, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_TagCooldown, CooldownDuration, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_TagCooldown, bAddToExistingDuration, 0x0074);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_TagCooldown, bActivatesCooldown, 0x0075);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_TagCooldown, UnknownData_5EIR, 0x0076);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_TagCooldown, 0x0078);
		}

		// class UBTDecorator_TimeLimit : public UBTDecorator
		TEST_METHOD(Class__AIModule__BTDecorator_TimeLimit)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_TimeLimit, timeLimit, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTDecorator_TimeLimit, UnknownData_8WZS, 0x006C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTDecorator_TimeLimit, 0x0070);
		}

		// class UBTFunctionLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__AIModule__BTFunctionLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTFunctionLibrary, 0x0028);
		}

		// class UBTService : public UBTAuxiliaryNode
		TEST_METHOD(Class__AIModule__BTService)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTService, Interval, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTService, RandomDeviation, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTService, UnknownData_MU7M, 0x0069);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTService, 0x0070);
		}

		// class UBTService_BlackboardBase : public UBTService
		TEST_METHOD(Class__AIModule__BTService_BlackboardBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTService_BlackboardBase, BlackboardKey, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTService_BlackboardBase, 0x0098);
		}

		// class UBTService_BlueprintBase : public UBTService
		TEST_METHOD(Class__AIModule__BTService_BlueprintBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTService_BlueprintBase, AIOwner, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTService_BlueprintBase, ActorOwner, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTService_BlueprintBase, UnknownData_RRCZ, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTService_BlueprintBase, UnknownData_PZQH, 0x0091);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTService_BlueprintBase, 0x0098);
		}

		// class UBTService_DefaultFocus : public UBTService_BlackboardBase
		TEST_METHOD(Class__AIModule__BTService_DefaultFocus)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTService_DefaultFocus, FocusPriority, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTService_DefaultFocus, UnknownData_RWWR, 0x0099);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTService_DefaultFocus, 0x00A0);
		}

		// class UBTService_RunEQS : public UBTService_BlackboardBase
		TEST_METHOD(Class__AIModule__BTService_RunEQS)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTService_RunEQS, EQSRequest, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTService_RunEQS, UnknownData_BYKM, 0x00E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTService_RunEQS, 0x00F0);
		}

		// class UBTTaskNode : public UBTNode
		TEST_METHOD(Class__AIModule__BTTaskNode)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTaskNode, Services, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTaskNode, UnknownData_FAOO, 0x0069);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTaskNode, 0x0070);
		}

		// class UBTTask_BlackboardBase : public UBTTaskNode
		TEST_METHOD(Class__AIModule__BTTask_BlackboardBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_BlackboardBase, BlackboardKey, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_BlackboardBase, 0x0098);
		}

		// class UBTTask_BlueprintBase : public UBTTaskNode
		TEST_METHOD(Class__AIModule__BTTask_BlueprintBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_BlueprintBase, AIOwner, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_BlueprintBase, ActorOwner, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_BlueprintBase, UnknownData_VA0W, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_BlueprintBase, UnknownData_5F01, 0x0099);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_BlueprintBase, 0x00A0);
		}

		// class UBTTask_FinishWithResult : public UBTTaskNode
		TEST_METHOD(Class__AIModule__BTTask_FinishWithResult)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_FinishWithResult, Result, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_FinishWithResult, UnknownData_64AW, 0x0071);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_FinishWithResult, 0x0078);
		}

		// class UBTTask_GameplayTaskBase : public UBTTaskNode
		TEST_METHOD(Class__AIModule__BTTask_GameplayTaskBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_GameplayTaskBase, UnknownData_11X1, 0x0071);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_GameplayTaskBase, 0x0078);
		}

		// class UBTTask_MakeNoise : public UBTTaskNode
		TEST_METHOD(Class__AIModule__BTTask_MakeNoise)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_MakeNoise, Loudnes, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_MakeNoise, UnknownData_2GJ3, 0x0074);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_MakeNoise, 0x0078);
		}

		// class UBTTask_MoveTo : public UBTTask_BlackboardBase
		TEST_METHOD(Class__AIModule__BTTask_MoveTo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_MoveTo, AcceptableRadius, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_MoveTo, UnknownData_GLO4, 0x009C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_MoveTo, FilterClass, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_MoveTo, ObservedBlackboardValueTolerance, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_MoveTo, UnknownData_XCH5, 0x00AE);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_MoveTo, 0x00B0);
		}

		// class UBTTask_MoveDirectlyToward : public UBTTask_MoveTo
		TEST_METHOD(Class__AIModule__BTTask_MoveDirectlyToward)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_MoveDirectlyToward, UnknownData_7S4I, 0x00B1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_MoveDirectlyToward, 0x00B8);
		}

		// class UBTTask_PawnActionBase : public UBTTaskNode
		TEST_METHOD(Class__AIModule__BTTask_PawnActionBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_PawnActionBase, 0x0070);
		}

		// class UBTTask_PlayAnimation : public UBTTaskNode
		TEST_METHOD(Class__AIModule__BTTask_PlayAnimation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_PlayAnimation, AnimationToPlay, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_PlayAnimation, UnknownData_N84Z, 0x0079);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_PlayAnimation, MyOwnerComp, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_PlayAnimation, CachedSkelMesh, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_PlayAnimation, UnknownData_57VG, 0x0090);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_PlayAnimation, 0x00B0);
		}

		// class UBTTask_PlaySound : public UBTTaskNode
		TEST_METHOD(Class__AIModule__BTTask_PlaySound)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_PlaySound, SoundToPlay, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_PlaySound, 0x0078);
		}

		// class UBTTask_PushPawnAction : public UBTTask_PawnActionBase
		TEST_METHOD(Class__AIModule__BTTask_PushPawnAction)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_PushPawnAction, Action, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_PushPawnAction, 0x0078);
		}

		// class UBTTask_RotateToFaceBBEntry : public UBTTask_BlackboardBase
		TEST_METHOD(Class__AIModule__BTTask_RotateToFaceBBEntry)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_RotateToFaceBBEntry, Precision, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_RotateToFaceBBEntry, UnknownData_7XDO, 0x009C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_RotateToFaceBBEntry, 0x00A0);
		}

		// class UBTTask_RunBehavior : public UBTTaskNode
		TEST_METHOD(Class__AIModule__BTTask_RunBehavior)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_RunBehavior, BehaviorAsset, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_RunBehavior, 0x0078);
		}

		// class UBTTask_RunBehaviorDynamic : public UBTTaskNode
		TEST_METHOD(Class__AIModule__BTTask_RunBehaviorDynamic)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_RunBehaviorDynamic, InjectionTag, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_RunBehaviorDynamic, DefaultBehaviorAsset, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_RunBehaviorDynamic, BehaviorAsset, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_RunBehaviorDynamic, 0x0088);
		}

		// class UBTTask_RunEQSQuery : public UBTTask_BlackboardBase
		TEST_METHOD(Class__AIModule__BTTask_RunEQSQuery)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_RunEQSQuery, QueryTemplate, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_RunEQSQuery, QueryParams, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_RunEQSQuery, QueryConfig, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_RunEQSQuery, RunMode, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_RunEQSQuery, UnknownData_T2XZ, 0x00C1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_RunEQSQuery, EQSQueryBlackboardKey, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_RunEQSQuery, bUseBBKey, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_RunEQSQuery, UnknownData_990B, 0x00F1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_RunEQSQuery, EQSRequest, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_RunEQSQuery, UnknownData_QUL3, 0x0140);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_RunEQSQuery, 0x0150);
		}

		// class UBTTask_SetTagCooldown : public UBTTaskNode
		TEST_METHOD(Class__AIModule__BTTask_SetTagCooldown)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_SetTagCooldown, CooldownTag, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_SetTagCooldown, bAddToExistingDuration, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_SetTagCooldown, UnknownData_2JB2, 0x0079);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_SetTagCooldown, CooldownDuration, 0x007C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_SetTagCooldown, 0x0080);
		}

		// class UBTTask_Wait : public UBTTaskNode
		TEST_METHOD(Class__AIModule__BTTask_Wait)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_Wait, WaitTime, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_Wait, RandomDeviation, 0x0074);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_Wait, 0x0078);
		}

		// class UBTTask_WaitBlackboardTime : public UBTTask_Wait
		TEST_METHOD(Class__AIModule__BTTask_WaitBlackboardTime)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBTTask_WaitBlackboardTime, BlackboardKey, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBTTask_WaitBlackboardTime, 0x00A0);
		}

		// class UCrowdAgentInterface : public UInterface
		TEST_METHOD(Class__AIModule__CrowdAgentInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCrowdAgentInterface, 0x0028);
		}

		// class UPathFollowingComponent : public UActorComponent
		TEST_METHOD(Class__AIModule__PathFollowingComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPathFollowingComponent, UnknownData_6J9P, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPathFollowingComponent, MovementComp, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPathFollowingComponent, UnknownData_042Q, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPathFollowingComponent, MyNavData, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPathFollowingComponent, UnknownData_EXWC, 0x0150);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPathFollowingComponent, 0x02A8);
		}

		// class UCrowdFollowingComponent : public UPathFollowingComponent
		TEST_METHOD(Class__AIModule__CrowdFollowingComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCrowdFollowingComponent, UnknownData_SUC5, 0x02A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCrowdFollowingComponent, CharacterMovement, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCrowdFollowingComponent, CrowdAgentMoveDirection, 0x02B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCrowdFollowingComponent, UnknownData_FV4V, 0x02C4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCrowdFollowingComponent, 0x02E8);
		}

		// class UCrowdManager : public UCrowdManagerBase
		TEST_METHOD(Class__AIModule__CrowdManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCrowdManager, MyNavData, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCrowdManager, AvoidanceConfig, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCrowdManager, SamplingPatterns, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCrowdManager, MaxAgents, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCrowdManager, MaxAgentRadius, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCrowdManager, MaxAvoidedAgents, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCrowdManager, MaxAvoidedWalls, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCrowdManager, NavmeshCheckInterval, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCrowdManager, PathOptimizationInterval, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCrowdManager, SeparationDirClamp, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCrowdManager, PathOffsetRadiusMultiplier, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCrowdManager, UnknownData_YSDK, 0x0071);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCrowdManager, 0x00F0);
		}

		// class ADetourCrowdAIController : public AAIController
		TEST_METHOD(Class__AIModule__DetourCrowdAIController)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ADetourCrowdAIController, 0x0448);
		}

		// class UEnvQuery : public UDataAsset
		TEST_METHOD(Class__AIModule__EnvQuery)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQuery, QueryName, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQuery, Options, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQuery, 0x0048);
		}

		// class UEnvQueryContext : public UObject
		TEST_METHOD(Class__AIModule__EnvQueryContext)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryContext, 0x0028);
		}

		// class UEnvQueryContext_BlueprintBase : public UEnvQueryContext
		TEST_METHOD(Class__AIModule__EnvQueryContext_BlueprintBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryContext_BlueprintBase, UnknownData_C7MK, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryContext_BlueprintBase, 0x0030);
		}

		// class UEnvQueryContext_Item : public UEnvQueryContext
		TEST_METHOD(Class__AIModule__EnvQueryContext_Item)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryContext_Item, 0x0028);
		}

		// class UEnvQueryContext_Querier : public UEnvQueryContext
		TEST_METHOD(Class__AIModule__EnvQueryContext_Querier)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryContext_Querier, 0x0028);
		}

		// class UEnvQueryDebugHelpers : public UObject
		TEST_METHOD(Class__AIModule__EnvQueryDebugHelpers)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryDebugHelpers, 0x0028);
		}

		// class UEnvQueryNode : public UObject
		TEST_METHOD(Class__AIModule__EnvQueryNode)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryNode, VerNum, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryNode, UnknownData_V7Y5, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryNode, 0x0030);
		}

		// class UEnvQueryGenerator : public UEnvQueryNode
		TEST_METHOD(Class__AIModule__EnvQueryGenerator)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator, OptionName, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator, ItemType, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator, UnknownData_ZBX1, 0x0049);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryGenerator, 0x0050);
		}

		// class UEnvQueryGenerator_ActorsOfClass : public UEnvQueryGenerator
		TEST_METHOD(Class__AIModule__EnvQueryGenerator_ActorsOfClass)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_ActorsOfClass, SearchedActorClass, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_ActorsOfClass, GenerateOnlyActorsInRadius, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_ActorsOfClass, SearchRadius, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_ActorsOfClass, SearchCenter, 0x00B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryGenerator_ActorsOfClass, 0x00C0);
		}

		// class UEnvQueryGenerator_BlueprintBase : public UEnvQueryGenerator
		TEST_METHOD(Class__AIModule__EnvQueryGenerator_BlueprintBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_BlueprintBase, GeneratorsActionDescription, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_BlueprintBase, Context, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_BlueprintBase, GeneratedItemType, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_BlueprintBase, UnknownData_T9GB, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryGenerator_BlueprintBase, 0x0080);
		}

		// class UEnvQueryGenerator_Composite : public UEnvQueryGenerator
		TEST_METHOD(Class__AIModule__EnvQueryGenerator_Composite)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_Composite, Generators, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_Composite, UnknownData_ZXDT, 0x0061);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_Composite, ForcedItemType, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryGenerator_Composite, 0x0070);
		}

		// class UEnvQueryGenerator_ProjectedPoints : public UEnvQueryGenerator
		TEST_METHOD(Class__AIModule__EnvQueryGenerator_ProjectedPoints)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_ProjectedPoints, ProjectionData, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryGenerator_ProjectedPoints, 0x0080);
		}

		// class UEnvQueryGenerator_Cone : public UEnvQueryGenerator_ProjectedPoints
		TEST_METHOD(Class__AIModule__EnvQueryGenerator_Cone)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_Cone, AlignedPointsDistance, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_Cone, ConeDegrees, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_Cone, AngleStep, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_Cone, Range, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_Cone, CenterActor, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_Cone, UnknownData_C5R1, 0x0149);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryGenerator_Cone, 0x0150);
		}

		// class UEnvQueryGenerator_CurrentLocation : public UEnvQueryGenerator
		TEST_METHOD(Class__AIModule__EnvQueryGenerator_CurrentLocation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_CurrentLocation, QueryContext, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryGenerator_CurrentLocation, 0x0058);
		}

		// class UEnvQueryGenerator_Donut : public UEnvQueryGenerator_ProjectedPoints
		TEST_METHOD(Class__AIModule__EnvQueryGenerator_Donut)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_Donut, InnerRadius, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_Donut, OuterRadius, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_Donut, NumberOfRings, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_Donut, PointsPerRing, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_Donut, ArcDirection, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_Donut, ArcAngle, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_Donut, bUseSpiralPattern, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_Donut, UnknownData_SKAX, 0x0191);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_Donut, Center, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_Donut, UnknownData_SO5V, 0x01A1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryGenerator_Donut, 0x01A8);
		}

		// class UEnvQueryGenerator_OnCircle : public UEnvQueryGenerator_ProjectedPoints
		TEST_METHOD(Class__AIModule__EnvQueryGenerator_OnCircle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_OnCircle, CircleRadius, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_OnCircle, SpaceBetween, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_OnCircle, NumberOfPoints, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_OnCircle, PointOnCircleSpacingMethod, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_OnCircle, UnknownData_ELA6, 0x0111);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_OnCircle, ArcDirection, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_OnCircle, ArcAngle, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_OnCircle, AngleRadians, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_OnCircle, UnknownData_SPY8, 0x016C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_OnCircle, CircleCenter, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_OnCircle, bIgnoreAnyContextActorsWhenGeneratingCircle, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_OnCircle, UnknownData_ZTYS, 0x0179);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_OnCircle, CircleCenterZOffset, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_OnCircle, TraceData, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_OnCircle, UnknownData_NOQ8, 0x01E1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryGenerator_OnCircle, 0x01E8);
		}

		// class UEnvQueryGenerator_SimpleGrid : public UEnvQueryGenerator_ProjectedPoints
		TEST_METHOD(Class__AIModule__EnvQueryGenerator_SimpleGrid)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_SimpleGrid, GridSize, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_SimpleGrid, SpaceBetween, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_SimpleGrid, GenerateAround, 0x00E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryGenerator_SimpleGrid, 0x00E8);
		}

		// class UEnvQueryGenerator_PathingGrid : public UEnvQueryGenerator_SimpleGrid
		TEST_METHOD(Class__AIModule__EnvQueryGenerator_PathingGrid)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_PathingGrid, PathToItem, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_PathingGrid, NavigationFilter, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryGenerator_PathingGrid, ScanRangeMultiplier, 0x0120);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryGenerator_PathingGrid, 0x0150);
		}

		// class UEnvQueryInstanceBlueprintWrapper : public UObject
		TEST_METHOD(Class__AIModule__EnvQueryInstanceBlueprintWrapper)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryInstanceBlueprintWrapper, UnknownData_BEO4, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryInstanceBlueprintWrapper, QueryID, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryInstanceBlueprintWrapper, UnknownData_8XLZ, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryInstanceBlueprintWrapper, ItemType, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryInstanceBlueprintWrapper, OptionIndex, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryInstanceBlueprintWrapper, UnknownData_30CP, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryInstanceBlueprintWrapper, OnQueryFinishedEvent, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryInstanceBlueprintWrapper, 0x0078);
		}

		// class UEnvQueryItemType : public UObject
		TEST_METHOD(Class__AIModule__EnvQueryItemType)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryItemType, UnknownData_O9IU, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryItemType, 0x0030);
		}

		// class UEnvQueryItemType_VectorBase : public UEnvQueryItemType
		TEST_METHOD(Class__AIModule__EnvQueryItemType_VectorBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryItemType_VectorBase, 0x0030);
		}

		// class UEnvQueryItemType_ActorBase : public UEnvQueryItemType_VectorBase
		TEST_METHOD(Class__AIModule__EnvQueryItemType_ActorBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryItemType_ActorBase, 0x0030);
		}

		// class UEnvQueryItemType_Actor : public UEnvQueryItemType_ActorBase
		TEST_METHOD(Class__AIModule__EnvQueryItemType_Actor)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryItemType_Actor, 0x0030);
		}

		// class UEnvQueryItemType_Direction : public UEnvQueryItemType_VectorBase
		TEST_METHOD(Class__AIModule__EnvQueryItemType_Direction)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryItemType_Direction, 0x0030);
		}

		// class UEnvQueryItemType_Point : public UEnvQueryItemType_VectorBase
		TEST_METHOD(Class__AIModule__EnvQueryItemType_Point)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryItemType_Point, 0x0030);
		}

		// class UEnvQueryManager : public UObject
		TEST_METHOD(Class__AIModule__EnvQueryManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryManager, UnknownData_53X2, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryManager, InstanceCache, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryManager, LocalContexts, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryManager, GCShieldedWrappers, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryManager, UnknownData_MI2K, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryManager, MaxAllowedTestingTime, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryManager, bTestQueriesUsingBreadth, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryManager, UnknownData_AREO, 0x0129);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryManager, QueryCountWarningThreshold, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryManager, QueryCountWarningInterval, 0x0130);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryManager, 0x0138);
		}

		// class UEnvQueryOption : public UObject
		TEST_METHOD(Class__AIModule__EnvQueryOption)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryOption, Generator, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryOption, Tests, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryOption, 0x0040);
		}

		// class UEnvQueryTest : public UEnvQueryNode
		TEST_METHOD(Class__AIModule__EnvQueryTest)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest, TestOrder, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest, TestPurpose, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest, UnknownData_V8QJ, 0x0035);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest, TestComment, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest, MultipleContextFilterOp, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest, MultipleContextScoreOp, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest, FilterType, 0x004A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest, UnknownData_H7NW, 0x004B);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest, BoolValue, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest, FloatValueMin, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest, FloatValueMax, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest, UnknownData_CWCR, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest, ScoringEquation, 0x00E1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest, ClampMinType, 0x00E2);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest, ClampMaxType, 0x00E3);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest, NormalizationType, 0x00E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest, UnknownData_RIYJ, 0x00E5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest, ScoreClampMin, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest, ScoreClampMax, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest, ScoringFactor, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest, ReferenceValue, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest, bDefineReferenceValue, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest, UnknownData_5ZS1, 0x01A9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest, UnknownData_A62C, 0x01B9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTest, 0x01C0);
		}

		// class UEnvQueryTest_Distance : public UEnvQueryTest
		TEST_METHOD(Class__AIModule__EnvQueryTest_Distance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_Distance, TestMode, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_Distance, UnknownData_XHSQ, 0x01C1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_Distance, DistanceTo, 0x01C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTest_Distance, 0x01D0);
		}

		// class UEnvQueryTest_Dot : public UEnvQueryTest
		TEST_METHOD(Class__AIModule__EnvQueryTest_Dot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_Dot, LineA, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_Dot, LineB, 0x01E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_Dot, TestMode, 0x0200);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_Dot, bAbsoluteValue, 0x0201);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_Dot, UnknownData_IJSN, 0x0202);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTest_Dot, 0x0208);
		}

		// class UEnvQueryTest_GameplayTags : public UEnvQueryTest
		TEST_METHOD(Class__AIModule__EnvQueryTest_GameplayTags)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_GameplayTags, TagQueryToMatch, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_GameplayTags, bUpdatedToUseQuery, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_GameplayTags, TagsToMatch, 0x0209);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_GameplayTags, UnknownData_YC91, 0x020A);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_GameplayTags, GameplayTags, 0x0210);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTest_GameplayTags, 0x0230);
		}

		// class UEnvQueryTest_Overlap : public UEnvQueryTest
		TEST_METHOD(Class__AIModule__EnvQueryTest_Overlap)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_Overlap, OverlapData, 0x01C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTest_Overlap, 0x01E0);
		}

		// class UEnvQueryTest_Pathfinding : public UEnvQueryTest
		TEST_METHOD(Class__AIModule__EnvQueryTest_Pathfinding)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_Pathfinding, TestMode, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_Pathfinding, UnknownData_288Y, 0x01C1);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_Pathfinding, Context, 0x01C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_Pathfinding, PathFromContext, 0x01D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_Pathfinding, SkipUnreachable, 0x0200);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_Pathfinding, FilterClass, 0x0230);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTest_Pathfinding, 0x0238);
		}

		// class UEnvQueryTest_PathfindingBatch : public UEnvQueryTest_Pathfinding
		TEST_METHOD(Class__AIModule__EnvQueryTest_PathfindingBatch)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_PathfindingBatch, ScanRangeMultiplier, 0x0238);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTest_PathfindingBatch, 0x0268);
		}

		// class UEnvQueryTest_Project : public UEnvQueryTest
		TEST_METHOD(Class__AIModule__EnvQueryTest_Project)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_Project, ProjectionData, 0x01C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTest_Project, 0x01F0);
		}

		// class UEnvQueryTest_Random : public UEnvQueryTest
		TEST_METHOD(Class__AIModule__EnvQueryTest_Random)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTest_Random, 0x01C0);
		}

		// class UEnvQueryTest_Trace : public UEnvQueryTest
		TEST_METHOD(Class__AIModule__EnvQueryTest_Trace)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_Trace, TraceData, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_Trace, TraceFromContext, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_Trace, ItemHeightOffset, 0x0220);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_Trace, ContextHeightOffset, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnvQueryTest_Trace, Context, 0x0280);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTest_Trace, 0x0288);
		}

		// class UEnvQueryTypes : public UObject
		TEST_METHOD(Class__AIModule__EnvQueryTypes)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnvQueryTypes, 0x0028);
		}

		// class UEQSQueryResultSourceInterface : public UInterface
		TEST_METHOD(Class__AIModule__EQSQueryResultSourceInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEQSQueryResultSourceInterface, 0x0028);
		}

		// class UEQSRenderingComponent : public UPrimitiveComponent
		TEST_METHOD(Class__AIModule__EQSRenderingComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEQSRenderingComponent, UnknownData_K99X, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEQSRenderingComponent, UnknownData_JSWN, 0x0570);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEQSRenderingComponent, 0x05A0);
		}

		// class AEQSTestingPawn : public ACharacter
		TEST_METHOD(Class__AIModule__EQSTestingPawn)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AEQSTestingPawn, UnknownData_2OCB, 0x0748);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEQSTestingPawn, QueryTemplate, 0x0750);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEQSTestingPawn, QueryParams, 0x0758);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEQSTestingPawn, QueryConfig, 0x0768);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEQSTestingPawn, TimeLimitPerStep, 0x0778);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEQSTestingPawn, StepToDebugDraw, 0x077C);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEQSTestingPawn, HighlightMode, 0x0780);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEQSTestingPawn, UnknownData_ODXH, 0x0781);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEQSTestingPawn, UnknownData_4S0H, 0x0785);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEQSTestingPawn, QueryingMode, 0x0788);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEQSTestingPawn, UnknownData_6PCY, 0x0789);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEQSTestingPawn, NavAgentProperties, 0x0790);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEQSTestingPawn, UnknownData_DBQE, 0x07C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AEQSTestingPawn, 0x07E0);
		}

		// class UGenericTeamAgentInterface : public UInterface
		TEST_METHOD(Class__AIModule__GenericTeamAgentInterface)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGenericTeamAgentInterface, 0x0028);
		}

		// class AGridPathAIController : public AAIController
		TEST_METHOD(Class__AIModule__GridPathAIController)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AGridPathAIController, 0x0448);
		}

		// class UGridPathFollowingComponent : public UPathFollowingComponent
		TEST_METHOD(Class__AIModule__GridPathFollowingComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UGridPathFollowingComponent, GridManager, 0x02A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UGridPathFollowingComponent, UnknownData_11XK, 0x02B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGridPathFollowingComponent, 0x02D8);
		}

		// class UNavFilter_AIControllerDefault : public UNavigationQueryFilter
		TEST_METHOD(Class__AIModule__NavFilter_AIControllerDefault)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavFilter_AIControllerDefault, 0x0048);
		}

		// class ANavLinkProxy : public AActor
		TEST_METHOD(Class__AIModule__NavLinkProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavLinkProxy, UnknownData_LU48, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavLinkProxy, PointLinks, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavLinkProxy, SegmentLinks, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavLinkProxy, SmartLinkComp, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavLinkProxy, bSmartLinkIsRelevant, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavLinkProxy, UnknownData_VEO4, 0x0371);
			CHEAT_GEAR_CHECK_OFFSET(CG::ANavLinkProxy, OnSmartLinkReached, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ANavLinkProxy, 0x0388);
		}

		// class UNavLocalGridManager : public UObject
		TEST_METHOD(Class__AIModule__NavLocalGridManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UNavLocalGridManager, UnknownData_6W5Q, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UNavLocalGridManager, 0x0058);
		}

		// class UPathFollowingManager : public UObject
		TEST_METHOD(Class__AIModule__PathFollowingManager)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPathFollowingManager, 0x0028);
		}

		// class UPawnAction : public UObject
		TEST_METHOD(Class__AIModule__PawnAction)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnAction, ChildAction, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnAction, ParentAction, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnAction, ownerComponent, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnAction, Instigator, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnAction, BrainComp, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnAction, UnknownData_ICJ9, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnAction, UnknownData_XK1A, 0x0081);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPawnAction, 0x0098);
		}

		// class UPawnAction_BlueprintBase : public UPawnAction
		TEST_METHOD(Class__AIModule__PawnAction_BlueprintBase)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPawnAction_BlueprintBase, 0x0098);
		}

		// class UPawnAction_Move : public UPawnAction
		TEST_METHOD(Class__AIModule__PawnAction_Move)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnAction_Move, GoalActor, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnAction_Move, GoalLocation, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnAction_Move, AcceptableRadius, 0x00AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnAction_Move, FilterClass, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnAction_Move, UnknownData_AEUH, 0x00B9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPawnAction_Move, 0x00E8);
		}

		// class UPawnAction_Repeat : public UPawnAction
		TEST_METHOD(Class__AIModule__PawnAction_Repeat)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnAction_Repeat, ActionToRepeat, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnAction_Repeat, RecentActionCopy, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnAction_Repeat, ChildFailureHandlingMode, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnAction_Repeat, UnknownData_NQ6F, 0x00A9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPawnAction_Repeat, 0x00B8);
		}

		// class UPawnAction_Sequence : public UPawnAction
		TEST_METHOD(Class__AIModule__PawnAction_Sequence)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnAction_Sequence, ActionSequence, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnAction_Sequence, ChildFailureHandlingMode, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnAction_Sequence, UnknownData_HRQP, 0x00A9);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnAction_Sequence, RecentActionCopy, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnAction_Sequence, UnknownData_3P34, 0x00B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPawnAction_Sequence, 0x00C0);
		}

		// class UPawnAction_Wait : public UPawnAction
		TEST_METHOD(Class__AIModule__PawnAction_Wait)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnAction_Wait, TimeToWait, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnAction_Wait, UnknownData_DQQZ, 0x009C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPawnAction_Wait, 0x00A8);
		}

		// class UPawnActionsComponent : public UActorComponent
		TEST_METHOD(Class__AIModule__PawnActionsComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnActionsComponent, ControlledPawn, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnActionsComponent, ActionStacks, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnActionsComponent, ActionEvents, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnActionsComponent, CurrentAction, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnActionsComponent, UnknownData_NEKG, 0x0130);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPawnActionsComponent, 0x0138);
		}

		// class UPawnSensingComponent : public UActorComponent
		TEST_METHOD(Class__AIModule__PawnSensingComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnSensingComponent, HearingThreshold, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnSensingComponent, LOSHearingThreshold, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnSensingComponent, SightRadius, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnSensingComponent, SensingInterval, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnSensingComponent, HearingMaxSoundAge, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnSensingComponent, UnknownData_STKA, 0x0115);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnSensingComponent, OnSeePawn, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnSensingComponent, OnHearNoise, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnSensingComponent, PeripheralVisionAngle, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPawnSensingComponent, PeripheralVisionCosine, 0x0144);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPawnSensingComponent, 0x0148);
		}

		// class UVisualLoggerExtension : public UObject
		TEST_METHOD(Class__AIModule__VisualLoggerExtension)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UVisualLoggerExtension, 0x0028);
		}

		// class UMap_MS_World_C : public UAT_UIMapMSWorld
		TEST_METHOD(WidgetBlueprintGeneratedClass__Map_MS_World__Map_MS_World_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_World_C, Out, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_World_C, In, 0x03F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMap_MS_World_C, 0x0400);
		}

		// class UQuest_Sub_C : public UAT_UIQuestSub
		TEST_METHOD(WidgetBlueprintGeneratedClass__Quest_Sub__Quest_Sub_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, UberGraphFrame, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Clear_Out, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Clear_In, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Clear_Direct, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Title, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Out, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Loop, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, In, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Choice_Win01, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Dmy_Title, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Icon_Clear, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Img_Cap_Base01, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Img_Cloud00, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Img_Cloud02, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Img_Cloud04_00, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Img_Cloud04_01, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Img_Win_Sub_Detail00, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Img_Win_Sub_Title_00, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Img_Win_Sub_Title_01, 0x05B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Img_Xcmn_Cloud00_Tail00, 0x05C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Img_Xcmn_Cloud06_00, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Img_Xcmn_Cloud06_01, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Bg00, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Bg_Deco00, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Bg_Deco01, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Bg_Deco02, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Bg_Sub00_00, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Bg_Sub00_01, 0x0600);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Bg_Sub00_02, 0x0608);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Clear_Base00, 0x0610);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Clear_Base01, 0x0618);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Cloud00_Shdw, 0x0620);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Cloud02_Shdw, 0x0628);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Cloud04_00_Shdw, 0x0630);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Cloud04_01_Shdw, 0x0638);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Cloud06_00, 0x0640);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Cloud06_01, 0x0648);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Cloud_Tail00_Shdw, 0x0650);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Deco_Db00_00, 0x0658);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Deco_Db00_01, 0x0660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Deco_Db00_02, 0x0668);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Lv01, 0x0670);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Lv02, 0x0678);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Lv03, 0x0680);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Rot_Star00, 0x0688);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Rot_Star01, 0x0690);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Rot_Star02, 0x0698);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Star00, 0x06A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Ins_Star00_Shdw, 0x06A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Lang_Clear, 0x06B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Lang_Quest, 0x06B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, List_Parts00, 0x06C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, List_Parts01, 0x06C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, List_Parts02, 0x06D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, List_Parts03, 0x06D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, List_Parts04, 0x06E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, List_Parts05, 0x06E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Pnl_Clear, 0x06F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Pnl_Deco_Alpha, 0x06F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Pnl_Title, 0x0700);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Txt_Cap, 0x0708);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Txt_Detail, 0x0710);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Txt_Recommend, 0x0718);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Txt_Title00, 0x0720);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Xtex_Deco_Db00, 0x0728);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Xtex_Deco_Db01, 0x0730);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Xtex_Deco_Db02, 0x0738);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Xtex_Deco_Db03, 0x0740);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Xtex_Deco_Db04, 0x0748);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, loopCount, 0x0750);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, UnknownData_7SUO, 0x0754);
			CHEAT_GEAR_CHECK_OFFSET(CG::UQuest_Sub_C, Choice_Win, 0x0758);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UQuest_Sub_C, 0x0760);
		}

		// class UShop_Top01_C : public UAT_UIShopTop01
		TEST_METHOD(WidgetBlueprintGeneratedClass__Shop_Top01__Shop_Top01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top01_C, UberGraphFrame, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top01_C, Out, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top01_C, In, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top01_C, Img_Win00, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top01_C, Img_Win01, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top01_C, Img_Win02, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top01_C, Ins_Mask_Db, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top01_C, Txt_Cap01, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top01_C, Txt_List00, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top01_C, Txt_Num_Lv, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top01_C, Xlist_Bar01_00, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top01_C, Xlist_Bar01_01, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top01_C, Xlist_Bar01_02, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top01_C, Xlist_Bar01_03, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Top01_C, XCmnHeader, 0x0500);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UShop_Top01_C, 0x0508);
		}

		// class UShop_Training_C : public UAT_UIShopTraining
		TEST_METHOD(WidgetBlueprintGeneratedClass__Shop_Training__Shop_Training_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, UberGraphFrame, 0x0800);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Slide_R_Out, 0x0808);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Slide_R_In, 0x0810);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Slide_L_Out, 0x0818);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Slide_L_In, 0x0820);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Clear, 0x0828);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Out, 0x0830);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, In, 0x0838);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Img_Base_Cap01_Mask, 0x0840);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Img_Base_Win01_00, 0x0848);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Img_Base_Win01_01, 0x0850);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Img_Detail_Bar, 0x0858);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Img_Dmy_Charicon, 0x0860);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Img_Space, 0x0868);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Img_Spase, 0x0870);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Img_Tex_Deco, 0x0878);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Img_Win_Heading00_00, 0x0880);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Img_Win_Heading00_02, 0x0888);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Img_Win_Heading00_03, 0x0890);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Img_Win_Heading01, 0x0898);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Img_Win_Heading01_BG, 0x08A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Img_Win_hr00_01, 0x08A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Img_Win_hr00_02, 0x08B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Ins_Base_Tab_L, 0x08B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Ins_Base_Tab_R, 0x08C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Ins_Caps00, 0x08C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Ins_Icon_Skill, 0x08D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Ins_Mask_Char_E, 0x08D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Ins_Mask_Char_P, 0x08E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Ins_Star00, 0x08E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Ins_Star00_Shdw, 0x08F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Ins_Win_Base00, 0x08F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Ins_Win_Bg00, 0x0900);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Txt_Cap00, 0x0908);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Txt_Cap02, 0x0910);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Txt_Cap03, 0x0918);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Txt_Detail, 0x0920);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Txt_Lv_E00, 0x0928);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Txt_Lv_E01, 0x0930);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Txt_Lv_E02, 0x0938);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Txt_Name_E00, 0x0940);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Txt_Name_E01, 0x0948);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Txt_Name_E02, 0x0950);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Txt_Name_P, 0x0958);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Txt_Task, 0x0960);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Txt_Task_Detail, 0x0968);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Txt_Task_Detail01, 0x0970);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Xmenu_Bg, 0x0978);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, Loop_Count, 0x0980);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, UnknownData_WYDR, 0x0984);
			CHEAT_GEAR_CHECK_OFFSET(CG::UShop_Training_C, XCmnHeader, 0x0988);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UShop_Training_C, 0x0990);
		}

		// class UXcmn_Install_C : public UAT_UIXcmnInstall
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Install__Xcmn_Install_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Install_C, Out, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Install_C, In, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Install_C, Txt_Xcmn_Install, 0x03C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Install_C, 0x03D0);
		}

		// class ULoading_C : public UAT_UILoadingScreen
		TEST_METHOD(WidgetBlueprintGeneratedClass__Loading__Loading_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_C, Bg_Out, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_C, Bg_In, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_C, Change_Tips, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_C, Out, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_C, In, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_C, Dmy_Img, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_C, Img_Fil_Tips, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_C, Img_Icon_Tips_Star, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_C, Ins_Line_Title, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_C, Loading_Bar, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_C, Txt_Detail, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_C, Txt_Tips_Detail, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_C, Txt_Tips_Title, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULoading_C, Txt_Title, 0x0528);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULoading_C, 0x0530);
		}

		// class UAT_UIWindowManager_BP_C : public UAT_UIWindowManager
		TEST_METHOD(BlueprintGeneratedClass__AT_UIWindowManager_BP__AT_UIWindowManager_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIWindowManager_BP_C, 0x0070);
		}

		// class UXcmn_Emb01_C : public UAT_UIXCmnEmb01
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Emb01__Xcmn_Emb01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb01_C, Img_Base, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb01_C, Img_Link_Bg, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb01_C, Img_Micon25, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb01_C, Img_Unacquired, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb01_C, Ins_Emb_Mask, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb01_C, Ins_Frame_S, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Emb01_C, Ins_Icon_New, 0x03E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Emb01_C, 0x03E8);
		}

		// class UFontRegist_C : public UCFUIUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__FontRegist__FontRegist_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UFontRegist_C, UberGraphFrame, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFontRegist_C, CanvasPanel_1, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFontRegist_C, RegistFont_B, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFontRegist_C, RegistFont_EB, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UFontRegist_C, RegistFont_Outline, 0x0390);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFontRegist_C, 0x0398);
		}

		// class UXcmn_Win02_C : public UAT_UIXcmnWin02
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Win02__Xcmn_Win02_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win02_C, UberGraphFrame, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win02_C, Out, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win02_C, In, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win02_C, All_Win01, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win02_C, Img_Bar, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win02_C, Img_Xwin01_Base, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win02_C, Img_Xwin01_Base_Shadow, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win02_C, Img_Xwin01_Bg, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win02_C, Img_Xwin01_Bg_Shadow, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win02_C, Pnl_Base, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win02_C, Txt_Detail_Item, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win02_C, Txt_Num_Lv00, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win02_C, Txt_Num_Lv01, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win02_C, Xcmn_Fade_Black, 0x04C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Win02_C, 0x04D0);
		}

		// class UXcmn_Win01_List_State_C : public UAT_UIGameWindowListState
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Win01_List_State__Xcmn_Win01_List_State_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_List_State_C, UberGraphFrame, 0x03A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Win01_List_State_C, 0x03A8);
		}

		// class UXcmn_Win01_List_Cond_C : public UAT_UIGameWindowCheck
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Win01_List_Cond__Xcmn_Win01_List_Cond_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_List_Cond_C, UberGraphFrame, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_List_Cond_C, Img_Bar_Shadow, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_List_Cond_C, Img_Xwin01_List, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_List_Cond_C, Txt_Cond, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_List_Cond_C, Xmenu_Check, 0x03B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Win01_List_Cond_C, 0x03B8);
		}

		// class UXcmn_Win01_Detail_Reward_C : public UAT_UIGameWindowDetailReward
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Win01_Detail_Reward__Xcmn_Win01_Detail_Reward_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_Detail_Reward_C, UberGraphFrame, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_Detail_Reward_C, Icon_Clear_S, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_Detail_Reward_C, Ins_Item, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_Detail_Reward_C, Txt_Item, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_Detail_Reward_C, Txt_Item_Num, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win01_Detail_Reward_C, Txt_Reward, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Win01_Detail_Reward_C, 0x03C8);
		}

		// class UXcmn_Win02_List00_C : public UAT_UIXcmnWin02List00
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Win02_List00__Xcmn_Win02_List00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win02_List00_C, Ins_Arrow00_Btm01, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win02_List00_C, Ins_Arrow00_Top01, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win02_List00_C, Ins_Icon_Item, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win02_List00_C, Txt_Item_List, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win02_List00_C, Txt_List, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win02_List00_C, Txt_Num, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win02_List00_C, Txt_Num_Denomi, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win02_List00_C, Txt_Num_Mole, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Win02_List00_C, Txt_Sla, 0x0430);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Win02_List00_C, 0x0438);
		}

		// class AB_DataAssetManager_C : public AATDataAssetManager
		TEST_METHOD(BlueprintGeneratedClass__B_DataAssetManager__B_DataAssetManager_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AB_DataAssetManager_C, DefaultSceneRoot, 0x0528);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AB_DataAssetManager_C, 0x0530);
		}

		// class ABP_ATGameModeMain_C : public AATGameMode
		TEST_METHOD(BlueprintGeneratedClass__BP_ATGameModeMain__BP_ATGameModeMain_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_ATGameModeMain_C, UberGraphFrame, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_ATGameModeMain_C, DefaultSceneRoot, 0x0600);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_ATGameModeMain_C, 0x0608);
		}

		// class UBP_Dest_LowC_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_LowC__BP_Dest_LowC_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_LowC_C, 0x0820);
		}

		// class AWishDemo_C : public APreRenderDemoActor
		TEST_METHOD(BlueprintGeneratedClass__WishDemo__WishDemo_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AWishDemo_C, DefaultSceneRoot, 0x0370);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AWishDemo_C, 0x0378);
		}

		// class AAREA03_Animal_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__AREA03_Animal__AREA03_Animal_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAREA03_Animal_C, 0x0340);
		}

		// class UAnimSequencerInstance_AnimBP : public UAnimInstance
		TEST_METHOD(Class__AnimGraphRuntime__AnimSequencerInstance_AnimBP)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequencerInstance_AnimBP, AnimsInSequencer, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequencerInstance_AnimBP, mainAnimation, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimSequencerInstance_AnimBP, UnknownData_Z1YB, 0x0380);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimSequencerInstance_AnimBP, 0x0388);
		}

		// class UAnimCustomInstance : public UAnimInstance
		TEST_METHOD(Class__AnimGraphRuntime__AnimCustomInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimCustomInstance, 0x0360);
		}

		// class UAnimNotify_PlayMontageNotify : public UAnimNotify
		TEST_METHOD(Class__AnimGraphRuntime__AnimNotify_PlayMontageNotify)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_PlayMontageNotify, NotifyName, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_PlayMontageNotify, 0x0040);
		}

		// class UAnimNotify_PlayMontageNotifyWindow : public UAnimNotifyState
		TEST_METHOD(Class__AnimGraphRuntime__AnimNotify_PlayMontageNotifyWindow)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAnimNotify_PlayMontageNotifyWindow, NotifyName, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotify_PlayMontageNotifyWindow, 0x0038);
		}

		// class UAnimSequencerInstance : public UAnimCustomInstance
		TEST_METHOD(Class__AnimGraphRuntime__AnimSequencerInstance)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimSequencerInstance, 0x0360);
		}

		// class UKismetAnimationLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__AnimGraphRuntime__KismetAnimationLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UKismetAnimationLibrary, 0x0028);
		}

		// class UPlayMontageCallbackProxy : public UObject
		TEST_METHOD(Class__AnimGraphRuntime__PlayMontageCallbackProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlayMontageCallbackProxy, OnCompleted, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlayMontageCallbackProxy, OnBlendOut, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlayMontageCallbackProxy, OnInterrupted, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlayMontageCallbackProxy, OnNotifyBegin, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlayMontageCallbackProxy, OnNotifyEnd, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::UPlayMontageCallbackProxy, UnknownData_5YAP, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UPlayMontageCallbackProxy, 0x00A8);
		}

		// class UBP_AtrociousBattle1_Area02_020_C : public UATAtrociousEncountBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousBattle1_Area02_020__BP_AtrociousBattle1_Area02_020_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousBattle1_Area02_020_C, 0x0118);
		}

		// class UBP_AtrociousBattle1_Area02_C : public UATAtrociousEncountBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousBattle1_Area02__BP_AtrociousBattle1_Area02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousBattle1_Area02_C, 0x0118);
		}

		// class UBP_AtrociousBattle2_Area02_C : public UATAtrociousEncountBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousBattle2_Area02__BP_AtrociousBattle2_Area02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousBattle2_Area02_C, 0x0118);
		}

		// class UBP_AtrociousEventBattle2_Area04_C : public UATAtrociousEventBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousEventBattle2_Area04__BP_AtrociousEventBattle2_Area04_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousEventBattle2_Area04_C, 0x00A0);
		}

		// class UBP_AtrociousCondition2_Area04_C : public UATAtrociousCondition
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousCondition2_Area04__BP_AtrociousCondition2_Area04_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousCondition2_Area04_C, 0x0040);
		}

		// class UBP_AtrociousCondition1_Area06_C : public UATAtrociousCondition
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousCondition1_Area06__BP_AtrociousCondition1_Area06_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousCondition1_Area06_C, 0x0040);
		}

		// class UBP_AtrociousSubQuest2_Area06_C : public UATAtrociousSubQuest
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousSubQuest2_Area06__BP_AtrociousSubQuest2_Area06_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousSubQuest2_Area06_C, 0x00B0);
		}

		// class UBP_AtrociousBattle2_Area06_020_C : public UATAtrociousEncountBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousBattle2_Area06_020__BP_AtrociousBattle2_Area06_020_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousBattle2_Area06_020_C, 0x0118);
		}

		// class UUniqueDataCpl065B_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl065B__UniqueDataCpl065B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl065B_C, 0x0070);
		}

		// class UUniqueDataCpl065A_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl065A__UniqueDataCpl065A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl065A_C, 0x0070);
		}

		// class UUniqueDataCpl064C_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl064C__UniqueDataCpl064C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl064C_C, 0x0070);
		}

		// class UUniqueDataCpl064B_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl064B__UniqueDataCpl064B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl064B_C, 0x0070);
		}

		// class UUniqueDataCpl058B_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl058B__UniqueDataCpl058B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl058B_C, 0x0070);
		}

		// class UUniqueDataCpl058A_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl058A__UniqueDataCpl058A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl058A_C, 0x0070);
		}

		// class UUniqueDataCpl057C_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl057C__UniqueDataCpl057C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl057C_C, 0x0070);
		}

		// class UBP_Cpl065StatusC03_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl065StatusC03__BP_Cpl065StatusC03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl065StatusC03_C, 0x00F0);
		}

		// class UBP_Cpl064StatusC01_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl064StatusC01__BP_Cpl064StatusC01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl064StatusC01_C, 0x00F0);
		}

		// class UBP_Cpl064Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl064Status_Atrocious__BP_Cpl064Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl064Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl063Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl063Status_Atrocious__BP_Cpl063Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl063Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl062Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl062Status_Atrocious__BP_Cpl062Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl062Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl060StatusC01_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl060StatusC01__BP_Cpl060StatusC01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl060StatusC01_C, 0x00F0);
		}

		// class UBP_Cpl059StatusC01_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl059StatusC01__BP_Cpl059StatusC01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl059StatusC01_C, 0x00F0);
		}

		// class UBP_Cpl059Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl059Status_Atrocious__BP_Cpl059Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl059Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl058StatusC02_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl058StatusC02__BP_Cpl058StatusC02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl058StatusC02_C, 0x00F0);
		}

		// class UBP_Cpl056StatusC02_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl056StatusC02__BP_Cpl056StatusC02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl056StatusC02_C, 0x00F0);
		}

		// class AAREA03_PLA_010_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__AREA03_PLA_010__AREA03_PLA_010_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAREA03_PLA_010_C, 0x0340);
		}

		// class AFacial00Cpl002_C : public AATFacialParts
		TEST_METHOD(BlueprintGeneratedClass__Facial00Cpl002__Facial00Cpl002_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AFacial00Cpl002_C, DefaultSceneRoot, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFacial00Cpl002_C, 0x03E0);
		}

		// class ABP_Build_TowerH_Test_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Build_TowerH_Test__BP_Build_TowerH_Test_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerH_Test_C, S_Build_TowerPillarPartC_Test02, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerH_Test_C, S_Build_TowerPillarPartC_Test01, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerH_Test_C, S_Build_TowerExtraA_test, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerH_Test_C, S_Build_TowerGenBase_Test, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerH_Test_C, S_Build_TowerPillarPartD_Test, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerH_Test_C, S_Build_TowerPillarPartC_Test, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerH_Test_C, S_Build_TowerPillarPartE_Test, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerH_Test_C, S_Build_TowerGenE_Test, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerH_Test_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Build_TowerH_Test_C, 0x0380);
		}

		// class ABP_Build_TowerD_Test_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Build_TowerD_Test__BP_Build_TowerD_Test_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerD_Test_C, S_Build_TowerPillarPartG_Test03, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerD_Test_C, S_Build_TowerPillarPartF_Test02, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerD_Test_C, S_Build_TowerPillarPartG_Test02, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerD_Test_C, S_Build_TowerPillarPartF_Test01, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerD_Test_C, S_Build_TowerPillarPartF_Test, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerD_Test_C, S_Build_TowerPillarPartG_Test01, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerD_Test_C, S_Build_TowerPillarPartG_Test, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerD_Test_C, S_Build_TowerPillarPartH_Test01, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerD_Test_C, S_Build_TowerPillarPartH_Test, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerD_Test_C, S_Build_TowerGenD_Test, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerD_Test_C, S_Build_TowerGenBase_Test, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Build_TowerD_Test_C, DefaultSceneRoot, 0x0390);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Build_TowerD_Test_C, 0x0398);
		}

		// class ABP_Area03_Cliff_TopGrassN_D_C : public AGrassGenerationDestructActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_TopGrassN_D__BP_Area03_Cliff_TopGrassN_D_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_TopGrassN_D_C, 0x0388);
		}

		// class ABP_Area03_Cliff_ArchE_N_C : public AGrassGenerationStaticMeshActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_ArchE_N__BP_Area03_Cliff_ArchE_N_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_ArchE_N_C, 0x0360);
		}

		// class ATriggerStaticActor_BP_C : public ATriggerStaticActor
		TEST_METHOD(BlueprintGeneratedClass__TriggerStaticActor_BP__TriggerStaticActor_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ATriggerStaticActor_BP_C, UberGraphFrame, 0x0388);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATriggerStaticActor_BP_C, 0x0390);
		}

		// class AStandStaticMob_C : public AMob00_BP_C
		TEST_METHOD(BlueprintGeneratedClass__StandStaticMob__StandStaticMob_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AStandStaticMob_C, UberGraphFrame, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::AStandStaticMob_C, NPCTALK, 0x0420);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AStandStaticMob_C, 0x0428);
		}

		// class USetSpecialBehaviorTask_C : public UBTTask_BlueprintBase
		TEST_METHOD(BlueprintGeneratedClass__SetSpecialBehaviorTask__SetSpecialBehaviorTask_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::USetSpecialBehaviorTask_C, UberGraphFrame, 0x00A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USetSpecialBehaviorTask_C, 0x00A8);
		}

		// class UCheckState_C : public UBTDecorator_BlueprintBase
		TEST_METHOD(BlueprintGeneratedClass__CheckState__CheckState_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCheckState_C, State, 0x00A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCheckState_C, 0x00A1);
		}

		// class UBehaviorCheckTask_C : public UBTTask_BlueprintBase
		TEST_METHOD(BlueprintGeneratedClass__BehaviorCheckTask__BehaviorCheckTask_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBehaviorCheckTask_C, UberGraphFrame, 0x00A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBehaviorCheckTask_C, 0x00A8);
		}

		// class AVariation00Cpl059B_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Cpl059B__Variation00Cpl059B_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Cpl059B_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Cpl059B_C, 0x0380);
		}

		// class AVariation00Cpl014B_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Cpl014B__Variation00Cpl014B_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Cpl014B_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Cpl014B_C, 0x0380);
		}

		// class AVariation00Cpl058B_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Cpl058B__Variation00Cpl058B_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Cpl058B_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Cpl058B_C, 0x0380);
		}

		// class AForm00Cpl014D_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Cpl014D__Form00Cpl014D_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Cpl014D_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Cpl014D_C, 0x0380);
		}

		// class AForm00Cpl064A_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Cpl064A__Form00Cpl064A_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Cpl064A_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Cpl064A_C, 0x0380);
		}

		// class AFacial00Cpl004B_C : public AATFacialParts
		TEST_METHOD(BlueprintGeneratedClass__Facial00Cpl004B__Facial00Cpl004B_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AFacial00Cpl004B_C, DefaultSceneRoot, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFacial00Cpl004B_C, 0x03E0);
		}

		// class AAT_Character_cpl004p1c03_BP_C : public AATCharacterCpl004c03
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl004p1c03_BP__AT_Character_cpl004p1c03_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl004p1c03_BP_C, UberGraphFrame, 0x0FA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl004p1c03_BP_C, AtomCueSheetLoader, 0x0FA8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl004p1c03_BP_C, 0x0FB0);
		}

		// class AForm00Cpl014B_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Cpl014B__Form00Cpl014B_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Cpl014B_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Cpl014B_C, 0x0380);
		}

		// class AForm00Cpl075A_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Cpl075A__Form00Cpl075A_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Cpl075A_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Cpl075A_C, 0x0380);
		}

		// class UTownTalkAnimBlueprint_C : public UTalkAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__TownTalkAnimBlueprint__TownTalkAnimBlueprint_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, UberGraphFrame, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_Root_C80E8DB74FF462FA9E42B59147AE1ADC, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_4CF1016F4E4AC5DC8201D29A536B8BF5, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_F83B8EDA4D5BF90E67FA15A11D9EF1A8, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_5B89A6A24FEC6DFC0280E2BF271FBCAA, 0x0628);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_DFCEF77A4F1C5242828F998E2A13AAA5, 0x0670);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_4525859F4E6D0CCDA5EA789546917FFF, 0x06B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_1B2DB34848A21806E645D5915CA3897B, 0x0700);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_EF05318047A4338B92A620AAD3662225, 0x0748);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_992DBC73415BC079FC73E688E06B6928, 0x0790);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_E7031B9446FB84EB7CD057B6F539F7E0, 0x07D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_2F4837FE46DEFE27BD9541A08BB2C357, 0x0820);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_2E89D23A4CD9486E8C9F03A050BC054C, 0x0868);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_D7DCDE164C06F051EF82B6AEEB078C2B, 0x08B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_6ADD9B7F4240D11A1CC18F8E1A6772D6, 0x08F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_E5D280B04E358A02C982AD99C83A7971, 0x0940);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_8511E7684DA247FB009E34A2648A1633, 0x0988);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_2D279DAA466B0DBC6CB5A0B85E2ED23F, 0x09D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_AD7A28CF483E42AF42272BA868BBCC24, 0x0A18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_847201BD4974EDE13B6FB7866F69AAA8, 0x0A60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_2131809C4BA79E8BE121239C56EC7F5C, 0x0AA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_D54BD7424E1E2C75D41969B29E6A4BD5, 0x0AF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_F82E7547438F42E9D623589514416461, 0x0B38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_A1E9B9534622458A42A216B2A8573231, 0x0B80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_FD8FBE0C4DC9425483626F9866B30C2E, 0x0BC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_FD0886034C6442EAF46B6C94A43C69FA, 0x0C10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_C9A505414578B5BE919FA1A5CE050E39, 0x0C58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_592515AB4A56CB98EDDA1E989433F7D9, 0x0CA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_000EDEA34F85F057350C0191C437925C, 0x0CE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_6851EFB34A58C11EE25D35A0FA93B951, 0x0D30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_CD82E7EB46245B699F96589FD043061B, 0x0D78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_C1EB7EE54C6C54205736ED829AD32453, 0x0DC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_EFF9753D46A3B5F109B117BE5D988725, 0x0E08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_C7A24D6441466711AF71B58FCE214A3D, 0x0EA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_66AA06674D49E82036F041B7105D101C, 0x0F48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_75A21F9F4BE6A898E2EE4AA197C3636B, 0x0FE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_7E2CAF984D36A0783465B49F44552BCA, 0x1088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_B8BC68164C43C872268C97BE8C9374DF, 0x1128);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_BlendListByEnum_D8A362864765E388737CC68D32767A27, 0x11C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_StateResult_1619CFF542D440A40D7BF0B614033A36, 0x12B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_0C94DC914C440E1F84E12B8B1C9512C9, 0x12F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_1BC6232B44D1878735CF279CCE00667F, 0x1340);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_2F209FCF4C7D80DCE98473B9C2BDC1D2, 0x13E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_1D037CC940CADE05C789B7AC2C35688A, 0x1480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_3840963E4E9B64670DBADC81D518BD3F, 0x1520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_F8DE252A4EEB84B3A50F3181C6020DCF, 0x15C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_F15D78FD40F9497C784F218B5C9E6A96, 0x1660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_BlendListByEnum_EA8B593848ED2B3F8F296A91664698BC, 0x1700);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_StateResult_DEF55BB04686046F46AF88B4DCCCB747, 0x17F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_E862E291469180065B650F957189C7FB, 0x1830);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_A8C08FF042CC89B8A21485916CF2D287, 0x1878);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_StateResult_74AF9891495DB2D35A17C689B14015FA, 0x1918);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_1BBA2A8049A0C8B7DEAB19A854D1B214, 0x1958);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_StateResult_52E98C8546E41B332F489EBC641DDCF5, 0x19F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_409FF5F24B4A4F5AC549E9ABBCD02E60, 0x1A38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_StateResult_7A43E74D42CDCBABC8143C899C2C68D8, 0x1AD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_DB2FCD1C4E90D9F9BA5733B0FDCAD2B0, 0x1B18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_StateResult_47870AAE4DCF9A8C4543178E87C93DCD, 0x1BB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_3C9A2A8347DBD7E8993AF5B5C4E443A0, 0x1BF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_4FED9DBF4309C2F2AD4F7A874A39E814, 0x1C40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_BC6B41834F878116C73C80B7F53775D7, 0x1CE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_499CAB634C44EB1C0CE8B09141347674, 0x1D80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_3C57EE604A0ABD0E677FA69024DC14C8, 0x1E20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_04A30D574B21DAF8F22A9A917948ABBF, 0x1EC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_FF7A6E914A5B9C2511236CB075048893, 0x1F60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_BlendListByEnum_050F555E40512CC28F34C7B023EC6330, 0x2000);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_StateResult_DCC6F8184A40E7C718A059AAB341830D, 0x20F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_E55A5E8A46C357C70A80A8A3FDC87BE0, 0x2130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_185F1DFA4085E3E2E4FFCAAC4CAEE9BD, 0x21D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_B7867E164F21E34118C95AA6D800DD2D, 0x2270);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_7A0D7BCD43D19837D77E81A8D8AA621C, 0x2310);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_B50B8C9248E20DB0F186F0A416236314, 0x23B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_2C7CDAD14B3F1A92B42932AB85ED7C71, 0x2450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_BlendListByEnum_BBC6BE6240B6A8D21D52A38FDB176438, 0x24F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_StateResult_60026B2943A3EA872594FEB410946585, 0x25E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_5D14B6FE4A70515861CBBB869FA524A4, 0x2620);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_7DF5ECE447D2779A75F562BCBE89305A, 0x26C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_45D76CBF448AF63751D9169056AAACDD, 0x2760);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_E090B81043D6408D2E4E89A8D9F226E4, 0x2800);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_2483D78C462B94A7F930D8BDECACF3F9, 0x28A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_79A2981B4F44D38F936FBD8425E1BE75, 0x2940);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_BlendListByEnum_00B052984D94C756245908A5AF6B495E, 0x29E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_StateResult_D4E6AFCC467F3F89A20563B18E175BC0, 0x2AD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_E5828B214454A9E580963CBE049323E4, 0x2B10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_StateResult_8E9DE9A443C407AB48B8619EEE75E7E9, 0x2BB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_72484C7747337F9D6D628593232DC480, 0x2BF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_StateResult_19D0ADAC45E9ACA6042553BA6C02139E, 0x2C90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_572392AD48B452C1C0A9BF80C63E1781, 0x2CD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_StateResult_BC90782348132C963FE8A095C595C5FC, 0x2D70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_6185493A4DC5FEEC5F93259AD1730903, 0x2DB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_StateResult_AD0387EB49FB4010442437AD36B5F9FC, 0x2E50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_888A1210492F001CF71707A66A0399B3, 0x2E90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_StateResult_784A8E2A4354C79CF4DCB295EFDB6E3D, 0x2F30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_69624E834598DF3522CD33896ED29686, 0x2F70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_StateResult_78A8A40F4989509FFDEDB1A600C54DA7, 0x3010);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_0B88C2D84D54EF0D7875788B1C5B37BD, 0x3050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_StateResult_BAF1B53A452D8CBAFCC6ABA877C5E63A, 0x30F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_StateMachine_BF211DCA42038ED3807F9C9B688E4FEF, 0x3130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_ModifyBone_F16FA01048FEF24B5F974E9DD8131CC0, 0x3210);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_LocalToComponentSpace_DDD803F44EFFD994E33510AF7F923F5F, 0x3348);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SaveCachedPose_D8D559B240DC3C3A767B638DDBD3C8D6, 0x3388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_Slot_E63A8CBE4A028ED3F2B4CCA9FFF4CEDD, 0x3460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_LayeredBoneBlend_7B749DC54206F4B651B1CDA1BAB26DF4, 0x34C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SaveCachedPose_99397C174BD169138CC071BD5F96359C, 0x35A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_ModifyBone_0371B0F44DF40A0F1B3E8290178EE37E, 0x3678);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_LocalToComponentSpace_7059F7BF401068079D4953A896FBC166, 0x37B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_ComponentToLocalSpace_BF04AA6E43F9A25BDDC8388BE3A5FCC1, 0x37F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_BlendListByBool_3B00CFD3457F619AF5F5128126505FA8, 0x3830);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SaveCachedPose_B9B468A4423D6416ADE8BEA67FA2C025, 0x3910);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_UseCachedPose_641B2BF444DD69A47E4EB2A1D783A38D, 0x39E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_UseCachedPose_03B616C34EA121FE3585AAA4658BF15F, 0x3A30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_UseCachedPose_1BC9D681462AEA48E218488A7AA07FD7, 0x3A78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_UseCachedPose_72F92A5A47200C390D7AD5B619D30656, 0x3AC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_UseCachedPose_C06DC1744763E7F53E944F9A85203BEA, 0x3B08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_BlendListByBool_0F3E92BE4617E0A6D16A3D9B65818438, 0x3B50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_ModifyBone_CCBC4FA04521E81216A3EBA86B67ACFC, 0x3C30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_LocalToComponentSpace_0BEE41FB4CA53015CD7E2D9D45ED095F, 0x3D68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_UseCachedPose_B672CBF34E6F1A4257D30CB9270392A1, 0x3DA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_ComponentToLocalSpace_1425821048130C1D3D0CA5883B9A5C8E, 0x3DF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_ComponentToLocalSpace_C71B1381486F56C37EC95BA3EE487D0E, 0x3E30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_BlendSpacePlayer_B54D822E481A9D15877E649DAF2C952A, 0x3E70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_LayeredBoneBlend_83778D674B96742EA7BC78ABD9D653EA, 0x3F98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SaveCachedPose_2C0D4DC84959A58683A00BACD72E7018, 0x4070);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_LayeredBoneBlend_3DEE25D247DC1BAF9DFC69A26BC1FFDB, 0x4148);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SaveCachedPose_8E278C2E43F8D0B9DB65ACB0BA18CB51, 0x4220);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionPoseEvaluator_9B54E2A44DE57927385FEFA54358869C, 0x42F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionPoseEvaluator_A3081506468FECF80FE170B5DD51A47C, 0x4370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_CustomTransitionResult_47C3731145AC112B1A59D383A879DD74, 0x43E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_EF68636945734AC71F6FE1B9BCA24070, 0x4428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionPoseEvaluator_85E3963642F2331118549CBB7FE878AE, 0x4470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionPoseEvaluator_FD5D7C044BB908EDF83102A644EEDFE7, 0x44E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_CustomTransitionResult_6F9212DA4358F45189F5F581026FABEC, 0x4560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_TransitionResult_5744D61548C501FAB804E194B8DA6741, 0x45A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_DB8FF04D462BE6646A1BCB814996EFC9, 0x45E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_StateResult_A3DEEE8C4FF0E83B4751E4A5CBEE5DD7, 0x4688);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SequencePlayer_C8CE81434006F14F9B3EFCB1481DE99C, 0x46C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_StateResult_BB6B68834D0866465140DFACBA3E6E20, 0x4768);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_StateMachine_C36B6071410CC0920EB8EAAC7EDAFB1D, 0x47A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_BlendListByBool_73858E8F4D21509282F5AF938FA84289, 0x4888);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_ModifyCurve_D4A51D2B4A8C3C1206BEE4AAE12B11BA, 0x4968);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, UnknownData_DD43, 0x49E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_LookAtEyeBlend_32E21F3E47F77994E0D68292A621CC4B, 0x49F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_BlendListByBool_3E67060F4CEE00825C365A9DBEA7BD72, 0x4B70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SaveCachedPose_794D9BC0469D96C7DACEAF955BFAB9C0, 0x4C50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_UseCachedPose_91F338664A16B5EF87A79683291424AC, 0x4D28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_UseCachedPose_0308944C421647D456CC95963453A254, 0x4D70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SaveCachedPose_8DA6A7144B3DAEB8A1F16F82285E94EC, 0x4DB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_UseCachedPose_23354224449F1B641977F2AC4DA3EA61, 0x4E90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_Slot_959DBE5342DA8E1643EBC98CC04A0AA8, 0x4ED8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_LayeredBoneBlend_D7C6F1584A35E20852CF5E8174D409DE, 0x4F40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SaveCachedPose_056327254D71A52840911684786CC421, 0x5018);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_Slot_E98C7C7446BDFD9F8F364FBFAB4D46F7, 0x50F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_LayeredBoneBlend_0577F4D64F72EBD527069EA0823AB2CC, 0x5158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SaveCachedPose_C8432B714C8BE2375F0698AA093BA9BE, 0x5230);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_UseCachedPose_D51E77344F82E970F2B892AC6705EE9D, 0x5308);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_UseCachedPose_6185CF1D43C170BB390D41921E08FD8D, 0x5350);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_UseCachedPose_3AF369D945D39D17FD8A4995B9E27946, 0x5398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_BlendListByBool_47F513A9479C3FD4EB37BAACC7C3466E, 0x53E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_ComponentToLocalSpace_A87469FE4996BE733695EAA35C08043A, 0x54C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_SaveCachedPose_E892310A44E3ED3628CD798C6168222D, 0x5500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_UseCachedPose_03F2AC77485D43E45CBF5BAEE45F93AC, 0x55D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_LocalToComponentSpace_418AF60247B21A88D860DE94453666BB, 0x5620);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_UseCachedPose_2ECC651045E5DB10C880BEAFD1B0E423, 0x5660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_LocalToComponentSpace_11F790D44F6DF141D1628494C49CD2E0, 0x56A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_ComponentToLocalSpace_ED208E9548877076C2A8188072EBDDE5, 0x56E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, UnknownData_YZNK, 0x5728);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AT_TalkAnimGraphNode_LookAt_984F2C694989026BF6E186BF03ABEFA7, 0x5730);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AT_TalkAnimGraphNode_LookAt_0AD760DC4E3017C9E94BC6982097AEEF, 0x59B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AT_TalkAnimGraphNode_LookAt_2FA2EDAA42320E38E1AB478D03B0A309, 0x5C30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AT_TalkAnimGraphNode_LookAt_BDB8B73A4764A148A3B5F5AD9749B526, 0x5EB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AT_TalkAnimGraphNode_LookAt_3134A7DF4F82F81755B2D2AB86BC8DD3, 0x6130);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_ModifyCurve_B453DB794DF530548D621E9266A392FC, 0x63B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_UseCachedPose_32AEA0244FEE40D9B7614AA1C751C98F, 0x6430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_UseCachedPose_0C634E624BF48FF2D88A20A9975E47D8, 0x6478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_UseCachedPose_1BA9655A41354266C3B893942C9A8DF2, 0x64C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, AnimGraphNode_UseCachedPose_0733875B47B9B2C9003EB4A7F5E9D6B4, 0x6508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, SequenceAnimationNum_Get, 0x6550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, IsSlotAnimationExtend_1, 0x6554);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, InterpolationBlendType_Cast, 0x6555);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, UnknownData_IJZH, 0x6556);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, GetLipSize_1, 0x6558);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, GetTriggerThreasholdLookAt_Selected, 0x6560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, IsEnableRotateHeadBone_Implementation_Selected, 0x6564);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, CachedBlendSpaceType, 0x6568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, UnknownData_EAJO, 0x656C);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, BlendSpaceList, 0x6570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, IsEnableRotateHeadBoneAlpha, 0x6580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, IsEnableRotatePelvisBoneAlpha, 0x6584);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTownTalkAnimBlueprint_C, IsEnableRotateSpineBoneAlpha, 0x6588);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTownTalkAnimBlueprint_C, 0x658C);
		}

		// class AQuestCharacterBase_C : public AQuestCharacter
		TEST_METHOD(BlueprintGeneratedClass__QuestCharacterBase__QuestCharacterBase_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacterBase_C, QuestActorFindList, 0x0BF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AQuestCharacterBase_C, NPCTALK, 0x0BF8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AQuestCharacterBase_C, 0x0C00);
		}

		// class AMineralMiningPointNormal_BP_C : public AMineralMiningPointNormal
		TEST_METHOD(BlueprintGeneratedClass__MineralMiningPointNormal_BP__MineralMiningPointNormal_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AMineralMiningPointNormal_BP_C, Billboard, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AMineralMiningPointNormal_BP_C, DamageCollision, 0x05A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMineralMiningPointNormal_BP_C, 0x05B0);
		}

		// class AVariation00Cpl014D_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Cpl014D__Variation00Cpl014D_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Cpl014D_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Cpl014D_C, 0x0380);
		}

		// class AVariation00Cpl075C_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Cpl075C__Variation00Cpl075C_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Cpl075C_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Cpl075C_C, 0x0380);
		}

		// class UBP_C004A_ActionTableAttack_C : public UBP_C000A_ActionTableAttack_C
		TEST_METHOD(BlueprintGeneratedClass__BP_C004A_ActionTableAttack__BP_C004A_ActionTableAttack_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C004A_ActionTableAttack_C, 0x0168);
		}

		// class UBP_C000A_DamageHoldNumb_C : public UATActDmgHoldNumb
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_DamageHoldNumb__BP_C000A_DamageHoldNumb_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_DamageHoldNumb_C, 0x0260);
		}

		// class UBP_C000A_DamageHoldGrasp_C : public UATActDmgHold
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_DamageHoldGrasp__BP_C000A_DamageHoldGrasp_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_DamageHoldGrasp_C, 0x0158);
		}

		// class UBP_C000A_DamageHold_C : public UATActDmgHold
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_DamageHold__BP_C000A_DamageHold_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_DamageHold_C, 0x0158);
		}

		// class UBP_C000A_DamageFaceTrigger_C : public UATActDmgHoldFaceTrigger
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_DamageFaceTrigger__BP_C000A_DamageFaceTrigger_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_DamageFaceTrigger_C, 0x0158);
		}

		// class UBP_C000A_ActionTableAttack_C : public UCharacterActionClassTable
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_ActionTableAttack__BP_C000A_ActionTableAttack_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_ActionTableAttack_C, 0x0168);
		}

		// class UMeshDescription : public UObject
		TEST_METHOD(Class__MeshDescription__MeshDescription)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMeshDescription, 0x0028);
		}

		// class UBP_C000A_SupportBulletGuard_C : public UATActSupportBulletGuard
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_SupportBulletGuard__BP_C000A_SupportBulletGuard_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_SupportBulletGuard_C, 0x0118);
		}

		// class UBP_C000A_SupportPursue_C : public UATActSupportPursue
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_SupportPursue__BP_C000A_SupportPursue_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_SupportPursue_C, 0x0120);
		}

		// class AProjectile_C004A_EnemyRushShotAll_C : public AProjectile_EnemyRushShot
		TEST_METHOD(BlueprintGeneratedClass__Projectile_C004A_EnemyRushShotAll__Projectile_C004A_EnemyRushShotAll_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AProjectile_C004A_EnemyRushShotAll_C, 0x0608);
		}

		// class UBP_C001A_ComboAssistLong_C : public UATActSupportComboAssistLong
		TEST_METHOD(BlueprintGeneratedClass__BP_C001A_ComboAssistLong__BP_C001A_ComboAssistLong_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C001A_ComboAssistLong_C, 0x0150);
		}

		// class UBP_C059A_SkillMoveQuickDash_C : public UATActSkillMoveDash
		TEST_METHOD(BlueprintGeneratedClass__BP_C059A_SkillMoveQuickDash__BP_C059A_SkillMoveQuickDash_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C059A_SkillMoveQuickDash_C, 0x0178);
		}

		// class UBP_C059A_LongRangeAttack_C : public UATActLongRangeCombo
		TEST_METHOD(BlueprintGeneratedClass__BP_C059A_LongRangeAttack__BP_C059A_LongRangeAttack_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C059A_LongRangeAttack_C, 0x0150);
		}

		// class AProjectile_shoot_BP_C : public AATProjectileBullet
		TEST_METHOD(BlueprintGeneratedClass__Projectile_shoot_BP__Projectile_shoot_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AProjectile_shoot_BP_C, 0x0528);
		}

		// class UBP_C057A_SkillMoveTeleport_C : public UATActSkillMoveTeleport
		TEST_METHOD(BlueprintGeneratedClass__BP_C057A_SkillMoveTeleport__BP_C057A_SkillMoveTeleport_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C057A_SkillMoveTeleport_C, 0x0178);
		}

		// class UBP_C057_ActionTableBasic_C : public UCharacterActionClassTable
		TEST_METHOD(BlueprintGeneratedClass__BP_C057_ActionTableBasic__BP_C057_ActionTableBasic_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C057_ActionTableBasic_C, 0x0168);
		}

		// class ULightPropagationVolumeBlendable : public UObject
		TEST_METHOD(Class__LightPropagationVolumeRuntime__LightPropagationVolumeBlendable)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightPropagationVolumeBlendable, UnknownData_7YBO, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightPropagationVolumeBlendable, Settings, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightPropagationVolumeBlendable, BlendWeight, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::ULightPropagationVolumeBlendable, UnknownData_WQ24, 0x0074);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ULightPropagationVolumeBlendable, 0x0078);
		}

		// class AProjectile_Kidan_BigCharge_scmb04_ss2_BP_C : public AATProjectileBullet
		TEST_METHOD(BlueprintGeneratedClass__Projectile_Kidan_BigCharge_scmb04_ss2_BP__Projectile_Kidan_BigCharge_scmb04_ss2_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AProjectile_Kidan_BigCharge_scmb04_ss2_BP_C, 0x0528);
		}

		// class UATAnimNotify_PlaySoundVoiceID_BP_C : public UATAnimNotify_PlaySoundByVoiceID
		TEST_METHOD(BlueprintGeneratedClass__ATAnimNotify_PlaySoundVoiceID_BP__ATAnimNotify_PlaySoundVoiceID_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_PlaySoundVoiceID_BP_C, 0x0058);
		}

		// class UATAnimNotify_PlaySoundFootStep_BP_C : public UATAnimNotify_PlaySoundFootStep
		TEST_METHOD(BlueprintGeneratedClass__ATAnimNotify_PlaySoundFootStep_BP__ATAnimNotify_PlaySoundFootStep_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UATAnimNotify_PlaySoundFootStep_BP_C, 0x0038);
		}

		// class AProjectile_Kidan_Sml_BP_C : public AATProjectileBullet
		TEST_METHOD(BlueprintGeneratedClass__Projectile_Kidan_Sml_BP__Projectile_Kidan_Sml_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AProjectile_Kidan_Sml_BP_C, 0x0528);
		}

		// class UTcpMessagingSettings : public UObject
		TEST_METHOD(Class__TcpMessaging__TcpMessagingSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTcpMessagingSettings, EnableTransport, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTcpMessagingSettings, UnknownData_AUZA, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTcpMessagingSettings, ListenEndpoint, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTcpMessagingSettings, ConnectToEndpoints, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTcpMessagingSettings, ConnectionRetryDelay, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTcpMessagingSettings, UnknownData_ZEAP, 0x0054);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTcpMessagingSettings, 0x0058);
		}

		// class UAB_C058_C : public UATCharacterAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__AB_C058__AB_C058_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, UberGraphFrame, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SaveCachedPose_35F9394F48D1584EB2A0F18995A1B344, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_UseCachedPose_D7FB10754067D93E5B5C0EB57AD31054, 0x0640);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_UseCachedPose_93868C244DF0BDB4253BA589E4931B1A, 0x0688);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_Slot_7CE552EF4F231468424F0EB44CB1E9F4, 0x06D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_LayeredBoneBlend_60726F01430588AD8322BCB9CCE6C865, 0x0738);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SaveCachedPose_111943EE4DF83E0308FF018A709D8CA8, 0x0810);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_UseCachedPose_DAB1A3B64B86D465EAF3FFB45B2DD2F8, 0x08E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_UseCachedPose_3C04DB9744295CBF059554A669291E3D, 0x0930);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_LayeredBoneBlend_65A7DA8546B37F2FB613928A0A071DF5, 0x0978);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SaveCachedPose_15D577D64839EB535A54D69D6529BC56, 0x0A50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SaveCachedPose_7769165D4BBE09D085ECF49CE3A5CB06, 0x0B28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_Slot_0ABF291B4541BBD9590AE093AB6E4424, 0x0C00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_LayeredBoneBlend_011584654CF9DA020234C782310ADA46, 0x0C68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_Slot_1A8B441246A03A7A75815495372506E3, 0x0D40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_LayeredBoneBlend_C932582D402649DBDB64A7BE91E52678, 0x0DA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SaveCachedPose_CB20836D48CEEC00DD72738238B651BC, 0x0E80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SaveCachedPose_60E60448438988B37A595AB67DABFD69, 0x0F58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_LayeredBoneBlend_03A6E4214E94CE573A502481B8983E4E, 0x1030);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_Slot_5F28C92E4134913A8B8739ABC3E0414F, 0x1108);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_Slot_EF62FD184DA61D4CFBA83495D7A6C85C, 0x1170);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SaveCachedPose_43C3D2B54FBE0A1F005698875741E2AD, 0x11D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_Slot_C114670A483005216F7A799E7A600D45, 0x12B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_Slot_4F6668D64058A9F94C6957B851F4E07C, 0x1318);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_LayeredBoneBlend_E2F2409D4327E95B47174CB693C9FED2, 0x1380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SaveCachedPose_01A810FD472BD1B6BC59AAA99092A0A6, 0x1458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_ModifyBone_B4451182453DEEC52F893FB0F4FB6909, 0x1530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_LocalToComponentSpace_A01A9C6A42E0EA2450713088D90E47F1, 0x1668);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_ComponentToLocalSpace_13D684454BBB1E1C0B3DAF95539DC99B, 0x16A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_BlendListByBool_A57A2DEC43E00E4436342E8536E2673A, 0x16E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SaveCachedPose_1499DBEB4A26A184B819C699E8EBE708, 0x17C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_UseCachedPose_751E351C4576E53FBC7B17A022BC0A8A, 0x18A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_UseCachedPose_9D18D223460C5B5FB08784B4D8A140A2, 0x18E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_UseCachedPose_3602670340CD859829657FAE903343F9, 0x1930);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_UseCachedPose_54A1A6484571B551114EDEBB63D16FB3, 0x1978);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_UseCachedPose_1873F9804202B44E8D212EAACC05346F, 0x19C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_UseCachedPose_B89BFA7D4BAF636975F8599C5FED349F, 0x1A08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_UseCachedPose_7D5B71CA4ECA3287D94383A2D6A2799F, 0x1A50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_UseCachedPose_6642F00D49A7834762413491410A9871, 0x1A98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_UseCachedPose_5BA25BAE49BCCB41147BF495CD321976, 0x1AE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_UseCachedPose_39C43F9D4414F5A050B692AE2E14968D, 0x1B28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_UseCachedPose_67ADCF814B9A42CD4E54379B09B87819, 0x1B70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_UseCachedPose_13F4660949227FFB9EA7729BF47FA28C, 0x1BB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SaveCachedPose_398BC24142795222FF6D34AB87BFE101, 0x1C00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_7BCFF42F44E3CFA8152CEE97B032D256, 0x1CD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_9FDBD97245FF7A2326DBD697845F6B90, 0x1D20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_30212C30407AD9ACC3FE1D9E4BDF756D, 0x1D68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_7428A73944A0D3958D57388C26BD5D65, 0x1DB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_C16DE71B4EB866826FBEE69C3FE81111, 0x1DF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_5ACB9E374C7F2F8A9C409494DB723891, 0x1E40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_CD89144C472FC22D5C6A259D4423FEF3, 0x1E88);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_886BB8AF4E2CA0B1A80144BE8E2F756A, 0x1ED0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_A108449440EDB3AB35332CA4F6BB4BBE, 0x1F18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_4C4DC1DC4032C5592F8931B29857B2DC, 0x1F60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_573145D1491E382D04114491A41C55E2, 0x1FA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_54D7D7D349D789FC4E6EFD92FA143F27, 0x1FF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_FE81400942C33BF179E016807B79E95A, 0x2038);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_3373CBC843AC55C2790D109F83AD2EE7, 0x2080);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_D309FFB64ED007BEA93F09885D7C2FF8, 0x20C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_A39F32FE46E1373905CBEFA3331B0EDA, 0x2110);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_D27F7E4D43DA87B159B8349E4E6F14B3, 0x2158);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_72A7434545F86DF12DE771983C80F9FF, 0x21A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_DE7D1C9942C8CEA832376CA34921B543, 0x21E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_3D56B5CA40A2C446D64C8FB328F77575, 0x2230);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_AEED98384E306DF78BF793BD0B61EA76, 0x2278);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_C8A311D346498429B1155A98F75BD20A, 0x22C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_47D34C8743484D8A05A7F489E5C7A821, 0x2308);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_98346F4D45BC56522852CF89DBF8B6A1, 0x2350);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_41B315B74658077738D43F86015A6C4E, 0x2398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_2D04F6AF4FF19259EE1C5DA65B8D0E13, 0x23E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_E7B7CF3F4270B2B2C98D1DADBABA9823, 0x2428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_29D0EB134DC57666B98CB9974755712B, 0x2470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_EEA7519741CF6B4DA76A4699A6BB532E, 0x24B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_8AADBEAB4599A5F095A983B0BFE28470, 0x2500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_A8A8F33344EA6FEE137C09BC8DB594A4, 0x2548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_12688E35465CBFED8D5320B7183E283B, 0x2590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_6F07A3BE4E1285A3BCC32DA6F3B1D901, 0x25D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_AE95C9DD44FA5BB1A84B9EBF2A1E6673, 0x2620);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_A2BB1C3F48D7B20B4469B3880BD39776, 0x2668);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_D5DEC452484A3E25A9E867BFFED6CCB1, 0x26B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_8F725A8146281E77A8498B846C11D18D, 0x26F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_F27C33794C5C3ED20D58F7BE8FBD0CD0, 0x2740);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_4F4AE3C14CD277B09B6E2DB604E77D7E, 0x2788);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_12E662054D678F1887FE6AAF244122C0, 0x27D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_22C903A44100B3424A0E23BA01B25C13, 0x2818);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_AC434CE547A6B59264EB969B24A0FA46, 0x2860);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_8D61DA7F4BD97652D23FD4B6361926B0, 0x28A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_7982B7BB44D6461CE442AA92BE00346D, 0x28F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_B79D4C5B4E7CAB6D4AF954BE1775F525, 0x2938);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_4BF6323C4357951B4CB6BD859A43BF26, 0x2980);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_96DAC3D345270EE82E36A0B077B8AE34, 0x29C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_2B3491E749F17C38FB17F688A1AB2B9E, 0x2A10);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_995E888E47ECB5ED118C9286EA99634A, 0x2A58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_368ED987473BE0815F52B78E6721F894, 0x2AA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_90CED8B243CD9DE6CA99528AB0427FA0, 0x2AE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_038BEF1A42C84044069356A8EC45E680, 0x2B30);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_DE8198FA4A3F2609ED304FBCE582D1B1, 0x2B78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_CBC04D044A4F98A3153D469902750CFC, 0x2BC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_8A6BADC648BEF1B400A4E3B31A03EE2C, 0x2C08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_91874C224DAE0596AC750996620DA0F9, 0x2C50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_B28DCE664A73035E55D92CAB2BC8C07D, 0x2C98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_83F80F67422EAED9B760BCB8496CA612, 0x2CE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_98DAF8554E42CE35444FDBAE9F37CE52, 0x2D28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_3237FC72478DAE46AE5C938946E4DBC4, 0x2D70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_6B73ECA74FA79920D4CF99A217FC93EE, 0x2DB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_61694F6D4599A1530802C6A52842E96D, 0x2E00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_448309834E3A3D99FEE0E0B711EF3FAE, 0x2E48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_C4F88A1A4F75AB003162E58E25DE93E8, 0x2E90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_50ECDDAB49A52F83AA0EF98B837D3D86, 0x2ED8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_E2E3623642C1848C8ADD57A5CF67C5C7, 0x2F20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_855588744E483C5A1DB599B2BFDE0B70, 0x2F68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_903AF80B49D58C928A97938230AAC17D, 0x2FB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_41B09261454172E7566378B29FEB3D15, 0x2FF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_36042C5D4CDA4F6766E85482B8FFD878, 0x3040);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_8F62E6344BD74CE77738568E9AF5191D, 0x3088);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_3C56052340D16B874A5D5D80AD4DEFE6, 0x30D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_FD26F9E24FAC13849A6DBEB8797EE5D1, 0x3118);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_BF35CC3E43382F86AEE5BD8AE7E0A864, 0x3160);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_C47EEFBA4E60C11C22209496F6CD5E4E, 0x31A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_3B5AAA9E4C2C165C78FE69BF0C8BBF4E, 0x31F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_2A8F38CA42C8F4CF9397AA862E8437B2, 0x3238);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_5098A1F4478CA924F3FFC590EA5D58AF, 0x3280);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_A54191EA415E8BFE06B046A457926CA3, 0x3320);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_C33DEF86484D65E511BFB8B8FB535105, 0x3360);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_B5A8793244DB18AAF500B6BE1DEF602F, 0x3400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_728FFAB44C1F2A7FBF0FFA9845929DDB, 0x3440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_17BA3F1D4772E66D5452D0A189042417, 0x34E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_BlendSpacePlayer_CA1B521A4CE94D4FB06F53A872448FFD, 0x3520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_A32B7354458EBCBEFE9DC986A0FA7471, 0x3648);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_A62147394E86A18C2BDF2E8544F9F471, 0x3688);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_3BFA6D40496901AB53A987835344CA0F, 0x3728);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_FEBDF4194450796C64E4CE95A59FB32E, 0x3768);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_472CB9654F21729A48D216875804A7D9, 0x3808);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_37160EB249D470A48B08C889EF44F200, 0x3848);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_AB09F1D2424F3F9564FDD992376521A4, 0x3890);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_DCFD48494F657E5EEB63DCAAF57909F0, 0x38D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_7A6A26834F6B5A00576A48BB0C7C9344, 0x3978);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_C9DA686A4D8256E5826F76B95BECBA6A, 0x39B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_AA9B8E504457CE95144F63A0E08B77A8, 0x3A58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_2198271C4FF4A99DD1EA4BB66B806CC1, 0x3A98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_D422841540C8567A7F44F990372AE6B3, 0x3B38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_0C2F4AF1418A1B688C38A98A112561A3, 0x3B78);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_CEB5AEFA47DFFB00C33878B445C33E1A, 0x3C18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_CA76204F48BFAB3AF948C19416A1BDD3, 0x3C58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_D7662A42468D07419F7AE7A55418AFA7, 0x3CF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_BCB61DA34A2E560DE221C2B6909C2F99, 0x3D38);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_16DB3FB9464F5E9004B80FB40E235E38, 0x3DD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_6667E7D1422321E8468991BE49201D0C, 0x3E18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_60302E04408F1DEABCB33AA209F75296, 0x3EB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_9709F34542CC46157098318582E7B285, 0x3EF8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_15C8E3A0439D344A26F2C390BB2335A6, 0x3F98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_F6FCE505479EED2FE7687BAC6C88C18F, 0x3FD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_C70321964B0AEE4F76D916862DE6FCB9, 0x4078);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_BlendSpacePlayer_F28B5EE14B3BCBB2567FC9ABC88D33E0, 0x40B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_C9DDAC914F76F2341EE734A159E4384D, 0x41E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_BlendSpacePlayer_6448BE174CCC440FC60BC5BA92797C04, 0x4220);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_6852B2AE47F7BB8F4A33E2B93D301990, 0x4348);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_BlendSpacePlayer_7468EB624CDBF05463137D872BCF1EFD, 0x4388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_B2CC524F4CC0AA05697AE885EB266F86, 0x44B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_12B75D424E2CEF67ECC7199ED62FDAE4, 0x44F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_2A79FC0B4FE870B7AF0684BE18EDECC2, 0x4590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_547F83E942A7E836F2F66DB1D22BF5F5, 0x45D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_1FAE61374E309D2FBD5A679BE1CDC4C8, 0x4618);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_9892C18B4B6593278B3177B506A30D4D, 0x4660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_0AE221984C049D19CD52F08699030176, 0x4700);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_BlendSpacePlayer_004896E345D9A24019DA89B4C05F4FF8, 0x4740);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_5075597042653611A5A121AC79B76BC3, 0x4868);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_55BB537A4FC7F094F8661B9D88074264, 0x48A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_FB04767D4BBCEA993C7F3081AAD79BD7, 0x4948);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_9D1F429A4ADC00F1A9037898024B555D, 0x4988);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_E41709624FF12E0F279534840AFB109D, 0x49D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_3ABEA6114BBBD1BDB91DC69201B8D45E, 0x4A18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_C2E8DB5F4534AB0ACC87C9AA4999D985, 0x4AB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_BlendListByEnum_9A7B335D42D670A5943B528561D32374, 0x4B58);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_5077331D41DB7B0C479527862E914746, 0x4C48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_B32526924C6EC24C626697A95DAA4A51, 0x4CE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_9EB18D224D261596276C17BC93E856E6, 0x4D28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_D609D42248CCF2E2A42203B672920F1A, 0x4D70);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_7825CBA1468AF1B22533718B1398437C, 0x4DB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_9970E73B49DED0E316A9EFACD8B3C3E3, 0x4E00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_C4D736A34FF2B45528DAFB89EC2172BE, 0x4E48);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_03EF975B41C6E5EC41CDF8BBCB76F186, 0x4E90);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_09064D19431CC3C7F431F19C430B96B7, 0x4ED8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_AF881B414602334AABC7188DF784A256, 0x4F20);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_61662B054E766CAFDF931AB7F5E85ABB, 0x4FC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_FC20EC914B1D552A577050BBB8A8EDD5, 0x5000);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_03B213A141DC0F4450743A8ABD84CCB5, 0x50A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_DA9D43DE4F4B0E5EC06317880061D4D4, 0x50E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_2094FA6041E6B431A0E2739E20EB97AF, 0x5180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_66BD90F94021085767EFF1AD1FB9556D, 0x51C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_28DF13084A71B5B7659EEA8802EB845C, 0x5260);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_1E52ECD34E8465D79F1ABBA3408DF7AB, 0x52A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_D477A8704D122E4901E11DADA8CC69A9, 0x5340);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_450E389049D3A5220ED0719465A45C68, 0x5380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_F85ED106444B24C93C12CFB764335EB5, 0x5420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_E996DE7F4D805432049D9F99C53837D0, 0x5460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_6E9B1B0A4DD1A16A76258A8F635E59E4, 0x5500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_18B6FAFE47B37FF899C2D9ADA32C5665, 0x5540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_EA8B6E134E5649D3AB3CEAB5B1A0E0AB, 0x55E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_872861E14CD7B3E1C9F626B4377D1F19, 0x5620);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_E45645FF432C45DF75CF12B1696A6A9C, 0x56C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_AB53C43B486B22CD45405ABC39921880, 0x5700);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_6E9395214B9A661EBEB0A1B2AF6981D5, 0x57A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SequencePlayer_E1C9A439475E17A1085060BF145AAA05, 0x57E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateResult_5C970F4A49384CF8D006B38E6BA2FB5D, 0x5880);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_TransitionResult_AC0C04334205AB5F42D41C8C5F018A56, 0x58C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_StateMachine_54FC431846BCBCB1C93681B76732226B, 0x5908);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_BlendListByBool_BA1C898D4D0A6357305D18ADA7058C5D, 0x59E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_SaveCachedPose_7FCB1C774F43C79C43BC0ABEBE0C610D, 0x5AC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_ApplyMeshSpaceAdditive_ECB29FA342C50F1C4D8108B80675FB9F, 0x5BA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_UseCachedPose_37DA25814AEED73C572632A770296C08, 0x5C08);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_UseCachedPose_CA5B698A46E53775128B85AAA9CC414D, 0x5C50);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_UseCachedPose_EEB44A82403F78AFC5B0C586BE23AB0C, 0x5C98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_LayeredBoneBlend_1D36AAA9463246AE620EC09016020A91, 0x5CE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_UseCachedPose_26BB3D074E73561BD07B60BFC265417C, 0x5DB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_BlendSpacePlayer_613D5C7248E212BAC64798B84DEDF0A4, 0x5E00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UAB_C058_C, AnimGraphNode_Root_833A2E474239239F748FFC82E0B258E9, 0x5F28);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAB_C058_C, 0x5F68);
		}

		// class ACableActor : public AActor
		TEST_METHOD(Class__CableComponent__CableActor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ACableActor, CableComponent, 0x0338);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ACableActor, 0x0340);
		}

		// class UCableComponent : public UMeshComponent
		TEST_METHOD(Class__CableComponent__CableComponent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UCableComponent, bAttachStart, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCableComponent, bAttachEnd, 0x0591);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCableComponent, UnknownData_MTP8, 0x0592);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCableComponent, AttachEndTo, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCableComponent, AttachEndToSocketName, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCableComponent, EndLocation, 0x05B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCableComponent, CableLength, 0x05C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCableComponent, NumSegments, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCableComponent, SubstepTime, 0x05CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCableComponent, SolverIterations, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCableComponent, bEnableStiffness, 0x05D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCableComponent, bEnableCollision, 0x05D5);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCableComponent, UnknownData_MQDH, 0x05D6);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCableComponent, CollisionFriction, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCableComponent, CableForce, 0x05DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCableComponent, CableGravityScale, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCableComponent, CableWidth, 0x05EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCableComponent, NumSides, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCableComponent, TileMaterial, 0x05F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::UCableComponent, UnknownData_XUWL, 0x05F8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UCableComponent, 0x0610);
		}

		// class AA014_BP_C : public AAnimalMob_Pawn_C
		TEST_METHOD(BlueprintGeneratedClass__A014_BP__A014_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AA014_BP_C, WolfComponent, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::AA014_BP_C, DamageCollision, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::AA014_BP_C, ATNavigationInvoker, 0x0470);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AA014_BP_C, 0x0478);
		}

		// class UBP_C058A_DmgDeathLP_C : public UATActCpl059DmgDeathLP
		TEST_METHOD(BlueprintGeneratedClass__BP_C058A_DmgDeathLP__BP_C058A_DmgDeathLP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C058A_DmgDeathLP_C, 0x0118);
		}

		// class UBP_C075_ActionTableDamage_C : public UBP_C000A_ActionTableDamage_C
		TEST_METHOD(BlueprintGeneratedClass__BP_C075_ActionTableDamage__BP_C075_ActionTableDamage_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C075_ActionTableDamage_C, 0x0168);
		}

		// class UBP_C001A_ActionTableDamage_C : public UBP_C000A_ActionTableDamage_C
		TEST_METHOD(BlueprintGeneratedClass__BP_C001A_ActionTableDamage__BP_C001A_ActionTableDamage_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C001A_ActionTableDamage_C, 0x0168);
		}

		// class AVariation00Cpl057B_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Cpl057B__Variation00Cpl057B_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Cpl057B_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Cpl057B_C, 0x0380);
		}

		// class UBP_C056_ActionTableBasic_C : public UCharacterActionClassTable
		TEST_METHOD(BlueprintGeneratedClass__BP_C056_ActionTableBasic__BP_C056_ActionTableBasic_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C056_ActionTableBasic_C, 0x0168);
		}

		// class UBP_C056_ActionTableAttack_C : public UCharacterActionClassTable
		TEST_METHOD(BlueprintGeneratedClass__BP_C056_ActionTableAttack__BP_C056_ActionTableAttack_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C056_ActionTableAttack_C, 0x0168);
		}

		// class UBP_C000A_GuardAround_C : public UATActGuardAround
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_GuardAround__BP_C000A_GuardAround_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_GuardAround_C, 0x0130);
		}

		// class UBP_C024A_DamageHoldCpl024_C : public UATActDmgHoldCpl024
		TEST_METHOD(BlueprintGeneratedClass__BP_C024A_DamageHoldCpl024__BP_C024A_DamageHoldCpl024_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C024A_DamageHoldCpl024_C, 0x0260);
		}

		// class UBP_C001A_S_SKL003_2_Action_C : public UATActSkillSparking
		TEST_METHOD(BlueprintGeneratedClass__BP_C001A_S_SKL003_2_Action__BP_C001A_S_SKL003_2_Action_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C001A_S_SKL003_2_Action_C, 0x0170);
		}

		// class UBP_C001A_S_SKL003_3_Action_C : public UATActSkillSparking
		TEST_METHOD(BlueprintGeneratedClass__BP_C001A_S_SKL003_3_Action__BP_C001A_S_SKL003_3_Action_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C001A_S_SKL003_3_Action_C, 0x0170);
		}

		// class UBP_C000A_SpecialMoveZigzagTeleport_C : public UATActSpecialMoveZigzagTeleport
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_SpecialMoveZigzagTeleport__BP_C000A_SpecialMoveZigzagTeleport_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_SpecialMoveZigzagTeleport_C, 0x0178);
		}

		// class UBP_C000A_SpecialMoveTeleportView_C : public UATActSpecialMoveTeleportView
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_SpecialMoveTeleportView__BP_C000A_SpecialMoveTeleportView_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_SpecialMoveTeleportView_C, 0x0118);
		}

		// class UAB_C058A_C : public UAB_C058_C
		TEST_METHOD(AnimBlueprintGeneratedClass__AB_C058A__AB_C058A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAB_C058A_C, 0x5F68);
		}

		// class AForm00Cpl056A_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Cpl056A__Form00Cpl056A_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Cpl056A_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Cpl056A_C, 0x0380);
		}

		// class AAT_Character_cpl004p1c04_BP_C : public AATCharacterCpl004c04
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl004p1c04_BP__AT_Character_cpl004p1c04_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl004p1c04_BP_C, UberGraphFrame, 0x0FA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl004p1c04_BP_C, AtomCueSheetLoader, 0x0FA8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl004p1c04_BP_C, 0x0FB0);
		}

		// class UBP_Cpl074StatusC03_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl074StatusC03__BP_Cpl074StatusC03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl074StatusC03_C, 0x00F0);
		}

		// class UBP_Cpl023Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl023Status__BP_Cpl023Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl023Status_C, 0x00F0);
		}

		// class UBP_Cpl018Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl018Status_Atrocious__BP_Cpl018Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl018Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl017Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl017Status_Atrocious__BP_Cpl017Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl017Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl014StatusC04_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl014StatusC04__BP_Cpl014StatusC04_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl014StatusC04_C, 0x00F0);
		}

		// class UBP_Cpl014Status_Event_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl014Status_Event__BP_Cpl014Status_Event_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl014Status_Event_C, 0x00F0);
		}

		// class UBP_Cpl011Status_Learning_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl011Status_Learning__BP_Cpl011Status_Learning_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl011Status_Learning_C, 0x00F0);
		}

		// class UBP_Cpl010Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl010Status__BP_Cpl010Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl010Status_C, 0x00F0);
		}

		// class AAT_Character_cpl057Ac03_BP_C : public AAT_Character_cpl057A_BP_C
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl057Ac03_BP__AT_Character_cpl057Ac03_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl057Ac03_BP_C, 0x0FB0);
		}

		// class UFighting_Power_Param_C057Ac03_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C057Ac03__Fighting_Power_Param_C057Ac03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C057Ac03_C, 0x0060);
		}

		// class UFighting_Power_Param_C056Ac03_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C056Ac03__Fighting_Power_Param_C056Ac03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C056Ac03_C, 0x0060);
		}

		// class UFighting_Power_Param_C014Ac01_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C014Ac01__Fighting_Power_Param_C014Ac01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C014Ac01_C, 0x0060);
		}

		// class UUniqueDataNpc061_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc061__UniqueDataNpc061_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc061_C, 0x0070);
		}

		// class UUniqueDataNpc060_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc060__UniqueDataNpc060_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc060_C, 0x0070);
		}

		// class UUniqueDataNpc047_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc047__UniqueDataNpc047_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc047_C, 0x0070);
		}

		// class UUniqueDataNpc045_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc045__UniqueDataNpc045_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc045_C, 0x0070);
		}

		// class UUniqueDataNpc038_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc038__UniqueDataNpc038_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc038_C, 0x0070);
		}

		// class UUniqueDataNpc030_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc030__UniqueDataNpc030_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc030_C, 0x0070);
		}

		// class UUniqueDataNpc029_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc029__UniqueDataNpc029_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc029_C, 0x0070);
		}

		// class UUniqueDataNpc028_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc028__UniqueDataNpc028_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc028_C, 0x0070);
		}

		// class UUniqueDataNpc025_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc025__UniqueDataNpc025_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc025_C, 0x0070);
		}

		// class UUniqueDataNpc017_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc017__UniqueDataNpc017_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc017_C, 0x0070);
		}

		// class UUniqueDataNpc015_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc015__UniqueDataNpc015_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc015_C, 0x0070);
		}

		// class UUniqueDataCpl014C_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl014C__UniqueDataCpl014C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl014C_C, 0x0070);
		}

		// class UUniqueDataCpl012_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl012__UniqueDataCpl012_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl012_C, 0x0070);
		}

		// class UUniqueDataCpl011_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl011__UniqueDataCpl011_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl011_C, 0x0070);
		}

		// class UUniqueDataCpl004D_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl004D__UniqueDataCpl004D_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl004D_C, 0x0070);
		}

		// class UUniqueDataCpl004C_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl004C__UniqueDataCpl004C_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl004C_C, 0x0070);
		}

		// class UUniqueDataCpl003_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl003__UniqueDataCpl003_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl003_C, 0x0070);
		}

		// class UUniqueDataCpl002_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl002__UniqueDataCpl002_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl002_C, 0x0070);
		}

		// class UFighting_Power_Param_C006A_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C006A__Fighting_Power_Param_C006A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C006A_C, 0x0060);
		}

		// class UFighting_Power_Param_C007A_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C007A__Fighting_Power_Param_C007A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C007A_C, 0x0060);
		}

		// class UFighting_Power_Param_C010A_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C010A__Fighting_Power_Param_C010A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C010A_C, 0x0060);
		}

		// class UFighting_Power_Param_C036A_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C036A__Fighting_Power_Param_C036A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C036A_C, 0x0060);
		}

		// class UFighting_Power_Param_C063A_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C063A__Fighting_Power_Param_C063A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C063A_C, 0x0060);
		}

		// class UBP_Cpl056StatusC01_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl056StatusC01__BP_Cpl056StatusC01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl056StatusC01_C, 0x00F0);
		}

		// class UBP_Cpl056Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl056Status_Atrocious__BP_Cpl056Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl056Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl042Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl042Status_Atrocious__BP_Cpl042Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl042Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl041AStatus_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl041AStatus_Atrocious__BP_Cpl041AStatus_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl041AStatus_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl040Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl040Status__BP_Cpl040Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl040Status_C, 0x00F0);
		}

		// class UBP_Cpl036Status_enemy_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl036Status_enemy__BP_Cpl036Status_enemy_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl036Status_enemy_C, 0x00F0);
		}

		// class UBP_Cpl025Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl025Status__BP_Cpl025Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl025Status_C, 0x00F0);
		}

		// class UBP_Cpl024Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl024Status__BP_Cpl024Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl024Status_C, 0x00F0);
		}

		// class AArea03_Env_Cliff_01_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Cliff_01__Area03_Env_Cliff_01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Cliff_01_C, 0x0340);
		}

		// class ABP_Bench_C : public ABP_FieldObjectBase_C
		TEST_METHOD(BlueprintGeneratedClass__BP_Bench__BP_Bench_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Bench_C, Billboard, 0x0358);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Bench_C, 0x0360);
		}

		// class UTalkAnimBP_N013A_C : public UTalkAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__TalkAnimBP_N013A__TalkAnimBP_N013A_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, UberGraphFrame, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_Root_80A2F05A4DCCC9CC25EC7C813D0FB3C7, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_UseCachedPose_16DED1DB438F83260FBCD99F033FFF8E, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_TransitionResult_FD0886034C6442EAF46B6C94A43C69FA, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_TransitionResult_C9A505414578B5BE919FA1A5CE050E39, 0x0628);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_TransitionResult_592515AB4A56CB98EDDA1E989433F7D9, 0x0670);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_TransitionResult_000EDEA34F85F057350C0191C437925C, 0x06B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_SequencePlayer_8278CC8B434184ABEC4FE388AA0D9526, 0x0700);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_StateResult_AD0387EB49FB4010442437AD36B5F9FC, 0x07A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_SequencePlayer_9DF2676143619D8081CF69B58748183A, 0x07E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_StateResult_784A8E2A4354C79CF4DCB295EFDB6E3D, 0x0880);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_SequencePlayer_CA0EF1EC4241FEB7C8F3CAAB92C8D6FE, 0x08C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_StateResult_78A8A40F4989509FFDEDB1A600C54DA7, 0x0960);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_SequencePlayer_5AFDEF584B2F0D22A752C6B46E26BC40, 0x09A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_StateResult_BAF1B53A452D8CBAFCC6ABA877C5E63A, 0x0A40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_StateMachine_FEF5E83146807ED1E083CF84C1E1076F, 0x0A80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_ModifyBone_FC7B9CFD486A7A948478D280DB13E101, 0x0B60);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_LocalToComponentSpace_F0AE1495448F542140FB088DA0FF95E5, 0x0C98);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_SaveCachedPose_4798C209409619EFFA19BF8AA7828D4D, 0x0CD8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_Slot_11433BC34281B07585FF67A32BBBF00F, 0x0DB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_LayeredBoneBlend_608BACAD46AF49CE284B3091AEF67B7C, 0x0E18);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_SaveCachedPose_6B9C74BC4295FE17C77C0488FB4FF283, 0x0EF0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_ModifyBone_AE02148A4A4C7798F6AC70A00BCC6094, 0x0FC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_LocalToComponentSpace_8D05D74242B9A9099E82EBBEE255CD49, 0x1100);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_ComponentToLocalSpace_094C5B9B4DDAEAD187DE0B81D675DE8D, 0x1140);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_BlendListByBool_06D2C181455924A6630CDF9FB5401A81, 0x1180);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_SaveCachedPose_E658F7F049A747458CA73F991DEA1B77, 0x1260);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_UseCachedPose_AB8175EC429EDA98DE38D8BD2EBA29DE, 0x1338);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_UseCachedPose_73BD76B04FEBE0BF5755B696B4A97219, 0x1380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_UseCachedPose_C697CF1D44B75C24DC7E5F88FF02885F, 0x13C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_UseCachedPose_1F9A883A448491FFACEE66A600D15C47, 0x1410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_UseCachedPose_14FDBDE24092AD6312701D818682F216, 0x1458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_LookAt_5D5DB8854F21018707D98EB13085A4A2, 0x14A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_LookAt_828263E94F05DCBF90E382A7FA74D504, 0x16C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_LookAt_9FB0027A4AB6951DE6A0339B32210E9D, 0x18E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_BlendListByBool_CA39C00F41EC4946B20EE8B1328DA40B, 0x1B00);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_UseCachedPose_5834F7E94A8BAC2B59B85E9B312BED62, 0x1BE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_ComponentToLocalSpace_7F46783F4F6D76676F72DB96A5BACB52, 0x1C28);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_SaveCachedPose_2EDC288041BFB66AAD31B29461314A5D, 0x1C68);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_UseCachedPose_992C29E6425B6B2D584FF58323338674, 0x1D40);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_UseCachedPose_7ACA22DB4E235000BFC21983DC129E70, 0x1D88);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_LayeredBoneBlend_DD6DCA38415DAA82BFEB05B646AA0B10, 0x1DD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_SaveCachedPose_2A1568B949F096DAB1D76BA007142F0B, 0x1EA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_TransitionResult_9C37D018419DBB9968FCB7BD0275104D, 0x1F80);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_TransitionResult_8D28F459466AEE1BC74E81B1D6DF8696, 0x1FC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_SequencePlayer_B041907F4B9FFCC87134709CAEE6FF1F, 0x2010);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_StateResult_A3DEEE8C4FF0E83B4751E4A5CBEE5DD7, 0x20B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_SequencePlayer_6511B7654DE87D8FDE8B3FB5EFAD60F9, 0x20F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_StateResult_BB6B68834D0866465140DFACBA3E6E20, 0x2190);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_StateMachine_5FFCAA84467322899CE544938C088404, 0x21D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_BlendListByBool_7FC9C87746F06053931B4FAB89D16DD8, 0x22B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_BlendSpacePlayer_9DF081C04FF41209A93A2F82CD7D4C33, 0x2390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, AnimGraphNode_LayeredBoneBlend_B6E734C147F232B149E8378E05C0943C, 0x24B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, IsSlotAnimationExtend_1, 0x2590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, GetInterpolationBlendType, 0x2591);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, UnknownData_YX98, 0x2592);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTalkAnimBP_N013A_C, GetLipSize_1, 0x2594);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTalkAnimBP_N013A_C, 0x259C);
		}

		// class UMgame_Bar00_C : public UAT_UIMiniGameBar00
		TEST_METHOD(WidgetBlueprintGeneratedClass__Mgame_Bar00__Mgame_Bar00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Bar00_C, UberGraphFrame, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Bar00_C, Clear, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Bar00_C, Icon_Clear_S, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Bar00_C, Img_Icon_Loop, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Bar00_C, Ins_Icon_Item, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Bar00_C, Ins_Round_Base01_00, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Bar00_C, Ins_Round_Base01_01, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Bar00_C, Txt_Conditions, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Bar00_C, Txt_Detail, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Bar00_C, Txt_Item, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Bar00_C, Txt_Reword, 0x0440);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMgame_Bar00_C, 0x0448);
		}

		// class UMgame_Bar01_C : public UAT_UIMiniGameBar01
		TEST_METHOD(WidgetBlueprintGeneratedClass__Mgame_Bar01__Mgame_Bar01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Bar01_C, UberGraphFrame, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Bar01_C, Change, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Bar01_C, Img_Round_Win00_Curs00, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Bar01_C, Img_Round_Win01_Curs00, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Bar01_C, Ins_Round_Base01_00, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Bar01_C, Ins_Round_Base01_Blur, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Bar01_C, Ins_Win_Round_Curs00_Eff_01, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Bar01_C, Txt_Name, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Bar01_C, Txt_Name01, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Bar01_C, Txt_Pt, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Bar01_C, Txt_Pt01, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Bar01_C, Txt_Rank, 0x0400);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMgame_Bar01_C, 0x0408);
		}

		// class UMgame_Top_C : public UAT_UIMiniGameTop
		TEST_METHOD(WidgetBlueprintGeneratedClass__Mgame_Top__Mgame_Top_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Out_1, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Enter03_Back, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Enter02_Back, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Enter01_Back, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Enter00_Back, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Enter03, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Enter02, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Enter01, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Enter00, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Out, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, In, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, All_Nut, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Image_1, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Img_Win00, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Img_Win01, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Img_Win02, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Ins_Mask_Db, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Shop_Cmn_Money, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Txt_Cap01, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Txt_List00, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Txt_List01, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Txt_Num_Pt, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Txt_Num_Runk, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Xlist_Bar01_00, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Xlist_Bar01_01, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Xlist_Bar01_02, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Xlist_Bar01_03, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Xmenu_Bg, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Top_C, Xmenu_Cloud_Btm, 0x0508);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMgame_Top_C, 0x0510);
		}

		// class ABP_InformationShop_C : public AActor
		TEST_METHOD(BlueprintGeneratedClass__BP_InformationShop__BP_InformationShop_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_InformationShop_C, Collision, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_InformationShop_C, PointLight, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_InformationShop_C, MobIcon, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_InformationShop_C, StaticMesh, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_InformationShop_C, DefaultSceneRoot, 0x0358);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_InformationShop_C, 0x0360);
		}

		// class AArea03_Fishing_01_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Fishing_01__Area03_Fishing_01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Fishing_01_C, 0x0340);
		}

		// class UMgame_Hunt_Gauge_C : public UAT_UIMiniGameHunt_Gauge
		TEST_METHOD(WidgetBlueprintGeneratedClass__Mgame_Hunt_Gauge__Mgame_Hunt_Gauge_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Hunt_Gauge_C, Out, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Hunt_Gauge_C, In, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Hunt_Gauge_C, Icon_Hunt, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Hunt_Gauge_C, Img_Game_Hunt_Flam01, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Hunt_Gauge_C, Img_Gauge_E_Flam02, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Hunt_Gauge_C, Ins_Eff00, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Hunt_Gauge_C, Ins_Eff01, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Hunt_Gauge_C, Ins_Gauge_Hunt, 0x0400);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMgame_Hunt_Gauge_C, 0x0408);
		}

		// class AArea03_Env_Satancity_02_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Satancity_02__Area03_Env_Satancity_02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Satancity_02_C, 0x0340);
		}

		// class UMgame_Hunt_C : public UAT_UIMiniGameHunt
		TEST_METHOD(WidgetBlueprintGeneratedClass__Mgame_Hunt__Mgame_Hunt_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Hunt_C, Out_Warning, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Hunt_C, Loop_Warning, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Hunt_C, In_Warning, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Hunt_C, All_Nut, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Hunt_C, Lang_Warning, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Hunt_C, Mgame_Tips, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Hunt_C, Warning_Base00, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Hunt_C, Warning_Base01, 0x0438);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMgame_Hunt_C, 0x0440);
		}

		// class UXcmn_Fade_Blur_C : public UAT_UIXcmnFadeBlur
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xcmn_Fade_Blur__Xcmn_Fade_Blur_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Fade_Blur_C, Out, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Fade_Blur_C, In, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Fade_Blur_C, Img_Black_Fade, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXcmn_Fade_Blur_C, Img_Screen_Cap, 0x03B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXcmn_Fade_Blur_C, 0x03B8);
		}

		// class AAutoMoveTrigger_C : public AAutoMoveTrigger
		TEST_METHOD(BlueprintGeneratedClass__AutoMoveTrigger__AutoMoveTrigger_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAutoMoveTrigger_C, UberGraphFrame, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAutoMoveTrigger_C, bExecute, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAutoMoveTrigger_C, UnknownData_OTI1, 0x03A9);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAutoMoveTrigger_C, AutoMoveActor, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAutoMoveTrigger_C, AotoMoveCamera, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAutoMoveTrigger_C, AutoMoveSwitch, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAutoMoveTrigger_C, bStateFlag, 0x03C1);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAutoMoveTrigger_C, CharaState, 0x03C2);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAutoMoveTrigger_C, GetOffVehicle, 0x03C3);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAutoMoveTrigger_C, 0x03C4);
		}

		// class ABP_Area03_Cliff_TopGrassA_N_C : public AGrassGenerationStaticMeshActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_TopGrassA_N__BP_Area03_Cliff_TopGrassA_N_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_TopGrassA_N_C, 0x0360);
		}

		// class AArea03_Env_Heightmap_x0_y3_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Heightmap_x0_y3__Area03_Env_Heightmap_x0_y3_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Heightmap_x0_y3_C, 0x0340);
		}

		// class ABP_Break_CarA_Rust_C : public AWideUseBreakablePoint
		TEST_METHOD(BlueprintGeneratedClass__BP_Break_CarA_Rust__BP_Break_CarA_Rust_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Break_CarA_Rust_C, DamageCollision, 0x05A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Break_CarA_Rust_C, 0x05A8);
		}

		// class ABP_Area03_Cliff_TopGrassF_D_C : public AGrassGenerationDestructActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_TopGrassF_D__BP_Area03_Cliff_TopGrassF_D_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_TopGrassF_D_C, 0x0388);
		}

		// class AArea03_Env_Heightmap_x0_y0_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Heightmap_x0_y0__Area03_Env_Heightmap_x0_y0_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Heightmap_x0_y0_C, 0x0340);
		}

		// class AArea03_Env_Heightmap_x3_y1_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Heightmap_x3_y1__Area03_Env_Heightmap_x3_y1_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Heightmap_x3_y1_C, 0x0340);
		}

		// class AArea03_Env_Heightmap_x3_y2_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Heightmap_x3_y2__Area03_Env_Heightmap_x3_y2_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Heightmap_x3_y2_C, 0x0340);
		}

		// class UMgame_Tips_C : public UAT_UIMgameTips
		TEST_METHOD(WidgetBlueprintGeneratedClass__Mgame_Tips__Mgame_Tips_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Tips_C, Out, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Tips_C, In, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Tips_C, Img_Xef_Fad03, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMgame_Tips_C, Txt_Tips, 0x03A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMgame_Tips_C, 0x03B0);
		}

		// class AAT_Character_BP_C : public AAT_Character
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_BP__AT_Character_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_BP_C, ATCharacterDamageCollision, 0x0FA0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_BP_C, TerrainDamageEffect, 0x0FA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_BP_C, WaterPostProcess, 0x0FB0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_BP_C, EntrySPawnInfoOn, 0x0FB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_BP_C, UnknownData_EBCK, 0x0FB9);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_BP_C, TEffectTimer, 0x0FBC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_BP_C, TDLastPosition, 0x0FC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_BP_C, ChaseFlg, 0x0FCC);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_BP_C, UnknownData_XVDI, 0x0FCD);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_BP_C, TerrainDMng, 0x0FD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_BP_C, PoundingDamageType, 0x0FD8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_BP_C, 0x0FD9);
		}

		// class UBP_DiffLevelCriticalAddParam_C : public UATDiffLevelCriticalAddParam
		TEST_METHOD(BlueprintGeneratedClass__BP_DiffLevelCriticalAddParam__BP_DiffLevelCriticalAddParam_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_DiffLevelCriticalAddParam_C, 0x0040);
		}

		// class UFixedFrameRateCustomTimeStep : public UEngineCustomTimeStep
		TEST_METHOD(Class__TimeManagement__FixedFrameRateCustomTimeStep)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UFixedFrameRateCustomTimeStep, FixedFrameRate, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFixedFrameRateCustomTimeStep, 0x0030);
		}

		// class UTimeManagementBlueprintLibrary : public UBlueprintFunctionLibrary
		TEST_METHOD(Class__TimeManagement__TimeManagementBlueprintLibrary)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTimeManagementBlueprintLibrary, 0x0028);
		}

		// class UTimeSynchronizationSource : public UObject
		TEST_METHOD(Class__TimeManagement__TimeSynchronizationSource)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UTimeSynchronizationSource, bUseForSynchronization, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTimeSynchronizationSource, UnknownData_DO4C, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::UTimeSynchronizationSource, FrameOffset, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UTimeSynchronizationSource, 0x0030);
		}

		// class USpawnDataValue_Area03_10_003_C : public USpawnDataValue
		TEST_METHOD(BlueprintGeneratedClass__SpawnDataValue_Area03_10_003__SpawnDataValue_Area03_10_003_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnDataValue_Area03_10_003_C, 0x0038);
		}

		// class USpawnDataValue_Area03_10_004_C : public USpawnDataValue
		TEST_METHOD(BlueprintGeneratedClass__SpawnDataValue_Area03_10_004__SpawnDataValue_Area03_10_004_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnDataValue_Area03_10_004_C, 0x0038);
		}

		// class USpawnDataValue_Area03_Empty_C : public USpawnDataValue
		TEST_METHOD(BlueprintGeneratedClass__SpawnDataValue_Area03_Empty__SpawnDataValue_Area03_Empty_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::USpawnDataValue_Area03_Empty_C, 0x0038);
		}

		// class UStart_Save_Load_Bar00_C : public UAT_UIStartSaveLoadBar
		TEST_METHOD(WidgetBlueprintGeneratedClass__Start_Save_Load_Bar00__Start_Save_Load_Bar00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_Bar00_C, Reset, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_Bar00_C, Enter, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_Bar00_C, Img_AutoSave, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_Bar00_C, Img_Border00, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_Bar00_C, Img_Cap_Line00, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_Bar00_C, Img_Capture, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_Bar00_C, Img_Line00, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_Bar00_C, Img_Line01, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_Bar00_C, Img_Line02, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_Bar00_C, Img_Win01_Curs00, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_Bar00_C, Ins_Cap_Base00, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_Bar00_C, Ins_Mask_Bd, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_Bar00_C, Ins_Mask_Chapter, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_Bar00_C, Ins_Star, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_Bar00_C, Ins_Win01_Curs00_Eff, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_Bar00_C, Ins_Win_Base01, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_Bar00_C, Txt_Area, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_Bar00_C, Txt_Cap00, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_Bar00_C, Txt_Date, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_Bar00_C, Txt_Lost, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_Bar00_C, Txt_Lv, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_Bar00_C, Txt_Name, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_Bar00_C, Txt_None, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_Bar00_C, Txt_Play, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_Bar00_C, Txt_Time, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Save_Load_Bar00_C, Txt_Title, 0x0550);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStart_Save_Load_Bar00_C, 0x0558);
		}

		// class AArea03_Env_Heightmap_x1_y0_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__Area03_Env_Heightmap_x1_y0__Area03_Env_Heightmap_x1_y0_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AArea03_Env_Heightmap_x1_y0_C, 0x0340);
		}

		// class UBattle_Command_List02_C : public UAT_UICommandPaletteBarSpo
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Command_List02__Battle_Command_List02_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List02_C, Battle_Command_List00_00, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List02_C, Battle_Command_List00_01, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List02_C, Img_Base_Char_Spo, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List02_C, Ins_Base_Name_Spo, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List02_C, Ins_Mask_Char_Spo, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Command_List02_C, Txt_Name_Spo, 0x0418);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Command_List02_C, 0x0420);
		}

		// class AAtrociousEnemyBossEvent_Area09_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__AtrociousEnemyBossEvent_Area09__AtrociousEnemyBossEvent_Area09_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAtrociousEnemyBossEvent_Area09_C, UberGraphFrame, 0x04C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAtrociousEnemyBossEvent_Area09_C, 0x04C8);
		}

		// class AEVT_AtrociousEnemy_040_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__EVT_AtrociousEnemy_040__EVT_AtrociousEnemy_040_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AEVT_AtrociousEnemy_040_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEVT_AtrociousEnemy_040_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEVT_AtrociousEnemy_040_C, event_battle_id, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEVT_AtrociousEnemy_040_C, AtrociousEnemy_Cpl042, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEVT_AtrociousEnemy_040_C, AtrociousEnemy_Cpl043, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEVT_AtrociousEnemy_040_C, AtrociousEnemy_Cpl068, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::AEVT_AtrociousEnemy_040_C, AtrociousEnemy_Itm126, 0x04F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AEVT_AtrociousEnemy_040_C, 0x04F8);
		}

		// class ASub_Npc008_01_02_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc008_01_02__Sub_Npc008_01_02_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc008_01_02_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc008_01_02_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc008_01_02_C, Mob, 0x04D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc008_01_02_C, 0x04D8);
		}

		// class UBP_Dest_TreeF_C : public UProceduralDestructFISMComponent
		TEST_METHOD(BlueprintGeneratedClass__BP_Dest_TreeF__BP_Dest_TreeF_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Dest_TreeF_C, 0x0820);
		}

		// class UEnc_Direction_Canvas_C : public UAT_UIEncounterDirection
		TEST_METHOD(WidgetBlueprintGeneratedClass__Enc_Direction_Canvas__Enc_Direction_Canvas_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Direction_Canvas_C, UberGraphFrame, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Direction_Canvas_C, Roll, 0x0450);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnc_Direction_Canvas_C, 0x0458);
		}

		// class ASub_Npc031_01_C : public AQuest_General
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc031_01__Sub_Npc031_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc031_01_C, UberGraphFrame, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc031_01_C, DefaultSceneRoot, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc031_01_C, quest_id, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc031_01_C, quest_manager_var, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc031_01_C, arrival_name, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc031_01_C, mob_name_01, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc031_01_C, mob_name_02, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc031_01_C, npc_name_01, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc031_01_C, npc_name_02, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc031_01_C, mob_actor_01, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc031_01_C, mob_actor_02, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc031_01_C, npc_actor_01, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc031_01_C, npc_actor_02, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc031_01_C, npc007_name, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc031_01_C, point_name_010, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc031_01_C, point_name_020, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc031_01_C, point_name_030, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc031_01_C, camera_name_010, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc031_01_C, camera_name_020, 0x0540);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc031_01_C, 0x0548);
		}

		// class ASub_Npc019_01_C : public AQuest_General
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc019_01__Sub_Npc019_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc019_01_C, UberGraphFrame, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc019_01_C, DefaultSceneRoot, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc019_01_C, quest_id, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc019_01_C, arrival_name, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc019_01_C, Npc019, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc019_01_C, Cpl059, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc019_01_C, Cpl002, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc019_01_C, Mob01, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc019_01_C, Mob02, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc019_01_C, Mob03, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc019_01_C, canceled, 0x0500);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc019_01_C, 0x0501);
		}

		// class UInfo_End_Area_C : public UAT_UIInfoEndArea
		TEST_METHOD(WidgetBlueprintGeneratedClass__Info_End_Area__Info_End_Area_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_End_Area_C, Out, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_End_Area_C, Loop, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_End_Area_C, In, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_End_Area_C, Icon_Caution_L, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_End_Area_C, Img_Xef_Fad03, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_End_Area_C, Txt_Msg, 0x0410);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInfo_End_Area_C, 0x0418);
		}

		// class UInfo_Log_Level_C : public UAT_UIInfoLevelUp
		TEST_METHOD(WidgetBlueprintGeneratedClass__Info_Log_Level__Info_Log_Level_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Level_C, Out, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Level_C, In, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Level_C, Img_Icon_Info, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Level_C, Img_Space00, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Level_C, Img_Space01, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Level_C, Img_Space02, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Level_C, Img_Space03, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Level_C, Img_Space04, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Level_C, Img_Space05, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Level_C, Img_Space06, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Level_C, Ins_Xef_Line01, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Level_C, Ins_Xef_Line02, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Level_C, Txt00, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Level_C, Txt00_Num, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Level_C, Txt01, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Level_C, Txt01_Num, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Level_C, Txt02, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Level_C, Txt02_Num, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Level_C, Txt03, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Level_C, Txt03_Num, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Level_C, Txt04, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Level_C, Txt04_Num, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Level_C, Txt05, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Level_C, Txt05_Num, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_Level_C, Txt_Info, 0x04B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInfo_Log_Level_C, 0x04C0);
		}

		// class ASub_Npc008_01_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc008_01_01__Sub_Npc008_01_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc008_01_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc008_01_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc008_01_01_C, Npc008, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc008_01_01_C, canceled, 0x04D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc008_01_01_C, 0x04D9);
		}

		// class ASub_Cpl031_01_C : public AQuest_General
		TEST_METHOD(BlueprintGeneratedClass__Sub_Cpl031_01__Sub_Cpl031_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl031_01_C, UberGraphFrame, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl031_01_C, DefaultSceneRoot, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl031_01_C, quest_id, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl031_01_C, Npc004, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl031_01_C, Cpl031, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl031_01_C, canceled, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl031_01_C, UnknownData_9V3O, 0x04D9);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl031_01_C, trees, 0x04E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Cpl031_01_C, 0x04F0);
		}

		// class ABP_DirectionalLight_C : public ADirectionalLight
		TEST_METHOD(BlueprintGeneratedClass__BP_DirectionalLight__BP_DirectionalLight_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_DirectionalLight_C, 0x0350);
		}

		// class ASub_Npc004_02_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc004_02__Sub_Npc004_02_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc004_02_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc004_02_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc004_02_C, quest_npc, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc004_02_C, arrival_name, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc004_02_C, canceled, 0x04E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc004_02_C, 0x04E1);
		}

		// class ASub_Npc003_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc003_01__Sub_Npc003_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc003_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc003_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc003_01_C, canceled, 0x04D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc003_01_C, 0x04D1);
		}

		// class ATargetPointIngameDemoCharacter_BP_C : public ATargetPointIngameDemoCharacter
		TEST_METHOD(BlueprintGeneratedClass__TargetPointIngameDemoCharacter_BP__TargetPointIngameDemoCharacter_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ATargetPointIngameDemoCharacter_BP_C, Arrow1, 0x0360);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATargetPointIngameDemoCharacter_BP_C, 0x0368);
		}

		// class ASub_Cpl028B_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Cpl028B_01__Sub_Cpl028B_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl028B_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl028B_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl028B_01_C, Cpl028, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl028B_01_C, Cpl028_2, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl028B_01_C, canceled, 0x04E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Cpl028B_01_C, 0x04E1);
		}

		// class ASub_Npc002_01_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Npc002_01__Sub_Npc002_01_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc002_01_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc002_01_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Npc002_01_C, canceled, 0x04D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Npc002_01_C, 0x04D1);
		}

		// class ASub_Cpl006_02_C : public AQuestGeneral_BP_C
		TEST_METHOD(BlueprintGeneratedClass__Sub_Cpl006_02__Sub_Cpl006_02_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl006_02_C, UberGraphFrame, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl006_02_C, quest_id, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl006_02_C, Cpl006, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl006_02_C, Cpl006_01, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl006_02_C, Cpl006_02, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl006_02_C, Cpl007, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl006_02_C, Cpl032, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl006_02_C, Cpl059, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl006_02_C, Cpl059_02, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl006_02_C, Cpl059_03, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl006_02_C, Npc007, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl006_02_C, Npc008, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::ASub_Cpl006_02_C, canceled, 0x0520);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASub_Cpl006_02_C, 0x0521);
		}

		// class UAnimNotifyState_CrgSkillEffectST_C : public UAnimNotifyState_PlayParticleEffectAdjustHeight
		TEST_METHOD(BlueprintGeneratedClass__AnimNotifyState_CrgSkillEffectST__AnimNotifyState_CrgSkillEffectST_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_CrgSkillEffectST_C, 0x00D0);
		}

		// class UMap_Detail_Txt_C : public UAT_UIMapDetailTxt
		TEST_METHOD(WidgetBlueprintGeneratedClass__Map_Detail_Txt__Map_Detail_Txt_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Detail_Txt_C, UberGraphFrame, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Detail_Txt_C, Out_Detail, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Detail_Txt_C, In_Detail, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Detail_Txt_C, Ins_Base_Fad00, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Detail_Txt_C, Pnl_Txt_Detail, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_Detail_Txt_C, Txt_Detail, 0x03B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMap_Detail_Txt_C, 0x03C0);
		}

		// class UInfo_Log_BarZ_C : public UAT_UIInfoZOrbLogBar
		TEST_METHOD(WidgetBlueprintGeneratedClass__Info_Log_BarZ__Info_Log_BarZ_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_BarZ_C, Out, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_BarZ_C, In, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_BarZ_C, All_Nut, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_BarZ_C, Ins_Item, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_BarZ_C, Ins_Xef_Line01, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_BarZ_C, Ins_Xef_Line02, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::UInfo_Log_BarZ_C, Txt_Num, 0x0440);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UInfo_Log_BarZ_C, 0x0448);
		}

		// class UField_Talk_Free_C : public UAT_UIFieldTalkFreeCore
		TEST_METHOD(WidgetBlueprintGeneratedClass__Field_Talk_Free__Field_Talk_Free_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Talk_Free_C, Out, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Talk_Free_C, In, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Talk_Free_C, Dmy_Charicon_D, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Talk_Free_C, Img_Base01_Center, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Talk_Free_C, Img_Base01_L, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Talk_Free_C, Img_Base01_R, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Talk_Free_C, Img_Base_Center, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Talk_Free_C, Img_Base_Charicon00_00, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Talk_Free_C, Img_Base_Charicon00_01, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Talk_Free_C, Img_Base_L, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Talk_Free_C, Img_Base_R, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Talk_Free_C, Txt_Msg, 0x0518);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UField_Talk_Free_C, 0x0520);
		}

		// class UEnc_Hud_Charicon_C : public UAT_UIEncounterCharaIcon
		TEST_METHOD(WidgetBlueprintGeneratedClass__Enc_Hud_Charicon__Enc_Hud_Charicon_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Hud_Charicon_C, Dmy_Char, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Hud_Charicon_C, Img_Base_Charicon, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Hud_Charicon_C, Img_Flam_Charicon, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UEnc_Hud_Charicon_C, Txt_Num, 0x03A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UEnc_Hud_Charicon_C, 0x03A8);
		}

		// class URidingAnimBP_C : public UATCharacterAnimInstance
		TEST_METHOD(AnimBlueprintGeneratedClass__RidingAnimBP__RidingAnimBP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, UberGraphFrame, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_SaveCachedPose_3E3C4D924451C00B13D25499E56A2F57, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_BlendListByBool_257C1AE74F15F1ECB644049747861C1D, 0x0640);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_ApplyAdditive_A000A6F9481F1B073C759B9B62009280, 0x0720);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_TransitionResult_F3D454D44AA27FB0362C5588B7EA7FC4, 0x0810);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_TransitionResult_2C9C0C5249D9A55F4E346D97AF823B99, 0x0858);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_TransitionResult_9FB150F5464D85EC597F49AEFCAAAC46, 0x08A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_TransitionResult_6B13871748E2F9ECF894BEA33C5DFCC6, 0x08E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_TransitionResult_D714E99D4C2C6A940A013A95904F531D, 0x0930);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_TransitionResult_ADD80D9240C39BB4B8D2D2B1D24638F6, 0x0978);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_TransitionResult_566E78EB4D96E89C7CF6069EA3B3481F, 0x09C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_TransitionResult_4FCA576B418A41FD258113A33F7A0DBA, 0x0A08);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_TransitionResult_008B345844A19065F84E4888A9625879, 0x0A50);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_TransitionResult_3E983891488BC22FE71146BDC61D9E71, 0x0A98);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_TransitionResult_2BA95B05482A20C6B3F1AEB68BFB46F3, 0x0AE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_TransitionResult_287C00264F6881D6F2B38B82E63850AC, 0x0B28);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_TransitionResult_E48920934239D4539A5F559BCCC9B0DB, 0x0B70);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_TransitionResult_E62EE66942499497D5F33E809675E0A9, 0x0BB8);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_TransitionResult_7AE528D449A8CFC7C989058FED2A5EF9, 0x0C00);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_SequencePlayer_4792BA3A4290EFE4E394A3B875FF3C15, 0x0C48);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_StateResult_8B39A8324840A187BEB279BCB0F3A665, 0x0CE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_SequencePlayer_008CBE894C3A355B94FCEBB626EE2FF1, 0x0D28);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_StateResult_E1D2208045A2BD726BE6778BD9E54392, 0x0DC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_SequencePlayer_504F63E74CA8184750E771A9C9A3EC2D, 0x0E08);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_StateResult_D24A739142454461BC1BD7BAED17CC6A, 0x0EA8);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_SequencePlayer_2A90AED34D1BC8B6BAEB96994CADFC78, 0x0EE8);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_StateResult_8002491441EACFB4B07C23B1938886D6, 0x0F88);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_SequencePlayer_A1FAB5AA44BE8EEE42C78DBB3F9DB17A, 0x0FC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_StateResult_9A25762A4BF8391C66ED7495C391004B, 0x1068);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_SequencePlayer_FEA3B35C4063ABB71513A1BCE7B45831, 0x10A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_StateResult_C6EC970943991B2FAFC04FACF717AB12, 0x1148);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_BlendSpacePlayer_6C07CB714EDB43D8AB52E3B801C77B24, 0x1188);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_StateResult_82DF16C54B1E0F9E2882CFBE7D7FD7D0, 0x12B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_StateMachine_2EB70AA94FCAC2956E9F7FB9386A7A43, 0x12F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_Root_C84A21E1451568DFFB31D7A0D8FCFF96, 0x13D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_SequencePlayer_C48C6FF24199E8BBAB4C21ABE6DD5F4D, 0x1410);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_SaveCachedPose_26C6C4AB41840BE1BAE8FF9A563289C4, 0x14B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_UseCachedPose_7AE7583A4D1AE7FFC6935D9F39511978, 0x1588);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_UseCachedPose_75D6955348F1F74667B106B91D968369, 0x15D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_UseCachedPose_CFFB913B42AEF739CDE4ACAA37D9D497, 0x1618);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_ModifyBone_02C46F144A93BD096C0842847F9AE9D9, 0x1660);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_LocalToComponentSpace_69A5CE4B42CEA27ACEFDA085F21523FB, 0x1798);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, AnimGraphNode_ComponentToLocalSpace_589B900D4E27FBB8D4D1FAAED67E5988, 0x17D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::URidingAnimBP_C, TestPelvisRot, 0x1818);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::URidingAnimBP_C, 0x1824);
		}

		// class UBattle_Lock_C : public UAT_UILockonCursor
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Lock__Battle_Lock_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_C, UberGraphFrame, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_C, Out, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_C, Loop, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_C, In, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_C, Img_Line00, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_C, Img_Line01, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_C, Img_Line02, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_C, Img_Line03, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_C, Img_Tex_Circ, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_C, Img_Tex_Curs00, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_C, Img_Tex_Curs01, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_C, Img_Tex_Curs02, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_C, Img_Tex_Curs03, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_C, Ins_Circ_Eff, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_C, Ins_Curs_Eff00, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_C, Ins_Curs_Eff01, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_C, Ins_Curs_Eff02, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Lock_C, Ins_Curs_Eff03, 0x0438);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Lock_C, 0x0440);
		}

		// class UBattle_Result_C : public UAT_UIBattleResult
		TEST_METHOD(WidgetBlueprintGeneratedClass__Battle_Result__Battle_Result_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, UberGraphFrame, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Rank_B_Start, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Rank_A_Start, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Rank_S_Start, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Cloud_Start, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, All_Battle_Result, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, All_Nut, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Img_Base01, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Img_Base02, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Img_Cloud01, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Img_Cloud02, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Img_Cloud04, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Img_Dmy_Space, 0x04F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Img_Fad00, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Img_Fad00_00, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Img_Fad00_01, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Img_Fad00_02, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Img_Fad00_03, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Img_Fad00_04, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Img_Fad00_05, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Img_Fad01, 0x0530);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Img_Light00, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Img_Light01_00, 0x0540);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Img_Light01_01, 0x0548);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Img_Light01_02, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Img_Light01_03, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Img_particle01, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Img_Result_Base, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Img_Tail02, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Img_Xef_Aura01, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_Cloud01_Eff, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_Light04_00, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_Light04_01, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_Light04_02, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_Light04_03, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_Num1, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_Num10, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_Num100, 0x05B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_Num1000, 0x05C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_Num10000, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_Num100000, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_Num1000000, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_Rate_Eff, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_Rate_M, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_Rate_M02, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_Result_Mask01, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_Result_Mask02, 0x0600);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_Sprk00_M00, 0x0608);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_Sprk00_M01, 0x0610);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_Sprk00_M02, 0x0618);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_Sun, 0x0620);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_Sun01_00, 0x0628);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_Sun01_01, 0x0630);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_Sun01_02, 0x0638);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_SunM, 0x0640);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_Xef_Fad03_00, 0x0648);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Ins_Xef_Fad03_01, 0x0650);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Pnl_Eff, 0x0658);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Pnl_Light01, 0x0660);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Pnl_Sprk00, 0x0668);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Pnl_Sun, 0x0670);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Txt_Lang_Exp, 0x0678);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Xef_Fad01_00, 0x0680);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Xef_Fad01_01, 0x0688);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Xef_Fad01_02, 0x0690);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Xef_Fad01_03, 0x0698);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Xef_Light_Sprk_00, 0x06A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Xef_Light_Sprk_01, 0x06A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Xef_Light_Sprk_02, 0x06B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Xef_Shine00_00, 0x06B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Xef_Shine00_01, 0x06C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Xef_Sprk00_00, 0x06C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Xef_Sprk00_01, 0x06D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Xef_Sprk00_02, 0x06D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Xef_Sprk00_03, 0x06E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Xef_Sprk00_04, 0x06E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, Xef_Sprk00_05, 0x06F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, pathParam00, 0x06F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, pathParam01, 0x0720);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, pathParam02, 0x0748);
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattle_Result_C, pathParam01_1, 0x0770);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattle_Result_C, 0x0798);
		}

		// class UXlist_Bar00_C : public UCFUIUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xlist_Bar00__Xlist_Bar00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar00_C, UberGraphFrame, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar00_C, Enter, 0x0378);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar00_C, Img_Bar_Base, 0x0380);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar00_C, Img_Eff, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar00_C, Img_Win_hr01, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar00_C, Ins_Icon_Item, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar00_C, Txt_List, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar00_C, Txt_Num, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXlist_Bar00_C, Xmenu_Check, 0x03B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXlist_Bar00_C, 0x03B8);
		}

		// class UList_Parts_C : public UAT_UIListParts
		TEST_METHOD(WidgetBlueprintGeneratedClass__List_Parts__List_Parts_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UList_Parts_C, All_Nut, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UList_Parts_C, Icon_Item00, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UList_Parts_C, Img_List_Bace01, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UList_Parts_C, Txt_Item, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UList_Parts_C, Txt_Num, 0x03B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UList_Parts_C, 0x03B8);
		}

		// class UXtex_Parts_Db00_C : public UAT_UIXtexPartsDb00
		TEST_METHOD(WidgetBlueprintGeneratedClass__Xtex_Parts_Db00__Xtex_Parts_Db00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UXtex_Parts_Db00_C, Parts_Anm, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXtex_Parts_Db00_C, Ins_Deco_Db00_00, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXtex_Parts_Db00_C, Ins_Deco_Db00_01, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UXtex_Parts_Db00_C, Ins_Deco_Db00_02, 0x03A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UXtex_Parts_Db00_C, 0x03A8);
		}

		// class UBattleCutinManager_C : public UAT_UIBattleCutin
		TEST_METHOD(WidgetBlueprintGeneratedClass__BattleCutinManager__BattleCutinManager_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UBattleCutinManager_C, UseBattleCutInClass, 0x0398);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBattleCutinManager_C, 0x03A0);
		}

		// class UStart_Commu_Pr_Btn_C : public UAT_UICommunityDetailPresentButton
		TEST_METHOD(WidgetBlueprintGeneratedClass__Start_Commu_Pr_Btn__Start_Commu_Pr_Btn_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Pr_Btn_C, In_Active, 0x03D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Pr_Btn_C, In_None, 0x03E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Pr_Btn_C, Enter, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Pr_Btn_C, Loop, 0x03F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Pr_Btn_C, Img_Base_Button00, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Pr_Btn_C, Img_Base_Button01, 0x0400);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Pr_Btn_C, Ins_Cursor_Db, 0x0408);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Pr_Btn_C, Ins_Cursor_Db_Eff, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Pr_Btn_C, Ins_Eff_Btn, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Pr_Btn_C, Ins_Item, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Pr_Btn_C, Txt_Btn00, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Pr_Btn_C, Txt_Btn01, 0x0430);
			CHEAT_GEAR_CHECK_OFFSET(CG::UStart_Commu_Pr_Btn_C, Loop_Count, 0x0438);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UStart_Commu_Pr_Btn_C, 0x043C);
		}

		// class AFish_Pawn_C : public AFishPawnCPP
		TEST_METHOD(BlueprintGeneratedClass__Fish_Pawn__Fish_Pawn_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AFish_Pawn_C, UberGraphFrame, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::AFish_Pawn_C, FloatingPawnMovement, 0x04A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFish_Pawn_C, 0x04A8);
		}

		// class AAT_GameHUD_BP_C : public AAT_GameHUD
		TEST_METHOD(BlueprintGeneratedClass__AT_GameHUD_BP__AT_GameHUD_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD_BP_C, UberGraphFrame, 0x0618);
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_GameHUD_BP_C, DefaultSceneRoot, 0x0620);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_GameHUD_BP_C, 0x0628);
		}

		// class UBF_GetLightVector_C : public UBlueprintFunctionLibrary
		TEST_METHOD(BlueprintGeneratedClass__BF_GetLightVector__BF_GetLightVector_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBF_GetLightVector_C, 0x0028);
		}

		// class UBP_SkillActivateSafetyInfoManager_C : public USkillActivateSafetyInfoManager
		TEST_METHOD(BlueprintGeneratedClass__BP_SkillActivateSafetyInfoManager__BP_SkillActivateSafetyInfoManager_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_SkillActivateSafetyInfoManager_C, 0x0170);
		}

		// class UUniqueDataNpc004_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc004__UniqueDataNpc004_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc004_C, 0x0070);
		}

		// class UUniqueDataNpc003_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc003__UniqueDataNpc003_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc003_C, 0x0070);
		}

		// class UUniqueDataNpc002_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc002__UniqueDataNpc002_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc002_C, 0x0070);
		}

		// class UFighting_Power_Param_C058Ac03_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C058Ac03__Fighting_Power_Param_C058Ac03_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C058Ac03_C, 0x0060);
		}

		// class UFighting_Power_Param_C061A_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C061A__Fighting_Power_Param_C061A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C061A_C, 0x0060);
		}

		// class UFighting_Power_Param_C075Ac02_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C075Ac02__Fighting_Power_Param_C075Ac02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C075Ac02_C, 0x0060);
		}

		// class UFighting_Power_Param_C056Ac02_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C056Ac02__Fighting_Power_Param_C056Ac02_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C056Ac02_C, 0x0060);
		}

		// class UBP_Cpl003BStatus_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl003BStatus__BP_Cpl003BStatus_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl003BStatus_C, 0x00F0);
		}

		// class UBP_Cpl003Status_C01_Learning_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl003Status_C01_Learning__BP_Cpl003Status_C01_Learning_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl003Status_C01_Learning_C, 0x00F0);
		}

		// class UBP_Cpl003Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl003Status_Atrocious__BP_Cpl003Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl003Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl003Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl003Status__BP_Cpl003Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl003Status_C, 0x00F0);
		}

		// class UBP_Cpl002ZStatus_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl002ZStatus__BP_Cpl002ZStatus_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl002ZStatus_C, 0x00F0);
		}

		// class UBP_Cpl002Status_SS1_Learning_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl002Status_SS1_Learning__BP_Cpl002Status_SS1_Learning_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl002Status_SS1_Learning_C, 0x00F0);
		}

		// class UBP_Cpl001Status_SS2_Learning_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl001Status_SS2_Learning__BP_Cpl001Status_SS2_Learning_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl001Status_SS2_Learning_C, 0x00F0);
		}

		// class UBP_Cpl001Status_Learning_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl001Status_Learning__BP_Cpl001Status_Learning_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl001Status_Learning_C, 0x00F0);
		}

		// class UBP_Cpl000Status_Training_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl000Status_Training__BP_Cpl000Status_Training_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl000Status_Training_C, 0x00F0);
		}

		// class UBP_C000A_ComboAssistLong_C : public UATActSupportComboAssistLong
		TEST_METHOD(BlueprintGeneratedClass__BP_C000A_ComboAssistLong__BP_C000A_ComboAssistLong_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C000A_ComboAssistLong_C, 0x0150);
		}

		// class UBP_C002A_ActionTableAttack_C : public UBP_C000A_ActionTableAttack_C
		TEST_METHOD(BlueprintGeneratedClass__BP_C002A_ActionTableAttack__BP_C002A_ActionTableAttack_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C002A_ActionTableAttack_C, 0x0168);
		}

		// class ABP_Area03_Cliff_PrecipiceD_N_C : public AGrassGenerationStaticMeshActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_PrecipiceD_N__BP_Area03_Cliff_PrecipiceD_N_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_PrecipiceD_N_C, 0x0360);
		}

		// class ABP_Area03_Cliff_TopGrassB_N_C : public AGrassGenerationStaticMeshActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_TopGrassB_N__BP_Area03_Cliff_TopGrassB_N_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_TopGrassB_N_C, 0x0360);
		}

		// class ABP_Area03_Cliff_TopGrassK_N_C : public AGrassGenerationStaticMeshActor
		TEST_METHOD(BlueprintGeneratedClass__BP_Area03_Cliff_TopGrassK_N__BP_Area03_Cliff_TopGrassK_N_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Area03_Cliff_TopGrassK_N_C, 0x0360);
		}

		// class ASplineActor_C : public ANpcSplineActor
		TEST_METHOD(BlueprintGeneratedClass__SplineActor__SplineActor_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ASplineActor_C, Spline, 0x05A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ASplineActor_C, 0x05A8);
		}

		// class AA002_BP_C : public AAnimalMob_Pawn_C
		TEST_METHOD(BlueprintGeneratedClass__A002_BP__A002_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AA002_BP_C, DamageCollision, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::AA002_BP_C, FlyingDragonComponent, 0x0468);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AA002_BP_C, 0x0470);
		}

		// class AForm02Cpl001_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form02Cpl001__Form02Cpl001_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm02Cpl001_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm02Cpl001_C, 0x0380);
		}

		// class UBP_C014A_ActionTableDamage_C : public UBP_C000A_ActionTableDamage_C
		TEST_METHOD(BlueprintGeneratedClass__BP_C014A_ActionTableDamage__BP_C014A_ActionTableDamage_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C014A_ActionTableDamage_C, 0x0168);
		}

		// class UAB_C014A_C : public UAB_C000_C
		TEST_METHOD(AnimBlueprintGeneratedClass__AB_C014A__AB_C014A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAB_C014A_C, 0xC5BC);
		}

		// class UBP_C059A_ActionTableDamage_C : public UBP_C000A_ActionTableDamage_C
		TEST_METHOD(BlueprintGeneratedClass__BP_C059A_ActionTableDamage__BP_C059A_ActionTableDamage_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C059A_ActionTableDamage_C, 0x0168);
		}

		// class ATargetPointIngameDemoOrigin_BP_C : public ATargetPointIngameDemoOrigin
		TEST_METHOD(BlueprintGeneratedClass__TargetPointIngameDemoOrigin_BP__TargetPointIngameDemoOrigin_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ATargetPointIngameDemoOrigin_BP_C, TextRender, 0x0358);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ATargetPointIngameDemoOrigin_BP_C, 0x0360);
		}

		// class AMineralMiningMapIconGroup_C : public AGroupingMapIconActor
		TEST_METHOD(BlueprintGeneratedClass__MineralMiningMapIconGroup__MineralMiningMapIconGroup_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AMineralMiningMapIconGroup_C, 0x0360);
		}

		// class ABP_BonfireActor_C : public AFieldActionBonfireActor
		TEST_METHOD(BlueprintGeneratedClass__BP_BonfireActor__BP_BonfireActor_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_BonfireActor_C, Billboard, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_BonfireActor_C, Support2Tree, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_BonfireActor_C, Support1Tree, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_BonfireActor_C, PlayerTree, 0x05A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_BonfireActor_C, 0x05B0);
		}

		// class UBP_C058A_DamageHold_C : public UATActDmgHold
		TEST_METHOD(BlueprintGeneratedClass__BP_C058A_DamageHold__BP_C058A_DamageHold_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C058A_DamageHold_C, 0x0158);
		}

		// class UBP_DamageType_CmnSlashS_C : public UAT_DamageType
		TEST_METHOD(BlueprintGeneratedClass__BP_DamageType_CmnSlashS__BP_DamageType_CmnSlashS_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_DamageType_CmnSlashS_C, 0x0070);
		}

		// class UAnimNotifyState_WearEffect_BP_C : public UATAnimNotifyState_WearEffect
		TEST_METHOD(BlueprintGeneratedClass__AnimNotifyState_WearEffect_BP__AnimNotifyState_WearEffect_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_WearEffect_BP_C, 0x0038);
		}

		// class ABP_Lake_C : public AATLake
		TEST_METHOD(BlueprintGeneratedClass__BP_Lake__BP_Lake_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Lake_C, UberGraphFrame, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Lake_C, LakeMesh, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Lake_C, UnderLakeMesh, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Lake_C, PostProcess, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Lake_C, CFPushSolverShapeBox, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Lake_C, DefaultSceneRoot, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::ABP_Lake_C, FlipMesh, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ABP_Lake_C, 0x0379);
		}

		// class UAT_UIBattleManagerBP_C : public UAT_UIBattleManager
		TEST_METHOD(BlueprintGeneratedClass__AT_UIBattleManagerBP__AT_UIBattleManagerBP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAT_UIBattleManagerBP_C, 0x03C8);
		}

		// class UField_Fishing_C : public UAT_UIFieldFishing
		TEST_METHOD(WidgetBlueprintGeneratedClass__FIeld_Fishing__Field_Fishing_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Fishing_C, Out, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Fishing_C, In, 0x03A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Fishing_C, Img_Gauge_E_Flam02, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Fishing_C, Img_Gauge_F_Flam00, 0x03B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Fishing_C, Ins_Eff01, 0x03B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Fishing_C, Ins_Gauge, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Fishing_C, Ins_Gauge_Base03, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Fishing_C, Ins_Gauge_Full_Eff, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::UField_Fishing_C, Ins_Icon_Fishing, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UField_Fishing_C, 0x03E0);
		}

		// class UField_Talk_Free_Canvas_C : public UAT_UIFieldTalkFree
		TEST_METHOD(WidgetBlueprintGeneratedClass__Field_Talk_Free_Canvas__Field_Talk_Free_Canvas_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UField_Talk_Free_Canvas_C, 0x04F0);
		}

		// class UAnimNotifyState_DirectionCamera_BP_C : public UAnimNotifyState_DirectionCamera
		TEST_METHOD(BlueprintGeneratedClass__AnimNotifyState_DirectionCamera_BP__AnimNotifyState_DirectionCamera_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UAnimNotifyState_DirectionCamera_BP_C, 0x0078);
		}

		// class UBP_AtrociousBattle3_Area09_020_C : public UATAtrociousEncountBattle
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousBattle3_Area09_020__BP_AtrociousBattle3_Area09_020_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousBattle3_Area09_020_C, 0x0118);
		}

		// class UBP_AtrociousCondition3_Area16_C : public UATAtrociousCondition
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousCondition3_Area16__BP_AtrociousCondition3_Area16_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousCondition3_Area16_C, 0x0040);
		}

		// class UBP_AtrociousPhase3_Area06_C : public UATAtrociousPhaseBase
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousPhase3_Area06__BP_AtrociousPhase3_Area06_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousPhase3_Area06_C, 0x00F8);
		}

		// class UBP_AtrociousPhase2_Area06_C : public UATAtrociousPhaseBase
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousPhase2_Area06__BP_AtrociousPhase2_Area06_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousPhase2_Area06_C, 0x00F8);
		}

		// class UBP_AtrociousPhase1_Area06_C : public UATAtrociousPhaseBase
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousPhase1_Area06__BP_AtrociousPhase1_Area06_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousPhase1_Area06_C, 0x00F8);
		}

		// class UBP_AtrociousPhase1_Area04_C : public UATAtrociousPhaseBase
		TEST_METHOD(BlueprintGeneratedClass__BP_AtrociousPhase1_Area04__BP_AtrociousPhase1_Area04_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_AtrociousPhase1_Area04_C, 0x00F8);
		}

		// class UUniqueDataCpl074B_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl074B__UniqueDataCpl074B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl074B_C, 0x0070);
		}

		// class UUniqueDataCpl038_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl038__UniqueDataCpl038_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl038_C, 0x0070);
		}

		// class UUniqueDataCpl037_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl037__UniqueDataCpl037_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl037_C, 0x0070);
		}

		// class UUniqueDataCpl036_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl036__UniqueDataCpl036_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl036_C, 0x0070);
		}

		// class UUniqueDataCpl028B_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl028B__UniqueDataCpl028B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl028B_C, 0x0070);
		}

		// class UUniqueDataCpl025_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl025__UniqueDataCpl025_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl025_C, 0x0070);
		}

		// class UUniqueDataCpl024_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl024__UniqueDataCpl024_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl024_C, 0x0070);
		}

		// class UUniqueDataCpl023_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataCpl023__UniqueDataCpl023_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataCpl023_C, 0x0070);
		}

		// class UBP_Cpl035Status_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl035Status_Atrocious__BP_Cpl035Status_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl035Status_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl035Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl035Status__BP_Cpl035Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl035Status_C, 0x00F0);
		}

		// class AAREA03_MemoriesItemMap_C : public AATLevelScriptActor
		TEST_METHOD(BlueprintGeneratedClass__AREA03_MemoriesItemMap__AREA03_MemoriesItemMap_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAREA03_MemoriesItemMap_C, 0x0340);
		}

		// class AFacial00Cpl001_C : public AATFacialParts
		TEST_METHOD(BlueprintGeneratedClass__Facial00Cpl001__Facial00Cpl001_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AFacial00Cpl001_C, DefaultSceneRoot, 0x03D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AFacial00Cpl001_C, 0x03E0);
		}

		// class AForm00Cpl056B_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Cpl056B__Form00Cpl056B_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Cpl056B_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Cpl056B_C, 0x0380);
		}

		// class AAT_Character_cpl058c01_BP_C : public AATCharacterCpl058c01
		TEST_METHOD(BlueprintGeneratedClass__AT_Character_cpl058c01_BP__AT_Character_cpl058c01_BP_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AAT_Character_cpl058c01_BP_C, AttachParticle, 0x0FA0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AAT_Character_cpl058c01_BP_C, 0x0FA8);
		}

		// class AForm00Cpl059B_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Cpl059B__Form00Cpl059B_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Cpl059B_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Cpl059B_C, 0x0380);
		}

		// class AForm00Cpl004A_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Cpl004A__Form00Cpl004A_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Cpl004A_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Cpl004A_C, 0x0380);
		}

		// class UBP_C075_ActionTableAttack_C : public UCharacterActionClassTable
		TEST_METHOD(BlueprintGeneratedClass__BP_C075_ActionTableAttack__BP_C075_ActionTableAttack_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C075_ActionTableAttack_C, 0x0168);
		}

		// class UBP_C056_CharacterMoveParam_C : public UB_CharacterMoveParam_C
		TEST_METHOD(BlueprintGeneratedClass__BP_C056_CharacterMoveParam__BP_C056_CharacterMoveParam_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_C056_CharacterMoveParam_C, 0x0430);
		}

		// class AVariation00Cpl058A_C : public AATVariationParts
		TEST_METHOD(BlueprintGeneratedClass__Variation00Cpl058A__Variation00Cpl058A_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AVariation00Cpl058A_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AVariation00Cpl058A_C, 0x0380);
		}

		// class AForm00Cpl004D_C : public AATFormParts
		TEST_METHOD(BlueprintGeneratedClass__Form00Cpl004D__Form00Cpl004D_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::AForm00Cpl004D_C, DefaultSceneRoot, 0x0378);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::AForm00Cpl004D_C, 0x0380);
		}

		// class UBP_Cpl030Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl030Status__BP_Cpl030Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl030Status_C, 0x00F0);
		}

		// class UBP_Cpl029Status_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl029Status__BP_Cpl029Status_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl029Status_C, 0x00F0);
		}

		// class UFighting_Power_Param_C001A_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C001A__Fighting_Power_Param_C001A_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C001A_C, 0x0060);
		}

		// class UFighting_Power_Param_C003B_C : public UATFightingPowerParam
		TEST_METHOD(BlueprintGeneratedClass__Fighting_Power_Param_C003B__Fighting_Power_Param_C003B_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UFighting_Power_Param_C003B_C, 0x0060);
		}

		// class UUniqueDataNpc079_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc079__UniqueDataNpc079_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc079_C, 0x0070);
		}

		// class UUniqueDataNpc069_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc069__UniqueDataNpc069_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc069_C, 0x0070);
		}

		// class UUniqueDataNpc068_C : public UATUniqueCharacterTable
		TEST_METHOD(BlueprintGeneratedClass__UniqueDataNpc068__UniqueDataNpc068_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UUniqueDataNpc068_C, 0x0070);
		}

		// class UBP_Cpl006Status_Learning_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl006Status_Learning__BP_Cpl006Status_Learning_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl006Status_Learning_C, 0x00F0);
		}

		// class UBP_Cpl005DStatus_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl005DStatus_Atrocious__BP_Cpl005DStatus_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl005DStatus_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl005BStatus_Atrocious_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl005BStatus_Atrocious__BP_Cpl005BStatus_Atrocious_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl005BStatus_Atrocious_C, 0x00F0);
		}

		// class UBP_Cpl004StatusC01_C : public UATCharacterStatusParam
		TEST_METHOD(BlueprintGeneratedClass__BP_Cpl004StatusC01__BP_Cpl004StatusC01_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UBP_Cpl004StatusC01_C, 0x00F0);
		}

		// class UMap_MS_Eff00_C : public UUserWidget
		TEST_METHOD(WidgetBlueprintGeneratedClass__Map_MS_Eff00__Map_MS_Eff00_C)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_Eff00_C, Loop, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_Eff00_C, Ins_Db_Eff00, 0x0210);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_Eff00_C, Ins_Db_Eff01, 0x0218);
			CHEAT_GEAR_CHECK_OFFSET(CG::UMap_MS_Eff00_C, Ins_Db_Eff02, 0x0220);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UMap_MS_Eff00_C, 0x0228);
		}

		// class UGeneralDemoAnim_C002A_BP_C : public UGeneralDemoAnim_Base_BP_C
		TEST_METHOD(AnimBlueprintGeneratedClass__GeneralDemoAnim_C002A_BP__GeneralDemoAnim_C002A_BP_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UGeneralDemoAnim_C002A_BP_C, 0x2665);
		}

		// class ANpcBase_C : public AAT_MobBase
		TEST_METHOD(BlueprintGeneratedClass__NpcBase__NpcBase_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::ANpcBase_C, 0x0400);
		}

		// class UB_Nimbus_C : public UATFlyingNimbus
		TEST_METHOD(BlueprintGeneratedClass__B_Nimbus__B_Nimbus_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UB_Nimbus_C, 0x0360);
		}

		// class UDmgTypeBP_Environmental_C : public UDamageType
		TEST_METHOD(BlueprintGeneratedClass__DmgTypeBP_Environmental__DmgTypeBP_Environmental_C)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::UDmgTypeBP_Environmental_C, 0x0040);
		}

		// struct FBlueprintSessionResult
		TEST_METHOD(ScriptStruct__OnlineSubsystemUtils__BlueprintSessionResult)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintSessionResult, UnknownData_L2AW, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintSessionResult, 0x00B8);
		}

		// struct FPIELoginSettingsInternal
		TEST_METHOD(ScriptStruct__OnlineSubsystemUtils__PIELoginSettingsInternal)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPIELoginSettingsInternal, ID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPIELoginSettingsInternal, Token, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPIELoginSettingsInternal, Type, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPIELoginSettingsInternal, TokenBytes, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPIELoginSettingsInternal, 0x0040);
		}

		// struct FPlayerReservation
		TEST_METHOD(ScriptStruct__OnlineSubsystemUtils__PlayerReservation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlayerReservation, UniqueId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlayerReservation, ValidationStr, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlayerReservation, Platform, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlayerReservation, bAllowCrossplay, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlayerReservation, UnknownData_2L28, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlayerReservation, ElapsedTime, 0x004C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPlayerReservation, 0x0050);
		}

		// struct FPartyReservation
		TEST_METHOD(ScriptStruct__OnlineSubsystemUtils__PartyReservation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPartyReservation, TeamNum, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPartyReservation, UnknownData_KHBQ, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPartyReservation, PartyLeader, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPartyReservation, PartyMembers, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPartyReservation, 0x0040);
		}

		// struct FUniqueNetIdRepl : public FUniqueNetIdWrapper
		TEST_METHOD(ScriptStruct__Engine__UniqueNetIdRepl)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FUniqueNetIdRepl, UnknownData_4RIN, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FUniqueNetIdRepl, ReplicationBytes, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FUniqueNetIdRepl, 0x0028);
		}

		// struct FTickFunction
		TEST_METHOD(ScriptStruct__Engine__TickFunction)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTickFunction, UnknownData_7AZV, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTickFunction, TickGroup, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTickFunction, EndTickGroup, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTickFunction, UnknownData_H3EN, 0x000A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTickFunction, UnknownData_9U4Z, 0x000D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTickFunction, TickInterval, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTickFunction, UnknownData_EQGQ, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTickFunction, 0x0050);
		}

		// struct FActorTickFunction : public FTickFunction
		TEST_METHOD(ScriptStruct__Engine__ActorTickFunction)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FActorTickFunction, UnknownData_ORBO, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActorTickFunction, 0x0058);
		}

		// struct FVector_NetQuantize100 : public FVector
		TEST_METHOD(ScriptStruct__Engine__Vector_NetQuantize100)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVector_NetQuantize100, 0x000C);
		}

		// struct FVector_NetQuantize : public FVector
		TEST_METHOD(ScriptStruct__Engine__Vector_NetQuantize)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVector_NetQuantize, 0x000C);
		}

		// struct FVector_NetQuantizeNormal : public FVector
		TEST_METHOD(ScriptStruct__Engine__Vector_NetQuantizeNormal)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVector_NetQuantizeNormal, 0x000C);
		}

		// struct FHitResult
		TEST_METHOD(ScriptStruct__Engine__HitResult)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FHitResult, UnknownData_57BC, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHitResult, FaceIndex, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHitResult, Time, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHitResult, Distance, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHitResult, Location, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHitResult, ImpactPoint, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHitResult, Normal, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHitResult, ImpactNormal, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHitResult, TraceStart, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHitResult, TraceEnd, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHitResult, PenetrationDepth, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHitResult, Item, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHitResult, PhysMaterial, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHitResult, Actor, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHitResult, Component, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHitResult, BoneName, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHitResult, MyBoneName, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FHitResult, 0x0088);
		}

		// struct FRepAttachment
		TEST_METHOD(ScriptStruct__Engine__RepAttachment)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepAttachment, AttachParent, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepAttachment, LocationOffset, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepAttachment, RelativeScale3D, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepAttachment, RotationOffset, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepAttachment, UnknownData_70GG, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepAttachment, AttachSocket, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepAttachment, AttachComponent, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRepAttachment, 0x0040);
		}

		// struct FRepMovement
		TEST_METHOD(ScriptStruct__Engine__RepMovement)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepMovement, LinearVelocity, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepMovement, AngularVelocity, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepMovement, Location, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepMovement, Rotation, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepMovement, LocationQuantizationLevel, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepMovement, VelocityQuantizationLevel, 0x0032);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepMovement, RotationQuantizationLevel, 0x0033);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRepMovement, 0x0034);
		}

		// struct FActorComponentTickFunction : public FTickFunction
		TEST_METHOD(ScriptStruct__Engine__ActorComponentTickFunction)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FActorComponentTickFunction, UnknownData_CCR3, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActorComponentTickFunction, 0x0058);
		}

		// struct FSimpleMemberReference
		TEST_METHOD(ScriptStruct__Engine__SimpleMemberReference)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimpleMemberReference, MemberParent, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimpleMemberReference, MemberName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimpleMemberReference, MemberGuid, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSimpleMemberReference, 0x0020);
		}

		// struct FLightingChannels
		TEST_METHOD(ScriptStruct__Engine__LightingChannels)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLightingChannels, 0x0001);
		}

		// struct FCollisionResponseContainer
		TEST_METHOD(ScriptStruct__Engine__CollisionResponseContainer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, WorldStatic, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, WorldDynamic, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, Pawn, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, Visibility, 0x0003);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, Camera, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, PhysicsBody, 0x0005);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, Vehicle, 0x0006);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, Destructible, 0x0007);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, EngineTraceChannel1, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, EngineTraceChannel2, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, EngineTraceChannel3, 0x000A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, EngineTraceChannel4, 0x000B);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, EngineTraceChannel5, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, EngineTraceChannel6, 0x000D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, GameTraceChannel1, 0x000E);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, GameTraceChannel2, 0x000F);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, GameTraceChannel3, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, GameTraceChannel4, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, GameTraceChannel5, 0x0012);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, GameTraceChannel6, 0x0013);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, GameTraceChannel7, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, GameTraceChannel8, 0x0015);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, GameTraceChannel9, 0x0016);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, GameTraceChannel10, 0x0017);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, GameTraceChannel11, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, GameTraceChannel12, 0x0019);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, GameTraceChannel13, 0x001A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, GameTraceChannel14, 0x001B);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, GameTraceChannel15, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, GameTraceChannel16, 0x001D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, GameTraceChannel17, 0x001E);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseContainer, GameTraceChannel18, 0x001F);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCollisionResponseContainer, 0x0020);
		}

		// struct FResponseChannel
		TEST_METHOD(ScriptStruct__Engine__ResponseChannel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FResponseChannel, Channel, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FResponseChannel, Response, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FResponseChannel, UnknownData_TE03, 0x0009);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FResponseChannel, 0x0010);
		}

		// struct FWalkableSlopeOverride
		TEST_METHOD(ScriptStruct__Engine__WalkableSlopeOverride)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FWalkableSlopeOverride, WalkableSlopeBehavior, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWalkableSlopeOverride, UnknownData_5QAK, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWalkableSlopeOverride, WalkableSlopeAngle, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWalkableSlopeOverride, UnknownData_2QK7, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWalkableSlopeOverride, 0x0010);
		}

		// struct FPrimitiveComponentPostPhysicsTickFunction : public FTickFunction
		TEST_METHOD(ScriptStruct__Engine__PrimitiveComponentPostPhysicsTickFunction)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimitiveComponentPostPhysicsTickFunction, UnknownData_CB52, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPrimitiveComponentPostPhysicsTickFunction, 0x0058);
		}

		// struct FCollisionResponse
		TEST_METHOD(ScriptStruct__Engine__CollisionResponse)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponse, ResponseToChannels, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponse, ResponseArray, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCollisionResponse, 0x0030);
		}

		// struct FBodyInstance
		TEST_METHOD(ScriptStruct__Engine__BodyInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, UnknownData_AOX5, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, ObjectType, 0x0006);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, UnknownData_CGP7, 0x0007);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, CollisionEnabled, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, UnknownData_FQO5, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, SleepFamily, 0x000A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, DOFMode, 0x000B);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, UnknownData_QEAS, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, CollisionProfileName, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, CollisionResponses, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, MaxDepenetrationVelocity, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, MassInKgOverride, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, UnknownData_XKUX, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, LinearDamping, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, AngularDamping, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, CustomDOFPlaneNormal, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, COMNudge, 0x007C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, MassScale, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, InertiaTensorScale, 0x008C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, UnknownData_H3JE, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, WalkableSlopeOverride, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, PhysMaterialOverride, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, MaxAngularVelocity, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, CustomSleepThresholdMultiplier, 0x00C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, StabilizationThresholdMultiplier, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, PhysicsBlendWeight, 0x00CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, PositionSolverIterationCount, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, VelocitySolverIterationCount, 0x00D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBodyInstance, UnknownData_1RC0, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBodyInstance, 0x0150);
		}

		// struct FSkelMeshComponentLODInfo
		TEST_METHOD(ScriptStruct__Engine__SkelMeshComponentLODInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkelMeshComponentLODInfo, HiddenMaterials, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkelMeshComponentLODInfo, UnknownData_IXIC, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkelMeshComponentLODInfo, 0x0020);
		}

		// struct FSkelMeshSkinWeightInfo
		TEST_METHOD(ScriptStruct__Engine__SkelMeshSkinWeightInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkelMeshSkinWeightInfo, Bones, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkelMeshSkinWeightInfo, Weights, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkelMeshSkinWeightInfo, 0x0028);
		}

		// struct FMeshUVChannelInfo
		TEST_METHOD(ScriptStruct__Engine__MeshUVChannelInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshUVChannelInfo, bInitialized, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshUVChannelInfo, bOverrideDensities, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshUVChannelInfo, UnknownData_8WC3, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshUVChannelInfo, LocalUVDensities, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMeshUVChannelInfo, 0x0014);
		}

		// struct FBoneMirrorInfo
		TEST_METHOD(ScriptStruct__Engine__BoneMirrorInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoneMirrorInfo, SourceIndex, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoneMirrorInfo, BoneFlipAxis, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoneMirrorInfo, UnknownData_YMK4, 0x0005);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBoneMirrorInfo, 0x0008);
		}

		// struct FPerPlatformFloat
		TEST_METHOD(ScriptStruct__Engine__PerPlatformFloat)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPerPlatformFloat, Default, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPerPlatformFloat, 0x0004);
		}

		// struct FSimplygonChannelCastingSettings
		TEST_METHOD(ScriptStruct__Engine__SimplygonChannelCastingSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonChannelCastingSettings, MaterialChannel, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonChannelCastingSettings, Caster, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonChannelCastingSettings, bActive, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonChannelCastingSettings, ColorChannels, 0x0003);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonChannelCastingSettings, BitsPerChannel, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonChannelCastingSettings, bUseSRGB, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonChannelCastingSettings, bBakeVertexColors, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonChannelCastingSettings, bFlipBackfacingNormals, 0x000A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonChannelCastingSettings, bUseTangentSpaceNormals, 0x000B);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonChannelCastingSettings, bFlipGreenChannel, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonChannelCastingSettings, UnknownData_2JPD, 0x000D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSimplygonChannelCastingSettings, 0x0010);
		}

		// struct FOutputMaterialInfo
		TEST_METHOD(ScriptStruct__Engine__OutputMaterialInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FOutputMaterialInfo, UnknownData_BDVE, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FOutputMaterialInfo, 0x0058);
		}

		// struct FBoneReference
		TEST_METHOD(ScriptStruct__Engine__BoneReference)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoneReference, BoneName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoneReference, UnknownData_N9JE, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBoneReference, 0x0018);
		}

		// struct FPerPlatformInt
		TEST_METHOD(ScriptStruct__Engine__PerPlatformInt)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPerPlatformInt, Default, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPerPlatformInt, 0x0004);
		}

		// struct FSkeletalMeshSamplingRegionMaterialFilter
		TEST_METHOD(ScriptStruct__Engine__SkeletalMeshSamplingRegionMaterialFilter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshSamplingRegionMaterialFilter, MaterialName, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMeshSamplingRegionMaterialFilter, 0x0008);
		}

		// struct FSkeletalMeshSamplingRegionBoneFilter
		TEST_METHOD(ScriptStruct__Engine__SkeletalMeshSamplingRegionBoneFilter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshSamplingRegionBoneFilter, BoneName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshSamplingRegionBoneFilter, UnknownData_IM38, 0x0009);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMeshSamplingRegionBoneFilter, 0x0010);
		}

		// struct FSkeletalMeshSamplingLODBuiltData
		TEST_METHOD(ScriptStruct__Engine__SkeletalMeshSamplingLODBuiltData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshSamplingLODBuiltData, UnknownData_RD3C, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMeshSamplingLODBuiltData, 0x0048);
		}

		// struct FSkeletalMeshSamplingRegionBuiltData
		TEST_METHOD(ScriptStruct__Engine__SkeletalMeshSamplingRegionBuiltData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshSamplingRegionBuiltData, UnknownData_7YT1, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMeshSamplingRegionBuiltData, 0x0078);
		}

		// struct FSkeletalMeshSamplingBuiltData
		TEST_METHOD(ScriptStruct__Engine__SkeletalMeshSamplingBuiltData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshSamplingBuiltData, WholeMeshBuiltData, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshSamplingBuiltData, RegionBuiltData, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMeshSamplingBuiltData, 0x0020);
		}

		// struct FSkeletalMeshSamplingRegion
		TEST_METHOD(ScriptStruct__Engine__SkeletalMeshSamplingRegion)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshSamplingRegion, Name, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshSamplingRegion, LODIndex, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshSamplingRegion, UnknownData_N504, 0x000D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshSamplingRegion, MaterialFilters, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshSamplingRegion, BoneFilters, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMeshSamplingRegion, 0x0030);
		}

		// struct FSkeletalMeshSamplingInfo
		TEST_METHOD(ScriptStruct__Engine__SkeletalMeshSamplingInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshSamplingInfo, Regions, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshSamplingInfo, BuiltData, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMeshSamplingInfo, 0x0030);
		}

		// struct FMaterialProxySettings
		TEST_METHOD(ScriptStruct__Engine__MaterialProxySettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, TextureSize, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, TextureSizingType, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, UnknownData_ZGJZ, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, GutterSpace, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, SamplingQuality, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, UVStrech, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, bSplitProxyMaterialBasedOnType, 0x0012);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, bUseTangentSpace, 0x0013);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, bNormalMap, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, bMetallicMap, 0x0015);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, UnknownData_Q2D2, 0x0016);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, MetallicConstant, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, bRoughnessMap, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, UnknownData_D2JW, 0x001D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, RoughnessConstant, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, bSpecularMap, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, UnknownData_0K46, 0x0025);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, SpecularConstant, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, bEmissiveMap, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, bOpacityMap, 0x002D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, UnknownData_P4RO, 0x002E);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, OpacityConstant, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, AOConstant, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, bOpacityMaskMap, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, UnknownData_UD9D, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, OpacityMaskConstant, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, bAmbientOcclusionMap, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, UnknownData_CRNX, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, AmbientOcclusionConstant, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, DiffuseTextureSize, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, NormalTextureSize, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, MetallicTextureSize, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, RoughnessTextureSize, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, SpecularTextureSize, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, EmissiveTextureSize, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, OpacityTextureSize, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, OpacityMaskTextureSize, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, AmbientOcclusionTextureSize, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, MaterialMergeType, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, BlendMode, 0x0091);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialProxySettings, UnknownData_2HEI, 0x0092);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMaterialProxySettings, 0x0094);
		}

		// struct FMeshProxySettings
		TEST_METHOD(ScriptStruct__Engine__MeshProxySettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, ScreenSize, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, UnknownData_00X8, 0x0005);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, VoxelSize, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, MaterialSettings, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, TextureWidth, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, TextureHeight, 0x00A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, bExportNormalMap, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, bExportMetallicMap, 0x00A9);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, bExportRoughnessMap, 0x00AA);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, bExportSpecularMap, 0x00AB);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, bCalculateCorrectLODModel, 0x00AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, UnknownData_6EZP, 0x00AD);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, MergeDistance, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, UnresolvedGeometryColor, 0x00B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, bOverrideTransferDistance, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, UnknownData_U3ZY, 0x00B9);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, MaxRayCastDist, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, bUseHardAngleThreshold, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, UnknownData_AYGB, 0x00C1);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, HardAngleThreshold, 0x00C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, NormalCalculationMethod, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, UnknownData_SS7E, 0x00C9);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, LightMapResolution, 0x00CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, bComputeLightMapResolution, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, bRecalculateNormals, 0x00D1);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, bBakeVertexData, 0x00D2);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, bUseLandscapeCulling, 0x00D3);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, LandscapeCullingPrecision, 0x00D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, bAllowAdjacency, 0x00D5);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, bAllowDistanceField, 0x00D6);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, bReuseMeshLightmapUVs, 0x00D7);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, bCreateCollision, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, bAllowVertexColors, 0x00D9);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, bGenerateLightmapUVs, 0x00DA);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, bAssignLODGroup, 0x00DB);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, LODGroupIndex, 0x00DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, bAggregateMeshes, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, AggregatorMode, 0x00E1);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, bUseCustomHemisphere, 0x00E2);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshProxySettings, UnknownData_2LOF, 0x00E3);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMeshProxySettings, 0x00E4);
		}

		// struct FSimplygonMaterialLODSettings
		TEST_METHOD(ScriptStruct__Engine__SimplygonMaterialLODSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonMaterialLODSettings, bActive, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonMaterialLODSettings, MaterialLODType, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonMaterialLODSettings, bUseAutomaticSizes, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonMaterialLODSettings, TextureWidth, 0x0003);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonMaterialLODSettings, TextureHeight, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonMaterialLODSettings, SamplingQuality, 0x0005);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonMaterialLODSettings, UnknownData_J1LW, 0x0006);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonMaterialLODSettings, GutterSpace, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonMaterialLODSettings, TextureStrech, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonMaterialLODSettings, bReuseExistingCharts, 0x000D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonMaterialLODSettings, UnknownData_GFQR, 0x000E);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonMaterialLODSettings, ChannelsToCast, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonMaterialLODSettings, bBakeVertexData, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonMaterialLODSettings, bBakeActorData, 0x0021);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonMaterialLODSettings, bAllowMultiMaterial, 0x0022);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonMaterialLODSettings, bPreferTwoSideMaterials, 0x0023);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonMaterialLODSettings, bUseVertexWeights, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonMaterialLODSettings, UnknownData_ZNZV, 0x0025);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonMaterialLODSettings, OutputMaterialInfo, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSimplygonMaterialLODSettings, 0x0080);
		}

		// struct FSkeletalMeshOptimizationSettings
		TEST_METHOD(ScriptStruct__Engine__SkeletalMeshOptimizationSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshOptimizationSettings, NumOfTrianglesPercentage, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshOptimizationSettings, MaxDeviationPercentage, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshOptimizationSettings, ReductionMethod, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshOptimizationSettings, UnknownData_OVTG, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshOptimizationSettings, ScreenSize, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshOptimizationSettings, SilhouetteImportance, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshOptimizationSettings, TextureImportance, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshOptimizationSettings, ShadingImportance, 0x0012);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshOptimizationSettings, SkinningImportance, 0x0013);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshOptimizationSettings, UnknownData_DSRZ, 0x0015);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshOptimizationSettings, WeldingThreshold, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshOptimizationSettings, BoneReductionRatio, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshOptimizationSettings, NormalsThreshold, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshOptimizationSettings, MaxBonesPerVertex, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshOptimizationSettings, BaseLOD, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshOptimizationSettings, LODChainLastIndex, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshOptimizationSettings, bUseVertexWeights, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshOptimizationSettings, bUseVertexWeightsForMaterial, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshOptimizationSettings, bSimplifyMaterials, 0x0032);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshOptimizationSettings, UnknownData_II8Z, 0x0033);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshOptimizationSettings, MaterialLODSettings, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshOptimizationSettings, MaterialSettings, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshOptimizationSettings, bForceRebuild, 0x014C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshOptimizationSettings, UnknownData_NF7C, 0x014D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMeshOptimizationSettings, 0x0150);
		}

		// struct FGroupedSkeletalOptimizationSettings
		TEST_METHOD(ScriptStruct__Engine__GroupedSkeletalOptimizationSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGroupedSkeletalOptimizationSettings, bAutoComputeLODDistance, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGroupedSkeletalOptimizationSettings, LevelOfDetailType, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGroupedSkeletalOptimizationSettings, UnknownData_EVQG, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGroupedSkeletalOptimizationSettings, ReductionSettings, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGroupedSkeletalOptimizationSettings, ProxySettings, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGroupedSkeletalOptimizationSettings, bForceLODRebuild, 0x023C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGroupedSkeletalOptimizationSettings, UnknownData_8HGT, 0x023D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGroupedSkeletalOptimizationSettings, 0x0240);
		}

		// struct FSimplygonRemeshingSettings
		TEST_METHOD(ScriptStruct__Engine__SimplygonRemeshingSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonRemeshingSettings, bActive, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonRemeshingSettings, UnknownData_BANQ, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonRemeshingSettings, ScreenSize, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonRemeshingSettings, bRecalculateNormals, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonRemeshingSettings, UnknownData_OIP3, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonRemeshingSettings, HardAngleThreshold, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonRemeshingSettings, MergeDistance, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonRemeshingSettings, bUseClippingPlane, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonRemeshingSettings, UnknownData_AIGV, 0x0015);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonRemeshingSettings, ClippingLevel, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonRemeshingSettings, AxisIndex, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonRemeshingSettings, bPlaneNegativeHalfspace, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonRemeshingSettings, bUseMassiveLOD, 0x0021);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonRemeshingSettings, bUseAggregateLOD, 0x0022);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonRemeshingSettings, UnknownData_ZUWC, 0x0023);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimplygonRemeshingSettings, MaterialLODSettings, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSimplygonRemeshingSettings, 0x00A8);
		}

		// struct FSkeletalMeshLODInfo
		TEST_METHOD(ScriptStruct__Engine__SkeletalMeshLODInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshLODInfo, ScreenSize, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshLODInfo, LODHysteresis, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshLODInfo, LODMaterialMap, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshLODInfo, ReductionSettings, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshLODInfo, RemeshingSettings, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshLODInfo, OptimizationSettings, 0x0210);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshLODInfo, BonesToRemove, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshLODInfo, BakePose, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshLODInfo, SourceImportFilename, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshLODInfo, UnknownData_M5T1, 0x0479);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMeshLODInfo, 0x0480);
		}

		// struct FSkeletalMaterial
		TEST_METHOD(ScriptStruct__Engine__SkeletalMaterial)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMaterial, MaterialInterface, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMaterial, MaterialSlotName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMaterial, UVChannelData, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMaterial, UnknownData_3EO8, 0x0024);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMaterial, 0x0028);
		}

		// struct FExpressionInput
		TEST_METHOD(ScriptStruct__Engine__ExpressionInput)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FExpressionInput, OutputIndex, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExpressionInput, UnknownData_7B8X, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExpressionInput, ExpressionName, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FExpressionInput, 0x0010);
		}

		// struct FRootMotionSourceSettings
		TEST_METHOD(ScriptStruct__Engine__RootMotionSourceSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSourceSettings, Flags, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRootMotionSourceSettings, 0x0001);
		}

		// struct FVector_NetQuantize10 : public FVector
		TEST_METHOD(ScriptStruct__Engine__Vector_NetQuantize10)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVector_NetQuantize10, 0x000C);
		}

		// struct FRootMotionSourceGroup
		TEST_METHOD(ScriptStruct__Engine__RootMotionSourceGroup)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSourceGroup, UnknownData_C4DU, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSourceGroup, LastAccumulatedSettings, 0x00E9);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSourceGroup, UnknownData_GNJG, 0x00EA);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSourceGroup, LastPreAdditiveVelocity, 0x00EC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRootMotionSourceGroup, 0x00F8);
		}

		// struct FRepRootMotionMontage
		TEST_METHOD(ScriptStruct__Engine__RepRootMotionMontage)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepRootMotionMontage, bIsActive, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepRootMotionMontage, UnknownData_WKIN, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepRootMotionMontage, AnimMontage, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepRootMotionMontage, Position, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepRootMotionMontage, Location, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepRootMotionMontage, Rotation, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepRootMotionMontage, UnknownData_X5Q6, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepRootMotionMontage, MovementBase, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepRootMotionMontage, MovementBaseBoneName, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepRootMotionMontage, bRelativePosition, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepRootMotionMontage, bRelativeRotation, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepRootMotionMontage, UnknownData_IJ85, 0x0042);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepRootMotionMontage, AuthoritativeRootMotion, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepRootMotionMontage, Acceleration, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRepRootMotionMontage, LinearVelocity, 0x014C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRepRootMotionMontage, 0x0158);
		}

		// struct FSimulatedRootMotionReplicatedMove
		TEST_METHOD(ScriptStruct__Engine__SimulatedRootMotionReplicatedMove)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimulatedRootMotionReplicatedMove, Time, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimulatedRootMotionReplicatedMove, UnknownData_IOJ8, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSimulatedRootMotionReplicatedMove, RootMotion, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSimulatedRootMotionReplicatedMove, 0x0160);
		}

		// struct FRootMotionMovementParams
		TEST_METHOD(ScriptStruct__Engine__RootMotionMovementParams)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionMovementParams, bHasRootMotion, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionMovementParams, UnknownData_A16M, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionMovementParams, BlendWeight, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionMovementParams, UnknownData_1M83, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionMovementParams, RootMotionTransform, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRootMotionMovementParams, 0x0040);
		}

		// struct FBasedMovementInfo
		TEST_METHOD(ScriptStruct__Engine__BasedMovementInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBasedMovementInfo, MovementBase, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBasedMovementInfo, BoneName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBasedMovementInfo, Location, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBasedMovementInfo, Rotation, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBasedMovementInfo, bServerHasBaseComponent, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBasedMovementInfo, bRelativeRotation, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBasedMovementInfo, bServerHasVelocity, 0x002A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBasedMovementInfo, UnknownData_F4DY, 0x002B);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBasedMovementInfo, 0x0030);
		}

		// struct FSplinePoint
		TEST_METHOD(ScriptStruct__Engine__SplinePoint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplinePoint, InputKey, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplinePoint, Position, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplinePoint, ArriveTangent, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplinePoint, LeaveTangent, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplinePoint, Rotation, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplinePoint, Scale, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplinePoint, Type, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplinePoint, UnknownData_5EEL, 0x0041);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSplinePoint, 0x0044);
		}

		// struct FSplineCurves
		TEST_METHOD(ScriptStruct__Engine__SplineCurves)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplineCurves, Position, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplineCurves, Rotation, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplineCurves, Scale, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplineCurves, ReparamTable, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSplineCurves, 0x0060);
		}

		// struct FAudioComponentParam
		TEST_METHOD(ScriptStruct__Engine__AudioComponentParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAudioComponentParam, ParamName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAudioComponentParam, FloatParam, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAudioComponentParam, BoolParam, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAudioComponentParam, UnknownData_W3FW, 0x000D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAudioComponentParam, IntParam, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAudioComponentParam, UnknownData_YQT6, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAudioComponentParam, SoundWaveParam, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAudioComponentParam, 0x0020);
		}

		// struct FKeyHandleMap
		TEST_METHOD(ScriptStruct__Engine__KeyHandleMap)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FKeyHandleMap, UnknownData_XDRW, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FKeyHandleMap, 0x0050);
		}

		// struct FIndexedCurve
		TEST_METHOD(ScriptStruct__Engine__IndexedCurve)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FIndexedCurve, UnknownData_912U, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FIndexedCurve, KeyHandlesToIndices, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FIndexedCurve, 0x0058);
		}

		// struct FRichCurveKey
		TEST_METHOD(ScriptStruct__Engine__RichCurveKey)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRichCurveKey, InterpMode, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRichCurveKey, TangentMode, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRichCurveKey, TangentWeightMode, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRichCurveKey, UnknownData_N5EE, 0x0003);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRichCurveKey, Time, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRichCurveKey, Value, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRichCurveKey, ArriveTangent, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRichCurveKey, ArriveTangentWeight, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRichCurveKey, LeaveTangent, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRichCurveKey, LeaveTangentWeight, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRichCurveKey, 0x001C);
		}

		// struct FRichCurve : public FIndexedCurve
		TEST_METHOD(ScriptStruct__Engine__RichCurve)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRichCurve, PreInfinityExtrap, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRichCurve, PostInfinityExtrap, 0x0059);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRichCurve, UnknownData_HSNA, 0x005A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRichCurve, DefaultValue, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRichCurve, Keys, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRichCurve, 0x0070);
		}

		// struct FRuntimeFloatCurve
		TEST_METHOD(ScriptStruct__Engine__RuntimeFloatCurve)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRuntimeFloatCurve, EditorCurveData, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRuntimeFloatCurve, ExternalCurve, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRuntimeFloatCurve, 0x0078);
		}

		// struct FBaseAttenuationSettings
		TEST_METHOD(ScriptStruct__Engine__BaseAttenuationSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBaseAttenuationSettings, UnknownData_0448, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBaseAttenuationSettings, DistanceAlgorithm, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBaseAttenuationSettings, AttenuationShape, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBaseAttenuationSettings, UnknownData_JZZW, 0x000A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBaseAttenuationSettings, dBAttenuationAtMax, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBaseAttenuationSettings, AttenuationShapeExtents, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBaseAttenuationSettings, ConeOffset, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBaseAttenuationSettings, FalloffDistance, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBaseAttenuationSettings, UnknownData_SW8R, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBaseAttenuationSettings, CustomAttenuationCurve, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBaseAttenuationSettings, 0x00A0);
		}

		// struct FSoundAttenuationPluginSettings
		TEST_METHOD(ScriptStruct__Engine__SoundAttenuationPluginSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationPluginSettings, SpatializationPluginSettingsArray, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationPluginSettings, OcclusionPluginSettingsArray, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationPluginSettings, ReverbPluginSettingsArray, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundAttenuationPluginSettings, 0x0030);
		}

		// struct FSoundAttenuationSettings : public FBaseAttenuationSettings
		TEST_METHOD(ScriptStruct__Engine__SoundAttenuationSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, SpatializationAlgorithm, 0x00A2);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, AbsorptionMethod, 0x00A3);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, OcclusionTraceChannel, 0x00A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, ReverbSendMethod, 0x00A5);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, UnknownData_63LK, 0x00A6);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, OmniRadius, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, StereoSpread, 0x00AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, LPFRadiusMin, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, LPFRadiusMax, 0x00B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, CustomLowpassAirAbsorptionCurve, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, CustomHighpassAirAbsorptionCurve, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, LPFFrequencyAtMin, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, LPFFrequencyAtMax, 0x01AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, HPFFrequencyAtMin, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, HPFFrequencyAtMax, 0x01B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, FocusAzimuth, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, NonFocusAzimuth, 0x01BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, FocusDistanceScale, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, NonFocusDistanceScale, 0x01C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, FocusPriorityScale, 0x01C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, NonFocusPriorityScale, 0x01CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, FocusVolumeAttenuation, 0x01D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, NonFocusVolumeAttenuation, 0x01D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, FocusAttackInterpSpeed, 0x01D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, FocusReleaseInterpSpeed, 0x01DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, OcclusionLowPassFilterFrequency, 0x01E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, OcclusionVolumeAttenuation, 0x01E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, OcclusionInterpolationTime, 0x01E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, ReverbWetLevelMin, 0x01EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, ReverbWetLevelMax, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, ReverbDistanceMin, 0x01F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, ReverbDistanceMax, 0x01F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, ManualReverbSendLevel, 0x01FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, CustomReverbSendCurve, 0x0200);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundAttenuationSettings, PluginSettings, 0x0278);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundAttenuationSettings, 0x02A8);
		}

		// struct FMovementProperties
		TEST_METHOD(ScriptStruct__Engine__MovementProperties)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovementProperties, 0x0001);
		}

		// struct FNavAgentProperties : public FMovementProperties
		TEST_METHOD(ScriptStruct__Engine__NavAgentProperties)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavAgentProperties, UnknownData_SKEW, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavAgentProperties, AgentRadius, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavAgentProperties, AgentHeight, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavAgentProperties, AgentStepHeight, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavAgentProperties, NavWalkingSearchHeightScale, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavAgentProperties, UnknownData_N3WT, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavAgentProperties, PreferredNavData, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavAgentProperties, 0x0030);
		}

		// struct FNavAvoidanceMask
		TEST_METHOD(ScriptStruct__Engine__NavAvoidanceMask)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavAvoidanceMask, 0x0004);
		}

		// struct FCharacterMovementComponentPostPhysicsTickFunction : public FTickFunction
		TEST_METHOD(ScriptStruct__Engine__CharacterMovementComponentPostPhysicsTickFunction)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCharacterMovementComponentPostPhysicsTickFunction, UnknownData_A63O, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCharacterMovementComponentPostPhysicsTickFunction, 0x0058);
		}

		// struct FSingleAnimationPlayData
		TEST_METHOD(ScriptStruct__Engine__SingleAnimationPlayData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSingleAnimationPlayData, AnimToPlay, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSingleAnimationPlayData, UnknownData_9D9H, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSingleAnimationPlayData, SavedPosition, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSingleAnimationPlayData, SavedPlayRate, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSingleAnimationPlayData, UnknownData_0VRN, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSingleAnimationPlayData, 0x0018);
		}

		// struct FPoseSnapshot
		TEST_METHOD(ScriptStruct__Engine__PoseSnapshot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPoseSnapshot, LocalTransforms, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPoseSnapshot, BoneNames, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPoseSnapshot, SkeletalMeshName, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPoseSnapshot, SnapshotName, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPoseSnapshot, bIsValid, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPoseSnapshot, UnknownData_UJQI, 0x0031);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPoseSnapshot, 0x0038);
		}

		// struct FAnimNotifyEventReference
		TEST_METHOD(ScriptStruct__Engine__AnimNotifyEventReference)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyEventReference, UnknownData_3VX6, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyEventReference, NotifySource, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNotifyEventReference, 0x0010);
		}

		// struct FAnimLinkableElement
		TEST_METHOD(ScriptStruct__Engine__AnimLinkableElement)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimLinkableElement, UnknownData_Y2A1, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimLinkableElement, LinkedMontage, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimLinkableElement, SlotIndex, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimLinkableElement, SegmentIndex, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimLinkableElement, LinkMethod, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimLinkableElement, CachedLinkMethod, 0x0019);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimLinkableElement, UnknownData_SFLS, 0x001A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimLinkableElement, SegmentBeginTime, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimLinkableElement, SegmentLength, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimLinkableElement, LinkValue, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimLinkableElement, LinkedSequence, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimLinkableElement, 0x0030);
		}

		// struct FMarkerSyncAnimPosition
		TEST_METHOD(ScriptStruct__Engine__MarkerSyncAnimPosition)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMarkerSyncAnimPosition, PreviousMarkerName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMarkerSyncAnimPosition, NextMarkerName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMarkerSyncAnimPosition, PositionBetweenMarkers, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMarkerSyncAnimPosition, UnknownData_TPMB, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMarkerSyncAnimPosition, 0x0018);
		}

		// struct FAnimNotifyEvent : public FAnimLinkableElement
		TEST_METHOD(ScriptStruct__Engine__AnimNotifyEvent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyEvent, DisplayTime, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyEvent, TriggerTimeOffset, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyEvent, EndTriggerTimeOffset, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyEvent, TriggerWeightThreshold, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyEvent, NotifyName, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyEvent, Notify, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyEvent, NotifyStateClass, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyEvent, Duration, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyEvent, UnknownData_JISJ, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyEvent, EndLink, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyEvent, bConvertedFromBranchingPoint, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyEvent, MontageTickType, 0x0091);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyEvent, UnknownData_DP4N, 0x0092);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyEvent, NotifyTriggerChance, 0x0094);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyEvent, NotifyFilterType, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyEvent, UnknownData_F8Y6, 0x0099);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyEvent, NotifyFilterLOD, 0x009C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyEvent, bTriggerOnDedicatedServer, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyEvent, bTriggerOnFollower, 0x00A1);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyEvent, UnknownData_ITXB, 0x00A2);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyEvent, TrackIndex, 0x00A4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNotifyEvent, 0x00A8);
		}

		// struct FAnimNotifyArray
		TEST_METHOD(ScriptStruct__Engine__AnimNotifyArray)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyArray, Notifies, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNotifyArray, 0x0010);
		}

		// struct FAnimNotifyQueue
		TEST_METHOD(ScriptStruct__Engine__AnimNotifyQueue)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyQueue, UnknownData_ZYR5, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyQueue, AnimNotifies, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyQueue, UnfilteredMontageAnimNotifies, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNotifyQueue, 0x0070);
		}

		// struct FActiveForceFeedbackEffect
		TEST_METHOD(ScriptStruct__Engine__ActiveForceFeedbackEffect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FActiveForceFeedbackEffect, ForceFeedbackEffect, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FActiveForceFeedbackEffect, UnknownData_IU2K, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActiveForceFeedbackEffect, 0x0018);
		}

		// struct FViewTargetTransitionParams
		TEST_METHOD(ScriptStruct__Engine__ViewTargetTransitionParams)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FViewTargetTransitionParams, BlendTime, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FViewTargetTransitionParams, BlendFunction, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FViewTargetTransitionParams, UnknownData_YG24, 0x0005);
			CHEAT_GEAR_CHECK_OFFSET(CG::FViewTargetTransitionParams, BlendExp, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FViewTargetTransitionParams, UnknownData_WDJI, 0x000D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FViewTargetTransitionParams, 0x0010);
		}

		// struct FUpdateLevelVisibilityLevelInfo
		TEST_METHOD(ScriptStruct__Engine__UpdateLevelVisibilityLevelInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FUpdateLevelVisibilityLevelInfo, PackageName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FUpdateLevelVisibilityLevelInfo, UnknownData_WAUB, 0x0009);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FUpdateLevelVisibilityLevelInfo, 0x0010);
		}

		// struct FLatentActionInfo
		TEST_METHOD(ScriptStruct__Engine__LatentActionInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLatentActionInfo, Linkage, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLatentActionInfo, UUID, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLatentActionInfo, ExecutionFunction, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLatentActionInfo, CallbackTarget, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLatentActionInfo, 0x0018);
		}

		// struct FUpdateLevelStreamingLevelStatus
		TEST_METHOD(ScriptStruct__Engine__UpdateLevelStreamingLevelStatus)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FUpdateLevelStreamingLevelStatus, PackageName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FUpdateLevelStreamingLevelStatus, LODIndex, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FUpdateLevelStreamingLevelStatus, UnknownData_9AR9, 0x000D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FUpdateLevelStreamingLevelStatus, 0x0010);
		}

		// struct FGeomSelection
		TEST_METHOD(ScriptStruct__Engine__GeomSelection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGeomSelection, Type, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGeomSelection, Index, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGeomSelection, SelectionIndex, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGeomSelection, 0x000C);
		}

		// struct FDebugTextInfo
		TEST_METHOD(ScriptStruct__Engine__DebugTextInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDebugTextInfo, SrcActor, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDebugTextInfo, SrcActorOffset, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDebugTextInfo, SrcActorDesiredOffset, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDebugTextInfo, DebugText, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDebugTextInfo, TimeRemaining, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDebugTextInfo, Duration, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDebugTextInfo, TextColor, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDebugTextInfo, UnknownData_A7RZ, 0x003D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDebugTextInfo, OrigActorLocation, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDebugTextInfo, UnknownData_RVDG, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDebugTextInfo, Font, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDebugTextInfo, FontScale, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDebugTextInfo, UnknownData_NZN0, 0x005C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDebugTextInfo, 0x0060);
		}

		// struct FCachedKeyToActionInfo
		TEST_METHOD(ScriptStruct__Engine__CachedKeyToActionInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCachedKeyToActionInfo, PlayerInput, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCachedKeyToActionInfo, UnknownData_GXXH, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCachedKeyToActionInfo, 0x0070);
		}

		// struct FWeightedBlendable
		TEST_METHOD(ScriptStruct__Engine__WeightedBlendable)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FWeightedBlendable, Weight, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWeightedBlendable, UnknownData_XWUK, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWeightedBlendable, Object, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWeightedBlendable, 0x0010);
		}

		// struct FMaterialParameterInfo
		TEST_METHOD(ScriptStruct__Engine__MaterialParameterInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialParameterInfo, Name, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialParameterInfo, Association, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialParameterInfo, UnknownData_XY6O, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialParameterInfo, Index, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMaterialParameterInfo, 0x0010);
		}

		// struct FVectorParameterValue
		TEST_METHOD(ScriptStruct__Engine__VectorParameterValue)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVectorParameterValue, ParameterInfo, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVectorParameterValue, ParameterValue, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVectorParameterValue, ExpressionGUID, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVectorParameterValue, 0x0030);
		}

		// struct FEditorMapPerformanceTestDefinition
		TEST_METHOD(ScriptStruct__Engine__EditorMapPerformanceTestDefinition)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditorMapPerformanceTestDefinition, PerformanceTestmap, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditorMapPerformanceTestDefinition, TestTimer, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditorMapPerformanceTestDefinition, UnknownData_4FLN, 0x001C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEditorMapPerformanceTestDefinition, 0x0020);
		}

		// struct FFilePath
		TEST_METHOD(ScriptStruct__Engine__FilePath)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFilePath, FilePath, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFilePath, 0x0010);
		}

		// struct FImportFactorySettingValues
		TEST_METHOD(ScriptStruct__Engine__ImportFactorySettingValues)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FImportFactorySettingValues, SettingName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FImportFactorySettingValues, Value, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FImportFactorySettingValues, 0x0020);
		}

		// struct FEditorImportExportTestDefinition
		TEST_METHOD(ScriptStruct__Engine__EditorImportExportTestDefinition)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditorImportExportTestDefinition, ImportFilePath, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditorImportExportTestDefinition, ExportFileExtension, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditorImportExportTestDefinition, bSkipExport, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditorImportExportTestDefinition, UnknownData_RR8Y, 0x0021);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditorImportExportTestDefinition, FactorySettings, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEditorImportExportTestDefinition, 0x0038);
		}

		// struct FGPUSpriteLocalVectorFieldInfo
		TEST_METHOD(ScriptStruct__Engine__GPUSpriteLocalVectorFieldInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteLocalVectorFieldInfo, Field, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteLocalVectorFieldInfo, UnknownData_E3MU, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteLocalVectorFieldInfo, Transform, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteLocalVectorFieldInfo, MinInitialRotation, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteLocalVectorFieldInfo, MaxInitialRotation, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteLocalVectorFieldInfo, RotationRate, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteLocalVectorFieldInfo, Intensity, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteLocalVectorFieldInfo, Tightness, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteLocalVectorFieldInfo, UnknownData_XLYN, 0x006D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGPUSpriteLocalVectorFieldInfo, 0x0070);
		}

		// struct FDistributionLookupTable
		TEST_METHOD(ScriptStruct__Engine__DistributionLookupTable)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDistributionLookupTable, Op, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDistributionLookupTable, EntryCount, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDistributionLookupTable, EntryStride, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDistributionLookupTable, SubEntryStride, 0x0003);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDistributionLookupTable, TimeScale, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDistributionLookupTable, TimeBias, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDistributionLookupTable, UnknownData_9VRX, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDistributionLookupTable, Values, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDistributionLookupTable, LockFlag, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDistributionLookupTable, UnknownData_DJGJ, 0x0021);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDistributionLookupTable, 0x0028);
		}

		// struct FFloatDistribution
		TEST_METHOD(ScriptStruct__Engine__FloatDistribution)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFloatDistribution, Table, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFloatDistribution, 0x0028);
		}

		// struct FRawDistribution
		TEST_METHOD(ScriptStruct__Engine__RawDistribution)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRawDistribution, Table, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRawDistribution, 0x0028);
		}

		// struct FRawDistributionVector : public FRawDistribution
		TEST_METHOD(ScriptStruct__Engine__RawDistributionVector)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRawDistributionVector, MinValue, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRawDistributionVector, MaxValue, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRawDistributionVector, MinValueVec, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRawDistributionVector, MaxValueVec, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRawDistributionVector, Distribution, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRawDistributionVector, 0x0050);
		}

		// struct FRawDistributionFloat : public FRawDistribution
		TEST_METHOD(ScriptStruct__Engine__RawDistributionFloat)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRawDistributionFloat, MinValue, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRawDistributionFloat, MaxValue, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRawDistributionFloat, Distribution, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRawDistributionFloat, 0x0038);
		}

		// struct FGPUSpriteEmitterInfo
		TEST_METHOD(ScriptStruct__Engine__GPUSpriteEmitterInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, RequiredModule, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, SpawnModule, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, SpawnPerUnitModule, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, SpawnModules, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, UnknownData_ZQNA, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, LocalVectorField, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, VectorFieldScale, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, DragCoefficient, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, PointAttractorStrength, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, Resilience, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, ConstantAcceleration, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, PointAttractorPosition, 0x014C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, PointAttractorRadiusSq, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, OrbitOffsetBase, 0x015C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, OrbitOffsetRange, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, InvMaxSize, 0x0174);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, InvRotationRateScale, 0x017C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, MaxLifetime, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, MaxParticleCount, 0x0184);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, ScreenAlignment, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, LockAxisFlag, 0x0189);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, UnknownData_WJ41, 0x018A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, UnknownData_ZZX1, 0x018D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, CollisionMode, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, UnknownData_Q10X, 0x0191);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, UnknownData_26SG, 0x0195);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, MinFacingCameraBlendDistance, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, MaxFacingCameraBlendDistance, 0x019C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, DynamicColor, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, DynamicAlpha, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, DynamicColorScale, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, DynamicAlphaScale, 0x0278);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteEmitterInfo, UnknownData_HRVR, 0x02B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGPUSpriteEmitterInfo, 0x02C0);
		}

		// struct FFindFloorResult
		TEST_METHOD(ScriptStruct__Engine__FindFloorResult)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFindFloorResult, UnknownData_N5CB, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFindFloorResult, FloorDist, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFindFloorResult, LineDist, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFindFloorResult, UnknownData_J98E, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFindFloorResult, HitResult, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFindFloorResult, 0x0098);
		}

		// struct FRigTransformConstraint
		TEST_METHOD(ScriptStruct__Engine__RigTransformConstraint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigTransformConstraint, TranformType, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigTransformConstraint, UnknownData_S9IC, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigTransformConstraint, ParentSpace, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigTransformConstraint, Weight, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigTransformConstraint, UnknownData_P7XF, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRigTransformConstraint, 0x0018);
		}

		// struct FTransformBaseConstraint
		TEST_METHOD(ScriptStruct__Engine__TransformBaseConstraint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTransformBaseConstraint, TransformConstraints, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTransformBaseConstraint, 0x0010);
		}

		// struct FTimelineEventEntry
		TEST_METHOD(ScriptStruct__Engine__TimelineEventEntry)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimelineEventEntry, Time, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimelineEventEntry, UnknownData_HDV5, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimelineEventEntry, EventFunc, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTimelineEventEntry, 0x0018);
		}

		// struct FTimelineVectorTrack
		TEST_METHOD(ScriptStruct__Engine__TimelineVectorTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimelineVectorTrack, VectorCurve, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimelineVectorTrack, InterpFunc, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimelineVectorTrack, TrackName, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimelineVectorTrack, VectorPropertyName, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimelineVectorTrack, VectorProperty, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimelineVectorTrack, UnknownData_A5WH, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTimelineVectorTrack, 0x0040);
		}

		// struct FTimelineFloatTrack
		TEST_METHOD(ScriptStruct__Engine__TimelineFloatTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimelineFloatTrack, FloatCurve, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimelineFloatTrack, InterpFunc, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimelineFloatTrack, TrackName, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimelineFloatTrack, FloatPropertyName, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimelineFloatTrack, FloatProperty, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimelineFloatTrack, UnknownData_7236, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTimelineFloatTrack, 0x0040);
		}

		// struct FTimelineLinearColorTrack
		TEST_METHOD(ScriptStruct__Engine__TimelineLinearColorTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimelineLinearColorTrack, LinearColorCurve, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimelineLinearColorTrack, InterpFunc, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimelineLinearColorTrack, TrackName, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimelineLinearColorTrack, LinearColorPropertyName, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimelineLinearColorTrack, LinearColorProperty, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimelineLinearColorTrack, UnknownData_87TX, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTimelineLinearColorTrack, 0x0040);
		}

		// struct FTimeline
		TEST_METHOD(ScriptStruct__Engine__Timeline)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimeline, LengthMode, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimeline, UnknownData_L170, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimeline, Length, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimeline, PlayRate, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimeline, Position, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimeline, Events, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimeline, InterpVectors, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimeline, InterpFloats, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimeline, InterpLinearColors, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimeline, TimelinePostUpdateFunc, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimeline, TimelineFinishedFunc, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimeline, PropertySetObject, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimeline, DirectionPropertyName, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimeline, UnknownData_00CB, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimeline, DirectionProperty, 0x0090);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTimeline, 0x0098);
		}

		// struct FWeightedBlendables
		TEST_METHOD(ScriptStruct__Engine__WeightedBlendables)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FWeightedBlendables, Array, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWeightedBlendables, 0x0010);
		}

		// struct FPostProcessSettings
		TEST_METHOD(ScriptStruct__Engine__PostProcessSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, UnknownData_AWYL, 0x0007);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, UnknownData_X91X, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, UnknownData_IKZS, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, UnknownData_XOH6, 0x0015);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, UnknownData_UG2E, 0x001F);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, UnknownData_ZURV, 0x0021);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, BloomMethod, 0x002D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, AutoExposureMethod, 0x002E);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, DepthOfFieldMethod, 0x002F);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, WhiteTemp, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, WhiteTint, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, UnknownData_WQJP, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ColorSaturation, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ColorContrast, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ColorGamma, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ColorGain, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ColorOffset, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ColorSaturationShadows, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ColorContrastShadows, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ColorGammaShadows, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ColorGainShadows, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ColorOffsetShadows, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ColorSaturationMidtones, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ColorContrastMidtones, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ColorGammaMidtones, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ColorGainMidtones, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ColorOffsetMidtones, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ColorSaturationHighlights, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ColorContrastHighlights, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ColorGammaHighlights, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ColorGainHighlights, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ColorOffsetHighlights, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ColorCorrectionHighlightsMin, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ColorCorrectionShadowsMax, 0x0184);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, BlueCorrection, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ExpandGamut, 0x018C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, FilmSlope, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, FilmToe, 0x0194);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, FilmShoulder, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, FilmBlackClip, 0x019C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, FilmWhiteClip, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, FilmWhitePoint, 0x01A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, FilmShadowTint, 0x01B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, FilmShadowTintBlend, 0x01C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, FilmShadowTintAmount, 0x01C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, FilmSaturation, 0x01CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, FilmChannelMixerRed, 0x01D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, FilmChannelMixerGreen, 0x01E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, FilmChannelMixerBlue, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, FilmContrast, 0x0200);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, FilmToeAmount, 0x0204);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, FilmHealAmount, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, FilmDynamicRange, 0x020C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, SceneColorTint, 0x0210);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, SceneFringeIntensity, 0x0220);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ChromaticAberrationStartOffset, 0x0224);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, BloomIntensity, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, BloomCHIntensity, 0x022C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, BloomBGIntensity, 0x0230);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, BloomThreshold, 0x0234);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, BloomSizeScale, 0x0238);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, Bloom1Size, 0x023C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, Bloom2Size, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, Bloom3Size, 0x0244);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, Bloom4Size, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, Bloom5Size, 0x024C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, Bloom6Size, 0x0250);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, Bloom1Tint, 0x0254);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, Bloom2Tint, 0x0264);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, Bloom3Tint, 0x0274);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, Bloom4Tint, 0x0284);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, Bloom5Tint, 0x0294);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, Bloom6Tint, 0x02A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, BloomConvolutionSize, 0x02B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, BloomConvolutionTexture, 0x02B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, BloomConvolutionCenterUV, 0x02C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, BloomConvolutionPreFilterMin, 0x02C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, BloomConvolutionPreFilterMax, 0x02CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, BloomConvolutionPreFilterMult, 0x02D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, BloomConvolutionBufferScale, 0x02D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, BloomDirtMask, 0x02D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, BloomDirtMaskIntensity, 0x02E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, BloomDirtMaskTint, 0x02E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, AmbientCubemapTint, 0x02F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, AmbientCubemapIntensity, 0x0304);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, AmbientCubemap, 0x0308);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, CameraShutterSpeed, 0x0310);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, CameraISO, 0x0314);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, DepthOfFieldFstop, 0x0318);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, DepthOfFieldMinFstop, 0x031C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, DepthOfFieldBladeCount, 0x0320);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, AutoExposureBias, 0x0324);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, AutoExposureLowPercent, 0x0328);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, AutoExposureHighPercent, 0x032C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, AutoExposureMinBrightness, 0x0330);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, AutoExposureMaxBrightness, 0x0334);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, AutoExposureSpeedUp, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, AutoExposureSpeedDown, 0x033C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, HistogramLogMin, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, HistogramLogMax, 0x0344);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, LensFlareDirectionalLightActor, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, LensFlareScreenOutintensity, 0x0350);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, UnknownData_AP9L, 0x0354);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, LensFlareScreenOutBokehShape, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, SunGlowIntensity, 0x0360);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, SunGlowInfluence, 0x0364);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, SunGlowPower, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, AutoExposureCalibrationConstant, 0x036C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, LensFlareIntensity, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, LensFlareTint, 0x0374);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, LensFlareBokehSize, 0x0384);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, LensFlareThreshold, 0x0388);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, UnknownData_LG6K, 0x038C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, LensFlareBokehShape, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, LensFlareTints, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, VignetteIntensity, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, GrainJitter, 0x041C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, GrainIntensity, 0x0420);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, AmbientOcclusionIntensity, 0x0424);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, AmbientOcclusionStaticFraction, 0x0428);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, AmbientOcclusionRadius, 0x042C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, UnknownData_INU7, 0x0431);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, AmbientOcclusionFadeDistance, 0x0434);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, AmbientOcclusionFadeRadius, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, AmbientOcclusionDistance, 0x043C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, AmbientOcclusionPower, 0x0440);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, AmbientOcclusionBias, 0x0444);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, AmbientOcclusionQuality, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, AmbientOcclusionMipBlend, 0x044C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, AmbientOcclusionMipScale, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, AmbientOcclusionMipThreshold, 0x0454);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, IndirectLightingColor, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, IndirectLightingIntensity, 0x0468);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ColorGradingIntensity, 0x046C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ColorGradingLUT, 0x0470);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, DepthOfFieldSensorWidth, 0x0478);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, DepthOfFieldFocalDistance, 0x047C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, DepthOfFieldDepthBlurAmount, 0x0480);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, DepthOfFieldDepthBlurRadius, 0x0484);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, DepthOfFieldFocalRegion, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, DepthOfFieldNearTransitionRegion, 0x048C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, DepthOfFieldFarTransitionRegion, 0x0490);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, DepthOfFieldScale, 0x0494);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, DepthOfFieldMaxBokehSize, 0x0498);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, DepthOfFieldNearBlurSize, 0x049C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, DepthOfFieldFarBlurSize, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, UnknownData_0Y64, 0x04A5);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, SoftFocusIntensity, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, SoftFocusBlurSize, 0x04AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, DepthOfFieldOcclusion, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, UnknownData_3TVC, 0x04B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, DepthOfFieldBokehShape, 0x04B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, DepthOfFieldColorThreshold, 0x04C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, DepthOfFieldSizeThreshold, 0x04C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, DepthOfFieldSkyFocusDistance, 0x04C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, DepthOfFieldVignetteSize, 0x04CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, MotionBlurAmount, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, MotionBlurMax, 0x04D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, MotionBlurPerObjectSize, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, BlurIntensity, 0x04DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, UnknownData_UE97, 0x04E1);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, BlurWidth, 0x04E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, BlurCenterX, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, BlurCenterY, 0x04EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, UnknownData_8Z5H, 0x04F1);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, BlurDirectionX, 0x04F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, BlurDirectionY, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, UnknownData_E25F, 0x04FD);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineInfluence, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineIntensity, 0x0504);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineColor, 0x0508);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineColorIntensity, 0x0518);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineUniqueColor1, 0x051C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineUniqueColor2, 0x052C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineUniqueColor3, 0x053C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineDecisionDepthFar, 0x054C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineDecisionDepthMiddle, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineDecisionDepthNear, 0x0554);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineDistanceDepthFar, 0x0558);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineDistanceDepthMiddle, 0x055C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineDistanceDepthNear, 0x0560);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineDecisionNormalFar, 0x0564);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineDecisionNormalMiddle, 0x0568);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineDecisionNormalNear, 0x056C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineDistanceNormalFar, 0x0570);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineDistanceNormalMiddle, 0x0574);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineDistanceNormalNear, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineNormalDifferencePower, 0x057C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlinePointVanishing, 0x0580);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlinePointEnd, 0x0584);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlinePointFar, 0x0588);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlinePointNear, 0x058C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlinePointThin, 0x0590);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, UnknownData_YGN4, 0x0595);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineDecisionTexFar, 0x0598);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineDecisionTexNear, 0x059C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineDistanceTexFar, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineDistanceTexNear, 0x05A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineEntering, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineThickW, 0x05AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineThinW, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineDepthW, 0x05B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineNormalW, 0x05B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineTextureW, 0x05BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineFadeOutMax, 0x05C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, PEOutlineSceenCorrect, 0x05C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, LPVIntensity, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, LPVVplInjectionBias, 0x05CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, LPVSize, 0x05D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, LPVSecondaryOcclusionIntensity, 0x05D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, LPVSecondaryBounceIntensity, 0x05D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, LPVGeometryVolumeBias, 0x05DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, LPVEmissiveInjectionIntensity, 0x05E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, LPVDirectionalOcclusionIntensity, 0x05E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, LPVDirectionalOcclusionRadius, 0x05E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, LPVDiffuseOcclusionExponent, 0x05EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, LPVSpecularOcclusionExponent, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, LPVDiffuseOcclusionIntensity, 0x05F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, LPVSpecularOcclusionIntensity, 0x05F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ScreenSpaceReflectionIntensity, 0x05FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ScreenSpaceReflectionQuality, 0x0600);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ScreenSpaceReflectionMaxRoughness, 0x0604);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, LPVFadeRange, 0x0608);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, LPVDirectionalOcclusionFadeRange, 0x060C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, ScreenPercentage, 0x0610);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, TranslucencyOpacity, 0x0614);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, WeightedBlendables, 0x0618);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPostProcessSettings, UnknownData_ZER5, 0x0628);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPostProcessSettings, 0x0630);
		}

		// struct FMinimalViewInfo
		TEST_METHOD(ScriptStruct__Engine__MinimalViewInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMinimalViewInfo, Location, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMinimalViewInfo, Rotation, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMinimalViewInfo, FOV, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMinimalViewInfo, DesiredFOV, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMinimalViewInfo, OrthoWidth, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMinimalViewInfo, OrthoNearClipPlane, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMinimalViewInfo, OrthoFarClipPlane, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMinimalViewInfo, AspectRatio, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMinimalViewInfo, UnknownData_NRGD, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMinimalViewInfo, ProjectionMode, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMinimalViewInfo, UnknownData_4H74, 0x0035);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMinimalViewInfo, PostProcessBlendWeight, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMinimalViewInfo, UnknownData_9J1H, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMinimalViewInfo, PostProcessSettings, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMinimalViewInfo, OffCenterProjectionOffset, 0x0670);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMinimalViewInfo, UnknownData_H8MS, 0x0678);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMinimalViewInfo, 0x0680);
		}

		// struct FCameraCacheEntry
		TEST_METHOD(ScriptStruct__Engine__CameraCacheEntry)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraCacheEntry, Timestamp, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraCacheEntry, UnknownData_31XN, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraCacheEntry, POV, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCameraCacheEntry, 0x0690);
		}

		// struct FEngineShowFlagsSetting
		TEST_METHOD(ScriptStruct__Engine__EngineShowFlagsSetting)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEngineShowFlagsSetting, ShowFlagName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEngineShowFlagsSetting, Enabled, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEngineShowFlagsSetting, UnknownData_3YKQ, 0x0011);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEngineShowFlagsSetting, 0x0018);
		}

		// struct FLightmassWorldInfoSettings
		TEST_METHOD(ScriptStruct__Engine__LightmassWorldInfoSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassWorldInfoSettings, StaticLightingLevelScale, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassWorldInfoSettings, NumIndirectLightingBounces, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassWorldInfoSettings, NumSkyLightingBounces, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassWorldInfoSettings, IndirectLightingQuality, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassWorldInfoSettings, IndirectLightingSmoothness, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassWorldInfoSettings, EnvironmentColor, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassWorldInfoSettings, EnvironmentIntensity, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassWorldInfoSettings, EmissiveBoost, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassWorldInfoSettings, DiffuseBoost, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassWorldInfoSettings, VolumeLightingMethod, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassWorldInfoSettings, UnknownData_8VFU, 0x0025);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassWorldInfoSettings, VolumetricLightmapDetailCellSize, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassWorldInfoSettings, VolumetricLightmapMaximumBrickMemoryMb, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassWorldInfoSettings, VolumetricLightmapSphericalHarmonicSmoothing, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassWorldInfoSettings, VolumeLightSamplePlacementScale, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassWorldInfoSettings, UnknownData_2JW4, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassWorldInfoSettings, DirectIlluminationOcclusionFraction, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassWorldInfoSettings, IndirectIlluminationOcclusionFraction, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassWorldInfoSettings, OcclusionExponent, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassWorldInfoSettings, FullyOccludedSamplesFraction, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassWorldInfoSettings, MaxOcclusionDistance, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassWorldInfoSettings, UnknownData_25D0, 0x0051);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLightmassWorldInfoSettings, 0x0054);
		}

		// struct FReverbSettings
		TEST_METHOD(ScriptStruct__Engine__ReverbSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReverbSettings, UnknownData_7WDV, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReverbSettings, ReverbType, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReverbSettings, UnknownData_8CJW, 0x0005);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReverbSettings, ReverbEffect, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReverbSettings, ReverbPluginEffect, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReverbSettings, Volume, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReverbSettings, FadeTime, 0x001C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReverbSettings, 0x0020);
		}

		// struct FInteriorSettings
		TEST_METHOD(ScriptStruct__Engine__InteriorSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInteriorSettings, UnknownData_MWN0, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInteriorSettings, ExteriorVolume, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInteriorSettings, ExteriorTime, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInteriorSettings, ExteriorLPF, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInteriorSettings, ExteriorLPFTime, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInteriorSettings, InteriorVolume, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInteriorSettings, InteriorTime, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInteriorSettings, InteriorLPF, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInteriorSettings, InteriorLPFTime, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInteriorSettings, 0x0024);
		}

		// struct FBroadphaseSettings
		TEST_METHOD(ScriptStruct__Engine__BroadphaseSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBroadphaseSettings, bUseMBPOnClient, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBroadphaseSettings, bUseMBPOnServer, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBroadphaseSettings, UnknownData_JZ8A, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBroadphaseSettings, MBPBounds, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBroadphaseSettings, MBPNumSubdivs, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBroadphaseSettings, 0x0024);
		}

		// struct FNetViewer
		TEST_METHOD(ScriptStruct__Engine__NetViewer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNetViewer, Connection, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNetViewer, InViewer, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNetViewer, ViewTarget, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNetViewer, ViewLocation, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNetViewer, ViewDir, 0x0024);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNetViewer, 0x0030);
		}

		// struct FStreamingTextureBuildInfo
		TEST_METHOD(ScriptStruct__Engine__StreamingTextureBuildInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStreamingTextureBuildInfo, PackedRelativeBox, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStreamingTextureBuildInfo, TextureLevelIndex, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStreamingTextureBuildInfo, TexelFactor, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStreamingTextureBuildInfo, 0x000C);
		}

		// struct FLightmassPrimitiveSettings
		TEST_METHOD(ScriptStruct__Engine__LightmassPrimitiveSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassPrimitiveSettings, UnknownData_LOQI, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassPrimitiveSettings, EmissiveLightFalloffExponent, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassPrimitiveSettings, EmissiveLightExplicitInfluenceRadius, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassPrimitiveSettings, EmissiveBoost, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassPrimitiveSettings, DiffuseBoost, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassPrimitiveSettings, FullyOccludedSamplesFraction, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLightmassPrimitiveSettings, 0x0018);
		}

		// struct FPaintedVertex
		TEST_METHOD(ScriptStruct__Engine__PaintedVertex)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaintedVertex, Position, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaintedVertex, UnknownData_4PP9, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaintedVertex, Normal, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaintedVertex, Color, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaintedVertex, UnknownData_XVXN, 0x0024);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPaintedVertex, 0x0030);
		}

		// struct FStaticMeshComponentLODInfo
		TEST_METHOD(ScriptStruct__Engine__StaticMeshComponentLODInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMeshComponentLODInfo, UnknownData_POOR, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMeshComponentLODInfo, PaintedVertices, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMeshComponentLODInfo, UnknownData_DO0L, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStaticMeshComponentLODInfo, 0x00A8);
		}

		// struct FInstancedStaticMeshMappingInfo
		TEST_METHOD(ScriptStruct__Engine__InstancedStaticMeshMappingInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInstancedStaticMeshMappingInfo, UnknownData_HS2O, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInstancedStaticMeshMappingInfo, 0x0008);
		}

		// struct FInstancedStaticMeshInstanceData
		TEST_METHOD(ScriptStruct__Engine__InstancedStaticMeshInstanceData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInstancedStaticMeshInstanceData, Transform, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInstancedStaticMeshInstanceData, 0x0040);
		}

		// struct FParticleSysParam
		TEST_METHOD(ScriptStruct__Engine__ParticleSysParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleSysParam, Name, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleSysParam, ParamType, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleSysParam, UnknownData_IJMY, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleSysParam, Scalar, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleSysParam, Scalar_Low, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleSysParam, Vector, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleSysParam, Vector_Low, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleSysParam, Color, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleSysParam, Actor, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleSysParam, Material, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleSysParam, UnknownData_104W, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FParticleSysParam, 0x0080);
		}

		// struct FLightmassMaterialInterfaceSettings
		TEST_METHOD(ScriptStruct__Engine__LightmassMaterialInterfaceSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassMaterialInterfaceSettings, UnknownData_L95C, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassMaterialInterfaceSettings, EmissiveBoost, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassMaterialInterfaceSettings, DiffuseBoost, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassMaterialInterfaceSettings, ExportResolutionScale, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassMaterialInterfaceSettings, UnknownData_83FX, 0x0011);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLightmassMaterialInterfaceSettings, 0x0014);
		}

		// struct FMaterialTextureInfo
		TEST_METHOD(ScriptStruct__Engine__MaterialTextureInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialTextureInfo, SamplingScale, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialTextureInfo, UVChannelIndex, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialTextureInfo, TextureName, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMaterialTextureInfo, 0x0010);
		}

		// struct FMaterialInstanceBasePropertyOverrides
		TEST_METHOD(ScriptStruct__Engine__MaterialInstanceBasePropertyOverrides)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialInstanceBasePropertyOverrides, bOverride_OpacityMaskClipValue, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialInstanceBasePropertyOverrides, bOverride_BlendMode, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialInstanceBasePropertyOverrides, bOverride_ShadingModel, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialInstanceBasePropertyOverrides, bOverride_DitheredLODTransition, 0x0003);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialInstanceBasePropertyOverrides, bOverride_CastDynamicShadowAsMasked, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialInstanceBasePropertyOverrides, bOverride_TwoSided, 0x0005);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialInstanceBasePropertyOverrides, UnknownData_R98S, 0x0006);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialInstanceBasePropertyOverrides, OpacityMaskClipValue, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialInstanceBasePropertyOverrides, BlendMode, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialInstanceBasePropertyOverrides, ShadingModel, 0x000D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialInstanceBasePropertyOverrides, UnknownData_8DOZ, 0x000E);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialInstanceBasePropertyOverrides, UnknownData_9B4S, 0x0011);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMaterialInstanceBasePropertyOverrides, 0x0014);
		}

		// struct FMaterialLayersFunctions
		TEST_METHOD(ScriptStruct__Engine__MaterialLayersFunctions)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialLayersFunctions, Layers, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialLayersFunctions, Blends, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialLayersFunctions, LayerStates, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialLayersFunctions, KeyString, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMaterialLayersFunctions, 0x0040);
		}

		// struct FStaticMaterialLayersParameter
		TEST_METHOD(ScriptStruct__Engine__StaticMaterialLayersParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMaterialLayersParameter, ParameterInfo, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMaterialLayersParameter, Value, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMaterialLayersParameter, bOverride, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMaterialLayersParameter, UnknownData_LOTO, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMaterialLayersParameter, ExpressionGUID, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMaterialLayersParameter, UnknownData_08WO, 0x0064);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStaticMaterialLayersParameter, 0x0068);
		}

		// struct FStaticTerrainLayerWeightParameter
		TEST_METHOD(ScriptStruct__Engine__StaticTerrainLayerWeightParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticTerrainLayerWeightParameter, ParameterInfo, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticTerrainLayerWeightParameter, bOverride, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticTerrainLayerWeightParameter, UnknownData_NY14, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticTerrainLayerWeightParameter, ExpressionGUID, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticTerrainLayerWeightParameter, WeightmapIndex, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticTerrainLayerWeightParameter, bWeightBasedBlend, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticTerrainLayerWeightParameter, UnknownData_FS5U, 0x0029);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStaticTerrainLayerWeightParameter, 0x0030);
		}

		// struct FStaticComponentMaskParameter
		TEST_METHOD(ScriptStruct__Engine__StaticComponentMaskParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticComponentMaskParameter, ParameterInfo, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticComponentMaskParameter, R, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticComponentMaskParameter, G, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticComponentMaskParameter, B, 0x0012);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticComponentMaskParameter, A, 0x0013);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticComponentMaskParameter, bOverride, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticComponentMaskParameter, UnknownData_FK3K, 0x0015);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticComponentMaskParameter, ExpressionGUID, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStaticComponentMaskParameter, 0x0028);
		}

		// struct FStaticSwitchParameter
		TEST_METHOD(ScriptStruct__Engine__StaticSwitchParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticSwitchParameter, ParameterInfo, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticSwitchParameter, Value, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticSwitchParameter, bOverride, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticSwitchParameter, UnknownData_591B, 0x0012);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticSwitchParameter, ExpressionGUID, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticSwitchParameter, UnknownData_P77W, 0x0024);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStaticSwitchParameter, 0x0028);
		}

		// struct FStaticParameterSet
		TEST_METHOD(ScriptStruct__Engine__StaticParameterSet)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticParameterSet, StaticSwitchParameters, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticParameterSet, StaticComponentMaskParameters, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticParameterSet, TerrainLayerWeightParameters, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticParameterSet, MaterialLayersParameters, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStaticParameterSet, 0x0040);
		}

		// struct FBlueprintComponentChangedPropertyInfo
		TEST_METHOD(ScriptStruct__Engine__BlueprintComponentChangedPropertyInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintComponentChangedPropertyInfo, PropertyName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintComponentChangedPropertyInfo, ArrayIndex, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintComponentChangedPropertyInfo, UnknownData_BAU9, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintComponentChangedPropertyInfo, PropertyScope, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintComponentChangedPropertyInfo, 0x0018);
		}

		// struct FBlueprintCookedComponentInstancingData
		TEST_METHOD(ScriptStruct__Engine__BlueprintCookedComponentInstancingData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintCookedComponentInstancingData, bIsValid, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintCookedComponentInstancingData, UnknownData_2MDI, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintCookedComponentInstancingData, ChangedPropertyList, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintCookedComponentInstancingData, UnknownData_A0D6, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintCookedComponentInstancingData, 0x0050);
		}

		// struct FSoundConcurrencySettings
		TEST_METHOD(ScriptStruct__Engine__SoundConcurrencySettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundConcurrencySettings, MaxCount, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundConcurrencySettings, UnknownData_U7RF, 0x0005);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundConcurrencySettings, ResolutionRule, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundConcurrencySettings, UnknownData_3CPV, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundConcurrencySettings, VolumeScale, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundConcurrencySettings, 0x0010);
		}

		// struct FSoundSubmixSendInfo
		TEST_METHOD(ScriptStruct__Engine__SoundSubmixSendInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundSubmixSendInfo, SendLevel, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundSubmixSendInfo, UnknownData_T99E, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundSubmixSendInfo, SoundSubmix, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundSubmixSendInfo, 0x0010);
		}

		// struct FSoundSourceBusSendInfo
		TEST_METHOD(ScriptStruct__Engine__SoundSourceBusSendInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundSourceBusSendInfo, SendLevel, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundSourceBusSendInfo, UnknownData_Z4U5, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundSourceBusSendInfo, SoundSourceBus, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundSourceBusSendInfo, 0x0010);
		}

		// struct FSubtitleCue
		TEST_METHOD(ScriptStruct__Engine__SubtitleCue)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubtitleCue, Text, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubtitleCue, Time, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubtitleCue, UnknownData_9YPC, 0x001C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSubtitleCue, 0x0020);
		}

		// struct FLocalizedSubtitle
		TEST_METHOD(ScriptStruct__Engine__LocalizedSubtitle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLocalizedSubtitle, LanguageExt, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLocalizedSubtitle, Subtitles, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLocalizedSubtitle, UnknownData_9AOT, 0x0021);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLocalizedSubtitle, 0x0028);
		}

		// struct FInterpolationParameter
		TEST_METHOD(ScriptStruct__Engine__InterpolationParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpolationParameter, InterpolationTime, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpolationParameter, InterpolationType, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpolationParameter, UnknownData_XJ05, 0x0005);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpolationParameter, 0x0008);
		}

		// struct FEditorElement
		TEST_METHOD(ScriptStruct__Engine__EditorElement)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditorElement, Indices, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditorElement, Weights, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEditorElement, 0x0018);
		}

		// struct FBlendParameter
		TEST_METHOD(ScriptStruct__Engine__BlendParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlendParameter, DisplayName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlendParameter, Min, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlendParameter, Max, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlendParameter, GridNum, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlendParameter, UnknownData_85AV, 0x001C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlendParameter, 0x0020);
		}

		// struct FBlendSample
		TEST_METHOD(ScriptStruct__Engine__BlendSample)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlendSample, Animation, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlendSample, SampleValue, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlendSample, RateScale, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlendSample, 0x0018);
		}

		// struct FPerBoneInterpolation
		TEST_METHOD(ScriptStruct__Engine__PerBoneInterpolation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPerBoneInterpolation, BoneReference, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPerBoneInterpolation, InterpolationSpeedPerSec, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPerBoneInterpolation, UnknownData_PO8T, 0x001C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPerBoneInterpolation, 0x0020);
		}

		// struct FAnimGroupInfo
		TEST_METHOD(ScriptStruct__Engine__AnimGroupInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimGroupInfo, Name, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimGroupInfo, Color, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimGroupInfo, 0x0018);
		}

		// struct FBakedStateExitTransition
		TEST_METHOD(ScriptStruct__Engine__BakedStateExitTransition)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBakedStateExitTransition, CanTakeDelegateIndex, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBakedStateExitTransition, CustomResultNodeIndex, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBakedStateExitTransition, TransitionIndex, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBakedStateExitTransition, bDesiredTransitionReturnValue, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBakedStateExitTransition, bAutomaticRemainingTimeRule, 0x000D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBakedStateExitTransition, UnknownData_3TXQ, 0x000E);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBakedStateExitTransition, PoseEvaluatorLinks, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBakedStateExitTransition, 0x0020);
		}

		// struct FAnimationStateBase
		TEST_METHOD(ScriptStruct__Engine__AnimationStateBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationStateBase, StateName, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationStateBase, 0x0008);
		}

		// struct FAnimationTransitionBetweenStates : public FAnimationStateBase
		TEST_METHOD(ScriptStruct__Engine__AnimationTransitionBetweenStates)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationTransitionBetweenStates, PreviousState, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationTransitionBetweenStates, NextState, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationTransitionBetweenStates, CrossfadeDuration, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationTransitionBetweenStates, StartNotify, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationTransitionBetweenStates, EndNotify, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationTransitionBetweenStates, InterruptNotify, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationTransitionBetweenStates, BlendMode, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationTransitionBetweenStates, UnknownData_1VMP, 0x0021);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationTransitionBetweenStates, CustomCurve, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationTransitionBetweenStates, BlendProfile, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationTransitionBetweenStates, LogicType, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationTransitionBetweenStates, UnknownData_2NPV, 0x0039);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationTransitionBetweenStates, 0x0040);
		}

		// struct FBakedAnimationState
		TEST_METHOD(ScriptStruct__Engine__BakedAnimationState)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBakedAnimationState, StateName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBakedAnimationState, Transitions, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBakedAnimationState, StateRootNodeIndex, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBakedAnimationState, StartNotify, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBakedAnimationState, EndNotify, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBakedAnimationState, FullyBlendedNotify, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBakedAnimationState, bIsAConduit, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBakedAnimationState, UnknownData_Q3SQ, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBakedAnimationState, EntryRuleNodeIndex, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBakedAnimationState, PlayerNodeIndices, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBakedAnimationState, bAlwaysResetOnEntry, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBakedAnimationState, UnknownData_FL79, 0x0041);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBakedAnimationState, 0x0048);
		}

		// struct FBakedAnimationStateMachine
		TEST_METHOD(ScriptStruct__Engine__BakedAnimationStateMachine)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBakedAnimationStateMachine, MachineName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBakedAnimationStateMachine, InitialState, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBakedAnimationStateMachine, UnknownData_ELAC, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBakedAnimationStateMachine, States, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBakedAnimationStateMachine, Transitions, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBakedAnimationStateMachine, 0x0030);
		}

		// struct FSmartName
		TEST_METHOD(ScriptStruct__Engine__SmartName)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSmartName, DisplayName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSmartName, UnknownData_AR1U, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSmartName, 0x0010);
		}

		// struct FAnimCurveBase
		TEST_METHOD(ScriptStruct__Engine__AnimCurveBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimCurveBase, LastObservedName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimCurveBase, Name, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimCurveBase, CurveTypeFlags, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimCurveBase, UnknownData_WKKW, 0x001C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimCurveBase, 0x0020);
		}

		// struct FFloatCurve : public FAnimCurveBase
		TEST_METHOD(ScriptStruct__Engine__FloatCurve)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFloatCurve, FloatCurve, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFloatCurve, 0x0090);
		}

		// struct FRawCurveTracks
		TEST_METHOD(ScriptStruct__Engine__RawCurveTracks)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRawCurveTracks, FloatCurves, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRawCurveTracks, 0x0010);
		}

		// struct FAnimSegment
		TEST_METHOD(ScriptStruct__Engine__AnimSegment)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimSegment, AnimReference, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimSegment, StartPos, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimSegment, AnimStartTime, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimSegment, AnimEndTime, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimSegment, AnimPlayRate, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimSegment, LoopingCount, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimSegment, UnknownData_TY2S, 0x001C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimSegment, 0x0020);
		}

		// struct FAnimTrack
		TEST_METHOD(ScriptStruct__Engine__AnimTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimTrack, AnimSegments, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimTrack, 0x0010);
		}

		// struct FAlphaBlend
		TEST_METHOD(ScriptStruct__Engine__AlphaBlend)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAlphaBlend, BlendOption, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAlphaBlend, UnknownData_5YVV, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAlphaBlend, CustomCurve, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAlphaBlend, BlendTime, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAlphaBlend, UnknownData_383Z, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAlphaBlend, 0x0038);
		}

		// struct FAnimSyncMarker
		TEST_METHOD(ScriptStruct__Engine__AnimSyncMarker)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimSyncMarker, MarkerName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimSyncMarker, Time, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimSyncMarker, UnknownData_1BMS, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimSyncMarker, 0x0010);
		}

		// struct FCompositeSection : public FAnimLinkableElement
		TEST_METHOD(ScriptStruct__Engine__CompositeSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompositeSection, SectionName, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompositeSection, StartTime, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompositeSection, UnknownData_7H54, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompositeSection, NextSectionName, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompositeSection, MetaData, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCompositeSection, 0x0058);
		}

		// struct FBranchingPoint : public FAnimLinkableElement
		TEST_METHOD(ScriptStruct__Engine__BranchingPoint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBranchingPoint, EventName, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBranchingPoint, DisplayTime, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBranchingPoint, TriggerTimeOffset, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBranchingPoint, 0x0040);
		}

		// struct FBranchingPointMarker
		TEST_METHOD(ScriptStruct__Engine__BranchingPointMarker)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBranchingPointMarker, NotifyIndex, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBranchingPointMarker, TriggerTime, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBranchingPointMarker, NotifyEventType, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBranchingPointMarker, UnknownData_1IZ6, 0x0009);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBranchingPointMarker, 0x000C);
		}

		// struct FTimeStretchCurveMarker
		TEST_METHOD(ScriptStruct__Engine__TimeStretchCurveMarker)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimeStretchCurveMarker, Time, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimeStretchCurveMarker, Alpha, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTimeStretchCurveMarker, 0x0010);
		}

		// struct FTimeStretchCurve
		TEST_METHOD(ScriptStruct__Engine__TimeStretchCurve)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimeStretchCurve, SamplingRate, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimeStretchCurve, CurveValueMinPrecision, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimeStretchCurve, Markers, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimeStretchCurve, Sum_dT_i_by_C_i, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimeStretchCurve, UnknownData_KZ4M, 0x0024);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTimeStretchCurve, 0x0028);
		}

		// struct FSlotAnimationTrack
		TEST_METHOD(ScriptStruct__Engine__SlotAnimationTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlotAnimationTrack, SlotName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlotAnimationTrack, AnimTrack, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSlotAnimationTrack, 0x0018);
		}

		// struct FMarkerSyncData
		TEST_METHOD(ScriptStruct__Engine__MarkerSyncData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMarkerSyncData, AuthoredSyncMarkers, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMarkerSyncData, UnknownData_B321, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMarkerSyncData, 0x0020);
		}

		// struct FTrackToSkeletonMap
		TEST_METHOD(ScriptStruct__Engine__TrackToSkeletonMap)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTrackToSkeletonMap, BoneTreeIndex, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTrackToSkeletonMap, 0x0004);
		}

		// struct FAnimSetMeshLinkup
		TEST_METHOD(ScriptStruct__Engine__AnimSetMeshLinkup)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimSetMeshLinkup, BoneToTrackTable, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimSetMeshLinkup, 0x0010);
		}

		// struct FDirectoryPath
		TEST_METHOD(ScriptStruct__Engine__DirectoryPath)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDirectoryPath, Path, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDirectoryPath, 0x0010);
		}

		// struct FPrimaryAssetRules
		TEST_METHOD(ScriptStruct__Engine__PrimaryAssetRules)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimaryAssetRules, Priority, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimaryAssetRules, bApplyRecursively, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimaryAssetRules, UnknownData_EDVL, 0x0005);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimaryAssetRules, ChunkId, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimaryAssetRules, CookRule, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimaryAssetRules, UnknownData_W07P, 0x000D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPrimaryAssetRules, 0x0010);
		}

		// struct FAssetManagerRedirect
		TEST_METHOD(ScriptStruct__Engine__AssetManagerRedirect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAssetManagerRedirect, Old, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAssetManagerRedirect, New, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAssetManagerRedirect, 0x0020);
		}

		// struct FPrimaryAssetRulesOverride
		TEST_METHOD(ScriptStruct__Engine__PrimaryAssetRulesOverride)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimaryAssetRulesOverride, PrimaryAssetId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimaryAssetRulesOverride, Rules, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPrimaryAssetRulesOverride, 0x0020);
		}

		// struct FPrimaryAssetTypeInfo
		TEST_METHOD(ScriptStruct__Engine__PrimaryAssetTypeInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimaryAssetTypeInfo, PrimaryAssetType, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimaryAssetTypeInfo, AssetBaseClass, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimaryAssetTypeInfo, AssetBaseClassLoaded, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimaryAssetTypeInfo, bHasBlueprintClasses, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimaryAssetTypeInfo, bIsEditorOnly, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimaryAssetTypeInfo, UnknownData_KWGJ, 0x003A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimaryAssetTypeInfo, Directories, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimaryAssetTypeInfo, SpecificAssets, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimaryAssetTypeInfo, Rules, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimaryAssetTypeInfo, AssetScanPaths, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimaryAssetTypeInfo, bIsDynamicAsset, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimaryAssetTypeInfo, UnknownData_L98B, 0x0081);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimaryAssetTypeInfo, NumberOfAssets, 0x0084);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPrimaryAssetTypeInfo, 0x0088);
		}

		// struct FAssetMapping
		TEST_METHOD(ScriptStruct__Engine__AssetMapping)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAssetMapping, SourceAsset, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAssetMapping, TargetAsset, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAssetMapping, 0x0010);
		}

		// struct FAtmospherePrecomputeParameters
		TEST_METHOD(ScriptStruct__Engine__AtmospherePrecomputeParameters)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtmospherePrecomputeParameters, DensityHeight, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtmospherePrecomputeParameters, DecayHeight, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtmospherePrecomputeParameters, MaxScatteringOrder, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtmospherePrecomputeParameters, TransmittanceTexWidth, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtmospherePrecomputeParameters, TransmittanceTexHeight, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtmospherePrecomputeParameters, IrradianceTexWidth, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtmospherePrecomputeParameters, IrradianceTexHeight, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtmospherePrecomputeParameters, InscatterAltitudeSampleNum, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtmospherePrecomputeParameters, InscatterMuNum, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtmospherePrecomputeParameters, InscatterMuSNum, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtmospherePrecomputeParameters, InscatterNuNum, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAtmospherePrecomputeParameters, 0x002C);
		}

		// struct FAudioQualitySettings
		TEST_METHOD(ScriptStruct__Engine__AudioQualitySettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAudioQualitySettings, DisplayName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAudioQualitySettings, MaxChannels, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAudioQualitySettings, UnknownData_6C0Q, 0x001C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAudioQualitySettings, 0x0020);
		}

		// struct FLaunchOnTestSettings
		TEST_METHOD(ScriptStruct__Engine__LaunchOnTestSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLaunchOnTestSettings, LaunchOnTestmap, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLaunchOnTestSettings, DeviceID, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLaunchOnTestSettings, 0x0020);
		}

		// struct FBoneNode
		TEST_METHOD(ScriptStruct__Engine__BoneNode)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoneNode, Name, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoneNode, ParentIndex, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoneNode, TranslationRetargetingMode, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoneNode, UnknownData_1SE5, 0x000D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBoneNode, 0x0010);
		}

		// struct FVirtualBone
		TEST_METHOD(ScriptStruct__Engine__VirtualBone)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVirtualBone, SourceBoneName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVirtualBone, TargetBoneName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVirtualBone, VirtualBoneName, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVirtualBone, 0x0018);
		}

		// struct FSmartNameContainer
		TEST_METHOD(ScriptStruct__Engine__SmartNameContainer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSmartNameContainer, UnknownData_U15K, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSmartNameContainer, 0x0050);
		}

		// struct FAnimSlotGroup
		TEST_METHOD(ScriptStruct__Engine__AnimSlotGroup)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimSlotGroup, GroupName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimSlotGroup, SlotNames, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimSlotGroup, 0x0018);
		}

		// struct FBlendProfileBoneEntry
		TEST_METHOD(ScriptStruct__Engine__BlendProfileBoneEntry)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlendProfileBoneEntry, BoneReference, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlendProfileBoneEntry, BlendScale, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlendProfileBoneEntry, UnknownData_KM27, 0x001C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlendProfileBoneEntry, 0x0020);
		}

		// struct FKShapeElem
		TEST_METHOD(ScriptStruct__Engine__KShapeElem)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FKShapeElem, UnknownData_4XHY, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKShapeElem, RestOffset, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKShapeElem, UnknownData_DEAM, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKShapeElem, Name, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKShapeElem, UnknownData_OIXM, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKShapeElem, UnknownData_CM8A, 0x001D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FKShapeElem, 0x0030);
		}

		// struct FKTaperedCapsuleElem : public FKShapeElem
		TEST_METHOD(ScriptStruct__Engine__KTaperedCapsuleElem)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FKTaperedCapsuleElem, Center, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKTaperedCapsuleElem, Rotation, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKTaperedCapsuleElem, Radius0, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKTaperedCapsuleElem, Radius1, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKTaperedCapsuleElem, Length, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKTaperedCapsuleElem, UnknownData_N3L6, 0x0054);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FKTaperedCapsuleElem, 0x0058);
		}

		// struct FKConvexElem : public FKShapeElem
		TEST_METHOD(ScriptStruct__Engine__KConvexElem)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FKConvexElem, VertexData, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKConvexElem, ElemBox, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKConvexElem, UnknownData_DCMS, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKConvexElem, Transform, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKConvexElem, UnknownData_8S9H, 0x0090);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FKConvexElem, 0x00A0);
		}

		// struct FKSphylElem : public FKShapeElem
		TEST_METHOD(ScriptStruct__Engine__KSphylElem)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FKSphylElem, Center, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKSphylElem, Rotation, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKSphylElem, Radius, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKSphylElem, Length, 0x004C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FKSphylElem, 0x0050);
		}

		// struct FKBoxElem : public FKShapeElem
		TEST_METHOD(ScriptStruct__Engine__KBoxElem)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FKBoxElem, Center, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKBoxElem, Rotation, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKBoxElem, X, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKBoxElem, Y, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKBoxElem, Z, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKBoxElem, UnknownData_DVCH, 0x0054);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FKBoxElem, 0x0058);
		}

		// struct FKSphereElem : public FKShapeElem
		TEST_METHOD(ScriptStruct__Engine__KSphereElem)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FKSphereElem, Center, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKSphereElem, Radius, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FKSphereElem, 0x0040);
		}

		// struct FKAggregateGeom
		TEST_METHOD(ScriptStruct__Engine__KAggregateGeom)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FKAggregateGeom, SphereElems, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKAggregateGeom, BoxElems, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKAggregateGeom, SphylElems, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKAggregateGeom, ConvexElems, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKAggregateGeom, TaperedCapsuleElems, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKAggregateGeom, UnknownData_LJMB, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FKAggregateGeom, 0x0058);
		}

		// struct FBranchFilter
		TEST_METHOD(ScriptStruct__Engine__BranchFilter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBranchFilter, BoneName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBranchFilter, BlendDepth, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBranchFilter, UnknownData_JQIR, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBranchFilter, 0x0010);
		}

		// struct FInputBlendPose
		TEST_METHOD(ScriptStruct__Engine__InputBlendPose)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputBlendPose, BranchFilters, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInputBlendPose, 0x0010);
		}

		// struct FBuilderPoly
		TEST_METHOD(ScriptStruct__Engine__BuilderPoly)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuilderPoly, VertexIndices, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuilderPoly, Direction, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuilderPoly, UnknownData_J3PC, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuilderPoly, ItemName, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuilderPoly, PolyFlags, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuilderPoly, UnknownData_VVDD, 0x0024);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBuilderPoly, 0x0028);
		}

		// struct FFOscillator
		TEST_METHOD(ScriptStruct__Engine__FOscillator)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFOscillator, Amplitude, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFOscillator, Frequency, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFOscillator, InitialOffset, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFOscillator, Waveform, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFOscillator, UnknownData_WMB0, 0x000A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFOscillator, 0x000C);
		}

		// struct FVOscillator
		TEST_METHOD(ScriptStruct__Engine__VOscillator)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVOscillator, X, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVOscillator, Y, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVOscillator, Z, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVOscillator, 0x0024);
		}

		// struct FROscillator
		TEST_METHOD(ScriptStruct__Engine__ROscillator)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FROscillator, Pitch, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FROscillator, Yaw, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FROscillator, Roll, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FROscillator, 0x0024);
		}

		// struct FCanvasUVTri
		TEST_METHOD(ScriptStruct__Engine__CanvasUVTri)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCanvasUVTri, V0_Pos, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCanvasUVTri, V0_UV, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCanvasUVTri, V0_Color, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCanvasUVTri, V1_Pos, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCanvasUVTri, V1_UV, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCanvasUVTri, V1_Color, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCanvasUVTri, V2_Pos, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCanvasUVTri, V2_UV, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCanvasUVTri, V2_Color, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCanvasUVTri, 0x0060);
		}

		// struct FDelegateArray
		TEST_METHOD(ScriptStruct__Engine__DelegateArray)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDelegateArray, Delegates, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDelegateArray, 0x0010);
		}

		// struct FCustomChannelSetup
		TEST_METHOD(ScriptStruct__Engine__CustomChannelSetup)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCustomChannelSetup, Channel, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCustomChannelSetup, UnknownData_0SM7, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCustomChannelSetup, Name, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCustomChannelSetup, DefaultResponse, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCustomChannelSetup, bTraceType, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCustomChannelSetup, bStaticObject, 0x0012);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCustomChannelSetup, UnknownData_10SO, 0x0013);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCustomChannelSetup, 0x0018);
		}

		// struct FRedirector
		TEST_METHOD(ScriptStruct__Engine__Redirector)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRedirector, OldName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRedirector, NewName, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRedirector, 0x0010);
		}

		// struct FCustomProfile
		TEST_METHOD(ScriptStruct__Engine__CustomProfile)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCustomProfile, Name, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCustomProfile, CustomResponses, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCustomProfile, 0x0018);
		}

		// struct FCollisionResponseTemplate
		TEST_METHOD(ScriptStruct__Engine__CollisionResponseTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseTemplate, Name, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseTemplate, CollisionEnabled, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseTemplate, UnknownData_UMQU, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseTemplate, ObjectTypeName, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseTemplate, CustomResponses, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseTemplate, HelpMessage, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseTemplate, bCanModify, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionResponseTemplate, UnknownData_SRTV, 0x0039);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCollisionResponseTemplate, 0x0060);
		}

		// struct FBlueprintComponentDelegateBinding
		TEST_METHOD(ScriptStruct__Engine__BlueprintComponentDelegateBinding)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintComponentDelegateBinding, ComponentPropertyName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintComponentDelegateBinding, DelegatePropertyName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintComponentDelegateBinding, FunctionNameToBind, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintComponentDelegateBinding, 0x0018);
		}

		// struct FGameNameRedirect
		TEST_METHOD(ScriptStruct__Engine__GameNameRedirect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameNameRedirect, OldGameName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameNameRedirect, NewGameName, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameNameRedirect, 0x0010);
		}

		// struct FClassRedirect
		TEST_METHOD(ScriptStruct__Engine__ClassRedirect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FClassRedirect, ObjectName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClassRedirect, OldClassName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClassRedirect, NewClassName, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClassRedirect, OldSubobjName, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClassRedirect, NewSubobjName, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClassRedirect, NewClassClass, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClassRedirect, NewClassPackage, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClassRedirect, InstanceOnly, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClassRedirect, UnknownData_0CIQ, 0x0039);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClassRedirect, 0x0040);
		}

		// struct FPluginRedirect
		TEST_METHOD(ScriptStruct__Engine__PluginRedirect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPluginRedirect, OldPluginName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPluginRedirect, NewPluginName, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPluginRedirect, 0x0020);
		}

		// struct FStructRedirect
		TEST_METHOD(ScriptStruct__Engine__StructRedirect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructRedirect, OldStructName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructRedirect, NewStructName, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStructRedirect, 0x0010);
		}

		// struct FNetDriverDefinition
		TEST_METHOD(ScriptStruct__Engine__NetDriverDefinition)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNetDriverDefinition, DefName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNetDriverDefinition, DriverClassName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNetDriverDefinition, DriverClassNameFallback, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNetDriverDefinition, 0x0018);
		}

		// struct FDebugDisplayProperty
		TEST_METHOD(ScriptStruct__Engine__DebugDisplayProperty)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDebugDisplayProperty, Obj, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDebugDisplayProperty, WithinClass, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDebugDisplayProperty, UnknownData_NQH0, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDebugDisplayProperty, 0x0020);
		}

		// struct FCullDistanceSizePair
		TEST_METHOD(ScriptStruct__Engine__CullDistanceSizePair)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCullDistanceSizePair, Size, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCullDistanceSizePair, CullDistance, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCullDistanceSizePair, 0x0008);
		}

		// struct FNamedCurveValue
		TEST_METHOD(ScriptStruct__Engine__NamedCurveValue)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedCurveValue, Name, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedCurveValue, Value, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedCurveValue, UnknownData_CNUO, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNamedCurveValue, 0x0010);
		}

		// struct FTableRowBase
		TEST_METHOD(ScriptStruct__Engine__TableRowBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTableRowBase, UnknownData_YXOZ, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTableRowBase, 0x0008);
		}

		// struct FRollbackNetStartupActorInfo
		TEST_METHOD(ScriptStruct__Engine__RollbackNetStartupActorInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRollbackNetStartupActorInfo, UnknownData_0GOF, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRollbackNetStartupActorInfo, Archetype, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRollbackNetStartupActorInfo, UnknownData_DW5J, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRollbackNetStartupActorInfo, Level, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRollbackNetStartupActorInfo, UnknownData_XYMT, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRollbackNetStartupActorInfo, ObjReferences, 0x0090);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRollbackNetStartupActorInfo, 0x00A0);
		}

		// struct FTextureLODGroup
		TEST_METHOD(ScriptStruct__Engine__TextureLODGroup)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextureLODGroup, Group, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextureLODGroup, UnknownData_JOIV, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextureLODGroup, LODBias, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextureLODGroup, LODBias_Smaller, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextureLODGroup, LODBias_Smallest, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextureLODGroup, UnknownData_C3Y8, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextureLODGroup, NumStreamedMips, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextureLODGroup, MipGenSettings, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextureLODGroup, UnknownData_3W68, 0x0021);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextureLODGroup, MinLODSize, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextureLODGroup, MaxLODSize, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextureLODGroup, MaxLODSize_Smaller, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextureLODGroup, MaxLODSize_Smallest, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextureLODGroup, OptionalLODBias, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextureLODGroup, OptionalMaxLODSize, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextureLODGroup, UnknownData_ZV95, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextureLODGroup, MinMagFilter, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextureLODGroup, MipFilter, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTextureLODGroup, 0x0050);
		}

		// struct FDialogueContext
		TEST_METHOD(ScriptStruct__Engine__DialogueContext)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDialogueContext, Speaker, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDialogueContext, Targets, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDialogueContext, 0x0018);
		}

		// struct FDialogueContextMapping
		TEST_METHOD(ScriptStruct__Engine__DialogueContextMapping)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDialogueContextMapping, Context, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDialogueContextMapping, SoundWave, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDialogueContextMapping, LocalizationKeyFormat, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDialogueContextMapping, Proxy, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDialogueContextMapping, 0x0038);
		}

		// struct FLightmassLightSettings
		TEST_METHOD(ScriptStruct__Engine__LightmassLightSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassLightSettings, IndirectLightingSaturation, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassLightSettings, ShadowExponent, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassLightSettings, bUseAreaShadowsForStationaryLight, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassLightSettings, UnknownData_TU28, 0x0009);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLightmassLightSettings, 0x000C);
		}

		// struct FLightmassDirectionalLightSettings : public FLightmassLightSettings
		TEST_METHOD(ScriptStruct__Engine__LightmassDirectionalLightSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassDirectionalLightSettings, LightSourceAngle, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLightmassDirectionalLightSettings, 0x0010);
		}

		// struct FEdGraphTerminalType
		TEST_METHOD(ScriptStruct__Engine__EdGraphTerminalType)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphTerminalType, TerminalCategory, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphTerminalType, TerminalSubCategory, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphTerminalType, TerminalSubCategoryObject, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphTerminalType, bTerminalIsConst, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphTerminalType, bTerminalIsWeakPointer, 0x0019);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphTerminalType, UnknownData_5PVA, 0x001A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEdGraphTerminalType, 0x0020);
		}

		// struct FEdGraphPinType
		TEST_METHOD(ScriptStruct__Engine__EdGraphPinType)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphPinType, PinCategory, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphPinType, PinSubCategory, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphPinType, PinSubCategoryObject, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphPinType, PinSubCategoryMemberReference, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphPinType, PinValueType, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphPinType, ContainerType, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphPinType, UnknownData_G2RG, 0x005A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEdGraphPinType, 0x0060);
		}

		// struct FFontCharacter
		TEST_METHOD(ScriptStruct__Engine__FontCharacter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontCharacter, StartU, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontCharacter, StartV, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontCharacter, USize, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontCharacter, VSize, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontCharacter, TextureIndex, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontCharacter, UnknownData_2LXY, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontCharacter, VerticalOffset, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFontCharacter, 0x0018);
		}

		// struct FFontImportOptionsData
		TEST_METHOD(ScriptStruct__Engine__FontImportOptionsData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontImportOptionsData, FontName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontImportOptionsData, Height, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontImportOptionsData, UnknownData_NQI2, 0x0015);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontImportOptionsData, CharacterSet, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontImportOptionsData, UnknownData_4H7X, 0x0019);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontImportOptionsData, Chars, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontImportOptionsData, UnicodeRange, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontImportOptionsData, CharsFilePath, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontImportOptionsData, CharsFileWildcard, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontImportOptionsData, UnknownData_47OQ, 0x0061);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontImportOptionsData, ForegroundColor, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontImportOptionsData, UnknownData_KBX9, 0x0075);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontImportOptionsData, TexturePageWidth, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontImportOptionsData, TexturePageMaxHeight, 0x007C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontImportOptionsData, XPadding, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontImportOptionsData, YPadding, 0x0084);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontImportOptionsData, ExtendBoxTop, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontImportOptionsData, ExtendBoxBottom, 0x008C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontImportOptionsData, ExtendBoxRight, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontImportOptionsData, ExtendBoxLeft, 0x0094);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontImportOptionsData, UnknownData_Z84J, 0x0099);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontImportOptionsData, Kerning, 0x009C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontImportOptionsData, UnknownData_E1AT, 0x00A1);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontImportOptionsData, DistanceFieldScaleFactor, 0x00A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontImportOptionsData, DistanceFieldScanRadiusScale, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontImportOptionsData, UnknownData_LEO3, 0x00AC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFontImportOptionsData, 0x00B0);
		}

		// struct FForceFeedbackAttenuationSettings : public FBaseAttenuationSettings
		TEST_METHOD(ScriptStruct__Engine__ForceFeedbackAttenuationSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FForceFeedbackAttenuationSettings, 0x00A0);
		}

		// struct FForceFeedbackChannelDetails
		TEST_METHOD(ScriptStruct__Engine__ForceFeedbackChannelDetails)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FForceFeedbackChannelDetails, UnknownData_3D8E, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FForceFeedbackChannelDetails, Curve, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FForceFeedbackChannelDetails, 0x0080);
		}

		// struct FPredictProjectilePathPointData
		TEST_METHOD(ScriptStruct__Engine__PredictProjectilePathPointData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPredictProjectilePathPointData, Location, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPredictProjectilePathPointData, Velocity, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPredictProjectilePathPointData, Time, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPredictProjectilePathPointData, 0x001C);
		}

		// struct FPredictProjectilePathResult
		TEST_METHOD(ScriptStruct__Engine__PredictProjectilePathResult)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPredictProjectilePathResult, PathData, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPredictProjectilePathResult, LastTraceDestination, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPredictProjectilePathResult, UnknownData_U2EF, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPredictProjectilePathResult, HitResult, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPredictProjectilePathResult, 0x00B8);
		}

		// struct FPredictProjectilePathParams
		TEST_METHOD(ScriptStruct__Engine__PredictProjectilePathParams)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPredictProjectilePathParams, StartLocation, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPredictProjectilePathParams, LaunchVelocity, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPredictProjectilePathParams, bTraceWithCollision, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPredictProjectilePathParams, UnknownData_LMLQ, 0x0019);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPredictProjectilePathParams, ProjectileRadius, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPredictProjectilePathParams, MaxSimTime, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPredictProjectilePathParams, bTraceWithChannel, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPredictProjectilePathParams, TraceChannel, 0x0025);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPredictProjectilePathParams, UnknownData_1711, 0x0026);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPredictProjectilePathParams, ObjectTypes, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPredictProjectilePathParams, ActorsToIgnore, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPredictProjectilePathParams, SimFrequency, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPredictProjectilePathParams, OverrideGravityZ, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPredictProjectilePathParams, DrawDebugType, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPredictProjectilePathParams, UnknownData_FHYD, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPredictProjectilePathParams, DrawDebugTime, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPredictProjectilePathParams, bTraceComplex, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPredictProjectilePathParams, UnknownData_2UAU, 0x0059);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPredictProjectilePathParams, 0x0060);
		}

		// struct FHapticFeedbackDetails_Curve
		TEST_METHOD(ScriptStruct__Engine__HapticFeedbackDetails_Curve)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FHapticFeedbackDetails_Curve, Frequency, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHapticFeedbackDetails_Curve, Amplitude, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FHapticFeedbackDetails_Curve, 0x00F0);
		}

		// struct FHLODProxyMesh
		TEST_METHOD(ScriptStruct__Engine__HLODProxyMesh)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FHLODProxyMesh, LODActor, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHLODProxyMesh, UnknownData_VLYI, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHLODProxyMesh, StaticMesh, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHLODProxyMesh, Key, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FHLODProxyMesh, 0x0030);
		}

		// struct FImportanceTexture
		TEST_METHOD(ScriptStruct__Engine__ImportanceTexture)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FImportanceTexture, Size, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FImportanceTexture, NumMips, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FImportanceTexture, UnknownData_IQ4E, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FImportanceTexture, MarginalCDF, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FImportanceTexture, ConditionalCDF, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FImportanceTexture, TextureData, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FImportanceTexture, Texture, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FImportanceTexture, Weighting, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FImportanceTexture, UnknownData_3O6X, 0x0049);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FImportanceTexture, 0x0050);
		}

		// struct FComponentKey
		TEST_METHOD(ScriptStruct__Engine__ComponentKey)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FComponentKey, OwnerClass, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FComponentKey, SCSVariableName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FComponentKey, AssociatedGuid, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FComponentKey, 0x0020);
		}

		// struct FComponentOverrideRecord
		TEST_METHOD(ScriptStruct__Engine__ComponentOverrideRecord)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FComponentOverrideRecord, ComponentClass, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FComponentOverrideRecord, ComponentTemplate, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FComponentOverrideRecord, ComponentKey, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FComponentOverrideRecord, CookedComponentInstancingData, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FComponentOverrideRecord, 0x0080);
		}

		// struct FBlueprintInputDelegateBinding
		TEST_METHOD(ScriptStruct__Engine__BlueprintInputDelegateBinding)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintInputDelegateBinding, UnknownData_9S1X, 0x0001);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintInputDelegateBinding, 0x0004);
		}

		// struct FBlueprintInputActionDelegateBinding : public FBlueprintInputDelegateBinding
		TEST_METHOD(ScriptStruct__Engine__BlueprintInputActionDelegateBinding)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintInputActionDelegateBinding, UnknownData_XK5V, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintInputActionDelegateBinding, InputActionName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintInputActionDelegateBinding, InputKeyEvent, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintInputActionDelegateBinding, UnknownData_9ZGC, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintInputActionDelegateBinding, FunctionNameToBind, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintInputActionDelegateBinding, 0x0020);
		}

		// struct FBlueprintInputAxisDelegateBinding : public FBlueprintInputDelegateBinding
		TEST_METHOD(ScriptStruct__Engine__BlueprintInputAxisDelegateBinding)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintInputAxisDelegateBinding, UnknownData_8ID1, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintInputAxisDelegateBinding, InputAxisName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintInputAxisDelegateBinding, FunctionNameToBind, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintInputAxisDelegateBinding, 0x0018);
		}

		// struct FBlueprintInputAxisKeyDelegateBinding : public FBlueprintInputDelegateBinding
		TEST_METHOD(ScriptStruct__Engine__BlueprintInputAxisKeyDelegateBinding)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintInputAxisKeyDelegateBinding, UnknownData_M2SN, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintInputAxisKeyDelegateBinding, AxisKey, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintInputAxisKeyDelegateBinding, FunctionNameToBind, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintInputAxisKeyDelegateBinding, 0x0028);
		}

		// struct FBlueprintInputKeyDelegateBinding : public FBlueprintInputDelegateBinding
		TEST_METHOD(ScriptStruct__Engine__BlueprintInputKeyDelegateBinding)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintInputKeyDelegateBinding, UnknownData_W2GI, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintInputKeyDelegateBinding, InputChord, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintInputKeyDelegateBinding, InputKeyEvent, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintInputKeyDelegateBinding, UnknownData_N9X7, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintInputKeyDelegateBinding, FunctionNameToBind, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintInputKeyDelegateBinding, 0x0038);
		}

		// struct FInputAxisProperties
		TEST_METHOD(ScriptStruct__Engine__InputAxisProperties)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputAxisProperties, DeadZone, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputAxisProperties, Sensitivity, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputAxisProperties, Exponent, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputAxisProperties, UnknownData_MHQQ, 0x000D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInputAxisProperties, 0x0010);
		}

		// struct FInputAxisKeyMapping
		TEST_METHOD(ScriptStruct__Engine__InputAxisKeyMapping)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputAxisKeyMapping, AxisName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputAxisKeyMapping, Scale, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputAxisKeyMapping, UnknownData_MD5M, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputAxisKeyMapping, Key, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInputAxisKeyMapping, 0x0028);
		}

		// struct FInputActionKeyMapping
		TEST_METHOD(ScriptStruct__Engine__InputActionKeyMapping)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputActionKeyMapping, ActionName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputActionKeyMapping, UnknownData_TRHH, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputActionKeyMapping, Key, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInputActionKeyMapping, 0x0028);
		}

		// struct FInputAxisConfigEntry
		TEST_METHOD(ScriptStruct__Engine__InputAxisConfigEntry)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputAxisConfigEntry, AxisKeyName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputAxisConfigEntry, AxisProperties, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInputAxisConfigEntry, 0x0018);
		}

		// struct FBlueprintInputTouchDelegateBinding : public FBlueprintInputDelegateBinding
		TEST_METHOD(ScriptStruct__Engine__BlueprintInputTouchDelegateBinding)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintInputTouchDelegateBinding, InputKeyEvent, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintInputTouchDelegateBinding, UnknownData_X7I2, 0x0005);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintInputTouchDelegateBinding, FunctionNameToBind, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintInputTouchDelegateBinding, 0x0010);
		}

		// struct FCurveEdEntry
		TEST_METHOD(ScriptStruct__Engine__CurveEdEntry)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCurveEdEntry, CurveObject, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCurveEdEntry, CurveColor, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCurveEdEntry, UnknownData_IZUJ, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCurveEdEntry, CurveName, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCurveEdEntry, bHideCurve, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCurveEdEntry, bColorCurve, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCurveEdEntry, bFloatingPointColorCurve, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCurveEdEntry, bClamp, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCurveEdEntry, ClampLow, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCurveEdEntry, ClampHigh, 0x0034);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCurveEdEntry, 0x0038);
		}

		// struct FCurveEdTab
		TEST_METHOD(ScriptStruct__Engine__CurveEdTab)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCurveEdTab, TabName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCurveEdTab, Curves, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCurveEdTab, ViewStartInput, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCurveEdTab, ViewEndInput, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCurveEdTab, ViewStartOutput, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCurveEdTab, ViewEndOutput, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCurveEdTab, 0x0030);
		}

		// struct FInterpControlPoint
		TEST_METHOD(ScriptStruct__Engine__InterpControlPoint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpControlPoint, PositionControlPoint, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpControlPoint, bPositionIsRelative, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpControlPoint, UnknownData_67EH, 0x000D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpControlPoint, 0x001C);
		}

		// struct FAnimControlTrackKey
		TEST_METHOD(ScriptStruct__Engine__AnimControlTrackKey)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimControlTrackKey, StartTime, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimControlTrackKey, UnknownData_BWY3, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimControlTrackKey, AnimSeq, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimControlTrackKey, AnimStartOffset, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimControlTrackKey, AnimEndOffset, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimControlTrackKey, AnimPlayRate, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimControlTrackKey, UnknownData_Z494, 0x001D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimControlTrackKey, 0x0020);
		}

		// struct FBoolTrackKey
		TEST_METHOD(ScriptStruct__Engine__BoolTrackKey)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoolTrackKey, Time, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoolTrackKey, UnknownData_PZO7, 0x0005);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBoolTrackKey, 0x0008);
		}

		// struct FDirectorTrackCut
		TEST_METHOD(ScriptStruct__Engine__DirectorTrackCut)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDirectorTrackCut, Time, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDirectorTrackCut, TransitionTime, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDirectorTrackCut, TargetCamGroup, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDirectorTrackCut, ShotNumber, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDirectorTrackCut, UnknownData_2NMI, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDirectorTrackCut, 0x0018);
		}

		// struct FEventTrackKey
		TEST_METHOD(ScriptStruct__Engine__EventTrackKey)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEventTrackKey, Time, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEventTrackKey, UnknownData_TZJ6, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEventTrackKey, EventName, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEventTrackKey, 0x0010);
		}

		// struct FPrimitiveMaterialRef
		TEST_METHOD(ScriptStruct__Engine__PrimitiveMaterialRef)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimitiveMaterialRef, Primitive, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimitiveMaterialRef, Decal, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimitiveMaterialRef, ElementIndex, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimitiveMaterialRef, UnknownData_2D2M, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPrimitiveMaterialRef, 0x0018);
		}

		// struct FInterpLookupPoint
		TEST_METHOD(ScriptStruct__Engine__InterpLookupPoint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpLookupPoint, GroupName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpLookupPoint, Time, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpLookupPoint, UnknownData_HRH4, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpLookupPoint, 0x0010);
		}

		// struct FInterpLookupTrack
		TEST_METHOD(ScriptStruct__Engine__InterpLookupTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpLookupTrack, Points, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpLookupTrack, 0x0010);
		}

		// struct FParticleReplayTrackKey
		TEST_METHOD(ScriptStruct__Engine__ParticleReplayTrackKey)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleReplayTrackKey, Time, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleReplayTrackKey, Duration, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleReplayTrackKey, ClipIDNumber, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FParticleReplayTrackKey, 0x000C);
		}

		// struct FSoundTrackKey
		TEST_METHOD(ScriptStruct__Engine__SoundTrackKey)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundTrackKey, Time, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundTrackKey, Volume, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundTrackKey, Pitch, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundTrackKey, UnknownData_FSKV, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundTrackKey, Sound, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundTrackKey, 0x0018);
		}

		// struct FToggleTrackKey
		TEST_METHOD(ScriptStruct__Engine__ToggleTrackKey)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FToggleTrackKey, Time, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FToggleTrackKey, ToggleAction, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FToggleTrackKey, UnknownData_AF1G, 0x0005);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FToggleTrackKey, 0x0008);
		}

		// struct FVisibilityTrackKey
		TEST_METHOD(ScriptStruct__Engine__VisibilityTrackKey)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVisibilityTrackKey, Time, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVisibilityTrackKey, Action, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVisibilityTrackKey, ActiveCondition, 0x0005);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVisibilityTrackKey, UnknownData_NUL8, 0x0006);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVisibilityTrackKey, 0x0008);
		}

		// struct FVectorSpringState
		TEST_METHOD(ScriptStruct__Engine__VectorSpringState)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVectorSpringState, UnknownData_TAJR, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVectorSpringState, 0x0018);
		}

		// struct FFloatSpringState
		TEST_METHOD(ScriptStruct__Engine__FloatSpringState)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFloatSpringState, UnknownData_9W8S, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFloatSpringState, 0x0008);
		}

		// struct FDrawToRenderTargetContext
		TEST_METHOD(ScriptStruct__Engine__DrawToRenderTargetContext)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDrawToRenderTargetContext, RenderTarget, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDrawToRenderTargetContext, UnknownData_HRNX, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDrawToRenderTargetContext, 0x0010);
		}

		// struct FUserActivity
		TEST_METHOD(ScriptStruct__Engine__UserActivity)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FUserActivity, ActionName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FUserActivity, UnknownData_WUN8, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FUserActivity, 0x0018);
		}

		// struct FGenericStruct
		TEST_METHOD(ScriptStruct__Engine__GenericStruct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGenericStruct, Data, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGenericStruct, 0x0004);
		}

		// struct FCollisionProfileName
		TEST_METHOD(ScriptStruct__Engine__CollisionProfileName)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionProfileName, Name, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCollisionProfileName, 0x0008);
		}

		// struct FTimerHandle
		TEST_METHOD(ScriptStruct__Engine__TimerHandle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimerHandle, Handle, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTimerHandle, 0x0008);
		}

		// struct FDebugFloatHistory
		TEST_METHOD(ScriptStruct__Engine__DebugFloatHistory)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDebugFloatHistory, Samples, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDebugFloatHistory, MaxSamples, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDebugFloatHistory, MinValue, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDebugFloatHistory, MaxValue, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDebugFloatHistory, bAutoAdjustMinMax, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDebugFloatHistory, UnknownData_GPZX, 0x001D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDebugFloatHistory, 0x0020);
		}

		// struct FFormatArgumentData
		TEST_METHOD(ScriptStruct__Engine__FormatArgumentData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFormatArgumentData, ArgumentName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFormatArgumentData, ArgumentValueType, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFormatArgumentData, UnknownData_NXP3, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFormatArgumentData, ArgumentValue, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFormatArgumentData, ArgumentValueInt, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFormatArgumentData, ArgumentValueFloat, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFormatArgumentData, ArgumentValueGender, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFormatArgumentData, UnknownData_1T76, 0x0039);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFormatArgumentData, 0x0040);
		}

		// struct FLayerActorStats
		TEST_METHOD(ScriptStruct__Engine__LayerActorStats)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLayerActorStats, Type, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLayerActorStats, Total, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLayerActorStats, UnknownData_G0SD, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLayerActorStats, 0x0010);
		}

		// struct FReplicatedStaticActorDestructionInfo
		TEST_METHOD(ScriptStruct__Engine__ReplicatedStaticActorDestructionInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReplicatedStaticActorDestructionInfo, UnknownData_GWQ5, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReplicatedStaticActorDestructionInfo, ObjClass, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReplicatedStaticActorDestructionInfo, 0x0028);
		}

		// struct FLevelCollection
		TEST_METHOD(ScriptStruct__Engine__LevelCollection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelCollection, UnknownData_YBN1, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelCollection, GameState, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelCollection, NetDriver, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelCollection, DemoNetDriver, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelCollection, PersistentLevel, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelCollection, Levels, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelCollection, UnknownData_YG1D, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelCollection, 0x0080);
		}

		// struct FPSCPoolElem
		TEST_METHOD(ScriptStruct__Engine__PSCPoolElem)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPSCPoolElem, PSC, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPSCPoolElem, UnknownData_U5OR, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPSCPoolElem, 0x0010);
		}

		// struct FPSCPool
		TEST_METHOD(ScriptStruct__Engine__PSCPool)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPSCPool, FreeElements, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPSCPool, InUseComponents_Auto, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPSCPool, InUseComponents_Manual, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPSCPool, UnknownData_MD3T, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPSCPool, 0x0038);
		}

		// struct FWorldPSCPool
		TEST_METHOD(ScriptStruct__Engine__WorldPSCPool)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FWorldPSCPool, WorldParticleSystemPools, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWorldPSCPool, UnknownData_0N77, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWorldPSCPool, 0x0058);
		}

		// struct FLightmassPointLightSettings : public FLightmassLightSettings
		TEST_METHOD(ScriptStruct__Engine__LightmassPointLightSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLightmassPointLightSettings, 0x000C);
		}

		// struct FMaterialInput
		TEST_METHOD(ScriptStruct__Engine__MaterialInput)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialInput, OutputIndex, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialInput, UnknownData_BU27, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialInput, ExpressionName, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMaterialInput, 0x0010);
		}

		// struct FScalarMaterialInput : public FMaterialInput
		TEST_METHOD(ScriptStruct__Engine__ScalarMaterialInput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FScalarMaterialInput, 0x0010);
		}

		// struct FVectorMaterialInput : public FMaterialInput
		TEST_METHOD(ScriptStruct__Engine__VectorMaterialInput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVectorMaterialInput, 0x0010);
		}

		// struct FColorMaterialInput : public FMaterialInput
		TEST_METHOD(ScriptStruct__Engine__ColorMaterialInput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FColorMaterialInput, 0x0010);
		}

		// struct FMaterialAttributesInput : public FExpressionInput
		TEST_METHOD(ScriptStruct__Engine__MaterialAttributesInput)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialAttributesInput, PropertyConnectedBitmask, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialAttributesInput, UnknownData_Q6WC, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMaterialAttributesInput, 0x0018);
		}

		// struct FMaterialParameterCollectionInfo
		TEST_METHOD(ScriptStruct__Engine__MaterialParameterCollectionInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialParameterCollectionInfo, StateId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialParameterCollectionInfo, ParameterCollection, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMaterialParameterCollectionInfo, 0x0018);
		}

		// struct FMaterialFunctionInfo
		TEST_METHOD(ScriptStruct__Engine__MaterialFunctionInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialFunctionInfo, StateId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialFunctionInfo, Function, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMaterialFunctionInfo, 0x0018);
		}

		// struct FMaterialSpriteElement
		TEST_METHOD(ScriptStruct__Engine__MaterialSpriteElement)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialSpriteElement, Material, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialSpriteElement, DistanceToOpacityCurve, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialSpriteElement, UnknownData_TMXK, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialSpriteElement, BaseSizeX, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialSpriteElement, BaseSizeY, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialSpriteElement, UnknownData_2G5F, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialSpriteElement, DistanceToSizeCurve, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMaterialSpriteElement, 0x0028);
		}

		// struct FCustomInput
		TEST_METHOD(ScriptStruct__Engine__CustomInput)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCustomInput, InputName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCustomInput, Input, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCustomInput, UnknownData_LSHW, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCustomInput, 0x0020);
		}

		// struct FCollectionParameterBase
		TEST_METHOD(ScriptStruct__Engine__CollectionParameterBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollectionParameterBase, ParameterName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollectionParameterBase, ID, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCollectionParameterBase, 0x0018);
		}

		// struct FCollectionVectorParameter : public FCollectionParameterBase
		TEST_METHOD(ScriptStruct__Engine__CollectionVectorParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollectionVectorParameter, DefaultValue, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCollectionVectorParameter, 0x0028);
		}

		// struct FCollectionScalarParameter : public FCollectionParameterBase
		TEST_METHOD(ScriptStruct__Engine__CollectionScalarParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollectionScalarParameter, DefaultValue, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollectionScalarParameter, UnknownData_DPMB, 0x001C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCollectionScalarParameter, 0x0020);
		}

		// struct FInterpGroupActorInfo
		TEST_METHOD(ScriptStruct__Engine__InterpGroupActorInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpGroupActorInfo, ObjectName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpGroupActorInfo, Actors, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpGroupActorInfo, 0x0018);
		}

		// struct FCameraCutInfo
		TEST_METHOD(ScriptStruct__Engine__CameraCutInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraCutInfo, Location, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraCutInfo, Timestamp, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCameraCutInfo, 0x0010);
		}

		// struct FPurchaseInfo
		TEST_METHOD(ScriptStruct__Engine__PurchaseInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPurchaseInfo, Identifier, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPurchaseInfo, DisplayName, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPurchaseInfo, DisplayDescription, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPurchaseInfo, DisplayPrice, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPurchaseInfo, 0x0040);
		}

		// struct FNavAgentSelector
		TEST_METHOD(ScriptStruct__Engine__NavAgentSelector)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavAgentSelector, UnknownData_3Y1F, 0x0002);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavAgentSelector, 0x0004);
		}

		// struct FNavigationLinkBase
		TEST_METHOD(ScriptStruct__Engine__NavigationLinkBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavigationLinkBase, LeftProjectHeight, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavigationLinkBase, MaxFallDownLength, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavigationLinkBase, Direction, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavigationLinkBase, UnknownData_HGWS, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavigationLinkBase, SnapRadius, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavigationLinkBase, SnapHeight, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavigationLinkBase, SupportedAgents, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavigationLinkBase, UnknownData_PXSQ, 0x001E);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavigationLinkBase, UnknownData_P7YW, 0x0022);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavigationLinkBase, AreaClass, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavigationLinkBase, UnknownData_VV5V, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavigationLinkBase, 0x0038);
		}

		// struct FNavigationSegmentLink : public FNavigationLinkBase
		TEST_METHOD(ScriptStruct__Engine__NavigationSegmentLink)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavigationSegmentLink, LeftStart, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavigationSegmentLink, LeftEnd, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavigationSegmentLink, RightStart, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavigationSegmentLink, RightEnd, 0x005C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavigationSegmentLink, 0x0068);
		}

		// struct FNavigationLink : public FNavigationLinkBase
		TEST_METHOD(ScriptStruct__Engine__NavigationLink)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavigationLink, Left, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavigationLink, Right, 0x0044);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavigationLink, 0x0050);
		}

		// struct FNodeItem
		TEST_METHOD(ScriptStruct__Engine__NodeItem)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNodeItem, ParentName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNodeItem, UnknownData_FCNF, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNodeItem, Transform, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNodeItem, 0x0040);
		}

		// struct FNuccElpParam
		TEST_METHOD(ScriptStruct__Engine__NuccElpParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNuccElpParam, px, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNuccElpParam, py, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNuccElpParam, pz, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNuccElpParam, sx, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNuccElpParam, sy, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNuccElpParam, sz, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNuccElpParam, tblId, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNuccElpParam, sprGrpId, 0x001A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNuccElpParam, Flags, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNuccElpParam, UnknownData_TDRB, 0x001E);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNuccElpParam, invHitTargetNameTbl, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNuccElpParam, BoneName, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNuccElpParam, 0x0038);
		}

		// struct FNuccSprParam
		TEST_METHOD(ScriptStruct__Engine__NuccSprParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNuccSprParam, Flags, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNuccSprParam, 0x0002);
		}

		// struct FNuccSprParamsInSpring
		TEST_METHOD(ScriptStruct__Engine__NuccSprParamsInSpring)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNuccSprParamsInSpring, Param, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNuccSprParamsInSpring, boneIndices, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNuccSprParamsInSpring, 0x0020);
		}

		// struct FNuccSppParam
		TEST_METHOD(ScriptStruct__Engine__NuccSppParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNuccSppParam, decline, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNuccSppParam, disthd, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNuccSppParam, dirchd, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNuccSppParam, movinf, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNuccSppParam, tblId, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNuccSppParam, sprNum, 0x0012);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNuccSppParam, offsetLocation, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNuccSppParam, enableOffsetLocation, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNuccSppParam, UnknownData_HXE0, 0x0021);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNuccSppParam, BoneName, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNuccSppParam, 0x0030);
		}

		// struct FBeamModifierOptions
		TEST_METHOD(ScriptStruct__Engine__BeamModifierOptions)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBeamModifierOptions, UnknownData_ASPD, 0x0001);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBeamModifierOptions, 0x0004);
		}

		// struct FParticleRandomSeedInfo
		TEST_METHOD(ScriptStruct__Engine__ParticleRandomSeedInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleRandomSeedInfo, ParameterName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleRandomSeedInfo, UnknownData_BASO, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleRandomSeedInfo, RandomSeeds, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FParticleRandomSeedInfo, 0x0020);
		}

		// struct FParticleEvent_GenerateInfo
		TEST_METHOD(ScriptStruct__Engine__ParticleEvent_GenerateInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleEvent_GenerateInfo, Type, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleEvent_GenerateInfo, UnknownData_C22A, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleEvent_GenerateInfo, Frequency, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleEvent_GenerateInfo, ParticleFrequency, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleEvent_GenerateInfo, UnknownData_PWKP, 0x000D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleEvent_GenerateInfo, CustomName, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleEvent_GenerateInfo, ParticleModuleEventsToSendToGame, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FParticleEvent_GenerateInfo, 0x0028);
		}

		// struct FLocationBoneSocketInfo
		TEST_METHOD(ScriptStruct__Engine__LocationBoneSocketInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLocationBoneSocketInfo, BoneSocketName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLocationBoneSocketInfo, Offset, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLocationBoneSocketInfo, UnknownData_7WEN, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLocationBoneSocketInfo, 0x0018);
		}

		// struct FOrbitOptions
		TEST_METHOD(ScriptStruct__Engine__OrbitOptions)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FOrbitOptions, UnknownData_NBGO, 0x0001);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FOrbitOptions, 0x0004);
		}

		// struct FEmitterDynamicParameter
		TEST_METHOD(ScriptStruct__Engine__EmitterDynamicParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEmitterDynamicParameter, ParamName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEmitterDynamicParameter, UnknownData_2KHA, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEmitterDynamicParameter, ValueMethod, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEmitterDynamicParameter, UnknownData_SUSV, 0x000D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEmitterDynamicParameter, UnknownData_EGDB, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEmitterDynamicParameter, ParamValue, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEmitterDynamicParameter, 0x0050);
		}

		// struct FParticleBurst
		TEST_METHOD(ScriptStruct__Engine__ParticleBurst)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleBurst, Count, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleBurst, CountLow, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleBurst, Time, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FParticleBurst, 0x000C);
		}

		// struct FGPUSpriteResourceData
		TEST_METHOD(ScriptStruct__Engine__GPUSpriteResourceData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, QuantizedColorSamples, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, QuantizedMiscSamples, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, QuantizedSimulationAttrSamples, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, ColorScale, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, ColorBias, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, MiscScale, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, MiscBias, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, SimulationAttrCurveScale, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, SimulationAttrCurveBias, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, SubImageSize, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, SizeBySpeed, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, ConstantAcceleration, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, OrbitOffsetBase, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, OrbitOffsetRange, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, OrbitFrequencyBase, 0x00D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, OrbitFrequencyRange, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, OrbitPhaseBase, 0x00EC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, OrbitPhaseRange, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, GlobalVectorFieldScale, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, GlobalVectorFieldTightness, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, PerParticleVectorFieldScale, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, PerParticleVectorFieldBias, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, DragCoefficientScale, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, DragCoefficientBias, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, ResilienceScale, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, ResilienceBias, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, CollisionRadiusScale, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, CollisionRadiusBias, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, CollisionTimeBias, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, CollisionRandomSpread, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, CollisionRandomDistribution, 0x0134);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, OneMinusFriction, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, RotationRateScale, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, CameraMotionBlurAmount, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, ScreenAlignment, 0x0144);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, LockAxisFlag, 0x0145);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, UnknownData_V1W0, 0x0146);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, PivotOffset, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, UnknownData_UQVE, 0x0151);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, MinFacingCameraBlendDistance, 0x0154);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, MaxFacingCameraBlendDistance, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGPUSpriteResourceData, UnknownData_11LI, 0x015C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGPUSpriteResourceData, 0x0160);
		}

		// struct FTViewTarget
		TEST_METHOD(ScriptStruct__Engine__TViewTarget)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTViewTarget, Target, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTViewTarget, UnknownData_4PLW, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTViewTarget, POV, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTViewTarget, PlayerState, 0x0690);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTViewTarget, UnknownData_ZXF0, 0x0698);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTViewTarget, 0x06A0);
		}

		// struct FScalarParameterValue
		TEST_METHOD(ScriptStruct__Engine__ScalarParameterValue)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FScalarParameterValue, ParameterInfo, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FScalarParameterValue, ParameterValue, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FScalarParameterValue, ExpressionGUID, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FScalarParameterValue, UnknownData_TAXG, 0x0024);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FScalarParameterValue, 0x0028);
		}

		// struct FTextureParameterValue
		TEST_METHOD(ScriptStruct__Engine__TextureParameterValue)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextureParameterValue, ParameterInfo, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextureParameterValue, ParameterValue, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextureParameterValue, ExpressionGUID, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTextureParameterValue, 0x0028);
		}

		// struct FFontParameterValue
		TEST_METHOD(ScriptStruct__Engine__FontParameterValue)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontParameterValue, ParameterInfo, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontParameterValue, FontValue, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontParameterValue, FontPage, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontParameterValue, ExpressionGUID, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontParameterValue, UnknownData_SU2E, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFontParameterValue, 0x0030);
		}

		// struct FStatColorMapEntry
		TEST_METHOD(ScriptStruct__Engine__StatColorMapEntry)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStatColorMapEntry, In, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStatColorMapEntry, Out, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStatColorMapEntry, 0x0008);
		}

		// struct FStatColorMapping
		TEST_METHOD(ScriptStruct__Engine__StatColorMapping)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStatColorMapping, StatName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStatColorMapping, ColorMap, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStatColorMapping, UnknownData_LBY4, 0x0021);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStatColorMapping, 0x0028);
		}

		// struct FDropNoteInfo
		TEST_METHOD(ScriptStruct__Engine__DropNoteInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDropNoteInfo, Location, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDropNoteInfo, Rotation, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDropNoteInfo, Comment, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDropNoteInfo, 0x0028);
		}

		// struct FParticleSystemLOD
		TEST_METHOD(ScriptStruct__Engine__ParticleSystemLOD)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleSystemLOD, UnknownData_H0CN, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FParticleSystemLOD, 0x0001);
		}

		// struct FLODSoloTrack
		TEST_METHOD(ScriptStruct__Engine__LODSoloTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLODSoloTrack, SoloEnableSetting, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLODSoloTrack, 0x0010);
		}

		// struct FNamedEmitterMaterial
		TEST_METHOD(ScriptStruct__Engine__NamedEmitterMaterial)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedEmitterMaterial, Name, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedEmitterMaterial, Material, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNamedEmitterMaterial, 0x0010);
		}

		// struct FPhysicalAnimationData
		TEST_METHOD(ScriptStruct__Engine__PhysicalAnimationData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPhysicalAnimationData, BodyName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPhysicalAnimationData, UnknownData_P914, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPhysicalAnimationData, OrientationStrength, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPhysicalAnimationData, AngularVelocityStrength, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPhysicalAnimationData, PositionStrength, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPhysicalAnimationData, VelocityStrength, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPhysicalAnimationData, MaxLinearForce, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPhysicalAnimationData, MaxAngularForce, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPhysicalAnimationData, UnknownData_KYAL, 0x0024);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPhysicalAnimationData, 0x0028);
		}

		// struct FTireFrictionScalePair
		TEST_METHOD(ScriptStruct__Engine__TireFrictionScalePair)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTireFrictionScalePair, TireType, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTireFrictionScalePair, FrictionScale, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTireFrictionScalePair, UnknownData_2RL8, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTireFrictionScalePair, 0x0010);
		}

		// struct FPhysicalAnimationProfile
		TEST_METHOD(ScriptStruct__Engine__PhysicalAnimationProfile)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPhysicalAnimationProfile, ProfileName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPhysicalAnimationProfile, PhysicalAnimationData, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPhysicalAnimationProfile, 0x0030);
		}

		// struct FConstrainComponentPropName
		TEST_METHOD(ScriptStruct__Engine__ConstrainComponentPropName)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstrainComponentPropName, ComponentName, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConstrainComponentPropName, 0x0008);
		}

		// struct FConstraintBaseParams
		TEST_METHOD(ScriptStruct__Engine__ConstraintBaseParams)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintBaseParams, Stiffness, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintBaseParams, Damping, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintBaseParams, Restitution, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintBaseParams, ContactDistance, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintBaseParams, UnknownData_Z5XD, 0x0011);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConstraintBaseParams, 0x0014);
		}

		// struct FLinearConstraint : public FConstraintBaseParams
		TEST_METHOD(ScriptStruct__Engine__LinearConstraint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLinearConstraint, Limit, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLinearConstraint, XMotion, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLinearConstraint, YMotion, 0x0019);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLinearConstraint, ZMotion, 0x001A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLinearConstraint, UnknownData_7HWM, 0x001B);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLinearConstraint, 0x001C);
		}

		// struct FConeConstraint : public FConstraintBaseParams
		TEST_METHOD(ScriptStruct__Engine__ConeConstraint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FConeConstraint, Swing1LimitDegrees, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConeConstraint, Swing2LimitDegrees, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConeConstraint, Swing1Motion, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConeConstraint, Swing2Motion, 0x001D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConeConstraint, UnknownData_9DQ0, 0x001E);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConeConstraint, 0x0020);
		}

		// struct FTwistConstraint : public FConstraintBaseParams
		TEST_METHOD(ScriptStruct__Engine__TwistConstraint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTwistConstraint, TwistLimitDegrees, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTwistConstraint, TwistMotion, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTwistConstraint, UnknownData_GSBS, 0x0019);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTwistConstraint, 0x001C);
		}

		// struct FConstraintDrive
		TEST_METHOD(ScriptStruct__Engine__ConstraintDrive)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintDrive, Stiffness, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintDrive, Damping, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintDrive, MaxForce, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintDrive, UnknownData_QTN6, 0x000D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConstraintDrive, 0x0010);
		}

		// struct FAngularDriveConstraint
		TEST_METHOD(ScriptStruct__Engine__AngularDriveConstraint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAngularDriveConstraint, TwistDrive, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAngularDriveConstraint, SwingDrive, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAngularDriveConstraint, SlerpDrive, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAngularDriveConstraint, OrientationTarget, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAngularDriveConstraint, AngularVelocityTarget, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAngularDriveConstraint, AngularDriveMode, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAngularDriveConstraint, UnknownData_7B1G, 0x0049);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAngularDriveConstraint, 0x004C);
		}

		// struct FLinearDriveConstraint
		TEST_METHOD(ScriptStruct__Engine__LinearDriveConstraint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLinearDriveConstraint, PositionTarget, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLinearDriveConstraint, VelocityTarget, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLinearDriveConstraint, XDrive, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLinearDriveConstraint, YDrive, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLinearDriveConstraint, ZDrive, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLinearDriveConstraint, UnknownData_UNSL, 0x0049);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLinearDriveConstraint, 0x004C);
		}

		// struct FConstraintProfileProperties
		TEST_METHOD(ScriptStruct__Engine__ConstraintProfileProperties)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintProfileProperties, ProjectionLinearTolerance, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintProfileProperties, ProjectionAngularTolerance, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintProfileProperties, LinearBreakThreshold, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintProfileProperties, AngularBreakThreshold, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintProfileProperties, LinearLimit, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintProfileProperties, ConeLimit, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintProfileProperties, TwistLimit, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintProfileProperties, LinearDrive, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintProfileProperties, AngularDrive, 0x00B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintProfileProperties, UnknownData_7GJC, 0x0101);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConstraintProfileProperties, 0x0104);
		}

		// struct FConstraintInstance
		TEST_METHOD(ScriptStruct__Engine__ConstraintInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintInstance, UnknownData_03DA, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintInstance, JointName, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintInstance, ConstraintBone1, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintInstance, ConstraintBone2, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintInstance, Pos1, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintInstance, PriAxis1, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintInstance, SecAxis1, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintInstance, Pos2, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintInstance, PriAxis2, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintInstance, SecAxis2, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintInstance, AngularRotationOffset, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintInstance, UnknownData_AOBC, 0x0085);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintInstance, ProfileInstance, 0x008C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintInstance, UnknownData_9T8I, 0x0190);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConstraintInstance, 0x01B8);
		}

		// struct FPhysicsConstraintProfileHandle
		TEST_METHOD(ScriptStruct__Engine__PhysicsConstraintProfileHandle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPhysicsConstraintProfileHandle, ProfileProperties, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPhysicsConstraintProfileHandle, UnknownData_SK7O, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPhysicsConstraintProfileHandle, ProfileName, 0x0108);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPhysicsConstraintProfileHandle, 0x0110);
		}

		// struct FRigidBodyErrorCorrection
		TEST_METHOD(ScriptStruct__Engine__RigidBodyErrorCorrection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigidBodyErrorCorrection, PingExtrapolation, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigidBodyErrorCorrection, PingLimit, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigidBodyErrorCorrection, ErrorPerLinearDifference, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigidBodyErrorCorrection, ErrorPerAngularDifference, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigidBodyErrorCorrection, MaxRestoredStateError, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigidBodyErrorCorrection, MaxLinearHardSnapDistance, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigidBodyErrorCorrection, PositionLerp, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigidBodyErrorCorrection, AngleLerp, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigidBodyErrorCorrection, LinearVelocityCoefficient, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigidBodyErrorCorrection, AngularVelocityCoefficient, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigidBodyErrorCorrection, ErrorAccumulationSeconds, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigidBodyErrorCorrection, ErrorAccumulationDistanceSq, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigidBodyErrorCorrection, ErrorAccumulationSimilarity, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRigidBodyErrorCorrection, 0x0034);
		}

		// struct FPhysicalSurfaceName
		TEST_METHOD(ScriptStruct__Engine__PhysicalSurfaceName)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPhysicalSurfaceName, Type, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPhysicalSurfaceName, UnknownData_R5UF, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPhysicalSurfaceName, Name, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPhysicalSurfaceName, 0x0010);
		}

		// struct FKeyBind
		TEST_METHOD(ScriptStruct__Engine__KeyBind)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FKeyBind, Key, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKeyBind, Command, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKeyBind, UnknownData_ZTYU, 0x002A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FKeyBind, 0x0030);
		}

		// struct FPoseData
		TEST_METHOD(ScriptStruct__Engine__PoseData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPoseData, LocalSpacePose, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPoseData, TrackToBufferIndex, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPoseData, CurveData, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPoseData, 0x0070);
		}

		// struct FPoseDataContainer
		TEST_METHOD(ScriptStruct__Engine__PoseDataContainer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPoseDataContainer, PoseNames, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPoseDataContainer, Tracks, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPoseDataContainer, TrackMap, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPoseDataContainer, Poses, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPoseDataContainer, Curves, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPoseDataContainer, 0x0090);
		}

		// struct FPreviewMeshCollectionEntry
		TEST_METHOD(ScriptStruct__Engine__PreviewMeshCollectionEntry)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPreviewMeshCollectionEntry, SkeletalMesh, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPreviewMeshCollectionEntry, 0x0028);
		}

		// struct FCollectionReference
		TEST_METHOD(ScriptStruct__Engine__CollectionReference)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollectionReference, CollectionName, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCollectionReference, 0x0008);
		}

		// struct FNode
		TEST_METHOD(ScriptStruct__Engine__Node)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNode, Name, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNode, ParentName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNode, Transform, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNode, DisplayName, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNode, bAdvanced, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNode, UnknownData_XM5O, 0x0051);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNode, 0x0060);
		}

		// struct FBPVariableMetaDataEntry
		TEST_METHOD(ScriptStruct__Engine__BPVariableMetaDataEntry)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBPVariableMetaDataEntry, DataKey, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBPVariableMetaDataEntry, DataValue, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBPVariableMetaDataEntry, 0x0018);
		}

		// struct FBoneFilter
		TEST_METHOD(ScriptStruct__Engine__BoneFilter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoneFilter, bExcludeSelf, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoneFilter, UnknownData_BNS5, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoneFilter, BoneName, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBoneFilter, 0x0010);
		}

		// struct FSkeletalMeshLODGroupSettings
		TEST_METHOD(ScriptStruct__Engine__SkeletalMeshLODGroupSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshLODGroupSettings, ScreenSize, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshLODGroupSettings, LODHysteresis, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshLODGroupSettings, BoneFilterActionOption, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshLODGroupSettings, UnknownData_7WAM, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshLODGroupSettings, BoneList, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshLODGroupSettings, ReductionSettings, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMeshLODGroupSettings, 0x0170);
		}

		// struct FSoundClassProperties
		TEST_METHOD(ScriptStruct__Engine__SoundClassProperties)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundClassProperties, Volume, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundClassProperties, Pitch, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundClassProperties, StereoBleed, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundClassProperties, LFEBleed, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundClassProperties, VoiceCenterChannelVolume, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundClassProperties, RadioFilterVolume, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundClassProperties, RadioFilterVolumeThreshold, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundClassProperties, UnknownData_D6E3, 0x001D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundClassProperties, Default2DReverbSendAmount, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundClassProperties, UnknownData_7O6T, 0x0025);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundClassProperties, OutputTarget, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundClassProperties, UnknownData_B6NC, 0x0029);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundClassProperties, 0x002C);
		}

		// struct FPassiveSoundMixModifier
		TEST_METHOD(ScriptStruct__Engine__PassiveSoundMixModifier)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPassiveSoundMixModifier, SoundMix, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPassiveSoundMixModifier, MinVolumeThreshold, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPassiveSoundMixModifier, MaxVolumeThreshold, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPassiveSoundMixModifier, 0x0010);
		}

		// struct FSourceEffectChainEntry
		TEST_METHOD(ScriptStruct__Engine__SourceEffectChainEntry)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSourceEffectChainEntry, Preset, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSourceEffectChainEntry, UnknownData_L4HD, 0x0009);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSourceEffectChainEntry, 0x0010);
		}

		// struct FSoundGroup
		TEST_METHOD(ScriptStruct__Engine__SoundGroup)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundGroup, SoundGroup, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundGroup, UnknownData_9C7V, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundGroup, DisplayName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundGroup, UnknownData_0YVA, 0x0019);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundGroup, DecompressedDuration, 0x001C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundGroup, 0x0020);
		}

		// struct FAudioEQEffect
		TEST_METHOD(ScriptStruct__Engine__AudioEQEffect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAudioEQEffect, UnknownData_9O6N, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAudioEQEffect, FrequencyCenter0, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAudioEQEffect, Gain0, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAudioEQEffect, Bandwidth0, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAudioEQEffect, FrequencyCenter1, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAudioEQEffect, Gain1, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAudioEQEffect, Bandwidth1, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAudioEQEffect, FrequencyCenter2, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAudioEQEffect, Gain2, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAudioEQEffect, Bandwidth2, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAudioEQEffect, FrequencyCenter3, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAudioEQEffect, Gain3, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAudioEQEffect, Bandwidth3, 0x0034);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAudioEQEffect, 0x0038);
		}

		// struct FSoundClassAdjuster
		TEST_METHOD(ScriptStruct__Engine__SoundClassAdjuster)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundClassAdjuster, SoundClassObject, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundClassAdjuster, VolumeAdjuster, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundClassAdjuster, PitchAdjuster, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundClassAdjuster, UnknownData_4M3D, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundClassAdjuster, VoiceCenterChannelVolumeAdjuster, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundClassAdjuster, 0x0018);
		}

		// struct FDialogueWaveParameter
		TEST_METHOD(ScriptStruct__Engine__DialogueWaveParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDialogueWaveParameter, DialogueWave, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDialogueWaveParameter, Context, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDialogueWaveParameter, 0x0020);
		}

		// struct FDistanceDatum
		TEST_METHOD(ScriptStruct__Engine__DistanceDatum)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDistanceDatum, FadeInDistanceStart, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDistanceDatum, FadeInDistanceEnd, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDistanceDatum, FadeOutDistanceStart, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDistanceDatum, FadeOutDistanceEnd, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDistanceDatum, Volume, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDistanceDatum, 0x0014);
		}

		// struct FModulatorContinuousParams
		TEST_METHOD(ScriptStruct__Engine__ModulatorContinuousParams)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FModulatorContinuousParams, ParameterName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FModulatorContinuousParams, Default, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FModulatorContinuousParams, MinInput, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FModulatorContinuousParams, MaxInput, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FModulatorContinuousParams, MinOutput, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FModulatorContinuousParams, MaxOutput, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FModulatorContinuousParams, ParamMode, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FModulatorContinuousParams, UnknownData_YGZ6, 0x001D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FModulatorContinuousParams, 0x0020);
		}

		// struct FSplineMeshParams
		TEST_METHOD(ScriptStruct__Engine__SplineMeshParams)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplineMeshParams, StartPos, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplineMeshParams, StartTangent, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplineMeshParams, StartScale, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplineMeshParams, StartRoll, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplineMeshParams, StartOffset, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplineMeshParams, EndPos, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplineMeshParams, EndTangent, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplineMeshParams, EndScale, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplineMeshParams, EndRoll, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplineMeshParams, EndOffset, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSplineMeshParams, 0x0058);
		}

		// struct FStaticMaterial
		TEST_METHOD(ScriptStruct__Engine__StaticMaterial)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMaterial, MaterialInterface, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMaterial, MaterialSlotName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMaterial, ImportedMaterialSlotName, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMaterial, UVChannelData, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMaterial, UnknownData_GZXY, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStaticMaterial, 0x0030);
		}

		// struct FSubsurfaceProfileStruct
		TEST_METHOD(ScriptStruct__Engine__SubsurfaceProfileStruct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubsurfaceProfileStruct, ScatterRadius, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubsurfaceProfileStruct, SubsurfaceColor, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubsurfaceProfileStruct, FalloffColor, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubsurfaceProfileStruct, BoundaryColorBleed, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubsurfaceProfileStruct, ExtinctionScale, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubsurfaceProfileStruct, NormalScale, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubsurfaceProfileStruct, ScatteringDistribution, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubsurfaceProfileStruct, IOR, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubsurfaceProfileStruct, Roughness0, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubsurfaceProfileStruct, Roughness1, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubsurfaceProfileStruct, LobeMix, 0x004C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSubsurfaceProfileStruct, 0x0050);
		}

		// struct FTTTrackBase
		TEST_METHOD(ScriptStruct__Engine__TTTrackBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTTTrackBase, TrackName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTTTrackBase, bIsExternalCurve, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTTTrackBase, UnknownData_CZVO, 0x0009);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTTTrackBase, 0x0010);
		}

		// struct FTTEventTrack : public FTTTrackBase
		TEST_METHOD(ScriptStruct__Engine__TTEventTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTTEventTrack, CurveKeys, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTTEventTrack, 0x0018);
		}

		// struct FTTFloatTrack : public FTTTrackBase
		TEST_METHOD(ScriptStruct__Engine__TTFloatTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTTFloatTrack, CurveFloat, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTTFloatTrack, 0x0018);
		}

		// struct FTTVectorTrack : public FTTTrackBase
		TEST_METHOD(ScriptStruct__Engine__TTVectorTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTTVectorTrack, CurveVector, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTTVectorTrack, 0x0018);
		}

		// struct FTTLinearColorTrack : public FTTTrackBase
		TEST_METHOD(ScriptStruct__Engine__TTLinearColorTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTTLinearColorTrack, CurveLinearColor, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTTLinearColorTrack, 0x0018);
		}

		// struct FTouchInputControl
		TEST_METHOD(ScriptStruct__Engine__TouchInputControl)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTouchInputControl, Image1, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTouchInputControl, Image2, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTouchInputControl, Center, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTouchInputControl, VisualSize, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTouchInputControl, ThumbSize, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTouchInputControl, InteractionSize, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTouchInputControl, InputScale, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTouchInputControl, MainInputKey, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTouchInputControl, AltInputKey, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTouchInputControl, 0x0068);
		}

		// struct FHardwareCursorReference
		TEST_METHOD(ScriptStruct__Engine__HardwareCursorReference)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FHardwareCursorReference, CursorPath, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHardwareCursorReference, HotSpot, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FHardwareCursorReference, 0x0010);
		}

		// struct FVirtualTextureLayer
		TEST_METHOD(ScriptStruct__Engine__VirtualTextureLayer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVirtualTextureLayer, Format, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVirtualTextureLayer, bCompressed, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVirtualTextureLayer, bHasAlpha, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVirtualTextureLayer, CompressionSettings, 0x0003);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVirtualTextureLayer, 0x0004);
		}

		// struct FVoiceSettings
		TEST_METHOD(ScriptStruct__Engine__VoiceSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVoiceSettings, ComponentToAttachTo, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVoiceSettings, AttenuationSettings, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVoiceSettings, SourceEffectChain, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVoiceSettings, 0x0018);
		}

		// struct FMeshMergingSettings
		TEST_METHOD(ScriptStruct__Engine__MeshMergingSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, bGenerateLightMapUV, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, UnknownData_6P2H, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, TargetLightMapResolution, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, bComputedLightMapResolution, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, bImportVertexColors, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, bPivotPointAtZero, 0x000A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, bMergePhysicsData, 0x000B);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, bAssignLODGroup, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, UnknownData_D5NU, 0x000D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, LODGroupIndex, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, bMergeMaterials, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, UnknownData_K28K, 0x0015);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, MaterialSettings, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, bBakeVertexDataToMesh, 0x00AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, bUseVertexDataForBakingMaterial, 0x00AD);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, bUseTextureBinning, 0x00AE);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, bReuseMeshLightmapUVs, 0x00AF);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, bMergeEquivalentMaterials, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, OutputUVs, 0x00B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, UnknownData_UD22, 0x00B9);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, GutterSize, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, bCalculateCorrectLODModel, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, LODSelectionType, 0x00C1);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, UnknownData_T7LL, 0x00C2);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, ExportSpecificLOD, 0x00C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, SpecificLOD, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, bUseLandscapeCulling, 0x00CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, bIncludeImposters, 0x00CD);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, bAllowDistanceField, 0x00CE);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, bExportNormalMap, 0x00CF);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, bExportMetallicMap, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, bExportRoughnessMap, 0x00D1);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, bExportSpecularMap, 0x00D2);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, UnknownData_6IOW, 0x00D3);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, MergedMaterialAtlasResolution, 0x00D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshMergingSettings, UnknownData_HNV7, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMeshMergingSettings, 0x00DC);
		}

		// struct FHierarchicalSimplification
		TEST_METHOD(ScriptStruct__Engine__HierarchicalSimplification)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FHierarchicalSimplification, UnknownData_8QJ6, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHierarchicalSimplification, TransitionScreenSize, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHierarchicalSimplification, OverrideDrawDistance, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHierarchicalSimplification, bUseOverrideDrawDistance, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHierarchicalSimplification, bSimplifyMesh, 0x000E);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHierarchicalSimplification, UnknownData_3QL4, 0x000F);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHierarchicalSimplification, ProxySetting, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHierarchicalSimplification, MergeSetting, 0x00F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHierarchicalSimplification, DesiredBoundRadius, 0x01D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHierarchicalSimplification, DesiredFillingPercentage, 0x01D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHierarchicalSimplification, MinNumberOfActorsToBuild, 0x01D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHierarchicalSimplification, bOnlyGenerateClustersForVolumes, 0x01DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHierarchicalSimplification, bReusePreviousLevelClusters, 0x01DD);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHierarchicalSimplification, UnknownData_KQ3G, 0x01DE);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FHierarchicalSimplification, 0x01E0);
		}

		// struct FVectorDistribution
		TEST_METHOD(ScriptStruct__Engine__VectorDistribution)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVectorDistribution, Table, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVectorDistribution, 0x0028);
		}

		// struct FVector4Distribution
		TEST_METHOD(ScriptStruct__Engine__Vector4Distribution)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVector4Distribution, Table, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVector4Distribution, 0x0028);
		}

		// struct FFloatRK4SpringInterpolator
		TEST_METHOD(ScriptStruct__Engine__FloatRK4SpringInterpolator)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFloatRK4SpringInterpolator, StiffnessConstant, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFloatRK4SpringInterpolator, DampeningRatio, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFloatRK4SpringInterpolator, 0x0008);
		}

		// struct FVectorRK4SpringInterpolator
		TEST_METHOD(ScriptStruct__Engine__VectorRK4SpringInterpolator)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVectorRK4SpringInterpolator, StiffnessConstant, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVectorRK4SpringInterpolator, DampeningRatio, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVectorRK4SpringInterpolator, 0x0008);
		}

		// struct FExpressionOutput
		TEST_METHOD(ScriptStruct__Engine__ExpressionOutput)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FExpressionOutput, OutputName, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FExpressionOutput, 0x0008);
		}

		// struct FVector2MaterialInput : public FMaterialInput
		TEST_METHOD(ScriptStruct__Engine__Vector2MaterialInput)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVector2MaterialInput, 0x0010);
		}

		// struct FBranchingPointNotifyPayload
		TEST_METHOD(ScriptStruct__Engine__BranchingPointNotifyPayload)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBranchingPointNotifyPayload, UnknownData_GP5X, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBranchingPointNotifyPayload, 0x0020);
		}

		// struct FPlatformInterfaceData
		TEST_METHOD(ScriptStruct__Engine__PlatformInterfaceData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlatformInterfaceData, DataName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlatformInterfaceData, Type, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlatformInterfaceData, UnknownData_SBQD, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlatformInterfaceData, IntValue, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlatformInterfaceData, FloatValue, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlatformInterfaceData, UnknownData_18HG, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlatformInterfaceData, StringValue, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlatformInterfaceData, ObjectValue, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPlatformInterfaceData, 0x0030);
		}

		// struct FPlatformInterfaceDelegateResult
		TEST_METHOD(ScriptStruct__Engine__PlatformInterfaceDelegateResult)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlatformInterfaceDelegateResult, bSuccessful, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlatformInterfaceDelegateResult, UnknownData_TMAQ, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlatformInterfaceDelegateResult, Data, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPlatformInterfaceDelegateResult, 0x0038);
		}

		// struct FKeyHandleLookupTable
		TEST_METHOD(ScriptStruct__Engine__KeyHandleLookupTable)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FKeyHandleLookupTable, UnknownData_EOTW, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FKeyHandleLookupTable, 0x0060);
		}

		// struct FExposedValueCopyRecord
		TEST_METHOD(ScriptStruct__Engine__ExposedValueCopyRecord)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FExposedValueCopyRecord, SourceProperty, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExposedValueCopyRecord, SourcePropertyName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExposedValueCopyRecord, SourceSubPropertyName, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExposedValueCopyRecord, SourceArrayIndex, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExposedValueCopyRecord, UnknownData_3GUB, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExposedValueCopyRecord, DestProperty, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExposedValueCopyRecord, DestArrayIndex, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExposedValueCopyRecord, Size, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExposedValueCopyRecord, bInstanceIsTarget, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExposedValueCopyRecord, PostCopyOperation, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExposedValueCopyRecord, CopyType, 0x0032);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExposedValueCopyRecord, UnknownData_Y2PU, 0x0033);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExposedValueCopyRecord, CachedSourceProperty, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExposedValueCopyRecord, CachedSourceStructSubProperty, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExposedValueCopyRecord, UnknownData_1IYP, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FExposedValueCopyRecord, 0x0068);
		}

		// struct FExposedValueHandler
		TEST_METHOD(ScriptStruct__Engine__ExposedValueHandler)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FExposedValueHandler, BoundFunction, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExposedValueHandler, CopyRecords, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExposedValueHandler, Function, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExposedValueHandler, UnknownData_2786, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FExposedValueHandler, 0x0028);
		}

		// struct FAnimNode_Base
		TEST_METHOD(ScriptStruct__Engine__AnimNode_Base)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Base, UnknownData_ENXD, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Base, EvaluateGraphExposedInputs, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_Base, 0x0030);
		}

		// struct FInputRange
		TEST_METHOD(ScriptStruct__Engine__InputRange)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputRange, Min, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputRange, Max, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInputRange, 0x0008);
		}

		// struct FInputScaleBiasClamp
		TEST_METHOD(ScriptStruct__Engine__InputScaleBiasClamp)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputScaleBiasClamp, bMapRange, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputScaleBiasClamp, bClampResult, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputScaleBiasClamp, bInterpResult, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputScaleBiasClamp, bInitialized, 0x0003);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputScaleBiasClamp, InRange, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputScaleBiasClamp, OutRange, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputScaleBiasClamp, Scale, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputScaleBiasClamp, Bias, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputScaleBiasClamp, ClampMin, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputScaleBiasClamp, ClampMax, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputScaleBiasClamp, InterpSpeedIncreasing, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputScaleBiasClamp, InterpSpeedDecreasing, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputScaleBiasClamp, InterpolatedResult, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInputScaleBiasClamp, 0x0030);
		}

		// struct FInputAlphaBoolBlend
		TEST_METHOD(ScriptStruct__Engine__InputAlphaBoolBlend)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputAlphaBoolBlend, BlendInTime, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputAlphaBoolBlend, BlendOutTime, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputAlphaBoolBlend, BlendOption, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputAlphaBoolBlend, bInitialized, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputAlphaBoolBlend, UnknownData_HT1I, 0x000A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputAlphaBoolBlend, CustomCurve, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputAlphaBoolBlend, AlphaBlend, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInputAlphaBoolBlend, 0x0050);
		}

		// struct FInputScaleBias
		TEST_METHOD(ScriptStruct__Engine__InputScaleBias)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputScaleBias, Scale, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputScaleBias, Bias, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInputScaleBias, 0x0008);
		}

		// struct FPoseLinkBase
		TEST_METHOD(ScriptStruct__Engine__PoseLinkBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPoseLinkBase, LinkID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPoseLinkBase, UnknownData_ZD3U, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPoseLinkBase, 0x0010);
		}

		// struct FComponentSpacePoseLink : public FPoseLinkBase
		TEST_METHOD(ScriptStruct__Engine__ComponentSpacePoseLink)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FComponentSpacePoseLink, 0x0010);
		}

		// struct FAnimInstanceProxy
		TEST_METHOD(ScriptStruct__Engine__AnimInstanceProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimInstanceProxy, UnknownData_H40D, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimInstanceProxy, 0x0590);
		}

		// struct FAnimNode_AssetPlayerBase : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__Engine__AnimNode_AssetPlayerBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AssetPlayerBase, bIgnoreForRelevancyTest, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AssetPlayerBase, UnknownData_876L, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AssetPlayerBase, GroupIndex, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AssetPlayerBase, GroupRole, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AssetPlayerBase, UnknownData_X7JE, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AssetPlayerBase, BlendWeight, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AssetPlayerBase, InternalTimeAccumulator, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AssetPlayerBase, UnknownData_C4RM, 0x0044);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_AssetPlayerBase, 0x0058);
		}

		// struct FBlendSampleData
		TEST_METHOD(ScriptStruct__Engine__BlendSampleData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlendSampleData, SampleDataIndex, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlendSampleData, UnknownData_IVU4, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlendSampleData, Animation, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlendSampleData, TotalWeight, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlendSampleData, Time, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlendSampleData, PreviousTime, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlendSampleData, SamplePlayRate, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlendSampleData, UnknownData_AXZU, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlendSampleData, 0x0040);
		}

		// struct FBlendFilter
		TEST_METHOD(ScriptStruct__Engine__BlendFilter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlendFilter, UnknownData_WPIL, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlendFilter, 0x0090);
		}

		// struct FPoseLink : public FPoseLinkBase
		TEST_METHOD(ScriptStruct__Engine__PoseLink)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPoseLink, 0x0010);
		}

		// struct FDamageEvent
		TEST_METHOD(ScriptStruct__Engine__DamageEvent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDamageEvent, UnknownData_FX6Y, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDamageEvent, DamageTypeClass, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDamageEvent, 0x0010);
		}

		// struct FPointDamageEvent : public FDamageEvent
		TEST_METHOD(ScriptStruct__Engine__PointDamageEvent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPointDamageEvent, Damage, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPointDamageEvent, ShotDirection, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPointDamageEvent, HitInfo, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPointDamageEvent, 0x00A8);
		}

		// struct FPerBoneBlendWeight
		TEST_METHOD(ScriptStruct__Engine__PerBoneBlendWeight)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPerBoneBlendWeight, SourceIndex, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPerBoneBlendWeight, BlendWeight, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPerBoneBlendWeight, 0x0008);
		}

		// struct FAnimCurveParam
		TEST_METHOD(ScriptStruct__Engine__AnimCurveParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimCurveParam, Name, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimCurveParam, UnknownData_0FNI, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimCurveParam, 0x0010);
		}

		// struct FAnimationGroupReference
		TEST_METHOD(ScriptStruct__Engine__AnimationGroupReference)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationGroupReference, GroupName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationGroupReference, GroupRole, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationGroupReference, UnknownData_X5F7, 0x0009);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationGroupReference, 0x0010);
		}

		// struct FAnimGroupInstance
		TEST_METHOD(ScriptStruct__Engine__AnimGroupInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimGroupInstance, UnknownData_AVXJ, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimGroupInstance, 0x0078);
		}

		// struct FAnimTickRecord
		TEST_METHOD(ScriptStruct__Engine__AnimTickRecord)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimTickRecord, SourceAsset, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimTickRecord, UnknownData_JXFA, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimTickRecord, 0x0048);
		}

		// struct FAnimationRecordingSettings
		TEST_METHOD(ScriptStruct__Engine__AnimationRecordingSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationRecordingSettings, bRecordInWorldSpace, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationRecordingSettings, bRemoveRootAnimation, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationRecordingSettings, bAutoSaveAsset, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationRecordingSettings, UnknownData_WAXE, 0x0003);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationRecordingSettings, SampleRate, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationRecordingSettings, Length, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationRecordingSettings, InterpMode, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationRecordingSettings, TangentMode, 0x000D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationRecordingSettings, UnknownData_S8TT, 0x000E);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationRecordingSettings, 0x0010);
		}

		// struct FComponentSpacePose
		TEST_METHOD(ScriptStruct__Engine__ComponentSpacePose)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FComponentSpacePose, Transforms, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FComponentSpacePose, Names, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FComponentSpacePose, 0x0020);
		}

		// struct FLocalSpacePose
		TEST_METHOD(ScriptStruct__Engine__LocalSpacePose)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLocalSpacePose, Transforms, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLocalSpacePose, Names, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLocalSpacePose, 0x0020);
		}

		// struct FNamedTransform
		TEST_METHOD(ScriptStruct__Engine__NamedTransform)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedTransform, Value, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedTransform, Name, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedTransform, UnknownData_BUN7, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNamedTransform, 0x0040);
		}

		// struct FNamedColor
		TEST_METHOD(ScriptStruct__Engine__NamedColor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedColor, Value, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedColor, UnknownData_QX4P, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedColor, Name, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNamedColor, 0x0010);
		}

		// struct FNamedVector
		TEST_METHOD(ScriptStruct__Engine__NamedVector)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedVector, Value, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedVector, UnknownData_APL9, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedVector, Name, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNamedVector, 0x0018);
		}

		// struct FNamedFloat
		TEST_METHOD(ScriptStruct__Engine__NamedFloat)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedFloat, Value, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedFloat, UnknownData_JIYE, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedFloat, Name, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNamedFloat, 0x0010);
		}

		// struct FAnimParentNodeAssetOverride
		TEST_METHOD(ScriptStruct__Engine__AnimParentNodeAssetOverride)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimParentNodeAssetOverride, NewAsset, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimParentNodeAssetOverride, ParentNodeGuid, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimParentNodeAssetOverride, 0x0018);
		}

		// struct FAnimBlueprintDebugData
		TEST_METHOD(ScriptStruct__Engine__AnimBlueprintDebugData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimBlueprintDebugData, UnknownData_92F1, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimBlueprintDebugData, 0x0001);
		}

		// struct FAnimationFrameSnapshot
		TEST_METHOD(ScriptStruct__Engine__AnimationFrameSnapshot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationFrameSnapshot, UnknownData_V3CS, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationFrameSnapshot, 0x0001);
		}

		// struct FStateMachineDebugData
		TEST_METHOD(ScriptStruct__Engine__StateMachineDebugData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStateMachineDebugData, UnknownData_OWIO, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStateMachineDebugData, 0x00B0);
		}

		// struct FRootMotionExtractionStep
		TEST_METHOD(ScriptStruct__Engine__RootMotionExtractionStep)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionExtractionStep, AnimSequence, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionExtractionStep, StartPosition, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionExtractionStep, EndPosition, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRootMotionExtractionStep, 0x0010);
		}

		// struct FVectorCurve : public FAnimCurveBase
		TEST_METHOD(ScriptStruct__Engine__VectorCurve)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVectorCurve, FloatCurves, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVectorCurve, 0x0170);
		}

		// struct FTransformCurve : public FAnimCurveBase
		TEST_METHOD(ScriptStruct__Engine__TransformCurve)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTransformCurve, TranslationCurve, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTransformCurve, RotationCurve, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTransformCurve, ScaleCurve, 0x0300);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTransformCurve, 0x0470);
		}

		// struct FSlotEvaluationPose
		TEST_METHOD(ScriptStruct__Engine__SlotEvaluationPose)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlotEvaluationPose, AdditiveType, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlotEvaluationPose, UnknownData_PWIY, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlotEvaluationPose, Weight, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlotEvaluationPose, UnknownData_JISN, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSlotEvaluationPose, 0x0040);
		}

		// struct FA2Pose
		TEST_METHOD(ScriptStruct__Engine__A2Pose)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FA2Pose, Bones, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FA2Pose, 0x0010);
		}

		// struct FA2CSPose : public FA2Pose
		TEST_METHOD(ScriptStruct__Engine__A2CSPose)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FA2CSPose, UnknownData_MKX5, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FA2CSPose, ComponentSpaceFlags, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FA2CSPose, 0x0028);
		}

		// struct FQueuedDrawDebugItem
		TEST_METHOD(ScriptStruct__Engine__QueuedDrawDebugItem)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FQueuedDrawDebugItem, ItemType, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FQueuedDrawDebugItem, UnknownData_EET0, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FQueuedDrawDebugItem, StartLoc, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FQueuedDrawDebugItem, EndLoc, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FQueuedDrawDebugItem, Center, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FQueuedDrawDebugItem, Rotation, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FQueuedDrawDebugItem, Radius, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FQueuedDrawDebugItem, Size, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FQueuedDrawDebugItem, Segments, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FQueuedDrawDebugItem, Color, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FQueuedDrawDebugItem, bPersistentLines, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::FQueuedDrawDebugItem, UnknownData_4RIQ, 0x0045);
			CHEAT_GEAR_CHECK_OFFSET(CG::FQueuedDrawDebugItem, LifeTime, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FQueuedDrawDebugItem, Thickness, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FQueuedDrawDebugItem, Message, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FQueuedDrawDebugItem, TextScale, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FQueuedDrawDebugItem, 0x0068);
		}

		// struct FAnimMontageInstance
		TEST_METHOD(ScriptStruct__Engine__AnimMontageInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimMontageInstance, Montage, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimMontageInstance, UnknownData_HWZB, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimMontageInstance, bPlaying, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimMontageInstance, UnknownData_0L2Z, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimMontageInstance, DefaultBlendTimeMultiplier, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimMontageInstance, UnknownData_EKXQ, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimMontageInstance, NextSections, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimMontageInstance, PrevSections, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimMontageInstance, UnknownData_JMY6, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimMontageInstance, ActiveStateBranchingPoints, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimMontageInstance, Position, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimMontageInstance, PlayRate, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimMontageInstance, Blend, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimMontageInstance, UnknownData_N2SO, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimMontageInstance, DisableRootMotionCount, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimMontageInstance, UnknownData_V9JY, 0x018C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimMontageInstance, 0x01B0);
		}

		// struct FAnimNode_ApplyMeshSpaceAdditive : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__Engine__AnimNode_ApplyMeshSpaceAdditive)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ApplyMeshSpaceAdditive, Base, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ApplyMeshSpaceAdditive, Additive, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ApplyMeshSpaceAdditive, Alpha, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ApplyMeshSpaceAdditive, AlphaScaleBias, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ApplyMeshSpaceAdditive, LODThreshold, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ApplyMeshSpaceAdditive, ActualAlpha, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ApplyMeshSpaceAdditive, bIgnoreAdditiveCurve, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ApplyMeshSpaceAdditive, UnknownData_JLDE, 0x0065);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_ApplyMeshSpaceAdditive, 0x0068);
		}

		// struct FAnimNode_SaveCachedPose : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__Engine__AnimNode_SaveCachedPose)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SaveCachedPose, Pose, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SaveCachedPose, CachePoseName, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SaveCachedPose, GlobalWeight, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SaveCachedPose, UnknownData_85O3, 0x004C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_SaveCachedPose, 0x00D8);
		}

		// struct FAnimNode_SequencePlayer : public FAnimNode_AssetPlayerBase
		TEST_METHOD(ScriptStruct__Engine__AnimNode_SequencePlayer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SequencePlayer, Sequence, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SequencePlayer, bLoopAnimation, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SequencePlayer, UnknownData_RBQX, 0x0061);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SequencePlayer, PlayRateBasis, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SequencePlayer, PlayRate, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SequencePlayer, PlayRateScaleBiasClamp, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SequencePlayer, StartPosition, 0x009C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_SequencePlayer, 0x00A0);
		}

		// struct FAnimNode_StateMachine : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__Engine__AnimNode_StateMachine)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_StateMachine, StateMachineIndexInClass, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_StateMachine, MaxTransitionsPerFrame, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_StateMachine, bSkipFirstUpdateTransition, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_StateMachine, bReinitializeOnBecomingRelevant, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_StateMachine, UnknownData_7V1H, 0x003A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_StateMachine, CurrentState, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_StateMachine, ElapsedTime, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_StateMachine, UnknownData_EVNL, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_StateMachine, 0x00E0);
		}

		// struct FAnimationPotentialTransition
		TEST_METHOD(ScriptStruct__Engine__AnimationPotentialTransition)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationPotentialTransition, UnknownData_58LD, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationPotentialTransition, 0x0030);
		}

		// struct FAnimationActiveTransitionEntry
		TEST_METHOD(ScriptStruct__Engine__AnimationActiveTransitionEntry)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationActiveTransitionEntry, UnknownData_C6EK, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationActiveTransitionEntry, BlendProfile, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationActiveTransitionEntry, UnknownData_5E0B, 0x0090);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationActiveTransitionEntry, 0x00C8);
		}

		// struct FAnimNode_SubInput : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__Engine__AnimNode_SubInput)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SubInput, UnknownData_N21U, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_SubInput, 0x0068);
		}

		// struct FAnimNode_SubInstance : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__Engine__AnimNode_SubInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SubInstance, InPose, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SubInstance, InstanceClass, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SubInstance, Tag, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SubInstance, InstanceToRun, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SubInstance, InstanceProperties, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SubInstance, SubInstanceProperties, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SubInstance, SourcePropertyNames, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SubInstance, DestPropertyNames, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SubInstance, UnknownData_72J9, 0x0098);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_SubInstance, 0x00C8);
		}

		// struct FAnimNode_TransitionPoseEvaluator : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__Engine__AnimNode_TransitionPoseEvaluator)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TransitionPoseEvaluator, DataSource, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TransitionPoseEvaluator, EvaluatorMode, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TransitionPoseEvaluator, UnknownData_UK9B, 0x0032);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TransitionPoseEvaluator, FramesToCachePose, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TransitionPoseEvaluator, UnknownData_7KUA, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TransitionPoseEvaluator, CacheFramesRemaining, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TransitionPoseEvaluator, UnknownData_QRLH, 0x0074);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_TransitionPoseEvaluator, 0x0078);
		}

		// struct FAnimNode_TransitionResult : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__Engine__AnimNode_TransitionResult)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TransitionResult, bCanEnterTransition, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TransitionResult, UnknownData_KCP0, 0x0031);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_TransitionResult, 0x0048);
		}

		// struct FAnimNode_UseCachedPose : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__Engine__AnimNode_UseCachedPose)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_UseCachedPose, LinkToCachingNode, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_UseCachedPose, CachePoseName, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_UseCachedPose, 0x0048);
		}

		// struct FAnimNode_ConvertLocalToComponentSpace : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__Engine__AnimNode_ConvertLocalToComponentSpace)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ConvertLocalToComponentSpace, LocalPose, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_ConvertLocalToComponentSpace, 0x0040);
		}

		// struct FAnimNode_ConvertComponentToLocalSpace : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__Engine__AnimNode_ConvertComponentToLocalSpace)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ConvertComponentToLocalSpace, ComponentPose, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_ConvertComponentToLocalSpace, 0x0040);
		}

		// struct FCompressedSegment
		TEST_METHOD(ScriptStruct__Engine__CompressedSegment)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompressedSegment, UnknownData_7D8C, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCompressedSegment, 0x0010);
		}

		// struct FCompressedTrack
		TEST_METHOD(ScriptStruct__Engine__CompressedTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompressedTrack, ByteStream, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompressedTrack, Times, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompressedTrack, Mins, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompressedTrack, Ranges, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCompressedTrack, 0x0038);
		}

		// struct FCurveTrack
		TEST_METHOD(ScriptStruct__Engine__CurveTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCurveTrack, CurveName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCurveTrack, CurveWeights, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCurveTrack, 0x0018);
		}

		// struct FScaleTrack
		TEST_METHOD(ScriptStruct__Engine__ScaleTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FScaleTrack, ScaleKeys, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FScaleTrack, Times, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FScaleTrack, 0x0020);
		}

		// struct FRotationTrack
		TEST_METHOD(ScriptStruct__Engine__RotationTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRotationTrack, RotKeys, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRotationTrack, Times, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRotationTrack, 0x0020);
		}

		// struct FTranslationTrack
		TEST_METHOD(ScriptStruct__Engine__TranslationTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTranslationTrack, PosKeys, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTranslationTrack, Times, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTranslationTrack, 0x0020);
		}

		// struct FRawAnimSequenceTrack
		TEST_METHOD(ScriptStruct__Engine__RawAnimSequenceTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRawAnimSequenceTrack, PosKeys, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRawAnimSequenceTrack, RotKeys, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRawAnimSequenceTrack, ScaleKeys, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRawAnimSequenceTrack, 0x0030);
		}

		// struct FAnimSequenceTrackContainer
		TEST_METHOD(ScriptStruct__Engine__AnimSequenceTrackContainer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimSequenceTrackContainer, AnimationTracks, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimSequenceTrackContainer, TrackNames, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimSequenceTrackContainer, 0x0020);
		}

		// struct FAnimSingleNodeInstanceProxy : public FAnimInstanceProxy
		TEST_METHOD(ScriptStruct__Engine__AnimSingleNodeInstanceProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimSingleNodeInstanceProxy, UnknownData_PRMD, 0x0590);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimSingleNodeInstanceProxy, 0x0710);
		}

		// struct FAnimNode_SingleNode : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__Engine__AnimNode_SingleNode)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SingleNode, SourcePose, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SingleNode, UnknownData_50RF, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_SingleNode, 0x0050);
		}

		// struct FAnimationTransitionRule
		TEST_METHOD(ScriptStruct__Engine__AnimationTransitionRule)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationTransitionRule, RuleToExecute, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationTransitionRule, TransitionReturnVal, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationTransitionRule, UnknownData_NWNC, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationTransitionRule, TransitionIndex, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationTransitionRule, 0x0010);
		}

		// struct FAnimationState : public FAnimationStateBase
		TEST_METHOD(ScriptStruct__Engine__AnimationState)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationState, Transitions, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationState, StateRootNodeIndex, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationState, StartNotify, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationState, EndNotify, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationState, FullyBlendedNotify, 0x0024);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationState, 0x0028);
		}

		// struct FAnimNotifyTrack
		TEST_METHOD(ScriptStruct__Engine__AnimNotifyTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyTrack, TrackName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyTrack, TrackColor, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNotifyTrack, UnknownData_AXQA, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNotifyTrack, 0x0038);
		}

		// struct FPerBoneBlendWeights
		TEST_METHOD(ScriptStruct__Engine__PerBoneBlendWeights)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPerBoneBlendWeights, BoneBlendWeights, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPerBoneBlendWeights, 0x0010);
		}

		// struct FAssetImportInfo
		TEST_METHOD(ScriptStruct__Engine__AssetImportInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAssetImportInfo, UnknownData_O1Z4, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAssetImportInfo, 0x0001);
		}

		// struct FNavAvoidanceData
		TEST_METHOD(ScriptStruct__Engine__NavAvoidanceData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavAvoidanceData, UnknownData_4G33, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavAvoidanceData, 0x003C);
		}

		// struct FGridBlendSample
		TEST_METHOD(ScriptStruct__Engine__GridBlendSample)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGridBlendSample, GridElement, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGridBlendSample, BlendWeight, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGridBlendSample, 0x001C);
		}

		// struct FBPEditorBookmarkNode
		TEST_METHOD(ScriptStruct__Engine__BPEditorBookmarkNode)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBPEditorBookmarkNode, NodeGuid, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBPEditorBookmarkNode, ParentGuid, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBPEditorBookmarkNode, DisplayName, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBPEditorBookmarkNode, 0x0038);
		}

		// struct FEditedDocumentInfo
		TEST_METHOD(ScriptStruct__Engine__EditedDocumentInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditedDocumentInfo, EditedObjectPath, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditedDocumentInfo, SavedViewOffset, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditedDocumentInfo, SavedZoomAmount, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditedDocumentInfo, UnknownData_FIMU, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditedDocumentInfo, EditedObject, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEditedDocumentInfo, 0x0030);
		}

		// struct FBPInterfaceDescription
		TEST_METHOD(ScriptStruct__Engine__BPInterfaceDescription)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBPInterfaceDescription, Interface, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBPInterfaceDescription, Graphs, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBPInterfaceDescription, 0x0018);
		}

		// struct FBPVariableDescription
		TEST_METHOD(ScriptStruct__Engine__BPVariableDescription)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBPVariableDescription, VarName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBPVariableDescription, VarGuid, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBPVariableDescription, VarType, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBPVariableDescription, FriendlyName, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBPVariableDescription, Category, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBPVariableDescription, PropertyFlags, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBPVariableDescription, RepNotifyFunc, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBPVariableDescription, ReplicationCondition, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBPVariableDescription, UnknownData_055P, 0x00B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBPVariableDescription, MetaDataArray, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBPVariableDescription, DefaultValue, 0x00C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBPVariableDescription, 0x00D8);
		}

		// struct FBlueprintMacroCosmeticInfo
		TEST_METHOD(ScriptStruct__Engine__BlueprintMacroCosmeticInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintMacroCosmeticInfo, UnknownData_X2Q7, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintMacroCosmeticInfo, 0x0001);
		}

		// struct FCompilerNativizationOptions
		TEST_METHOD(ScriptStruct__Engine__CompilerNativizationOptions)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompilerNativizationOptions, PlatformName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompilerNativizationOptions, ServerOnlyPlatform, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompilerNativizationOptions, ClientOnlyPlatform, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompilerNativizationOptions, bExcludeMonolithicHeaders, 0x000A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompilerNativizationOptions, UnknownData_6C4X, 0x000B);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompilerNativizationOptions, ExcludedModules, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompilerNativizationOptions, ExcludedAssets, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompilerNativizationOptions, ExcludedFolderPaths, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCompilerNativizationOptions, 0x0080);
		}

		// struct FEventGraphFastCallPair
		TEST_METHOD(ScriptStruct__Engine__EventGraphFastCallPair)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEventGraphFastCallPair, FunctionToPatch, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEventGraphFastCallPair, EventGraphCallOffset, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEventGraphFastCallPair, UnknownData_1RIY, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEventGraphFastCallPair, 0x0010);
		}

		// struct FBlueprintDebugData
		TEST_METHOD(ScriptStruct__Engine__BlueprintDebugData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintDebugData, UnknownData_7YT5, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintDebugData, 0x0001);
		}

		// struct FPointerToUberGraphFrame
		TEST_METHOD(ScriptStruct__Engine__PointerToUberGraphFrame)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPointerToUberGraphFrame, UnknownData_F254, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPointerToUberGraphFrame, 0x0008);
		}

		// struct FDebuggingInfoForSingleFunction
		TEST_METHOD(ScriptStruct__Engine__DebuggingInfoForSingleFunction)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDebuggingInfoForSingleFunction, UnknownData_FD12, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDebuggingInfoForSingleFunction, 0x0190);
		}

		// struct FNodeToCodeAssociation
		TEST_METHOD(ScriptStruct__Engine__NodeToCodeAssociation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNodeToCodeAssociation, UnknownData_K6PD, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNodeToCodeAssociation, 0x0014);
		}

		// struct FBookmarkBaseJumpToSettings
		TEST_METHOD(ScriptStruct__Engine__BookmarkBaseJumpToSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBookmarkBaseJumpToSettings, UnknownData_OOE8, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBookmarkBaseJumpToSettings, 0x0001);
		}

		// struct FBookmarkJumpToSettings : public FBookmarkBaseJumpToSettings
		TEST_METHOD(ScriptStruct__Engine__BookmarkJumpToSettings)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBookmarkJumpToSettings, 0x0001);
		}

		// struct FBookmark2DJumpToSettings
		TEST_METHOD(ScriptStruct__Engine__Bookmark2DJumpToSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBookmark2DJumpToSettings, UnknownData_LOF2, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBookmark2DJumpToSettings, 0x0001);
		}

		// struct FCachedAnimTransitionData
		TEST_METHOD(ScriptStruct__Engine__CachedAnimTransitionData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCachedAnimTransitionData, StateMachineName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCachedAnimTransitionData, FromStateName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCachedAnimTransitionData, ToStateName, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCachedAnimTransitionData, UnknownData_9XX6, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCachedAnimTransitionData, 0x0028);
		}

		// struct FCachedAnimRelevancyData
		TEST_METHOD(ScriptStruct__Engine__CachedAnimRelevancyData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCachedAnimRelevancyData, StateMachineName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCachedAnimRelevancyData, StateName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCachedAnimRelevancyData, UnknownData_1QG7, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCachedAnimRelevancyData, 0x0020);
		}

		// struct FCachedAnimAssetPlayerData
		TEST_METHOD(ScriptStruct__Engine__CachedAnimAssetPlayerData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCachedAnimAssetPlayerData, StateMachineName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCachedAnimAssetPlayerData, StateName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCachedAnimAssetPlayerData, UnknownData_AAJT, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCachedAnimAssetPlayerData, 0x0018);
		}

		// struct FCachedAnimStateData
		TEST_METHOD(ScriptStruct__Engine__CachedAnimStateData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCachedAnimStateData, StateMachineName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCachedAnimStateData, StateName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCachedAnimStateData, UnknownData_BYXA, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCachedAnimStateData, 0x0020);
		}

		// struct FCachedAnimStateArray
		TEST_METHOD(ScriptStruct__Engine__CachedAnimStateArray)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCachedAnimStateArray, States, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCachedAnimStateArray, UnknownData_X0IN, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCachedAnimStateArray, 0x0018);
		}

		// struct FDummySpacerCameraTypes
		TEST_METHOD(ScriptStruct__Engine__DummySpacerCameraTypes)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDummySpacerCameraTypes, UnknownData_NJNT, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDummySpacerCameraTypes, 0x0001);
		}

		// struct FCanvasIcon
		TEST_METHOD(ScriptStruct__Engine__CanvasIcon)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCanvasIcon, Texture, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCanvasIcon, U, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCanvasIcon, V, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCanvasIcon, UL, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCanvasIcon, VL, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCanvasIcon, 0x0018);
		}

		// struct FWrappedStringElement
		TEST_METHOD(ScriptStruct__Engine__WrappedStringElement)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FWrappedStringElement, Value, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWrappedStringElement, LineExtent, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWrappedStringElement, 0x0018);
		}

		// struct FTextSizingParameters
		TEST_METHOD(ScriptStruct__Engine__TextSizingParameters)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextSizingParameters, DrawX, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextSizingParameters, DrawY, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextSizingParameters, DrawXL, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextSizingParameters, DrawYL, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextSizingParameters, Scaling, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextSizingParameters, DrawFont, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextSizingParameters, SpacingAdjust, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTextSizingParameters, 0x0028);
		}

		// struct FAutoCompleteNode
		TEST_METHOD(ScriptStruct__Engine__AutoCompleteNode)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAutoCompleteNode, IndexChar, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAutoCompleteNode, UnknownData_F0MI, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAutoCompleteNode, AutoCompleteListIndices, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAutoCompleteNode, UnknownData_5D2X, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAutoCompleteNode, 0x0028);
		}

		// struct FCurrentAnimations
		TEST_METHOD(ScriptStruct__Engine__CurrentAnimations)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCurrentAnimations, UnknownData_JTM8, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCurrentAnimations, 0x0020);
		}

		// struct FCurrentBlendSpace
		TEST_METHOD(ScriptStruct__Engine__CurrentBlendSpace)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCurrentBlendSpace, UnknownData_IH8K, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCurrentBlendSpace, 0x0020);
		}

		// struct FRuntimeCurveLinearColor
		TEST_METHOD(ScriptStruct__Engine__RuntimeCurveLinearColor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRuntimeCurveLinearColor, ColorCurves, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRuntimeCurveLinearColor, ExternalCurve, 0x01C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRuntimeCurveLinearColor, 0x01C8);
		}

		// struct FCurveTableRowHandle
		TEST_METHOD(ScriptStruct__Engine__CurveTableRowHandle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCurveTableRowHandle, CurveTable, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCurveTableRowHandle, RowName, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCurveTableRowHandle, 0x0010);
		}

		// struct FDataTableCategoryHandle
		TEST_METHOD(ScriptStruct__Engine__DataTableCategoryHandle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDataTableCategoryHandle, DataTable, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDataTableCategoryHandle, ColumnName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDataTableCategoryHandle, RowContents, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDataTableCategoryHandle, 0x0018);
		}

		// struct FDataTableRowHandle
		TEST_METHOD(ScriptStruct__Engine__DataTableRowHandle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDataTableRowHandle, DataTable, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDataTableRowHandle, RowName, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDataTableRowHandle, 0x0010);
		}

		// struct FLevelNameAndTime
		TEST_METHOD(ScriptStruct__Engine__LevelNameAndTime)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelNameAndTime, LevelName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelNameAndTime, LevelChangeTimeInMS, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelNameAndTime, UnknownData_5XR1, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelNameAndTime, 0x0018);
		}

		// struct FGraphReference
		TEST_METHOD(ScriptStruct__Engine__GraphReference)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGraphReference, MacroGraph, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGraphReference, GraphBlueprint, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGraphReference, GraphGuid, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGraphReference, 0x0020);
		}

		// struct FEdGraphPinReference
		TEST_METHOD(ScriptStruct__Engine__EdGraphPinReference)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphPinReference, OwningNode, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphPinReference, PinId, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEdGraphPinReference, 0x0018);
		}

		// struct FEdGraphSchemaAction
		TEST_METHOD(ScriptStruct__Engine__EdGraphSchemaAction)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphSchemaAction, UnknownData_WT2K, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphSchemaAction, MenuDescription, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphSchemaAction, TooltipDescription, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphSchemaAction, Category, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphSchemaAction, Keywords, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphSchemaAction, Grouping, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphSchemaAction, SectionID, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphSchemaAction, MenuDescriptionArray, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphSchemaAction, FullSearchTitlesArray, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphSchemaAction, FullSearchKeywordsArray, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphSchemaAction, FullSearchCategoryArray, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphSchemaAction, LocalizedMenuDescriptionArray, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphSchemaAction, LocalizedFullSearchTitlesArray, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphSchemaAction, LocalizedFullSearchKeywordsArray, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphSchemaAction, LocalizedFullSearchCategoryArray, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphSchemaAction, SearchText, 0x00F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEdGraphSchemaAction, 0x0100);
		}

		// struct FEdGraphSchemaAction_NewNode : public FEdGraphSchemaAction
		TEST_METHOD(ScriptStruct__Engine__EdGraphSchemaAction_NewNode)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdGraphSchemaAction_NewNode, NodeTemplate, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEdGraphSchemaAction_NewNode, 0x0108);
		}

		// struct FScreenMessageString
		TEST_METHOD(ScriptStruct__Engine__ScreenMessageString)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FScreenMessageString, Key, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FScreenMessageString, ScreenMessage, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FScreenMessageString, DisplayColor, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FScreenMessageString, TimeToDisplay, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FScreenMessageString, CurrentTimeDisplayed, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FScreenMessageString, TextScale, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FScreenMessageString, UnknownData_XBY8, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FScreenMessageString, 0x0030);
		}

		// struct FURL
		TEST_METHOD(ScriptStruct__Engine__URL)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FURL, Protocol, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FURL, Host, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FURL, Port, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FURL, UnknownData_6A1E, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FURL, Map, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FURL, RedirectURL, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FURL, Op, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FURL, Portal, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FURL, Valid, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FURL, UnknownData_OKFF, 0x006C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FURL, 0x0070);
		}

		// struct FFullyLoadedPackagesInfo
		TEST_METHOD(ScriptStruct__Engine__FullyLoadedPackagesInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFullyLoadedPackagesInfo, FullyLoadType, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFullyLoadedPackagesInfo, UnknownData_LDO6, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFullyLoadedPackagesInfo, Tag, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFullyLoadedPackagesInfo, PackagesToLoad, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFullyLoadedPackagesInfo, LoadedObjects, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFullyLoadedPackagesInfo, 0x0038);
		}

		// struct FLevelStreamingStatus
		TEST_METHOD(ScriptStruct__Engine__LevelStreamingStatus)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelStreamingStatus, PackageName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelStreamingStatus, UnknownData_AR0S, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelStreamingStatus, LODIndex, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelStreamingStatus, 0x0010);
		}

		// struct FNamedNetDriver
		TEST_METHOD(ScriptStruct__Engine__NamedNetDriver)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedNetDriver, NetDriver, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedNetDriver, UnknownData_2CNE, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNamedNetDriver, 0x0010);
		}

		// struct FWorldContext
		TEST_METHOD(ScriptStruct__Engine__WorldContext)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FWorldContext, UnknownData_FMLY, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWorldContext, LastURL, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWorldContext, LastRemoteURL, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWorldContext, PendingNetGame, 0x01C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWorldContext, PackagesToFullyLoad, 0x01D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWorldContext, UnknownData_PYWC, 0x01E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWorldContext, LoadedLevelsForPendingMapChange, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWorldContext, UnknownData_71Q5, 0x0200);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWorldContext, ObjectReferencers, 0x0218);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWorldContext, PendingLevelStreamingStatusUpdates, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWorldContext, GameViewport, 0x0238);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWorldContext, OwningGameInstance, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWorldContext, ActiveNetDrivers, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWorldContext, UnknownData_5NMN, 0x0258);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWorldContext, 0x0298);
		}

		// struct FExposureSettings
		TEST_METHOD(ScriptStruct__Engine__ExposureSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FExposureSettings, FixedEV100, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExposureSettings, bFixed, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExposureSettings, UnknownData_ZEOG, 0x0005);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FExposureSettings, 0x0008);
		}

		// struct FTickPrerequisite
		TEST_METHOD(ScriptStruct__Engine__TickPrerequisite)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTickPrerequisite, UnknownData_ZQ9F, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTickPrerequisite, 0x0010);
		}

		// struct FDepthFieldGlowInfo
		TEST_METHOD(ScriptStruct__Engine__DepthFieldGlowInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDepthFieldGlowInfo, UnknownData_3JCC, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDepthFieldGlowInfo, GlowColor, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDepthFieldGlowInfo, GlowOuterRadius, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDepthFieldGlowInfo, GlowInnerRadius, 0x001C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDepthFieldGlowInfo, 0x0024);
		}

		// struct FFontRenderInfo
		TEST_METHOD(ScriptStruct__Engine__FontRenderInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontRenderInfo, UnknownData_SXG3, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontRenderInfo, GlowInfo, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFontRenderInfo, 0x0028);
		}

		// struct FComponentReference
		TEST_METHOD(ScriptStruct__Engine__ComponentReference)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FComponentReference, OtherActor, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FComponentReference, ComponentProperty, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FComponentReference, UnknownData_WW8C, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FComponentReference, 0x0018);
		}

		// struct FRadialDamageParams
		TEST_METHOD(ScriptStruct__Engine__RadialDamageParams)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRadialDamageParams, BaseDamage, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRadialDamageParams, MinimumDamage, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRadialDamageParams, InnerRadius, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRadialDamageParams, OuterRadius, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRadialDamageParams, DamageFalloff, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRadialDamageParams, 0x0014);
		}

		// struct FRadialDamageEvent : public FDamageEvent
		TEST_METHOD(ScriptStruct__Engine__RadialDamageEvent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRadialDamageEvent, Params, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRadialDamageEvent, Origin, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRadialDamageEvent, ComponentHits, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRadialDamageEvent, 0x0040);
		}

		// struct FMeshBuildSettings
		TEST_METHOD(ScriptStruct__Engine__MeshBuildSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshBuildSettings, UnknownData_QL8I, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshBuildSettings, MinLightmapResolution, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshBuildSettings, SrcLightmapIndex, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshBuildSettings, DstLightmapIndex, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshBuildSettings, BuildScale, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshBuildSettings, BuildScale3D, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshBuildSettings, DistanceFieldResolutionScale, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshBuildSettings, UnknownData_A4W4, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshBuildSettings, DistanceFieldReplacementMesh, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMeshBuildSettings, 0x0030);
		}

		// struct FPOV
		TEST_METHOD(ScriptStruct__Engine__POV)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPOV, Location, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPOV, Rotation, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPOV, FOV, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPOV, 0x001C);
		}

		// struct FAnimUpdateRateParameters
		TEST_METHOD(ScriptStruct__Engine__AnimUpdateRateParameters)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimUpdateRateParameters, UnknownData_NG5F, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimUpdateRateParameters, ShiftBucket, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimUpdateRateParameters, UnknownData_WUUK, 0x0003);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimUpdateRateParameters, UpdateRate, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimUpdateRateParameters, EvaluationRate, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimUpdateRateParameters, TickedPoseOffestTime, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimUpdateRateParameters, AdditionalTime, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimUpdateRateParameters, UnknownData_VXIJ, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimUpdateRateParameters, BaseNonRenderedUpdateRate, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimUpdateRateParameters, MaxEvalRateForInterpolation, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimUpdateRateParameters, BaseVisibleDistanceFactorThesholds, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimUpdateRateParameters, LODToFrameSkipMap, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimUpdateRateParameters, SkippedUpdateFrames, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimUpdateRateParameters, SkippedEvalFrames, 0x0084);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimUpdateRateParameters, 0x0088);
		}

		// struct FAnimSlotDesc
		TEST_METHOD(ScriptStruct__Engine__AnimSlotDesc)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimSlotDesc, SlotName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimSlotDesc, NumChannels, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimSlotDesc, UnknownData_PKOI, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimSlotDesc, 0x0010);
		}

		// struct FAnimSlotInfo
		TEST_METHOD(ScriptStruct__Engine__AnimSlotInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimSlotInfo, SlotName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimSlotInfo, ChannelWeights, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimSlotInfo, 0x0018);
		}

		// struct FMTDResult
		TEST_METHOD(ScriptStruct__Engine__MTDResult)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMTDResult, Direction, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMTDResult, Distance, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMTDResult, 0x0010);
		}

		// struct FOverlapResult
		TEST_METHOD(ScriptStruct__Engine__OverlapResult)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FOverlapResult, Actor, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOverlapResult, Component, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOverlapResult, UnknownData_O10N, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOverlapResult, UnknownData_R0E8, 0x0015);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FOverlapResult, 0x0018);
		}

		// struct FSwarmDebugOptions
		TEST_METHOD(ScriptStruct__Engine__SwarmDebugOptions)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSwarmDebugOptions, UnknownData_XH3M, 0x0001);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSwarmDebugOptions, 0x0004);
		}

		// struct FLightmassDebugOptions
		TEST_METHOD(ScriptStruct__Engine__LightmassDebugOptions)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassDebugOptions, UnknownData_VVB6, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassDebugOptions, CoplanarTolerance, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassDebugOptions, UnknownData_1YWN, 0x000A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightmassDebugOptions, ExecutionTimeDivisor, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLightmassDebugOptions, 0x0010);
		}

		// struct FBasedPosition
		TEST_METHOD(ScriptStruct__Engine__BasedPosition)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBasedPosition, Base, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBasedPosition, Position, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBasedPosition, CachedBaseLocation, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBasedPosition, CachedBaseRotation, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBasedPosition, CachedTransPosition, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBasedPosition, 0x0038);
		}

		// struct FFractureEffect
		TEST_METHOD(ScriptStruct__Engine__FractureEffect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFractureEffect, ParticleSystem, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFractureEffect, Sound, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFractureEffect, 0x0010);
		}

		// struct FRigidBodyContactInfo
		TEST_METHOD(ScriptStruct__Engine__RigidBodyContactInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigidBodyContactInfo, ContactPosition, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigidBodyContactInfo, ContactNormal, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigidBodyContactInfo, ContactPenetration, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigidBodyContactInfo, UnknownData_VNP7, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigidBodyContactInfo, PhysMaterial, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRigidBodyContactInfo, 0x0030);
		}

		// struct FCollisionImpactData
		TEST_METHOD(ScriptStruct__Engine__CollisionImpactData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionImpactData, ContactInfos, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionImpactData, TotalNormalImpulse, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCollisionImpactData, TotalFrictionImpulse, 0x001C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCollisionImpactData, 0x0028);
		}

		// struct FRigidBodyState
		TEST_METHOD(ScriptStruct__Engine__RigidBodyState)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigidBodyState, Position, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigidBodyState, UnknownData_QBGW, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigidBodyState, Quaternion, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigidBodyState, LinVel, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigidBodyState, AngVel, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigidBodyState, Flags, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigidBodyState, UnknownData_B6RO, 0x0039);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRigidBodyState, 0x0040);
		}

		// struct FActiveHapticFeedbackEffect
		TEST_METHOD(ScriptStruct__Engine__ActiveHapticFeedbackEffect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FActiveHapticFeedbackEffect, HapticEffect, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FActiveHapticFeedbackEffect, UnknownData_0I8D, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActiveHapticFeedbackEffect, 0x0018);
		}

		// struct FClusterNode
		TEST_METHOD(ScriptStruct__Engine__ClusterNode)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FClusterNode, BoundMin, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClusterNode, FirstChild, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClusterNode, BoundMax, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClusterNode, LastChild, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClusterNode, FirstInstance, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClusterNode, LastInstance, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClusterNode, MinInstanceScale, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClusterNode, MaxInstanceScale, 0x0034);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClusterNode, 0x0040);
		}

		// struct FClusterNode_DEPRECATED
		TEST_METHOD(ScriptStruct__Engine__ClusterNode_DEPRECATED)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FClusterNode_DEPRECATED, BoundMin, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClusterNode_DEPRECATED, FirstChild, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClusterNode_DEPRECATED, BoundMax, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClusterNode_DEPRECATED, LastChild, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClusterNode_DEPRECATED, FirstInstance, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClusterNode_DEPRECATED, LastInstance, 0x0024);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClusterNode_DEPRECATED, 0x0028);
		}

		// struct FIntegralKey
		TEST_METHOD(ScriptStruct__Engine__IntegralKey)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FIntegralKey, Time, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FIntegralKey, Value, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FIntegralKey, 0x0008);
		}

		// struct FIntegralCurve : public FIndexedCurve
		TEST_METHOD(ScriptStruct__Engine__IntegralCurve)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FIntegralCurve, Keys, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FIntegralCurve, DefaultValue, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FIntegralCurve, bUseDefaultValueBeforeFirstKey, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FIntegralCurve, UnknownData_VVX2, 0x006D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FIntegralCurve, 0x0070);
		}

		// struct FInterpEdSelKey
		TEST_METHOD(ScriptStruct__Engine__InterpEdSelKey)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpEdSelKey, Group, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpEdSelKey, Track, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpEdSelKey, KeyIndex, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpEdSelKey, UnsnappedPosition, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpEdSelKey, 0x0018);
		}

		// struct FCameraPreviewInfo
		TEST_METHOD(ScriptStruct__Engine__CameraPreviewInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraPreviewInfo, PawnClass, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraPreviewInfo, AnimSeq, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraPreviewInfo, Location, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraPreviewInfo, Rotation, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraPreviewInfo, PawnInst, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCameraPreviewInfo, 0x0030);
		}

		// struct FSubTrackGroup
		TEST_METHOD(ScriptStruct__Engine__SubTrackGroup)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubTrackGroup, GroupName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubTrackGroup, TrackIndices, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubTrackGroup, UnknownData_25VJ, 0x0021);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSubTrackGroup, 0x0028);
		}

		// struct FSupportedSubTrackInfo
		TEST_METHOD(ScriptStruct__Engine__SupportedSubTrackInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSupportedSubTrackInfo, SupportedClass, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSupportedSubTrackInfo, SubTrackName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSupportedSubTrackInfo, GroupIndex, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSupportedSubTrackInfo, UnknownData_IIAF, 0x001C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSupportedSubTrackInfo, 0x0020);
		}

		// struct FLatentActionManager
		TEST_METHOD(ScriptStruct__Engine__LatentActionManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLatentActionManager, UnknownData_DB0Z, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLatentActionManager, 0x00A0);
		}

		// struct FLevelSimplificationDetails
		TEST_METHOD(ScriptStruct__Engine__LevelSimplificationDetails)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSimplificationDetails, bCreatePackagePerAsset, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSimplificationDetails, UnknownData_ZT52, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSimplificationDetails, DetailsPercentage, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSimplificationDetails, StaticMeshMaterialSettings, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSimplificationDetails, bOverrideLandscapeExportLOD, 0x009C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSimplificationDetails, UnknownData_LKLF, 0x009D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSimplificationDetails, LandscapeExportLOD, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSimplificationDetails, LandscapeMaterialSettings, 0x00A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSimplificationDetails, bBakeFoliageToLandscape, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSimplificationDetails, bBakeGrassToLandscape, 0x0139);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSimplificationDetails, bGenerateMeshNormalMap, 0x013A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSimplificationDetails, bGenerateMeshMetallicMap, 0x013B);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSimplificationDetails, bGenerateMeshRoughnessMap, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSimplificationDetails, bGenerateMeshSpecularMap, 0x013D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSimplificationDetails, bGenerateLandscapeNormalMap, 0x013E);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSimplificationDetails, bGenerateLandscapeMetallicMap, 0x013F);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSimplificationDetails, bGenerateLandscapeRoughnessMap, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSimplificationDetails, bGenerateLandscapeSpecularMap, 0x0141);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSimplificationDetails, bUseLandscapeCulling, 0x0142);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSimplificationDetails, LandscapeCullingPrecision, 0x0143);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelSimplificationDetails, 0x0144);
		}

		// struct FStreamableTextureInstance
		TEST_METHOD(ScriptStruct__Engine__StreamableTextureInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStreamableTextureInstance, UnknownData_PRGW, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStreamableTextureInstance, 0x0028);
		}

		// struct FDynamicTextureInstance : public FStreamableTextureInstance
		TEST_METHOD(ScriptStruct__Engine__DynamicTextureInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDynamicTextureInstance, Texture, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDynamicTextureInstance, bAttached, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDynamicTextureInstance, UnknownData_PMTK, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDynamicTextureInstance, OriginalRadius, 0x0034);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDynamicTextureInstance, 0x0038);
		}

		// struct FBatchedPoint
		TEST_METHOD(ScriptStruct__Engine__BatchedPoint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBatchedPoint, Position, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBatchedPoint, Color, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBatchedPoint, PointSize, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBatchedPoint, RemainingLifeTime, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBatchedPoint, DepthPriority, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBatchedPoint, UnknownData_WZ4J, 0x0025);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBatchedPoint, 0x0028);
		}

		// struct FBatchedLine
		TEST_METHOD(ScriptStruct__Engine__BatchedLine)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBatchedLine, Start, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBatchedLine, End, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBatchedLine, Color, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBatchedLine, Thickness, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBatchedLine, RemainingLifeTime, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBatchedLine, DepthPriority, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBatchedLine, UnknownData_47YD, 0x0031);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBatchedLine, 0x0034);
		}

		// struct FClientReceiveData
		TEST_METHOD(ScriptStruct__Engine__ClientReceiveData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FClientReceiveData, LocalPC, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClientReceiveData, MessageType, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClientReceiveData, MessageIndex, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClientReceiveData, UnknownData_YDET, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClientReceiveData, MessageString, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClientReceiveData, RelatedPlayerState_2, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClientReceiveData, RelatedPlayerState_3, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClientReceiveData, OptionalObject, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClientReceiveData, 0x0040);
		}

		// struct FParameterGroupData
		TEST_METHOD(ScriptStruct__Engine__ParameterGroupData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FParameterGroupData, GroupName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParameterGroupData, GroupSortPriority, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParameterGroupData, UnknownData_5U8S, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FParameterGroupData, 0x0018);
		}

		// struct FFunctionExpressionOutput
		TEST_METHOD(ScriptStruct__Engine__FunctionExpressionOutput)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFunctionExpressionOutput, ExpressionOutput, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFunctionExpressionOutput, ExpressionOutputId, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFunctionExpressionOutput, Output, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFunctionExpressionOutput, 0x0020);
		}

		// struct FFunctionExpressionInput
		TEST_METHOD(ScriptStruct__Engine__FunctionExpressionInput)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFunctionExpressionInput, ExpressionInput, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFunctionExpressionInput, ExpressionInputId, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFunctionExpressionInput, Input, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFunctionExpressionInput, UnknownData_TQ41, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFunctionExpressionInput, 0x0030);
		}

		// struct FScalarParameterAtlasInstanceData
		TEST_METHOD(ScriptStruct__Engine__ScalarParameterAtlasInstanceData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FScalarParameterAtlasInstanceData, bIsUsedAsAtlasPosition, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FScalarParameterAtlasInstanceData, UnknownData_BN00, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FScalarParameterAtlasInstanceData, Curve, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FScalarParameterAtlasInstanceData, Atlas, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FScalarParameterAtlasInstanceData, 0x0058);
		}

		// struct FMemberReference
		TEST_METHOD(ScriptStruct__Engine__MemberReference)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMemberReference, MemberParent, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMemberReference, MemberScope, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMemberReference, MemberName, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMemberReference, MemberGuid, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMemberReference, bSelfContext, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMemberReference, bWasDeprecated, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMemberReference, UnknownData_YVAO, 0x0032);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMemberReference, 0x0038);
		}

		// struct FMeshInstancingSettings
		TEST_METHOD(ScriptStruct__Engine__MeshInstancingSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshInstancingSettings, ActorClassToUse, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshInstancingSettings, InstanceReplacementThreshold, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshInstancingSettings, MeshReplacementMethod, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshInstancingSettings, UnknownData_I1KR, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshInstancingSettings, bSkipMeshesWithVertexColors, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshInstancingSettings, bUseHLODVolumes, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshInstancingSettings, UnknownData_2D7L, 0x0012);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMeshInstancingSettings, 0x0018);
		}

		// struct FMeshReductionSettings
		TEST_METHOD(ScriptStruct__Engine__MeshReductionSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshReductionSettings, BaseLODModel, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshReductionSettings, MetricToUse, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshReductionSettings, UnknownData_4DHO, 0x0005);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshReductionSettings, PercentTriangles, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshReductionSettings, ScreenSize, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshReductionSettings, MaxDeviation, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshReductionSettings, PixelError, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshReductionSettings, WeldingThreshold, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshReductionSettings, HardAngleThreshold, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshReductionSettings, SilhouetteImportance, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshReductionSettings, TextureImportance, 0x0021);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshReductionSettings, ShadingImportance, 0x0022);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshReductionSettings, VertexColorImportance, 0x0023);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshReductionSettings, bRecalculateNormals, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshReductionSettings, bActive, 0x0025);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshReductionSettings, bGenerateUniqueLightmapUVs, 0x0026);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshReductionSettings, bKeepSymmetry, 0x0027);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshReductionSettings, bVisibilityAided, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshReductionSettings, bCullOccluded, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshReductionSettings, VisibilityAggressiveness, 0x002A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshReductionSettings, bUseVertexWeights, 0x002B);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshReductionSettings, bSimplifyMaterials, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshReductionSettings, UnknownData_GKBO, 0x002D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshReductionSettings, MaterialLODSettings, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshReductionSettings, MaterialProxySettings, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshReductionSettings, UnknownData_13CN, 0x0144);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMeshReductionSettings, 0x0148);
		}

		// struct FNameCurveKey
		TEST_METHOD(ScriptStruct__Engine__NameCurveKey)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNameCurveKey, Time, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNameCurveKey, UnknownData_GD4J, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNameCurveKey, Value, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNameCurveKey, 0x0010);
		}

		// struct FNameCurve : public FIndexedCurve
		TEST_METHOD(ScriptStruct__Engine__NameCurve)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNameCurve, Keys, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNameCurve, 0x0068);
		}

		// struct FNavDataConfig : public FNavAgentProperties
		TEST_METHOD(ScriptStruct__Engine__NavDataConfig)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavDataConfig, Name, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavDataConfig, Color, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavDataConfig, DefaultQueryExtent, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavDataConfig, NavigationDataClass, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavDataConfig, NavigationDataClassName, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavDataConfig, 0x0068);
		}

		// struct FPacketSimulationSettings
		TEST_METHOD(ScriptStruct__Engine__PacketSimulationSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPacketSimulationSettings, PktLoss, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPacketSimulationSettings, PktOrder, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPacketSimulationSettings, PktDup, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPacketSimulationSettings, PktLag, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPacketSimulationSettings, PktLagVariance, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPacketSimulationSettings, 0x0014);
		}

		// struct FFastArraySerializer
		TEST_METHOD(ScriptStruct__Engine__FastArraySerializer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFastArraySerializer, UnknownData_POSS, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFastArraySerializer, 0x00B0);
		}

		// struct FFastArraySerializerItem
		TEST_METHOD(ScriptStruct__Engine__FastArraySerializerItem)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFastArraySerializerItem, ReplicationID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFastArraySerializerItem, ReplicationKey, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFastArraySerializerItem, MostRecentArrayReplicationKey, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFastArraySerializerItem, 0x000C);
		}

		// struct FnuccCdSprCtrlParam
		TEST_METHOD(ScriptStruct__Engine__nuccCdSprCtrlParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FnuccCdSprCtrlParam, UnknownData_BHW7, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FnuccCdSprCtrlParam, 0x0010);
		}

		// struct FParticleCurvePair
		TEST_METHOD(ScriptStruct__Engine__ParticleCurvePair)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleCurvePair, CurveName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleCurvePair, CurveObject, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FParticleCurvePair, 0x0018);
		}

		// struct FBeamTargetData
		TEST_METHOD(ScriptStruct__Engine__BeamTargetData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBeamTargetData, TargetName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBeamTargetData, TargetPercentage, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBeamTargetData, UnknownData_90FV, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBeamTargetData, 0x0010);
		}

		// struct FParticleSystemReplayFrame
		TEST_METHOD(ScriptStruct__Engine__ParticleSystemReplayFrame)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleSystemReplayFrame, UnknownData_OVI7, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FParticleSystemReplayFrame, 0x0010);
		}

		// struct FParticleEmitterReplayFrame
		TEST_METHOD(ScriptStruct__Engine__ParticleEmitterReplayFrame)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleEmitterReplayFrame, UnknownData_Z5Z8, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FParticleEmitterReplayFrame, 0x0010);
		}

		// struct FPlayerMuteList
		TEST_METHOD(ScriptStruct__Engine__PlayerMuteList)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlayerMuteList, UnknownData_BTEF, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlayerMuteList, bHasVoiceHandshakeCompleted, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlayerMuteList, UnknownData_EFOZ, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlayerMuteList, VoiceChannelIdx, 0x0034);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPlayerMuteList, 0x0038);
		}

		// struct FPreviewAttachedObjectPair
		TEST_METHOD(ScriptStruct__Engine__PreviewAttachedObjectPair)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPreviewAttachedObjectPair, AttachedObject, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPreviewAttachedObjectPair, Object, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPreviewAttachedObjectPair, AttachedTo, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPreviewAttachedObjectPair, 0x0038);
		}

		// struct FPreviewAssetAttachContainer
		TEST_METHOD(ScriptStruct__Engine__PreviewAssetAttachContainer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPreviewAssetAttachContainer, AttachedObjects, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPreviewAssetAttachContainer, 0x0010);
		}

		// struct FSpriteCategoryInfo
		TEST_METHOD(ScriptStruct__Engine__SpriteCategoryInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteCategoryInfo, Category, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteCategoryInfo, DisplayName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteCategoryInfo, Description, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSpriteCategoryInfo, 0x0038);
		}

		// struct FRootMotionSourceStatus
		TEST_METHOD(ScriptStruct__Engine__RootMotionSourceStatus)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSourceStatus, Flags, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRootMotionSourceStatus, 0x0001);
		}

		// struct FRootMotionFinishVelocitySettings
		TEST_METHOD(ScriptStruct__Engine__RootMotionFinishVelocitySettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionFinishVelocitySettings, Mode, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionFinishVelocitySettings, UnknownData_DJ81, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionFinishVelocitySettings, SetVelocity, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionFinishVelocitySettings, ClampVelocity, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRootMotionFinishVelocitySettings, 0x0014);
		}

		// struct FRootMotionSource
		TEST_METHOD(ScriptStruct__Engine__RootMotionSource)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource, UnknownData_2TNT, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource, Priority, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource, LocalId, 0x0012);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource, AccumulateMode, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource, UnknownData_HFOQ, 0x0015);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource, InstanceName, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource, StartTime, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource, CurrentTime, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource, PreviousTime, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource, Duration, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource, Status, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource, Settings, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource, bInLocalSpace, 0x0032);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource, UnknownData_LLCK, 0x0033);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource, RootMotionParams, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource, FinishVelocityParams, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource, UnknownData_ETZB, 0x0094);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRootMotionSource, 0x0098);
		}

		// struct FRootMotionSource_JumpForce : public FRootMotionSource
		TEST_METHOD(ScriptStruct__Engine__RootMotionSource_JumpForce)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_JumpForce, Rotation, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_JumpForce, Distance, 0x00A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_JumpForce, Height, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_JumpForce, bDisableTimeout, 0x00AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_JumpForce, UnknownData_36DQ, 0x00AD);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_JumpForce, PathOffsetCurve, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_JumpForce, TimeMappingCurve, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_JumpForce, UnknownData_0YSE, 0x00C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRootMotionSource_JumpForce, 0x00D0);
		}

		// struct FRootMotionSource_MoveToDynamicForce : public FRootMotionSource
		TEST_METHOD(ScriptStruct__Engine__RootMotionSource_MoveToDynamicForce)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_MoveToDynamicForce, StartLocation, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_MoveToDynamicForce, InitialTargetLocation, 0x00A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_MoveToDynamicForce, TargetLocation, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_MoveToDynamicForce, bRestrictSpeedToExpected, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_MoveToDynamicForce, UnknownData_WRFG, 0x00BD);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_MoveToDynamicForce, PathOffsetCurve, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_MoveToDynamicForce, TimeMappingCurve, 0x00C8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRootMotionSource_MoveToDynamicForce, 0x00D0);
		}

		// struct FRootMotionSource_MoveToForce : public FRootMotionSource
		TEST_METHOD(ScriptStruct__Engine__RootMotionSource_MoveToForce)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_MoveToForce, StartLocation, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_MoveToForce, TargetLocation, 0x00A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_MoveToForce, bRestrictSpeedToExpected, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_MoveToForce, UnknownData_FYH5, 0x00B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_MoveToForce, PathOffsetCurve, 0x00B8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRootMotionSource_MoveToForce, 0x00C0);
		}

		// struct FRootMotionSource_RadialForce : public FRootMotionSource
		TEST_METHOD(ScriptStruct__Engine__RootMotionSource_RadialForce)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_RadialForce, Location, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_RadialForce, UnknownData_MCQP, 0x00A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_RadialForce, LocationActor, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_RadialForce, Radius, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_RadialForce, Strength, 0x00B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_RadialForce, bIsPush, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_RadialForce, bNoZForce, 0x00B9);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_RadialForce, UnknownData_FR0K, 0x00BA);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_RadialForce, StrengthDistanceFalloff, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_RadialForce, StrengthOverTime, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_RadialForce, bUseFixedWorldDirection, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_RadialForce, UnknownData_C7ZJ, 0x00D1);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_RadialForce, FixedWorldDirection, 0x00D4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRootMotionSource_RadialForce, 0x00E0);
		}

		// struct FRootMotionSource_ConstantForce : public FRootMotionSource
		TEST_METHOD(ScriptStruct__Engine__RootMotionSource_ConstantForce)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_ConstantForce, Force, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_ConstantForce, UnknownData_00L4, 0x00A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRootMotionSource_ConstantForce, StrengthOverTime, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRootMotionSource_ConstantForce, 0x00B0);
		}

		// struct FCameraExposureSettings
		TEST_METHOD(ScriptStruct__Engine__CameraExposureSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraExposureSettings, Method, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraExposureSettings, UnknownData_G52R, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraExposureSettings, LowPercent, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraExposureSettings, HighPercent, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraExposureSettings, MinBrightness, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraExposureSettings, MaxBrightness, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraExposureSettings, SpeedUp, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraExposureSettings, SpeedDown, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraExposureSettings, Bias, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraExposureSettings, HistogramLogMin, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraExposureSettings, HistogramLogMax, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraExposureSettings, CalibrationConstant, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCameraExposureSettings, 0x002C);
		}

		// struct FLensImperfectionSettings
		TEST_METHOD(ScriptStruct__Engine__LensImperfectionSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLensImperfectionSettings, DirtMask, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLensImperfectionSettings, DirtMaskIntensity, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLensImperfectionSettings, DirtMaskTint, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLensImperfectionSettings, UnknownData_AZAA, 0x001C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLensImperfectionSettings, 0x0020);
		}

		// struct FConvolutionBloomSettings
		TEST_METHOD(ScriptStruct__Engine__ConvolutionBloomSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FConvolutionBloomSettings, Texture, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConvolutionBloomSettings, Size, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConvolutionBloomSettings, CenterUV, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConvolutionBloomSettings, PreFilterMin, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConvolutionBloomSettings, PreFilterMax, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConvolutionBloomSettings, PreFilterMult, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConvolutionBloomSettings, BufferScale, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConvolutionBloomSettings, UnknownData_OR4H, 0x0024);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConvolutionBloomSettings, 0x0028);
		}

		// struct FGaussianSumBloomSettings
		TEST_METHOD(ScriptStruct__Engine__GaussianSumBloomSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGaussianSumBloomSettings, Intensity, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGaussianSumBloomSettings, CHIntensity, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGaussianSumBloomSettings, BGIntensity, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGaussianSumBloomSettings, Threshold, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGaussianSumBloomSettings, SizeScale, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGaussianSumBloomSettings, Filter1Size, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGaussianSumBloomSettings, Filter2Size, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGaussianSumBloomSettings, Filter3Size, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGaussianSumBloomSettings, Filter4Size, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGaussianSumBloomSettings, Filter5Size, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGaussianSumBloomSettings, Filter6Size, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGaussianSumBloomSettings, Filter1Tint, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGaussianSumBloomSettings, Filter2Tint, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGaussianSumBloomSettings, Filter3Tint, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGaussianSumBloomSettings, Filter4Tint, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGaussianSumBloomSettings, Filter5Tint, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGaussianSumBloomSettings, Filter6Tint, 0x007C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGaussianSumBloomSettings, 0x008C);
		}

		// struct FLensBloomSettings
		TEST_METHOD(ScriptStruct__Engine__LensBloomSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLensBloomSettings, GaussianSum, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLensBloomSettings, UnknownData_EUMU, 0x008C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLensBloomSettings, Convolution, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLensBloomSettings, Method, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLensBloomSettings, UnknownData_6M3M, 0x00B9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLensBloomSettings, 0x00C0);
		}

		// struct FLensSettings
		TEST_METHOD(ScriptStruct__Engine__LensSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLensSettings, Bloom, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLensSettings, Imperfections, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLensSettings, ChromaticAberration, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLensSettings, UnknownData_M4JX, 0x00E4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLensSettings, 0x00E8);
		}

		// struct FFilmStockSettings
		TEST_METHOD(ScriptStruct__Engine__FilmStockSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFilmStockSettings, Slope, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFilmStockSettings, Toe, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFilmStockSettings, Shoulder, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFilmStockSettings, BlackClip, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFilmStockSettings, WhiteClip, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFilmStockSettings, 0x0014);
		}

		// struct FColorGradePerRangeSettings
		TEST_METHOD(ScriptStruct__Engine__ColorGradePerRangeSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FColorGradePerRangeSettings, Saturation, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FColorGradePerRangeSettings, Contrast, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FColorGradePerRangeSettings, Gamma, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FColorGradePerRangeSettings, Gain, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FColorGradePerRangeSettings, Offset, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FColorGradePerRangeSettings, 0x0050);
		}

		// struct FColorGradingSettings
		TEST_METHOD(ScriptStruct__Engine__ColorGradingSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FColorGradingSettings, Global, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FColorGradingSettings, Shadows, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FColorGradingSettings, Midtones, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FColorGradingSettings, Highlights, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FColorGradingSettings, ShadowsMax, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::FColorGradingSettings, HighlightsMin, 0x0144);
			CHEAT_GEAR_CHECK_OFFSET(CG::FColorGradingSettings, UnknownData_IPGR, 0x0148);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FColorGradingSettings, 0x0150);
		}

		// struct FClothPhysicsProperties_Legacy
		TEST_METHOD(ScriptStruct__Engine__ClothPhysicsProperties_Legacy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicsProperties_Legacy, VerticalResistance, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicsProperties_Legacy, HorizontalResistance, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicsProperties_Legacy, BendResistance, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicsProperties_Legacy, ShearResistance, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicsProperties_Legacy, Friction, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicsProperties_Legacy, Damping, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicsProperties_Legacy, TetherStiffness, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicsProperties_Legacy, TetherLimit, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicsProperties_Legacy, Drag, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicsProperties_Legacy, StiffnessFrequency, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicsProperties_Legacy, GravityScale, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicsProperties_Legacy, MassScale, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicsProperties_Legacy, InertiaBlend, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicsProperties_Legacy, SelfCollisionThickness, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicsProperties_Legacy, SelfCollisionSquashScale, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicsProperties_Legacy, SelfCollisionStiffness, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicsProperties_Legacy, SolverFrequency, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicsProperties_Legacy, FiberCompression, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicsProperties_Legacy, FiberExpansion, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicsProperties_Legacy, FiberResistance, 0x004C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClothPhysicsProperties_Legacy, 0x0050);
		}

		// struct FClothingAssetData_Legacy
		TEST_METHOD(ScriptStruct__Engine__ClothingAssetData_Legacy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothingAssetData_Legacy, AssetName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothingAssetData_Legacy, ApexFileName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothingAssetData_Legacy, bClothPropertiesChanged, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothingAssetData_Legacy, UnknownData_0MJK, 0x0019);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothingAssetData_Legacy, PhysicsProperties, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothingAssetData_Legacy, UnknownData_R4UN, 0x006C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClothingAssetData_Legacy, 0x0078);
		}

		// struct FSkeletalMeshClothBuildParams
		TEST_METHOD(ScriptStruct__Engine__SkeletalMeshClothBuildParams)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshClothBuildParams, TargetAsset, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshClothBuildParams, TargetLod, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshClothBuildParams, bRemapParameters, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshClothBuildParams, UnknownData_06ZD, 0x000D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshClothBuildParams, AssetName, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshClothBuildParams, LODIndex, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshClothBuildParams, SourceSection, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshClothBuildParams, bRemoveFromMesh, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshClothBuildParams, UnknownData_JCG3, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshClothBuildParams, PhysicsAsset, 0x0029);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMeshClothBuildParams, 0x0058);
		}

		// struct FBoneMirrorExport
		TEST_METHOD(ScriptStruct__Engine__BoneMirrorExport)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoneMirrorExport, BoneName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoneMirrorExport, SourceBoneName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoneMirrorExport, BoneFlipAxis, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoneMirrorExport, UnknownData_E3JT, 0x0011);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBoneMirrorExport, 0x0018);
		}

		// struct FSkeletalMeshComponentClothTickFunction : public FTickFunction
		TEST_METHOD(ScriptStruct__Engine__SkeletalMeshComponentClothTickFunction)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshComponentClothTickFunction, UnknownData_R8ZS, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMeshComponentClothTickFunction, 0x0058);
		}

		// struct FSkeletalMeshComponentEndPhysicsTickFunction : public FTickFunction
		TEST_METHOD(ScriptStruct__Engine__SkeletalMeshComponentEndPhysicsTickFunction)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletalMeshComponentEndPhysicsTickFunction, UnknownData_WBB3, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletalMeshComponentEndPhysicsTickFunction, 0x0058);
		}

		// struct FNameMapping
		TEST_METHOD(ScriptStruct__Engine__NameMapping)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNameMapping, NodeName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNameMapping, BoneName, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNameMapping, 0x0010);
		}

		// struct FRigConfiguration
		TEST_METHOD(ScriptStruct__Engine__RigConfiguration)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigConfiguration, Rig, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRigConfiguration, BoneMappingTable, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRigConfiguration, 0x0018);
		}

		// struct FBoneReductionSetting
		TEST_METHOD(ScriptStruct__Engine__BoneReductionSetting)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoneReductionSetting, BonesToRemove, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBoneReductionSetting, 0x0010);
		}

		// struct FReferencePose
		TEST_METHOD(ScriptStruct__Engine__ReferencePose)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferencePose, PoseName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferencePose, ReferencePose, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferencePose, 0x0018);
		}

		// struct FSkeletonToMeshLinkup
		TEST_METHOD(ScriptStruct__Engine__SkeletonToMeshLinkup)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletonToMeshLinkup, SkeletonToMeshTable, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkeletonToMeshLinkup, MeshToSkeletonTable, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkeletonToMeshLinkup, 0x0020);
		}

		// struct FSmartNameMapping
		TEST_METHOD(ScriptStruct__Engine__SmartNameMapping)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSmartNameMapping, UnknownData_JM1S, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSmartNameMapping, 0x0060);
		}

		// struct FCurveMetaData
		TEST_METHOD(ScriptStruct__Engine__CurveMetaData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCurveMetaData, UnknownData_S5IM, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCurveMetaData, 0x0020);
		}

		// struct FAnimCurveType
		TEST_METHOD(ScriptStruct__Engine__AnimCurveType)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimCurveType, UnknownData_ZCHS, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimCurveType, 0x0002);
		}

		// struct FSoundClassEditorData
		TEST_METHOD(ScriptStruct__Engine__SoundClassEditorData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundClassEditorData, UnknownData_JP9P, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundClassEditorData, 0x0008);
		}

		// struct FSoundNodeEditorData
		TEST_METHOD(ScriptStruct__Engine__SoundNodeEditorData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundNodeEditorData, UnknownData_D03S, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundNodeEditorData, 0x0008);
		}

		// struct FStreamedAudioPlatformData
		TEST_METHOD(ScriptStruct__Engine__StreamedAudioPlatformData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStreamedAudioPlatformData, UnknownData_FC4C, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStreamedAudioPlatformData, 0x0020);
		}

		// struct FMaterialRemapIndex
		TEST_METHOD(ScriptStruct__Engine__MaterialRemapIndex)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialRemapIndex, ImportVersionKey, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialRemapIndex, UnknownData_6IRI, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialRemapIndex, MaterialRemap, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMaterialRemapIndex, 0x0018);
		}

		// struct FAssetEditorOrbitCameraPosition
		TEST_METHOD(ScriptStruct__Engine__AssetEditorOrbitCameraPosition)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAssetEditorOrbitCameraPosition, bIsSet, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAssetEditorOrbitCameraPosition, UnknownData_V73P, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAssetEditorOrbitCameraPosition, CamOrbitPoint, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAssetEditorOrbitCameraPosition, CamOrbitZoom, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAssetEditorOrbitCameraPosition, CamOrbitRotation, 0x001C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAssetEditorOrbitCameraPosition, 0x0028);
		}

		// struct FMeshSectionInfo
		TEST_METHOD(ScriptStruct__Engine__MeshSectionInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshSectionInfo, MaterialIndex, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshSectionInfo, bEnableCollision, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshSectionInfo, bCastShadow, 0x0005);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshSectionInfo, UnknownData_EE0S, 0x0006);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMeshSectionInfo, 0x0008);
		}

		// struct FMeshSectionInfoMap
		TEST_METHOD(ScriptStruct__Engine__MeshSectionInfoMap)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshSectionInfoMap, Map, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMeshSectionInfoMap, 0x0050);
		}

		// struct FGroupedStaticMeshOptimizationSettings
		TEST_METHOD(ScriptStruct__Engine__GroupedStaticMeshOptimizationSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGroupedStaticMeshOptimizationSettings, LevelOfDetailType, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGroupedStaticMeshOptimizationSettings, UnknownData_BFPQ, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGroupedStaticMeshOptimizationSettings, ReductionSettings, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGroupedStaticMeshOptimizationSettings, ProxySettings, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGroupedStaticMeshOptimizationSettings, UnknownData_U9R7, 0x0234);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGroupedStaticMeshOptimizationSettings, 0x0238);
		}

		// struct FStaticMeshSourceModel
		TEST_METHOD(ScriptStruct__Engine__StaticMeshSourceModel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMeshSourceModel, BuildSettings, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMeshSourceModel, ReductionSettings, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMeshSourceModel, RemeshingSettings, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMeshSourceModel, bHasBeenSimplified, 0x0220);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMeshSourceModel, UnknownData_5FHK, 0x0221);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMeshSourceModel, OptimizationSettings, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMeshSourceModel, LODDistance, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMeshSourceModel, ScreenSize, 0x0464);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMeshSourceModel, SourceImportFilename, 0x0468);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStaticMeshSourceModel, 0x0478);
		}

		// struct FStaticMeshOptimizationSettings
		TEST_METHOD(ScriptStruct__Engine__StaticMeshOptimizationSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMeshOptimizationSettings, ReductionMethod, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMeshOptimizationSettings, UnknownData_EWMF, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMeshOptimizationSettings, NumOfTrianglesPercentage, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMeshOptimizationSettings, MaxDeviationPercentage, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMeshOptimizationSettings, WeldingThreshold, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMeshOptimizationSettings, bRecalcNormals, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMeshOptimizationSettings, UnknownData_6N18, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMeshOptimizationSettings, NormalsThreshold, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMeshOptimizationSettings, SilhouetteImportance, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMeshOptimizationSettings, TextureImportance, 0x0019);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMeshOptimizationSettings, ShadingImportance, 0x001A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStaticMeshOptimizationSettings, UnknownData_2ZNM, 0x001B);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStaticMeshOptimizationSettings, 0x001C);
		}

		// struct FStringCurveKey
		TEST_METHOD(ScriptStruct__Engine__StringCurveKey)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStringCurveKey, Time, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStringCurveKey, UnknownData_P3IP, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStringCurveKey, Value, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStringCurveKey, 0x0018);
		}

		// struct FStringCurve : public FIndexedCurve
		TEST_METHOD(ScriptStruct__Engine__StringCurve)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStringCurve, DefaultValue, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStringCurve, Keys, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStringCurve, 0x0078);
		}

		// struct FTexturePlatformData
		TEST_METHOD(ScriptStruct__Engine__TexturePlatformData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTexturePlatformData, UnknownData_RN51, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTexturePlatformData, 0x0020);
		}

		// struct FTextureSource
		TEST_METHOD(ScriptStruct__Engine__TextureSource)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextureSource, UnknownData_YLIT, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTextureSource, 0x0080);
		}

		// struct FStreamingTexturePrimitiveInfo
		TEST_METHOD(ScriptStruct__Engine__StreamingTexturePrimitiveInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStreamingTexturePrimitiveInfo, Texture, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStreamingTexturePrimitiveInfo, Bounds, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStreamingTexturePrimitiveInfo, TexelFactor, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStreamingTexturePrimitiveInfo, PackedRelativeBox, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStreamingTexturePrimitiveInfo, UnknownData_MEER, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStreamingTexturePrimitiveInfo, 0x0030);
		}

		// struct FTimeStretchCurveInstance
		TEST_METHOD(ScriptStruct__Engine__TimeStretchCurveInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimeStretchCurveInstance, bHasValidData, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimeStretchCurveInstance, UnknownData_SOXL, 0x0001);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTimeStretchCurveInstance, 0x0030);
		}

		// struct FStartAsyncSimulationFunction : public FTickFunction
		TEST_METHOD(ScriptStruct__Engine__StartAsyncSimulationFunction)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartAsyncSimulationFunction, UnknownData_1DWK, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStartAsyncSimulationFunction, 0x0058);
		}

		// struct FEndPhysicsTickFunction : public FTickFunction
		TEST_METHOD(ScriptStruct__Engine__EndPhysicsTickFunction)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEndPhysicsTickFunction, UnknownData_5UL4, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEndPhysicsTickFunction, 0x0058);
		}

		// struct FStartPhysicsTickFunction : public FTickFunction
		TEST_METHOD(ScriptStruct__Engine__StartPhysicsTickFunction)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartPhysicsTickFunction, UnknownData_5H4K, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStartPhysicsTickFunction, 0x0058);
		}

		// struct FLevelViewportInfo
		TEST_METHOD(ScriptStruct__Engine__LevelViewportInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelViewportInfo, CamPosition, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelViewportInfo, CamRotation, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelViewportInfo, CamOrthoZoom, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelViewportInfo, CamUpdated, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelViewportInfo, UnknownData_N6YT, 0x001D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelViewportInfo, 0x0020);
		}

		// struct FEditorImportWorkflowDefinition
		TEST_METHOD(ScriptStruct__Engine__EditorImportWorkflowDefinition)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditorImportWorkflowDefinition, ImportFilePath, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditorImportWorkflowDefinition, FactorySettings, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEditorImportWorkflowDefinition, 0x0020);
		}

		// struct FBuildPromotionImportWorkflowSettings
		TEST_METHOD(ScriptStruct__Engine__BuildPromotionImportWorkflowSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuildPromotionImportWorkflowSettings, Diffuse, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuildPromotionImportWorkflowSettings, Normal, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuildPromotionImportWorkflowSettings, StaticMesh, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuildPromotionImportWorkflowSettings, ReimportStaticMesh, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuildPromotionImportWorkflowSettings, BlendShapeMesh, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuildPromotionImportWorkflowSettings, MorphMesh, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuildPromotionImportWorkflowSettings, SkeletalMesh, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuildPromotionImportWorkflowSettings, Animation, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuildPromotionImportWorkflowSettings, Sound, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuildPromotionImportWorkflowSettings, SurroundSound, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuildPromotionImportWorkflowSettings, OtherAssetsToImport, 0x0140);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBuildPromotionImportWorkflowSettings, 0x0150);
		}

		// struct FBuildPromotionOpenAssetSettings
		TEST_METHOD(ScriptStruct__Engine__BuildPromotionOpenAssetSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuildPromotionOpenAssetSettings, BlueprintAsset, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuildPromotionOpenAssetSettings, MaterialAsset, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuildPromotionOpenAssetSettings, ParticleSystemAsset, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuildPromotionOpenAssetSettings, SkeletalMeshAsset, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuildPromotionOpenAssetSettings, StaticMeshAsset, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuildPromotionOpenAssetSettings, TextureAsset, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBuildPromotionOpenAssetSettings, 0x0060);
		}

		// struct FBuildPromotionNewProjectSettings
		TEST_METHOD(ScriptStruct__Engine__BuildPromotionNewProjectSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuildPromotionNewProjectSettings, NewProjectFolderOverride, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuildPromotionNewProjectSettings, NewProjectNameOverride, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBuildPromotionNewProjectSettings, 0x0020);
		}

		// struct FBuildPromotionTestSettings
		TEST_METHOD(ScriptStruct__Engine__BuildPromotionTestSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuildPromotionTestSettings, DefaultStaticMeshAsset, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuildPromotionTestSettings, ImportWorkflow, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuildPromotionTestSettings, OpenAssets, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuildPromotionTestSettings, NewProjectSettings, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBuildPromotionTestSettings, SourceControlMaterial, 0x01E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBuildPromotionTestSettings, 0x01F0);
		}

		// struct FMaterialEditorPromotionSettings
		TEST_METHOD(ScriptStruct__Engine__MaterialEditorPromotionSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialEditorPromotionSettings, DefaultMaterialAsset, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialEditorPromotionSettings, DefaultDiffuseTexture, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialEditorPromotionSettings, DefaultNormalTexture, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMaterialEditorPromotionSettings, 0x0030);
		}

		// struct FParticleEditorPromotionSettings
		TEST_METHOD(ScriptStruct__Engine__ParticleEditorPromotionSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleEditorPromotionSettings, DefaultParticleAsset, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FParticleEditorPromotionSettings, 0x0010);
		}

		// struct FBlueprintEditorPromotionSettings
		TEST_METHOD(ScriptStruct__Engine__BlueprintEditorPromotionSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintEditorPromotionSettings, FirstMeshPath, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintEditorPromotionSettings, SecondMeshPath, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlueprintEditorPromotionSettings, DefaultParticleAsset, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlueprintEditorPromotionSettings, 0x0030);
		}

		// struct FExternalToolDefinition
		TEST_METHOD(ScriptStruct__Engine__ExternalToolDefinition)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FExternalToolDefinition, ToolName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExternalToolDefinition, ExecutablePath, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExternalToolDefinition, CommandLineOptions, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExternalToolDefinition, WorkingDirectory, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExternalToolDefinition, ScriptExtension, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExternalToolDefinition, ScriptDirectory, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FExternalToolDefinition, 0x0060);
		}

		// struct FTransformBase
		TEST_METHOD(ScriptStruct__Engine__TransformBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTransformBase, Node, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTransformBase, Constraints, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTransformBase, 0x0028);
		}

		// struct FDropTimecode
		TEST_METHOD(ScriptStruct__LinearTimecode__DropTimecode)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDropTimecode, Timecode, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDropTimecode, FrameRate, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDropTimecode, bColorFraming, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDropTimecode, bRunningForward, 0x0019);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDropTimecode, bNewFrame, 0x001A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDropTimecode, UnknownData_OZLK, 0x001B);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDropTimecode, 0x001C);
		}

		// struct FReplicatedVehicleState
		TEST_METHOD(ScriptStruct__PhysXVehicles__ReplicatedVehicleState)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReplicatedVehicleState, SteeringInput, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReplicatedVehicleState, ThrottleInput, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReplicatedVehicleState, BrakeInput, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReplicatedVehicleState, HandbrakeInput, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReplicatedVehicleState, CurrentGear, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReplicatedVehicleState, 0x0014);
		}

		// struct FVehicleInputRate
		TEST_METHOD(ScriptStruct__PhysXVehicles__VehicleInputRate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleInputRate, RiseRate, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleInputRate, FallRate, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVehicleInputRate, 0x0008);
		}

		// struct FWheelSetup
		TEST_METHOD(ScriptStruct__PhysXVehicles__WheelSetup)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FWheelSetup, WheelClass, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWheelSetup, BoneName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWheelSetup, AdditionalOffset, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWheelSetup, bDisableSteering, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWheelSetup, UnknownData_9JA7, 0x001D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWheelSetup, 0x0020);
		}

		// struct FTireConfigMaterialFriction
		TEST_METHOD(ScriptStruct__PhysXVehicles__TireConfigMaterialFriction)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTireConfigMaterialFriction, PhysicalMaterial, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTireConfigMaterialFriction, FrictionScale, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTireConfigMaterialFriction, UnknownData_2Z2M, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTireConfigMaterialFriction, 0x0010);
		}

		// struct FVehicleDifferential4WData
		TEST_METHOD(ScriptStruct__PhysXVehicles__VehicleDifferential4WData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleDifferential4WData, DifferentialType, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleDifferential4WData, UnknownData_FC4W, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleDifferential4WData, FrontRearSplit, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleDifferential4WData, FrontLeftRightSplit, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleDifferential4WData, RearLeftRightSplit, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleDifferential4WData, CentreBias, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleDifferential4WData, FrontBias, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleDifferential4WData, RearBias, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVehicleDifferential4WData, 0x001C);
		}

		// struct FVehicleGearData
		TEST_METHOD(ScriptStruct__PhysXVehicles__VehicleGearData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleGearData, Ratio, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleGearData, DownRatio, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleGearData, UpRatio, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVehicleGearData, 0x000C);
		}

		// struct FVehicleTransmissionData
		TEST_METHOD(ScriptStruct__PhysXVehicles__VehicleTransmissionData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleTransmissionData, bUseGearAutoBox, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleTransmissionData, UnknownData_UB34, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleTransmissionData, GearSwitchTime, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleTransmissionData, GearAutoBoxLatency, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleTransmissionData, FinalRatio, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleTransmissionData, ForwardGears, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleTransmissionData, ReverseGearRatio, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleTransmissionData, NeutralGearUpRatio, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleTransmissionData, ClutchStrength, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleTransmissionData, UnknownData_TL76, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVehicleTransmissionData, 0x0030);
		}

		// struct FVehicleEngineData
		TEST_METHOD(ScriptStruct__PhysXVehicles__VehicleEngineData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleEngineData, TorqueCurve, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleEngineData, MaxRPM, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleEngineData, MOI, 0x007C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleEngineData, DampingRateFullThrottle, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleEngineData, DampingRateZeroThrottleClutchEngaged, 0x0084);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleEngineData, DampingRateZeroThrottleClutchDisengaged, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleEngineData, UnknownData_C0G5, 0x008C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVehicleEngineData, 0x0090);
		}

		// struct FAnimNode_WheelHandler : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__PhysXVehicles__AnimNode_WheelHandler)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_WheelHandler, UnknownData_J9CZ, 0x00F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_WheelHandler, 0x0108);
		}

		// struct FVehicleAnimInstanceProxy : public FAnimInstanceProxy
		TEST_METHOD(ScriptStruct__PhysXVehicles__VehicleAnimInstanceProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVehicleAnimInstanceProxy, UnknownData_Q492, 0x0590);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVehicleAnimInstanceProxy, 0x05A0);
		}

		// struct FMediaPlayerTrackOptions
		TEST_METHOD(ScriptStruct__MediaUtils__MediaPlayerTrackOptions)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMediaPlayerTrackOptions, Audio, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMediaPlayerTrackOptions, Caption, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMediaPlayerTrackOptions, MetaData, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMediaPlayerTrackOptions, Script, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMediaPlayerTrackOptions, Subtitle, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMediaPlayerTrackOptions, Text, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMediaPlayerTrackOptions, Video, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMediaPlayerTrackOptions, 0x001C);
		}

		// struct FMediaPlayerOptions
		TEST_METHOD(ScriptStruct__MediaUtils__MediaPlayerOptions)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMediaPlayerOptions, Tracks, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMediaPlayerOptions, 0x001C);
		}

		// struct FTrackingEffect
		TEST_METHOD(ScriptStruct__AT__TrackingEffect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTrackingEffect, TrackingEffectLocation, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTrackingEffect, UnknownData_YZ39, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTrackingEffect, 0x0010);
		}

		// struct FColorGrading
		TEST_METHOD(ScriptStruct__AT__ColorGrading)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FColorGrading, ColorGradingLUT, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FColorGrading, ColorGradingIntensity, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FColorGrading, FadeIn, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FColorGrading, FadeOut, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FColorGrading, UnknownData_V7R9, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FColorGrading, 0x0018);
		}

		// struct FLandEffect
		TEST_METHOD(ScriptStruct__AT__LandEffect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandEffect, RayDir, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandEffect, SpawnOnNotRayHit, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandEffect, UnknownData_AP1J, 0x000D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandEffect, TraceType, 0x000E);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandEffect, UnknownData_MY56, 0x000F);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandEffect, 0x0010);
		}

		// struct FSpawnList
		TEST_METHOD(ScriptStruct__AT__SpawnList)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpawnList, UnknownData_3URZ, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSpawnList, 0x0050);
		}

		// struct FNpcVariety_Fly
		TEST_METHOD(ScriptStruct__AT__NpcVariety_Fly)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNpcVariety_Fly, FlySpeedHigh, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNpcVariety_Fly, FlySpeedLow, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNpcVariety_Fly, FlyAngleYawHigh, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNpcVariety_Fly, FlyAngleYawLow, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNpcVariety_Fly, FlyAnglePitchHigh, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNpcVariety_Fly, FlyAnglePitchLow, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNpcVariety_Fly, 0x0018);
		}

		// struct FNpcVarietyInfo
		TEST_METHOD(ScriptStruct__AT__NpcVarietyInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNpcVarietyInfo, ScaleHigh, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNpcVarietyInfo, ScaleLow, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNpcVarietyInfo, MotionSpeedHigh, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNpcVarietyInfo, MotionSpeedLow, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNpcVarietyInfo, ValidityFlag_Fly, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNpcVarietyInfo, UnknownData_T71U, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNpcVarietyInfo, FlyVariety, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNpcVarietyInfo, 0x002C);
		}

		// struct FAnimalSpawnSettingData
		TEST_METHOD(ScriptStruct__AT__AnimalSpawnSettingData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalSpawnSettingData, ClassToSpawn, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalSpawnSettingData, MaxAnimalNum, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalSpawnSettingData, bSpawnInsideTree, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalSpawnSettingData, bDeletePlayerOutsideVolume, 0x000D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalSpawnSettingData, UnknownData_CV8M, 0x000E);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalSpawnSettingData, m_SpawnedActorArray, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimalSpawnSettingData, 0x0020);
		}

		// struct FAnimalSpawnSettingData_Sky : public FAnimalSpawnSettingData
		TEST_METHOD(ScriptStruct__AT__AnimalSpawnSettingData_Sky)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimalSpawnSettingData_Sky, 0x0020);
		}

		// struct FATDamagePositiveParam
		TEST_METHOD(ScriptStruct__AT__ATDamagePositiveParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDamagePositiveParam, DamageId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDamagePositiveParam, DamageType, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDamagePositiveParam, KnockbackRate, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDamagePositiveParam, KnockbackAngleV, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDamagePositiveParam, KnockbackAngleH, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDamagePositiveParam, KnockbackType, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDamagePositiveParam, ImpulseType, 0x001D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDamagePositiveParam, ReactionId, 0x001E);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDamagePositiveParam, StrengthId, 0x001F);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDamagePositiveParam, HitStop, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDamagePositiveParam, CameraShakeType, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDamagePositiveParam, UnknownData_T8OI, 0x0025);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDamagePositiveParam, HoldTime, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDamagePositiveParam, OffsetStrength, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDamagePositiveParam, 0x0030);
		}

		// struct FProjectileLaunchData
		TEST_METHOD(ScriptStruct__AT__ProjectileLaunchData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FProjectileLaunchData, LaunchAngleH, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProjectileLaunchData, LaunchAngleV, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProjectileLaunchData, LaunchDistance, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProjectileLaunchData, LaunchRoll, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FProjectileLaunchData, 0x0010);
		}

		// struct FProjectileLaunchPattern
		TEST_METHOD(ScriptStruct__AT__ProjectileLaunchPattern)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FProjectileLaunchPattern, LaunchData, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FProjectileLaunchPattern, 0x0010);
		}

		// struct FEffectBaseData
		TEST_METHOD(ScriptStruct__AT__EffectBaseData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEffectBaseData, Conditions, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEffectBaseData, UnknownData_ZR4Y, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEffectBaseData, 0x0018);
		}

		// struct FTrailData : public FEffectBaseData
		TEST_METHOD(ScriptStruct__AT__TrailData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTrailData, ParticleSystem, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTrailData, FirstSocketName, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTrailData, SecondSocketName, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTrailData, WidthScaleMode, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTrailData, UnknownData_9Q0L, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTrailData, WidthScaleCurve, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTrailData, 0x0040);
		}

		// struct FEF_TrailParticleData : public FTableRowBase
		TEST_METHOD(ScriptStruct__AT__EF_TrailParticleData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEF_TrailParticleData, CharacterType, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEF_TrailParticleData, UnknownData_JEJB, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEF_TrailParticleData, Tag, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEF_TrailParticleData, AppearOnAnyCharacter, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEF_TrailParticleData, UnknownData_9160, 0x0019);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEF_TrailParticleData, ParticleData, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEF_TrailParticleData, 0x0060);
		}

		// struct FEffectData : public FEffectBaseData
		TEST_METHOD(ScriptStruct__AT__EffectData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEffectData, Inverce, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEffectData, IsRelative, 0x0019);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEffectData, UnknownData_5D14, 0x001A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEffectData, LocationOffset, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEffectData, RotationOffset, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEffectData, Scale, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEffectData, Attached, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEffectData, DestroyAtEnd, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEffectData, DetachedAtEnd, 0x003A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEffectData, UnknownData_4Y1W, 0x003B);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEffectData, 0x0040);
		}

		// struct FEF_ParticleData : public FEffectData
		TEST_METHOD(ScriptStruct__AT__EF_ParticleData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEF_ParticleData, SocketName, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEF_ParticleData, ParticleSystem, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEF_ParticleData, 0x0050);
		}

		// struct FLandEffectSetting : public FTableRowBase
		TEST_METHOD(ScriptStruct__AT__LandEffectSetting)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandEffectSetting, SurfaceType, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandEffectSetting, RotationDontAttach, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandEffectSetting, AppearOnAnySurface, 0x000A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandEffectSetting, UnknownData_41Q7, 0x000B);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandEffectSetting, ParticleData, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandEffectSetting, 0x0060);
		}

		// struct FUIQuestDetail
		TEST_METHOD(ScriptStruct__AT__UIQuestDetail)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FUIQuestDetail, DetailTxt, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FUIQuestDetail, QuestType, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FUIQuestDetail, CollectionStartNum, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FUIQuestDetail, CollectionEndNum, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FUIQuestDetail, UnknownData_S2LY, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FUIQuestDetail, 0x0018);
		}

		// struct FUIQuestInfo
		TEST_METHOD(ScriptStruct__AT__UIQuestInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FUIQuestInfo, bIsReplay, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FUIQuestInfo, bIsMainQuest, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FUIQuestInfo, UnknownData_CRHR, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FUIQuestInfo, QuestCaptionTitle, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FUIQuestInfo, QuestCaptionDetail, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FUIQuestInfo, ConvertedQuestCaptionDetail, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FUIQuestInfo, QuestProgressDetail, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FUIQuestInfo, ReplaceTxtCtn, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FUIQuestInfo, QuestListId, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FUIQuestInfo, QuestListTitle, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FUIQuestInfo, ConvertedQuestListTitle, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FUIQuestInfo, QuestList, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FUIQuestInfo, ListReplaceTxtCtn, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FUIQuestInfo, 0x0080);
		}

		// struct FRadialBlurParam
		TEST_METHOD(ScriptStruct__AT__RadialBlurParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRadialBlurParam, DynamicMaterial, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRadialBlurParam, UnknownData_W5V3, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRadialBlurParam, 0x0050);
		}

		// struct FSupportActionParameter
		TEST_METHOD(ScriptStruct__AT__SupportActionParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSupportActionParameter, ActionCategory, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSupportActionParameter, UnknownData_03Q9, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSupportActionParameter, SupportGaugeRate, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSupportActionParameter, Probability, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSupportActionParameter, RecastTime, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSupportActionParameter, 0x0010);
		}

		// struct FSupportRecoveryHpParameter
		TEST_METHOD(ScriptStruct__AT__SupportRecoveryHpParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSupportRecoveryHpParameter, FavorBorder, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSupportRecoveryHpParameter, RecoveryRate, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSupportRecoveryHpParameter, RecoveryFixed, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSupportRecoveryHpParameter, 0x000C);
		}

		// struct FSupportRecoveryMpParameter
		TEST_METHOD(ScriptStruct__AT__SupportRecoveryMpParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSupportRecoveryMpParameter, FavorBorder, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSupportRecoveryMpParameter, RecoveryRate, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSupportRecoveryMpParameter, RecoveryFixed, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSupportRecoveryMpParameter, 0x000C);
		}

		// struct FSupportStyleParameter
		TEST_METHOD(ScriptStruct__AT__SupportStyleParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSupportStyleParameter, SupportActionTable, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSupportStyleParameter, 0x0010);
		}

		// struct FATMeshAttachObject
		TEST_METHOD(ScriptStruct__AT__ATMeshAttachObject)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMeshAttachObject, Mesh, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMeshAttachObject, AttachName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMeshAttachObject, Offset, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATMeshAttachObject, 0x0040);
		}

		// struct FATGameHUDSettings
		TEST_METHOD(ScriptStruct__AT__ATGameHUDSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATGameHUDSettings, Class, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATGameHUDSettings, 0x0028);
		}

		// struct FParticleRefs
		TEST_METHOD(ScriptStruct__AT__ParticleRefs)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleRefs, Appear, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleRefs, AppearSystem, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleRefs, Disappear, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleRefs, DisappearSystem, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FParticleRefs, 0x0020);
		}

		// struct FAnimalParameterTable : public FTableRowBase
		TEST_METHOD(ScriptStruct__AT__AnimalParameterTable)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, ID, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, UnknownData_467A, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, VariationName, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, EscapeStartRange, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, EscapeEndRange, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, EscapeRandom, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, CautionStartRange, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, CautionEndRange, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, ActionPlayTime, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, RespawnDistance, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, WalkSpeed, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, WalkAcceleration, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, WalkDeceleration, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, RunSpeed, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, RunAcceleration, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, RunDeceleration, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, FlySpeed, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, FlyAcceleration, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, FlyDeceleration, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, GlideSpeed, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, GlideAcceleration, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, GlideDeceleration, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, DiveSpeed, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, DiveAcceleration, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, DiveDeceleration, 0x0074);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, FlyTime, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, GlideTime, 0x007C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, DiveStartAngle, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, DiveEndAngle, 0x0084);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, RandamTime, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, HP, 0x008C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, DownPower, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, DownTime, 0x0094);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, FalterDamage, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, DropDistanceMin, 0x009C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, DropDistanceMax, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, DropHeight, 0x00A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, DropAngle, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimalParameterTable, SpawnRatio, 0x00AC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimalParameterTable, 0x00B0);
		}

		// struct FTransformFaceInfo
		TEST_METHOD(ScriptStruct__AT__TransformFaceInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTransformFaceInfo, TransformID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTransformFaceInfo, TransformFaceMontage, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTransformFaceInfo, 0x0010);
		}

		// struct FCreateCaptureSetParameter
		TEST_METHOD(ScriptStruct__AT__CreateCaptureSetParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCreateCaptureSetParameter, CameraTransform, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCreateCaptureSetParameter, DirectionalLightTransform, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCreateCaptureSetParameter, SkyLightTransform, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCreateCaptureSetParameter, DirectionalLightColor, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCreateCaptureSetParameter, SkyLightColor, 0x0094);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCreateCaptureSetParameter, CaptureSource, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCreateCaptureSetParameter, UnknownData_1NSM, 0x0099);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCreateCaptureSetParameter, SkyLightIntensity, 0x009C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCreateCaptureSetParameter, 0x00A0);
		}

		// struct FPartyMember
		TEST_METHOD(ScriptStruct__AT__PartyMember)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPartyMember, UnknownData_6CFM, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPartyMember, 0x0028);
		}

		// struct FEventParam
		TEST_METHOD(ScriptStruct__AT__EventParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEventParam, UnknownData_LRRD, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEventParam, 0x0108);
		}

		// struct FCmnSkillMenuList00Param
		TEST_METHOD(ScriptStruct__AT__CmnSkillMenuList00Param)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnSkillMenuList00Param, SkillId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnSkillMenuList00Param, ItemName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnSkillMenuList00Param, ActiveSkillType, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnSkillMenuList00Param, PassiveSkillType, 0x0019);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnSkillMenuList00Param, UnknownData_2EL5, 0x001A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnSkillMenuList00Param, SkillLevel, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnSkillMenuList00Param, bIsNew, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnSkillMenuList00Param, bIsEquipped, 0x0021);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnSkillMenuList00Param, bIsActive, 0x0022);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnSkillMenuList00Param, bIsPassiveSkill, 0x0023);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnSkillMenuList00Param, bIsBanned, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnSkillMenuList00Param, UnknownData_WVGD, 0x0025);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnSkillMenuList00Param, Rarity, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnSkillMenuList00Param, UnknownData_GQJR, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCmnSkillMenuList00Param, 0x0030);
		}

		// struct FCmnMenuList00Param
		TEST_METHOD(ScriptStruct__AT__CmnMenuList00Param)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuList00Param, ItemType, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuList00Param, IconType, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuList00Param, UnknownData_FEJ6, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuList00Param, ItemName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuList00Param, ItemNum, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuList00Param, bIsNew, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuList00Param, bIsActive, 0x001D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuList00Param, bIsClear, 0x001E);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuList00Param, bIsIconColor, 0x001F);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuList00Param, Rarity, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuList00Param, UnknownData_V20M, 0x0024);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCmnMenuList00Param, 0x0028);
		}

		// struct FCmnMenuListParam
		TEST_METHOD(ScriptStruct__AT__CmnMenuListParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuListParam, ItemId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuListParam, Rarity, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuListParam, ItemType, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuListParam, CategoryIconType, 0x000D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuListParam, UnknownData_OO8Q, 0x000E);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuListParam, ItemName, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuListParam, ItemDetail, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuListParam, ItemFlavor, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuListParam, WhereToGet, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuListParam, SellPrice, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuListParam, ItemNum, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuListParam, bIsNew, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuListParam, bIsNumDisp, 0x0065);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuListParam, bIsActive, 0x0066);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuListParam, UnknownData_3C1T, 0x0067);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCmnMenuListParam, 0x0068);
		}

		// struct FCmnMenuBar03Param
		TEST_METHOD(ScriptStruct__AT__CmnMenuBar03Param)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuBar03Param, ItemId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuBar03Param, KeyHelpId, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuBar03Param, KeyBindId, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuBar03Param, ItemName, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuBar03Param, DefaultValue, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuBar03Param, CachedValue, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuBar03Param, OptionValue, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuBar03Param, UnknownData_D59D, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuBar03Param, OptionList, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuBar03Param, bIsNew, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuBar03Param, bIsActive, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuBar03Param, bIsEdit, 0x0052);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuBar03Param, bIsMin, 0x0053);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuBar03Param, bIsMax, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuBar03Param, bIsLoop, 0x0055);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuBar03Param, bIsOption, 0x0056);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuBar03Param, bIsVolume, 0x0057);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuBar03Param, bIsPopUp, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuBar03Param, bIsDisplay, 0x0059);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuBar03Param, bIsNumber, 0x005A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuBar03Param, bIsKeyBind, 0x005B);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuBar03Param, bIsConfirm, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuBar03Param, UnknownData_KUV4, 0x005D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCmnMenuBar03Param, 0x0060);
		}

		// struct FCmnMenuList03Param
		TEST_METHOD(ScriptStruct__AT__CmnMenuList03Param)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuList03Param, ItemId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuList03Param, ItemName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuList03Param, bIsNew, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuList03Param, bIsActive, 0x0019);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnMenuList03Param, UnknownData_0IAQ, 0x001A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCmnMenuList03Param, 0x0020);
		}

		// struct FCmnQuestMenuList06Param
		TEST_METHOD(ScriptStruct__AT__CmnQuestMenuList06Param)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnQuestMenuList06Param, IconType, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnQuestMenuList06Param, UnknownData_NEFF, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnQuestMenuList06Param, ItemName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnQuestMenuList06Param, CaptionTxt, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnQuestMenuList06Param, MissionId, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnQuestMenuList06Param, QuestLevel, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnQuestMenuList06Param, bIsTrophy, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnQuestMenuList06Param, bIsCheck, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnQuestMenuList06Param, bIsNavi, 0x0042);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnQuestMenuList06Param, bIsNew, 0x0043);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnQuestMenuList06Param, bIsActive, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnQuestMenuList06Param, bIsRepeat, 0x0045);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnQuestMenuList06Param, bIsClear, 0x0046);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnQuestMenuList06Param, UnknownData_47MC, 0x0047);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCmnQuestMenuList06Param, 0x0048);
		}

		// struct FUIXcmnPlatBtnTypeInfo
		TEST_METHOD(ScriptStruct__AT__UIXcmnPlatBtnTypeInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FUIXcmnPlatBtnTypeInfo, KeyIdsForPad, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FUIXcmnPlatBtnTypeInfo, KeyConfigActionId, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FUIXcmnPlatBtnTypeInfo, DynamicAssignInputId, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FUIXcmnPlatBtnTypeInfo, KeyIds, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FUIXcmnPlatBtnTypeInfo, 0x0030);
		}

		// struct FCmnTabIconParam
		TEST_METHOD(ScriptStruct__AT__CmnTabIconParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnTabIconParam, CmnIconType, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCmnTabIconParam, bIsEnable, 0x0001);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCmnTabIconParam, 0x0002);
		}

		// struct FLinkPanelInfo
		TEST_METHOD(ScriptStruct__AT__LinkPanelInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLinkPanelInfo, UnknownData_8RY7, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLinkPanelInfo, 0x0010);
		}

		// struct FAT_UICompZListCardParam
		TEST_METHOD(ScriptStruct__AT__AT_UICompZListCardParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListCardParam, ItemId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListCardParam, UnknownData_V4S7, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListCardParam, ItemName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListCardParam, ItemCardFileName, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListCardParam, ItemTitle, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListCardParam, ItemText, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListCardParam, bIsOpen, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListCardParam, bIsNew, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListCardParam, bIsVertical, 0x0042);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListCardParam, bIsPremiumRare, 0x0043);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListCardParam, UnknownData_Q4M0, 0x0044);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAT_UICompZListCardParam, 0x0048);
		}

		// struct FAT_UICompZListDemoParam
		TEST_METHOD(ScriptStruct__AT__AT_UICompZListDemoParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListDemoParam, ItemId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListDemoParam, UnknownData_ITRY, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListDemoParam, ItemName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListDemoParam, ItemScene, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListDemoParam, ItemChapter, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListDemoParam, ItemEpisode, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListDemoParam, IsOpen, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListDemoParam, IsNew, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListDemoParam, UnknownData_LC4K, 0x0042);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAT_UICompZListDemoParam, 0x0048);
		}

		// struct FAT_UICompZListParam
		TEST_METHOD(ScriptStruct__AT__AT_UICompZListParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListParam, ItemId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListParam, UnknownData_58MG, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListParam, ItemName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListParam, ItemLabel, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListParam, ItemNum, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListParam, ItemMax, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListParam, IconType, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListParam, IsOpen, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListParam, IsClosedOpen, 0x002D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListParam, IsNew, 0x002E);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListParam, UnknownData_UL1R, 0x002F);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAT_UICompZListParam, 0x0030);
		}

		// struct FAT_UICompZListBgmParam
		TEST_METHOD(ScriptStruct__AT__AT_UICompZListBgmParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListBgmParam, ItemId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListBgmParam, UnknownData_GMZI, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListBgmParam, ItemName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListBgmParam, ItemLabel, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListBgmParam, IsAppendix, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListBgmParam, IsPlaying, 0x0021);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListBgmParam, IsOpen, 0x0022);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListBgmParam, IsNew, 0x0023);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAT_UICompZListBgmParam, UnknownData_IW8E, 0x0024);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAT_UICompZListBgmParam, 0x0028);
		}

		// struct FDamagePopPlayInfo
		TEST_METHOD(ScriptStruct__AT__DamagePopPlayInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDamagePopPlayInfo, bIsPlayer, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDamagePopPlayInfo, UnknownData_BPYV, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDamagePopPlayInfo, DamageValue, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDamagePopPlayInfo, DrawOffset, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDamagePopPlayInfo, bCameraOut, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDamagePopPlayInfo, UnknownData_7EAM, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDamagePopPlayInfo, HitPos, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDamagePopPlayInfo, DamageType, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDamagePopPlayInfo, UnknownData_3IPL, 0x0021);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDamagePopPlayInfo, DrawScale, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDamagePopPlayInfo, DrawAngleDegree, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDamagePopPlayInfo, DamageTarget, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDamagePopPlayInfo, 0x0038);
		}

		// struct FGameWindowSetupItemInfo
		TEST_METHOD(ScriptStruct__AT__GameWindowSetupItemInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupItemInfo, ItemName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupItemInfo, ItemNum, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupItemInfo, ItemIconType, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupItemInfo, ItemCategoryType, 0x0015);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupItemInfo, UnknownData_RN0B, 0x0016);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupItemInfo, ItemRarity, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupItemInfo, UnknownData_B7ED, 0x001C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameWindowSetupItemInfo, 0x0020);
		}

		// struct FGameWindowSetupSelectItemInfo
		TEST_METHOD(ScriptStruct__AT__GameWindowSetupSelectItemInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupSelectItemInfo, ItemName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupSelectItemInfo, ItemDetail, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupSelectItemInfo, ItemNum, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupSelectItemInfo, ItemIconType, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupSelectItemInfo, UnknownData_VWJN, 0x0025);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupSelectItemInfo, ItemRarity, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupSelectItemInfo, UnknownData_60SI, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameWindowSetupSelectItemInfo, 0x0030);
		}

		// struct FGameWindowSetupTextMenuInfo
		TEST_METHOD(ScriptStruct__AT__GameWindowSetupTextMenuInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupTextMenuInfo, MenuName, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameWindowSetupTextMenuInfo, 0x0010);
		}

		// struct FGameWindowSetupComuEmbInfo
		TEST_METHOD(ScriptStruct__AT__GameWindowSetupComuEmbInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupComuEmbInfo, SoulEmId, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameWindowSetupComuEmbInfo, 0x0008);
		}

		// struct FGameWindowSetupCheckInfo
		TEST_METHOD(ScriptStruct__AT__GameWindowSetupCheckInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupCheckInfo, ItemChecked, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupCheckInfo, ItemReceived, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupCheckInfo, UnknownData_ZGPU, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupCheckInfo, ItemCondition, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupCheckInfo, ItemName, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupCheckInfo, ItemNum, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupCheckInfo, ItemIconType, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupCheckInfo, UnknownData_WKBE, 0x002D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupCheckInfo, ItemRarity, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupCheckInfo, UnknownData_EQ3L, 0x0034);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameWindowSetupCheckInfo, 0x0038);
		}

		// struct FGameWindowSetupWishInfo
		TEST_METHOD(ScriptStruct__AT__GameWindowSetupWishInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupWishInfo, WishInfoId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupWishInfo, UnknownData_UA7M, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupWishInfo, WishName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupWishInfo, WishDetail, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupWishInfo, bIsClear, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupWishInfo, UnknownData_TCPX, 0x0029);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameWindowSetupWishInfo, 0x0030);
		}

		// struct FGameWindowSetupLinkList
		TEST_METHOD(ScriptStruct__AT__GameWindowSetupLinkList)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupLinkList, UnknownData_MVHY, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupLinkList, LinkID, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupLinkList, UnknownData_EY0B, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameWindowSetupLinkList, 0x0058);
		}

		// struct FGameWindowSetupBannedSkillList
		TEST_METHOD(ScriptStruct__AT__GameWindowSetupBannedSkillList)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupBannedSkillList, CharTex, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameWindowSetupBannedSkillList, UnknownData_NVGM, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameWindowSetupBannedSkillList, 0x0018);
		}

		// struct FLevelUpLogItem
		TEST_METHOD(ScriptStruct__AT__LevelUpLogItem)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelUpLogItem, UnknownData_P2C8, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelUpLogItem, 0x0010);
		}

		// struct FMapMIconLegend
		TEST_METHOD(ScriptStruct__AT__MapMIconLegend)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMapMIconLegend, IconType, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMapMIconLegend, UnknownData_LSCM, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMapMIconLegend, MsgId, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMapMIconLegend, IsAlwaysVisible, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMapMIconLegend, UnknownData_REZ5, 0x0011);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMapMIconLegend, 0x0018);
		}

		// struct FBlinkIconData
		TEST_METHOD(ScriptStruct__AT__BlinkIconData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlinkIconData, UnknownData_KE3N, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlinkIconData, mapIcon, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlinkIconData, 0x0010);
		}

		// struct FIconBlinker
		TEST_METHOD(ScriptStruct__AT__IconBlinker)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FIconBlinker, UnknownData_7Y1N, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FIconBlinker, blinkList, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FIconBlinker, UnknownData_TAI0, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FIconBlinker, 0x0020);
		}

		// struct FWorldMapsSymbol
		TEST_METHOD(ScriptStruct__AT__WorldMapsSymbol)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FWorldMapsSymbol, BaseSlot, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWorldMapsSymbol, mapIcon, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWorldMapsSymbol, UnknownData_ZS4J, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWorldMapsSymbol, 0x0020);
		}

		// struct FWorldMapIconData
		TEST_METHOD(ScriptStruct__AT__WorldMapIconData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FWorldMapIconData, UnknownData_17WV, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWorldMapIconData, ResoucePtr, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWorldMapIconData, 0x0010);
		}

		// struct FMenuWIndowSetupListNumMenuInfo
		TEST_METHOD(ScriptStruct__AT__MenuWIndowSetupListNumMenuInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMenuWIndowSetupListNumMenuInfo, MenuName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMenuWIndowSetupListNumMenuInfo, ListNum, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMenuWIndowSetupListNumMenuInfo, UnknownData_3IXS, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMenuWIndowSetupListNumMenuInfo, 0x0018);
		}

		// struct FXlistBar04Info
		TEST_METHOD(ScriptStruct__AT__XlistBar04Info)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FXlistBar04Info, Mode, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FXlistBar04Info, UnknownData_ZEJO, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FXlistBar04Info, ItemId, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FXlistBar04Info, Name, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FXlistBar04Info, Description, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FXlistBar04Info, Type, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FXlistBar04Info, IsNew, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::FXlistBar04Info, UnknownData_Z7VU, 0x0032);
			CHEAT_GEAR_CHECK_OFFSET(CG::FXlistBar04Info, Price, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FXlistBar04Info, basePrice, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FXlistBar04Info, bCanPurchese, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FXlistBar04Info, UnknownData_FRW8, 0x003D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FXlistBar04Info, numberOfSold, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FXlistBar04Info, numberOfPossession, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::FXlistBar04Info, numberOfStocks, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FXlistBar04Info, ShopMode, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FXlistBar04Info, UnknownData_TT7M, 0x004D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FXlistBar04Info, Rarity, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FXlistBar04Info, UnknownData_JJJY, 0x0054);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FXlistBar04Info, 0x0058);
		}

		// struct FGaugeUpdateSpeedThresholdParam
		TEST_METHOD(ScriptStruct__AT__GaugeUpdateSpeedThresholdParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGaugeUpdateSpeedThresholdParam, Threshold, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGaugeUpdateSpeedThresholdParam, UpdateSeconds, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGaugeUpdateSpeedThresholdParam, 0x0008);
		}

		// struct FTrainingDetailTask
		TEST_METHOD(ScriptStruct__AT__TrainingDetailTask)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTrainingDetailTask, WL_Pnl_Detail_Task, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTrainingDetailTask, WL_Txt_Task, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTrainingDetailTask, WL_Txt_Detail_Task, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTrainingDetailTask, WL_Txt_Detail_Task01, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTrainingDetailTask, WL_Txt_Name_P, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTrainingDetailTask, WL_Txt_Lv_E00, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTrainingDetailTask, WL_Ins_Mask_Char_P, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTrainingDetailTask, WL_Txt_Name_E00, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTrainingDetailTask, WL_Ins_Mask_Char_E, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTrainingDetailTask, WL_Img_Dmy_Charicon, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTrainingDetailTask, WL_Txt_Name_E01, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTrainingDetailTask, WL_Txt_Lv_E01, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTrainingDetailTask, WL_Txt_Name_E02, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTrainingDetailTask, WL_Txt_Lv_E02, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTrainingDetailTask, 0x0070);
		}

		// struct FCaptureSkillDetail
		TEST_METHOD(ScriptStruct__AT__CaptureSkillDetail)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCaptureSkillDetail, WL_Pnl_Sp, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCaptureSkillDetail, WL_Txt_Cap00, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCaptureSkillDetail, WL_Txt_Cap02, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCaptureSkillDetail, WL_Txt_Cap03, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCaptureSkillDetail, WL_Txt_Detail, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCaptureSkillDetail, WL_Icon_Clear, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCaptureSkillDetail, WL_Img_Fade00, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCaptureSkillDetail, WL_Img_Fade01, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCaptureSkillDetail, WL_Img_Fade02, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCaptureSkillDetail, 0x0048);
		}

		// struct FBarData
		TEST_METHOD(ScriptStruct__AT__BarData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBarData, UnknownData_563M, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBarData, 0x0028);
		}

		// struct FCaptureParam
		TEST_METHOD(ScriptStruct__AT__CaptureParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCaptureParam, UnknownData_2SFG, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCaptureParam, 0x0050);
		}

		// struct FStartpartyPartySelectData
		TEST_METHOD(ScriptStruct__AT__StartpartyPartySelectData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartpartyPartySelectData, cursorIndex, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartpartyPartySelectData, UnknownData_9L6O, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartpartyPartySelectData, IconTextureList, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartpartyPartySelectData, NowLoadingPathList, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartpartyPartySelectData, UnknownData_4DE4, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStartpartyPartySelectData, 0x00B0);
		}

		// struct FStartStatusBasicParam
		TEST_METHOD(ScriptStruct__AT__StartStatusBasicParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, Mode, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, UnknownData_KQ49, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, charatype, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, UnknownData_OB5J, 0x0005);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, icon, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, Level, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, UnknownData_QPPV, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, Name, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, UnknownData_J7QO, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, hpCurrentNum, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, hpMaxNum, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, spCurrentNum, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, spMaxNum, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, infightingAttack, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, infightingDefense, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, shootingAttack, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, shootingDefense, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, critical, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, diffHpMaxNum, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, diffSpMaxNum, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, diffInfightingAttack, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, diffInfightingDefense, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, diffShootingAttack, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, diffShootingDefense, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, diffCritical, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, SupportStyle, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, supportSkillAttr1, 0x0071);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, UnknownData_1RBL, 0x0072);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, supportSkillName1, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, rarity1, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, supportSkillAttr2, 0x008C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, UnknownData_I1AL, 0x008D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, supportSkillName2, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, rarity2, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, Type, 0x00A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, UnknownData_S1AL, 0x00A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, HpMaxNumBuff, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, SpMaxNumBuff, 0x00AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, InfightingAttackBuff, 0x00AD);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, InfightingDefenseBuff, 0x00AE);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, ShootingAttackBuff, 0x00AF);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, ShootingDefenseBuff, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, CriticalBuff, 0x00B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, UnknownData_MUMW, 0x00B2);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, diffHpMaxNumBuff, 0x00B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, diffSpMaxNumBuff, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, diffInfightingAttackBuff, 0x00B9);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, diffInfightingDefenseBuff, 0x00BA);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, diffShootingAttackBuff, 0x00BB);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, diffShootingDefenseBuff, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, diffCriticalBuff, 0x00BD);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStartStatusBasicParam, UnknownData_UKIO, 0x00BE);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStartStatusBasicParam, 0x00C0);
		}

		// struct FSaveLoadBarParam
		TEST_METHOD(ScriptStruct__AT__SaveLoadBarParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSaveLoadBarParam, ScreenTex, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSaveLoadBarParam, UnknownData_ROUQ, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSaveLoadBarParam, 0x0080);
		}

		// struct FStateIconInfo
		TEST_METHOD(ScriptStruct__AT__StateIconInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStateIconInfo, IconType, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStateIconInfo, UnknownData_S0G2, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStateIconInfo, BuffTimeSec, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStateIconInfo, LeftBuffTimeSec, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStateIconInfo, bIconActive, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStateIconInfo, bNewFlg, 0x000D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStateIconInfo, UnknownData_07QA, 0x000E);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStateIconInfo, 0x0010);
		}

		// struct FTextStyle
		TEST_METHOD(ScriptStruct__AT__TextStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextStyle, Color, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextStyle, FontSize, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextStyle, fontHeight, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextStyle, Height, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTextStyle, 0x001C);
		}

		// struct FUIXcmnPlatBtnInfo
		TEST_METHOD(ScriptStruct__AT__UIXcmnPlatBtnInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FUIXcmnPlatBtnInfo, UnknownData_I74J, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FUIXcmnPlatBtnInfo, TextureIns, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FUIXcmnPlatBtnInfo, 0x0038);
		}

		// struct FActChargeHeatCutInfo
		TEST_METHOD(ScriptStruct__AT__ActChargeHeatCutInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FActChargeHeatCutInfo, FormChangeID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FActChargeHeatCutInfo, Montage, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActChargeHeatCutInfo, 0x0010);
		}

		// struct FCpl002MakoudanDirectionParam
		TEST_METHOD(ScriptStruct__AT__Cpl002MakoudanDirectionParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCpl002MakoudanDirectionParam, DirectAngleX, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCpl002MakoudanDirectionParam, DirectAngleY, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCpl002MakoudanDirectionParam, 0x0008);
		}

		// struct FCpl002MakoudanShotParam
		TEST_METHOD(ScriptStruct__AT__Cpl002MakoudanShotParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCpl002MakoudanShotParam, Rate, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCpl002MakoudanShotParam, UnknownData_DC7B, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCpl002MakoudanShotParam, ShotDirectTable, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCpl002MakoudanShotParam, 0x0018);
		}

		// struct FSkillMontageFormChangeCutinInfo
		TEST_METHOD(ScriptStruct__AT__SkillMontageFormChangeCutinInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMontageFormChangeCutinInfo, FormChangeID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMontageFormChangeCutinInfo, Montage, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkillMontageFormChangeCutinInfo, 0x0010);
		}

		// struct FSkillMontageInfo
		TEST_METHOD(ScriptStruct__AT__SkillMontageInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMontageInfo, WaitMontage, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMontageInfo, WaitLoopTime, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMontageInfo, WaitLoopTimeHeatUpCancel, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMontageInfo, WaitCancelNotPlayer, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMontageInfo, UnknownData_FOJW, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMontageInfo, AttackMontage, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMontageInfo, AttackLoopTime, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMontageInfo, AttackLoopTimeSupportRatio, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMontageInfo, AttackLoopNum, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMontageInfo, AttackLoopDistance, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMontageInfo, AttackEndTime, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMontageInfo, UnknownData_MY62, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMontageInfo, AttackCutinMontage, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMontageInfo, FormChangeCutinInfo, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMontageInfo, AttackCutinTargetMontage, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMontageInfo, AttackCutinTargetMontageID, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMontageInfo, AttackCutinAdjustDestructObject, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMontageInfo, AttackFizzleFlag, 0x0061);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMontageInfo, UnknownData_8U9U, 0x0062);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMontageInfo, AttackFizzleMontage, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMontageInfo, bGroundMontage, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMontageInfo, SkipEndState, 0x0071);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMontageInfo, UnknownData_MCW3, 0x0072);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkillMontageInfo, 0x0078);
		}

		// struct FCpl005LongRangeAProjectileParam
		TEST_METHOD(ScriptStruct__AT__Cpl005LongRangeAProjectileParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCpl005LongRangeAProjectileParam, RotationOffsetList, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCpl005LongRangeAProjectileParam, 0x0024);
		}

		// struct FDoubleSundayBeamOrbitInfo
		TEST_METHOD(ScriptStruct__AT__DoubleSundayBeamOrbitInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDoubleSundayBeamOrbitInfo, SetAngleSecond, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDoubleSundayBeamOrbitInfo, BeamEaseSet, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDoubleSundayBeamOrbitInfo, UnknownData_937O, 0x0005);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDoubleSundayBeamOrbitInfo, BeamEaseExp, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDoubleSundayBeamOrbitInfo, RotAngle, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDoubleSundayBeamOrbitInfo, TraceTargetFlag, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDoubleSundayBeamOrbitInfo, UnknownData_UMQ6, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDoubleSundayBeamOrbitInfo, TraceStrength, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDoubleSundayBeamOrbitInfo, SetPitch, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDoubleSundayBeamOrbitInfo, SetPitchSec, 0x001C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDoubleSundayBeamOrbitInfo, 0x0020);
		}

		// struct FATActCpl034SkillPunishStormData
		TEST_METHOD(ScriptStruct__AT__ATActCpl034SkillPunishStormData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATActCpl034SkillPunishStormData, Montage, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATActCpl034SkillPunishStormData, ExplosionSpawnClass, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATActCpl034SkillPunishStormData, StartWaitTime, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATActCpl034SkillPunishStormData, EndWaitTime, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATActCpl034SkillPunishStormData, DelayExplodeTime, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATActCpl034SkillPunishStormData, UnknownData_UN34, 0x001C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATActCpl034SkillPunishStormData, 0x0020);
		}

		// struct FATActCpl034SkillSonicBlowData
		TEST_METHOD(ScriptStruct__AT__ATActCpl034SkillSonicBlowData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATActCpl034SkillSonicBlowData, SubClassTeleport, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATActCpl034SkillSonicBlowData, TeleportStartTime, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATActCpl034SkillSonicBlowData, CanAttackState, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATActCpl034SkillSonicBlowData, CorrectHorizontal, 0x000D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATActCpl034SkillSonicBlowData, UnknownData_G001, 0x000E);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATActCpl034SkillSonicBlowData, 0x0010);
		}

		// struct FLongBlowoffChaseMontageInfo
		TEST_METHOD(ScriptStruct__AT__LongBlowoffChaseMontageInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLongBlowoffChaseMontageInfo, MontageMove, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLongBlowoffChaseMontageInfo, MoveTime, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLongBlowoffChaseMontageInfo, MoveEndDist, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLongBlowoffChaseMontageInfo, MontageAttack, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLongBlowoffChaseMontageInfo, 0x0018);
		}

		// struct FLongComboInfo
		TEST_METHOD(ScriptStruct__AT__LongComboInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLongComboInfo, MontageCombo, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLongComboInfo, MontageFinish, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLongComboInfo, 0x0018);
		}

		// struct FSparkingComboInfo
		TEST_METHOD(ScriptStruct__AT__SparkingComboInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSparkingComboInfo, FormChangeID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSparkingComboInfo, Montage, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSparkingComboInfo, 0x0018);
		}

		// struct FShortComboInfo
		TEST_METHOD(ScriptStruct__AT__ShortComboInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FShortComboInfo, MontageCombo, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FShortComboInfo, MontageComboLv2, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FShortComboInfo, MontageComboLv3, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FShortComboInfo, MontageComboFinishCut, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FShortComboInfo, MontageUpCombo, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FShortComboInfo, MontageUpComboFinishCut, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FShortComboInfo, IsPercentageUpComboAffect, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FShortComboInfo, UnknownData_NC2W, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::FShortComboInfo, UpComboAffect, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::FShortComboInfo, MontageDownCombo, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FShortComboInfo, MontageDownComboFinishCut, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FShortComboInfo, IsPercentageDownComboAffect, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FShortComboInfo, UnknownData_AMK6, 0x0071);
			CHEAT_GEAR_CHECK_OFFSET(CG::FShortComboInfo, DownComboAffect, 0x0074);
			CHEAT_GEAR_CHECK_OFFSET(CG::FShortComboInfo, MontageLeftCombo, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FShortComboInfo, MontageLeftComboFinishCut, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::FShortComboInfo, IsPercentageLeftComboAffect, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FShortComboInfo, UnknownData_LTH2, 0x0091);
			CHEAT_GEAR_CHECK_OFFSET(CG::FShortComboInfo, LeftComboAffect, 0x0094);
			CHEAT_GEAR_CHECK_OFFSET(CG::FShortComboInfo, MontageComboSp, 0x0098);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FShortComboInfo, 0x00A8);
		}

		// struct FSkillMoveTeleportParam
		TEST_METHOD(ScriptStruct__AT__SkillMoveTeleportParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMoveTeleportParam, SkillId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMoveTeleportParam, TeleportDist, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMoveTeleportParam, TeleportDistCut, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMoveTeleportParam, OutsideTeleport, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillMoveTeleportParam, UnknownData_7TH0, 0x0011);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkillMoveTeleportParam, 0x0018);
		}

		// struct FCooperationRushMontageInfo
		TEST_METHOD(ScriptStruct__AT__CooperationRushMontageInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCooperationRushMontageInfo, MontageAttack, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCooperationRushMontageInfo, MontageDamageID, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCooperationRushMontageInfo, 0x0010);
		}

		// struct FCooperationCameraInfo : public FSkillCameraInfo
		TEST_METHOD(ScriptStruct__AT__CooperationCameraInfo)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCooperationCameraInfo, 0x002C);
		}

		// struct FCooperationTalkInfo
		TEST_METHOD(ScriptStruct__AT__CooperationTalkInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCooperationTalkInfo, TalkID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCooperationTalkInfo, Duration, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCooperationTalkInfo, UnknownData_UAC7, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCooperationTalkInfo, 0x0010);
		}

		// struct FMemberTalkInfo
		TEST_METHOD(ScriptStruct__AT__MemberTalkInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMemberTalkInfo, Character, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMemberTalkInfo, UnknownData_FRTH, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMemberTalkInfo, Info, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMemberTalkInfo, 0x0018);
		}

		// struct FExclusiveTalkInfo
		TEST_METHOD(ScriptStruct__AT__ExclusiveTalkInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FExclusiveTalkInfo, OwnerInfo, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExclusiveTalkInfo, MemberTalkInfo, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FExclusiveTalkInfo, 0x0040);
		}

		// struct FObserverCondition
		TEST_METHOD(ScriptStruct__AT__ObserverCondition)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FObserverCondition, ID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FObserverCondition, TriggerId, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FObserverCondition, Distance, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FObserverCondition, ConditionFlags, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FObserverCondition, UnknownData_M41R, 0x0025);
			CHEAT_GEAR_CHECK_OFFSET(CG::FObserverCondition, CommandId, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FObserverCondition, bFinished, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FObserverCondition, bEnabledTrigger, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::FObserverCondition, bExecute, 0x003A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FObserverCondition, UnknownData_4XOU, 0x003B);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FObserverCondition, 0x0040);
		}

		// struct FGeneralTalkEventArgment
		TEST_METHOD(ScriptStruct__AT__GeneralTalkEventArgment)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGeneralTalkEventArgment, Timing, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGeneralTalkEventArgment, bTerrainDamage, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGeneralTalkEventArgment, bWindRoad, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGeneralTalkEventArgment, bEnemiesAI, 0x0003);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGeneralTalkEventArgment, bCameraShake, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGeneralTalkEventArgment, bMobCharacter, 0x0005);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGeneralTalkEventArgment, bLandmarkCharacter, 0x0006);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGeneralTalkEventArgment, bCould, 0x0007);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGeneralTalkEventArgment, 0x0008);
		}

		// struct FBattlePowerTextData
		TEST_METHOD(ScriptStruct__AT__BattlePowerTextData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBattlePowerTextData, MinValue, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBattlePowerTextData, MaxValue, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBattlePowerTextData, LinearColor, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBattlePowerTextData, bUseEffect, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBattlePowerTextData, UnknownData_8NGI, 0x0021);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBattlePowerTextData, 0x0028);
		}

		// struct FReplicateBodyAttackPattern
		TEST_METHOD(ScriptStruct__AT__ReplicateBodyAttackPattern)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReplicateBodyAttackPattern, TargetType, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReplicateBodyAttackPattern, UnknownData_SNRN, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReplicateBodyAttackPattern, TargetParameter, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReplicateBodyAttackPattern, Interval, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReplicateBodyAttackPattern, 0x000C);
		}

		// struct FSlashWaveLaunchData
		TEST_METHOD(ScriptStruct__AT__SlashWaveLaunchData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlashWaveLaunchData, ShotRot, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlashWaveLaunchData, ProjectileRot, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlashWaveLaunchData, ProjectileTurnSpeed, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlashWaveLaunchData, ShotWaitTime, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSlashWaveLaunchData, 0x0010);
		}

		// struct FSlashWaveLaunchPattern
		TEST_METHOD(ScriptStruct__AT__SlashWaveLaunchPattern)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlashWaveLaunchPattern, RandWeight, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlashWaveLaunchPattern, UnknownData_I39Q, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlashWaveLaunchPattern, MontageShot, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlashWaveLaunchPattern, LaunchData, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSlashWaveLaunchPattern, 0x0020);
		}

		// struct FTemporaryMeshInfo
		TEST_METHOD(ScriptStruct__AT__TemporaryMeshInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTemporaryMeshInfo, CharacterType, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTemporaryMeshInfo, UnknownData_RWON, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTemporaryMeshInfo, Mesh, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTemporaryMeshInfo, AnimNut, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTemporaryMeshInfo, AnimEnd, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTemporaryMeshInfo, Scale, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTemporaryMeshInfo, UnknownData_MKZ7, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTemporaryMeshInfo, 0x0030);
		}

		// struct FParticleFloatParam
		TEST_METHOD(ScriptStruct__AT__ParticleFloatParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleFloatParam, Name, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleFloatParam, StartTime, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleFloatParam, Duration, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleFloatParam, StartValue, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FParticleFloatParam, EndValue, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FParticleFloatParam, 0x0018);
		}

		// struct FATAtrociousPhaseClasses
		TEST_METHOD(ScriptStruct__AT__ATAtrociousPhaseClasses)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATAtrociousPhaseClasses, PreBattleClass, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATAtrociousPhaseClasses, BattleClass, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATAtrociousPhaseClasses, ConditionClass, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATAtrociousPhaseClasses, 0x0018);
		}

		// struct FATAtrociousConditionParam
		TEST_METHOD(ScriptStruct__AT__ATAtrociousConditionParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATAtrociousConditionParam, LevelName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATAtrociousConditionParam, phase, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATAtrociousConditionParam, UnknownData_A4WK, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATAtrociousConditionParam, UnknownData_NJLW, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATAtrociousConditionParam, 0x0010);
		}

		// struct FAttachParticleParameter
		TEST_METHOD(ScriptStruct__AT__AttachParticleParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAttachParticleParameter, ID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAttachParticleParameter, Particle, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAttachParticleParameter, SocketName, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAttachParticleParameter, Location, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAttachParticleParameter, Rotation, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAttachParticleParameter, Scale, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAttachParticleParameter, UnknownData_NGLC, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAttachParticleParameter, ParameterName, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAttachParticleParameter, ParameterValue, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAttachParticleParameter, UnknownData_MRRN, 0x004C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAttachParticleParameter, 0x0050);
		}

		// struct FBattleGroupAICharacters
		TEST_METHOD(ScriptStruct__AT__BattleGroupAICharacters)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBattleGroupAICharacters, Characters, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBattleGroupAICharacters, 0x0010);
		}

		// struct FSkillActionData
		TEST_METHOD(ScriptStruct__AT__SkillActionData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillActionData, ID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSkillActionData, ActionClassTable, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSkillActionData, 0x0030);
		}

		// struct FATCharacterStandWaitVariationLoopParam
		TEST_METHOD(ScriptStruct__AT__ATCharacterStandWaitVariationLoopParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATCharacterStandWaitVariationLoopParam, Type, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATCharacterStandWaitVariationLoopParam, UnknownData_G4OL, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATCharacterStandWaitVariationLoopParam, RandomLoopCount, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATCharacterStandWaitVariationLoopParam, 0x000C);
		}

		// struct FATDamageCollision
		TEST_METHOD(ScriptStruct__AT__ATDamageCollision)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDamageCollision, CapsuleComponent, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDamageCollision, 0x0008);
		}

		// struct FATFormData
		TEST_METHOD(ScriptStruct__AT__ATFormData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATFormData, CharaCodeUI, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATFormData, Height, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATFormData, Weight, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATFormData, 0x0010);
		}

		// struct FATVariationData
		TEST_METHOD(ScriptStruct__AT__ATVariationData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATVariationData, FormData, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATVariationData, FormChangeAuraName, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATVariationData, HeatUpAuraName, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATVariationData, AuraScale, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATVariationData, UnknownData_BDQ2, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATVariationData, AuraColor, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATVariationData, FresnelColor, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATVariationData, OutlineColor, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATVariationData, 0x0040);
		}

		// struct FATCharacterEffectTableIDSet
		TEST_METHOD(ScriptStruct__AT__ATCharacterEffectTableIDSet)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATCharacterEffectTableIDSet, CharacterEffectTable, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATCharacterEffectTableIDSet, CharacterEffectID, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATCharacterEffectTableIDSet, 0x0010);
		}

		// struct FATMeshParts
		TEST_METHOD(ScriptStruct__AT__ATMeshParts)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMeshParts, Mesh, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMeshParts, Texture, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATMeshParts, 0x0010);
		}

		// struct FATCharacterStatus
		TEST_METHOD(ScriptStruct__AT__ATCharacterStatus)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATCharacterStatus, HitPoint, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATCharacterStatus, MagicPoint, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATCharacterStatus, HitPointRecover, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATCharacterStatus, MagicPointRecover, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATCharacterStatus, ShortOffensivePow, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATCharacterStatus, LongOffensivePow, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATCharacterStatus, MoveOffensivePow, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATCharacterStatus, ShortDefensivePow, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATCharacterStatus, LongDefensivePow, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATCharacterStatus, MoveDefensivePow, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATCharacterStatus, CriticalRate, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATCharacterStatus, MoveSpeed, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATCharacterStatus, BreakGaugeValueMax, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATCharacterStatus, BreakOffensivePow, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATCharacterStatus, GuardBreakValueMax, 0x0070);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATCharacterStatus, 0x0078);
		}

		// struct FLoadingAIBehaviorAsset
		TEST_METHOD(ScriptStruct__AT__LoadingAIBehaviorAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingAIBehaviorAsset, UnknownData_WN5J, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingAIBehaviorAsset, 0x0050);
		}

		// struct FLoadingEncountAsset
		TEST_METHOD(ScriptStruct__AT__LoadingEncountAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingEncountAsset, UnknownData_555G, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingEncountAsset, 0x0078);
		}

		// struct FLoadingAIMoveAsset
		TEST_METHOD(ScriptStruct__AT__LoadingAIMoveAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingAIMoveAsset, UnknownData_5LJB, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingAIMoveAsset, 0x0078);
		}

		// struct FLoadingAIBehaviorAssetInstance
		TEST_METHOD(ScriptStruct__AT__LoadingAIBehaviorAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingAIBehaviorAssetInstance, BehaviorTree, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingAIBehaviorAssetInstance, BlackboardData, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingAIBehaviorAssetInstance, 0x0010);
		}

		// struct FReferenceToEncountAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToEncountAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToEncountAssetInstance, EnemyParameterList, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToEncountAssetInstance, EnemyAppearTable, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToEncountAssetInstance, EnemyParamDistRelation, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToEncountAssetInstance, 0x0018);
		}

		// struct FReferenceToAIMoveAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToAIMoveAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToAIMoveAssetInstance, MoveForwardData, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToAIMoveAssetInstance, MoveDistanceData, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToAIMoveAssetInstance, MoveAroundData, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToAIMoveAssetInstance, 0x0018);
		}

		// struct FATDataAssetBaseballGameInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetBaseballGameInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameInfo, CharacterMesh, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetBaseballGameInfo, 0x0030);
		}

		// struct FATDataAssetBaseballGameCommonInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetBaseballGameCommonInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, BallMesh, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, BatMesh, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, GroveMesh, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, StraightBallAnimSequence, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, CurveBallAnimSequence, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, ForkBallAnimSequence, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, KnuckleBallAnimSequence, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, SpiralBallAnimSequence, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, WaveBallAnimSequence, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, WaitR01_01ST_Montage, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, WaitR01_02LP_Montage, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, ThrowR01_01ST_Montage, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, ThrowR01_02LP_Montage, 0x01E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, ThrowR01_03ED_Montage, 0x0208);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, HitR01_L_01ST_Montage, 0x0230);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, HitR01_L_02LP_Montage, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, HitR01_R_01ST_Montage, 0x0280);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, HitR01_R_02LP_Montage, 0x02A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, WaitR01_01ST_Aura_Montage, 0x02D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, WaitR01_02LP_Aura_Montage, 0x02F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, WaitR01_02LP_NoLoop_Aura_Montage, 0x0320);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, ThrowR01_01ST_Aura_Montage, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, ThrowR01_02LP_Aura_Montage, 0x0370);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, ThrowR01_03ED_Aura_Montage, 0x0398);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, Wait01_Montage, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, SwingWait_Montage, 0x03E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, SwingMiss_Montage, 0x0410);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, Swing01_01ST_Montage, 0x0438);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, Swing01_02LP_Montage, 0x0460);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, Swing01_03ED_Montage, 0x0488);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, Wait01_Aura_Montage, 0x04B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, SwingWait_Aura_Montage, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, SwingMiss_Aura_Montage, 0x0500);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, Swing01_01ST_Aura_Montage, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, Swing01_02LP_Aura_Montage, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, Swing01_03ED_Aura_Montage, 0x0578);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, Result_Montage, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, BallAuraBlueS_Particle, 0x05C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, BallAuraBlueL_Particle, 0x05F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, BallAuraRedS_Particle, 0x0618);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, BallAuraRedL_Particle, 0x0640);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, Hit_Particle, 0x0668);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, HitDist_Particle, 0x0690);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, Radiation_Particle, 0x06B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, ConstantDataTable, 0x06E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, PitcherDataTable, 0x0708);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, BallDataTable, 0x0730);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, BallTypeDataTable, 0x0758);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, HitTimingDataTable, 0x0780);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, CameraDataTable, 0x07A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, BattlePowerDataTable, 0x07D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, CutinDataTable, 0x07F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, MobPresetDataTable, 0x0820);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, Mob_Man_Reaction01, 0x0848);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, Mob_Man_Reaction02, 0x0870);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, Mob_Man_Reaction03, 0x0898);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, Mob_Woman_Reaction01, 0x08C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, Mob_Woman_Reaction02, 0x08E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBaseballGameCommonInfo, Mob_Kid_Reaction01, 0x0910);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetBaseballGameCommonInfo, 0x0938);
		}

		// struct FLoadingBaseballGameAsset
		TEST_METHOD(ScriptStruct__AT__LoadingBaseballGameAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingBaseballGameAsset, UnknownData_ATTR, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingBaseballGameAsset, 0x0028);
		}

		// struct FLoadingBaseballGameCommonAsset
		TEST_METHOD(ScriptStruct__AT__LoadingBaseballGameCommonAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingBaseballGameCommonAsset, UnknownData_LXKI, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingBaseballGameCommonAsset, 0x0938);
		}

		// struct FReferenceToBaseballGameAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToBaseballGameAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameAssetInstance, CharacterMesh, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToBaseballGameAssetInstance, 0x0008);
		}

		// struct FReferenceToBaseballGameCommonAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToBaseballGameCommonAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, BallMesh, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, BatMesh, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, GroveMesh, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, StraightBallAnimSequence, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, CurveBallAnimSequence, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, ForkBallAnimSequence, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, KnuckleBallAnimSequence, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, SpiralBallAnimSequence, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, WaveBallAnimSequence, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, WaitR01_01ST_Montage, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, WaitR01_02LP_Montage, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, ThrowR01_01ST_Montage, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, ThrowR01_02LP_Montage, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, ThrowR01_03ED_Montage, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, HitR01_L_01ST_Montage, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, HitR01_L_02LP_Montage, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, HitR01_R_01ST_Montage, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, HitR01_R_02LP_Montage, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, WaitR01_01ST_Aura_Montage, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, WaitR01_02LP_Aura_Montage, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, WaitR01_02LP_NoLoop_Aura_Montage, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, ThrowR01_01ST_Aura_Montage, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, ThrowR01_02LP_Aura_Montage, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, ThrowR01_03ED_Aura_Montage, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, Wait01_Montage, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, SwingWait_Montage, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, SwingMiss_Montage, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, Swing01_01ST_Montage, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, Swing01_02LP_Montage, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, Swing01_03ED_Montage, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, Wait01_Aura_Montage, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, SwingWait_Aura_Montage, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, SwingMiss_Aura_Montage, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, Swing01_01ST_Aura_Montage, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, Swing01_02LP_Aura_Montage, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, Swing01_03ED_Aura_Montage, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, Result_Montage, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, BallAuraBlueS_Particle, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, BallAuraBlueL_Particle, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, BallAuraRedS_Particle, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, BallAuraRedL_Particle, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, Hit_Particle, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, HitDist_Particle, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, Radiation_Particle, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, ConstantDataTable, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, PitcherDataTable, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, BallDataTable, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, BallTypeDataTable, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, HitTimingDataTable, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, CameraDataTable, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, BattlePowerDataTable, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, CutinDataTable, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, MobPresetDataTable, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, Mob_Man_Reaction01, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, Mob_Man_Reaction02, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, Mob_Man_Reaction03, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, Mob_Woman_Reaction01, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, Mob_Woman_Reaction02, 0x01C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBaseballGameCommonAssetInstance, Mob_Kid_Reaction01, 0x01D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToBaseballGameCommonAssetInstance, 0x01D8);
		}

		// struct FATDataAssetBattleAIInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetBattleAIInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBattleAIInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBattleAIInfo, PhaseTable, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBattleAIInfo, BehaviorTable, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetBattleAIInfo, 0x0058);
		}

		// struct FATDataAssetBattleGroupAIInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetBattleGroupAIInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBattleGroupAIInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetBattleGroupAIInfo, GroupInfo, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetBattleGroupAIInfo, 0x0030);
		}

		// struct FLoadingBattleAIAsset
		TEST_METHOD(ScriptStruct__AT__LoadingBattleAIAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingBattleAIAsset, UnknownData_1MK9, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingBattleAIAsset, 0x0050);
		}

		// struct FReferenceToBattleAIAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToBattleAIAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBattleAIAssetInstance, PhaseTable, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBattleAIAssetInstance, BehaviorTable, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToBattleAIAssetInstance, 0x0010);
		}

		// struct FLoadingBattleGroupAIAsset
		TEST_METHOD(ScriptStruct__AT__LoadingBattleGroupAIAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingBattleGroupAIAsset, UnknownData_3I6L, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingBattleGroupAIAsset, 0x0028);
		}

		// struct FReferenceToBattleGroupAIAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToBattleGroupAIAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToBattleGroupAIAssetInstance, GroupInfo, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToBattleGroupAIAssetInstance, 0x0008);
		}

		// struct FATDataAssetCharacterInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetCharacterInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCharacterInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCharacterInfo, CharacterClass, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetCharacterInfo, 0x0030);
		}

		// struct FATDataAssetCharacterActionInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetCharacterActionInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCharacterActionInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCharacterActionInfo, ActionClassTable, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetCharacterActionInfo, 0x0030);
		}

		// struct FLoadingCharacterActionAsset
		TEST_METHOD(ScriptStruct__AT__LoadingCharacterActionAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingCharacterActionAsset, CharacterAction, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingCharacterActionAsset, 0x0028);
		}

		// struct FReferenceToCharacterActionAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToCharacterActionAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToCharacterActionAssetInstance, CharacterAction, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToCharacterActionAssetInstance, 0x0008);
		}

		// struct FLoadingCharacterAsset
		TEST_METHOD(ScriptStruct__AT__LoadingCharacterAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingCharacterAsset, Character, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingCharacterAsset, 0x0028);
		}

		// struct FReferenceToCharacterAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToCharacterAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToCharacterAssetInstance, Character, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToCharacterAssetInstance, 0x0008);
		}

		// struct FATDataAssetVariationMeshInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetVariationMeshInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetVariationMeshInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetVariationMeshInfo, PartsClass, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetVariationMeshInfo, 0x0030);
		}

		// struct FATDataAssetFormMeshInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetFormMeshInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFormMeshInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFormMeshInfo, PartsClass, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetFormMeshInfo, 0x0030);
		}

		// struct FATLoadingVariationMeshAsset
		TEST_METHOD(ScriptStruct__AT__ATLoadingVariationMeshAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLoadingVariationMeshAsset, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLoadingVariationMeshAsset, Mesh, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATLoadingVariationMeshAsset, 0x0030);
		}

		// struct FATReferenceToVariationMeshAssetInstance
		TEST_METHOD(ScriptStruct__AT__ATReferenceToVariationMeshAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATReferenceToVariationMeshAssetInstance, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATReferenceToVariationMeshAssetInstance, Mesh, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATReferenceToVariationMeshAssetInstance, 0x0010);
		}

		// struct FATLoadingFormMeshAsset
		TEST_METHOD(ScriptStruct__AT__ATLoadingFormMeshAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLoadingFormMeshAsset, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLoadingFormMeshAsset, Mesh, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATLoadingFormMeshAsset, 0x0030);
		}

		// struct FATReferenceToFormMeshAssetInstance
		TEST_METHOD(ScriptStruct__AT__ATReferenceToFormMeshAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATReferenceToFormMeshAssetInstance, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATReferenceToFormMeshAssetInstance, Mesh, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATReferenceToFormMeshAssetInstance, 0x0010);
		}

		// struct FATDataAssetCookingDemoInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetCookingDemoInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCookingDemoInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCookingDemoInfo, Sequencer, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetCookingDemoInfo, 0x0030);
		}

		// struct FATDataAssetCookingDemoCharacterResourceInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetCookingDemoCharacterResourceInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCookingDemoCharacterResourceInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCookingDemoCharacterResourceInfo, Reaction_Grade1_Motion, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCookingDemoCharacterResourceInfo, Reaction_Grade2_Motion, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCookingDemoCharacterResourceInfo, Reaction_Grade3_Motion, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCookingDemoCharacterResourceInfo, Meal_Seize_Motion, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCookingDemoCharacterResourceInfo, Meal_Stick1_Motion, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCookingDemoCharacterResourceInfo, Meal_Stick2_Motion, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCookingDemoCharacterResourceInfo, Meal_Stick3_Motion, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCookingDemoCharacterResourceInfo, Meal_Stick4_Motion, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCookingDemoCharacterResourceInfo, Meal_Grasp_Motion, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCookingDemoCharacterResourceInfo, After_Grade1_Motion, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCookingDemoCharacterResourceInfo, After_Grade2_Motion, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCookingDemoCharacterResourceInfo, After_Grade3_Motion, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCookingDemoCharacterResourceInfo, After_Grade1_LP_Motion, 0x01E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCookingDemoCharacterResourceInfo, After_Grade2_LP_Motion, 0x0210);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCookingDemoCharacterResourceInfo, After_Grade3_LP_Motion, 0x0238);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCookingDemoCharacterResourceInfo, Result_St_Motion, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCookingDemoCharacterResourceInfo, Result_Lp_Motion, 0x0288);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCookingDemoCharacterResourceInfo, StartAttachmentMesh, 0x02B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetCookingDemoCharacterResourceInfo, 0x02D8);
		}

		// struct FATLoadingCookingDemoCharacterResourceAsset
		TEST_METHOD(ScriptStruct__AT__ATLoadingCookingDemoCharacterResourceAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLoadingCookingDemoCharacterResourceAsset, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLoadingCookingDemoCharacterResourceAsset, Reaction_Grade1_Motion, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLoadingCookingDemoCharacterResourceAsset, Reaction_Grade2_Motion, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLoadingCookingDemoCharacterResourceAsset, Reaction_Grade3_Motion, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLoadingCookingDemoCharacterResourceAsset, Meal_Seize_Motion, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLoadingCookingDemoCharacterResourceAsset, Meal_Stick1_Motion, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLoadingCookingDemoCharacterResourceAsset, Meal_Stick2_Motion, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLoadingCookingDemoCharacterResourceAsset, Meal_Stick3_Motion, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLoadingCookingDemoCharacterResourceAsset, Meal_Stick4_Motion, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLoadingCookingDemoCharacterResourceAsset, Meal_Grasp_Motion, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLoadingCookingDemoCharacterResourceAsset, After_Grade1_Motion, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLoadingCookingDemoCharacterResourceAsset, After_Grade2_Motion, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLoadingCookingDemoCharacterResourceAsset, After_Grade3_Motion, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLoadingCookingDemoCharacterResourceAsset, After_Grade1_LP_Motion, 0x01E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLoadingCookingDemoCharacterResourceAsset, After_Grade2_LP_Motion, 0x0210);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLoadingCookingDemoCharacterResourceAsset, After_Grade3_LP_Motion, 0x0238);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLoadingCookingDemoCharacterResourceAsset, Result_St_Motion, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLoadingCookingDemoCharacterResourceAsset, Result_Lp_Motion, 0x0288);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLoadingCookingDemoCharacterResourceAsset, StartAttachmentMesh, 0x02B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATLoadingCookingDemoCharacterResourceAsset, 0x02D8);
		}

		// struct FATReferenceToCookingDemoCharacterResourceAssetInstance
		TEST_METHOD(ScriptStruct__AT__ATReferenceToCookingDemoCharacterResourceAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATReferenceToCookingDemoCharacterResourceAssetInstance, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATReferenceToCookingDemoCharacterResourceAssetInstance, Reaction_Grade1_Motion, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATReferenceToCookingDemoCharacterResourceAssetInstance, Reaction_Grade2_Motion, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATReferenceToCookingDemoCharacterResourceAssetInstance, Reaction_Grade3_Motion, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATReferenceToCookingDemoCharacterResourceAssetInstance, Meal_Seize_Motion, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATReferenceToCookingDemoCharacterResourceAssetInstance, Meal_Stick1_Motion, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATReferenceToCookingDemoCharacterResourceAssetInstance, Meal_Stick2_Motion, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATReferenceToCookingDemoCharacterResourceAssetInstance, Meal_Stick3_Motion, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATReferenceToCookingDemoCharacterResourceAssetInstance, Meal_Stick4_Motion, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATReferenceToCookingDemoCharacterResourceAssetInstance, Meal_Grasp_Motion, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATReferenceToCookingDemoCharacterResourceAssetInstance, After_Grade1_Motion, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATReferenceToCookingDemoCharacterResourceAssetInstance, After_Grade2_Motion, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATReferenceToCookingDemoCharacterResourceAssetInstance, After_Grade3_Motion, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATReferenceToCookingDemoCharacterResourceAssetInstance, After_Grade1_LP_Motion, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATReferenceToCookingDemoCharacterResourceAssetInstance, After_Grade2_LP_Motion, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATReferenceToCookingDemoCharacterResourceAssetInstance, After_Grade3_LP_Motion, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATReferenceToCookingDemoCharacterResourceAssetInstance, Result_St_Motion, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATReferenceToCookingDemoCharacterResourceAssetInstance, Result_Lp_Motion, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATReferenceToCookingDemoCharacterResourceAssetInstance, StartAttachmentMesh, 0x0090);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATReferenceToCookingDemoCharacterResourceAssetInstance, 0x0098);
		}

		// struct FATDataAssetCrossTalkInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetCrossTalkInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCrossTalkInfo, MasterId, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetCrossTalkInfo, 0x0008);
		}

		// struct FLoadingCrossTalkAsset
		TEST_METHOD(ScriptStruct__AT__LoadingCrossTalkAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingCrossTalkAsset, ConditionDataTable, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingCrossTalkAsset, EventDataTableArray, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingCrossTalkAsset, 0x0038);
		}

		// struct FReferenceToCrossTalkAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToCrossTalkAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToCrossTalkAssetInstance, ConditionDataTable, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToCrossTalkAssetInstance, EventDataTableArray, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToCrossTalkAssetInstance, 0x0018);
		}

		// struct FATDataAssetDamageTypeInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetDamageTypeInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetDamageTypeInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetDamageTypeInfo, DamageTypeClass, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetDamageTypeInfo, 0x0030);
		}

		// struct FLoadingDamageTypeAsset
		TEST_METHOD(ScriptStruct__AT__LoadingDamageTypeAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingDamageTypeAsset, DamageType, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingDamageTypeAsset, 0x0028);
		}

		// struct FReferenceToDamageTypeAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToDamageTypeAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToDamageTypeAssetInstance, DamageType, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToDamageTypeAssetInstance, 0x0008);
		}

		// struct FATDataAssetEventBattleInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetEventBattleInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetEventBattleInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetEventBattleInfo, EventBattleClass, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetEventBattleInfo, 0x0030);
		}

		// struct FATDataAssetEventBattlePostProcessEffectInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetEventBattlePostProcessEffectInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetEventBattlePostProcessEffectInfo, ATPostProcessEffectCmnHologram_NoiseEffect, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetEventBattlePostProcessEffectInfo, ATPostProcessEffectCmnHologram_Material, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetEventBattlePostProcessEffectInfo, ATPostEffectCmnSkillAquisition_Material, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetEventBattlePostProcessEffectInfo, 0x0078);
		}

		// struct FLoadingEventBattleAsset
		TEST_METHOD(ScriptStruct__AT__LoadingEventBattleAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingEventBattleAsset, EventBattle, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingEventBattleAsset, 0x0028);
		}

		// struct FLoadingEventBattlePostProcessEffectAsset
		TEST_METHOD(ScriptStruct__AT__LoadingEventBattlePostProcessEffectAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingEventBattlePostProcessEffectAsset, ATPostProcessEffectCmnHologram_NoiseEffect, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingEventBattlePostProcessEffectAsset, ATPostProcessEffectCmnHologram_Material, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingEventBattlePostProcessEffectAsset, ATPostEffectCmnSkillAquisition_Material, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingEventBattlePostProcessEffectAsset, 0x0078);
		}

		// struct FReferenceToEventBattleAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToEventBattleAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToEventBattleAssetInstance, EventBattle, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToEventBattleAssetInstance, 0x0008);
		}

		// struct FReferenceToEventBattlePostProcessEffectAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToEventBattlePostProcessEffectAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToEventBattlePostProcessEffectAssetInstance, ATPostProcessEffectCmnHologram_NoiseEffect, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToEventBattlePostProcessEffectAssetInstance, ATPostProcessEffectCmnHologram_Material, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToEventBattlePostProcessEffectAssetInstance, ATPostEffectCmnSkillAquisition_Material, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToEventBattlePostProcessEffectAssetInstance, 0x0018);
		}

		// struct FATDataAssetFacialInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetFacialInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFacialInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFacialInfo, PartsClass, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetFacialInfo, 0x0030);
		}

		// struct FATLoadingFacialAsset
		TEST_METHOD(ScriptStruct__AT__ATLoadingFacialAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLoadingFacialAsset, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLoadingFacialAsset, Parts, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATLoadingFacialAsset, 0x0030);
		}

		// struct FATReferenceToFacialAssetInstance
		TEST_METHOD(ScriptStruct__AT__ATReferenceToFacialAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATReferenceToFacialAssetInstance, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATReferenceToFacialAssetInstance, Parts, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATReferenceToFacialAssetInstance, 0x0010);
		}

		// struct FATWorldMapMovementData
		TEST_METHOD(ScriptStruct__AT__ATWorldMapMovementData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATWorldMapMovementData, MoveTimeLimit, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATWorldMapMovementData, UnknownData_A91S, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATWorldMapMovementData, CloudDataMasterId, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATWorldMapMovementData, FadeTimeLimit, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATWorldMapMovementData, CloudDistance, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATWorldMapMovementData, CloudEmmisiveMin, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATWorldMapMovementData, CloudEmmisiveMax, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATWorldMapMovementData, CloudEmmisiveTimeLimit, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATWorldMapMovementData, UiFadeOutTimeLimit, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATWorldMapMovementData, BoostFlyingRotation, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATWorldMapMovementData, LookAtRelativeRotation, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATWorldMapMovementData, CameraRelativeRotation, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATWorldMapMovementData, LookAtLength, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATWorldMapMovementData, CameraLength, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATWorldMapMovementData, CameraInterpolationDuration, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATWorldMapMovementData, FirstCutDuration, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATWorldMapMovementData, Altitude, 0x005C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATWorldMapMovementData, 0x0060);
		}

		// struct FATDataAssetFishGameMeshInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetFishGameMeshInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameMeshInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameMeshInfo, FishMesh, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameMeshInfo, AnimationBP, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetFishGameMeshInfo, 0x0058);
		}

		// struct FATDataAssetFishGameAnimationInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetFishGameAnimationInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameAnimationInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameAnimationInfo, MissMontage, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameAnimationInfo, PullMontage, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameAnimationInfo, SuccessMontage, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameAnimationInfo, ResultStartMontage, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameAnimationInfo, ResultLoopMontage, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameAnimationInfo, RarePullMontage, 0x00D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetFishGameAnimationInfo, 0x00F8);
		}

		// struct FATDataAssetFishCurveParamInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetFishCurveParamInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishCurveParamInfo, SwimSpeedCurve, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishCurveParamInfo, TurnSpeedCurve, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishCurveParamInfo, DiscoverSpeedCurve, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetFishCurveParamInfo, 0x0078);
		}

		// struct FATDataAssetFishParticleEffInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetFishParticleEffInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishParticleEffInfo, FishinRippleEffect, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishParticleEffInfo, FishinBaitEffect_Normal, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishParticleEffInfo, FishinBaitEffect_Rare, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishParticleEffInfo, FishinBaitEffect_SuperRare, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishParticleEffInfo, FishingHitEffect, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishParticleEffInfo, FishingHitLoopEffect, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishParticleEffInfo, FishingStartPointEffect, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishParticleEffInfo, FishEscapeEffectComponent, 0x0118);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetFishParticleEffInfo, 0x0140);
		}

		// struct FATDataAssetFishGameCharaAnimationInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetFishGameCharaAnimationInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameCharaAnimationInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameCharaAnimationInfo, FishingStart, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameCharaAnimationInfo, FishingStart_Rod, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameCharaAnimationInfo, FishingAction, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameCharaAnimationInfo, FishingAction_Rod, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameCharaAnimationInfo, FishingQTE1, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameCharaAnimationInfo, FishingQTE1_Rod, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameCharaAnimationInfo, FishingQTE2, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameCharaAnimationInfo, FishingQTE2_Rod, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameCharaAnimationInfo, FishingMiss, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameCharaAnimationInfo, FishingMiss_Rod, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameCharaAnimationInfo, FishingLoop, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameCharaAnimationInfo, FishingLoop_Rod, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameCharaAnimationInfo, FishingResultStart, 0x01E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameCharaAnimationInfo, FishingResultLoop, 0x0210);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameCharaAnimationInfo, FishingBait, 0x0238);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameCharaAnimationInfo, FishingFaceSweat, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameCharaAnimationInfo, FishingHit, 0x0288);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameCharaAnimationInfo, FishingHit_Rod, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameCharaAnimationInfo, FishingStart2, 0x02D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetFishGameCharaAnimationInfo, FishingStart2_Rod, 0x0300);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetFishGameCharaAnimationInfo, 0x0328);
		}

		// struct FLoadingFishGameMeshAsset
		TEST_METHOD(ScriptStruct__AT__LoadingFishGameMeshAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingFishGameMeshAsset, UnknownData_1FCE, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingFishGameMeshAsset, 0x0050);
		}

		// struct FLoadingFishGameAnimationAsset
		TEST_METHOD(ScriptStruct__AT__LoadingFishGameAnimationAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingFishGameAnimationAsset, UnknownData_R61V, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingFishGameAnimationAsset, 0x00F0);
		}

		// struct FLoadingFishCurveParamAsset
		TEST_METHOD(ScriptStruct__AT__LoadingFishCurveParamAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingFishCurveParamAsset, UnknownData_RAQS, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingFishCurveParamAsset, 0x0078);
		}

		// struct FLoadingFishParticleEffAsset
		TEST_METHOD(ScriptStruct__AT__LoadingFishParticleEffAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingFishParticleEffAsset, UnknownData_TNEM, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingFishParticleEffAsset, 0x0140);
		}

		// struct FLoadingFishGameCharaAnimationAsset
		TEST_METHOD(ScriptStruct__AT__LoadingFishGameCharaAnimationAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingFishGameCharaAnimationAsset, UnknownData_UV37, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingFishGameCharaAnimationAsset, 0x0320);
		}

		// struct FReferenceToFishGameMeshAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToFishGameMeshAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameMeshAssetInstance, FishMesh, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameMeshAssetInstance, AnimationBP, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToFishGameMeshAssetInstance, 0x0010);
		}

		// struct FReferenceToFishGameAnimationAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToFishGameAnimationAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameAnimationAssetInstance, MissMontage, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameAnimationAssetInstance, PullMontage, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameAnimationAssetInstance, SuccessMontage, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameAnimationAssetInstance, ResultStartMontage, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameAnimationAssetInstance, ResultLoopMontage, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameAnimationAssetInstance, RarePullMontage, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToFishGameAnimationAssetInstance, 0x0030);
		}

		// struct FReferenceToFishCurveParamAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToFishCurveParamAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishCurveParamAssetInstance, SwimSpeedCurve, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishCurveParamAssetInstance, TurnSpeedCurve, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishCurveParamAssetInstance, DiscoverSpeedCurve, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToFishCurveParamAssetInstance, 0x0018);
		}

		// struct FReferenceToFishParticleEffAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToFishParticleEffAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishParticleEffAssetInstance, FishinRippleEffect, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishParticleEffAssetInstance, FishinBaitEffect_Normal, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishParticleEffAssetInstance, FishinBaitEffect_Rare, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishParticleEffAssetInstance, FishinBaitEffect_SuperRare, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishParticleEffAssetInstance, FishingHitEffect, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishParticleEffAssetInstance, FishingHitLoopEffect, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishParticleEffAssetInstance, FishingStartPointEffect, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishParticleEffAssetInstance, FishEscapeEffectComponent, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToFishParticleEffAssetInstance, 0x0040);
		}

		// struct FReferenceToFishGameCharaAnimationAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToFishGameCharaAnimationAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameCharaAnimationAssetInstance, FishingStart, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameCharaAnimationAssetInstance, FishingStart_Rod, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameCharaAnimationAssetInstance, FishingAction, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameCharaAnimationAssetInstance, FishingAction_Rod, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameCharaAnimationAssetInstance, FishingQTE1, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameCharaAnimationAssetInstance, FishingQTE1_Rod, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameCharaAnimationAssetInstance, FishingQTE2, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameCharaAnimationAssetInstance, FishingQTE2_Rod, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameCharaAnimationAssetInstance, FishingMiss, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameCharaAnimationAssetInstance, FishingMiss_Rod, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameCharaAnimationAssetInstance, FishingLoop, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameCharaAnimationAssetInstance, FishingLoop_Rod, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameCharaAnimationAssetInstance, FishingResultStart, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameCharaAnimationAssetInstance, FishingResultLoop, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameCharaAnimationAssetInstance, FishingBait, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameCharaAnimationAssetInstance, FishingFaceSweat, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameCharaAnimationAssetInstance, FishingHit, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameCharaAnimationAssetInstance, FishingHit_Rod, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameCharaAnimationAssetInstance, FishingStart2, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToFishGameCharaAnimationAssetInstance, FishingStart2_Rod, 0x0098);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToFishGameCharaAnimationAssetInstance, 0x00A0);
		}

		// struct FATDataAssetItemInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetItemInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetItemInfo, MasterId, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetItemInfo, 0x0008);
		}

		// struct FLoadingItemAsset
		TEST_METHOD(ScriptStruct__AT__LoadingItemAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingItemAsset, UnknownData_S9K3, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingItemAsset, 0x0001);
		}

		// struct FReferenceToItemAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToItemAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToItemAssetInstance, UnknownData_99KO, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToItemAssetInstance, 0x0001);
		}

		// struct FATDataAssetJostleBeamInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetJostleBeamInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetJostleBeamInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetJostleBeamInfo, ATJostleBeamParam, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetJostleBeamInfo, 0x0030);
		}

		// struct FLoadingJostleBeamAsset
		TEST_METHOD(ScriptStruct__AT__LoadingJostleBeamAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingJostleBeamAsset, ATJostleBeamParam, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingJostleBeamAsset, 0x0028);
		}

		// struct FReferenceToJostleBeamAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToJostleBeamAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToJostleBeamAssetInstance, ATJostleBeamParam, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToJostleBeamAssetInstance, 0x0008);
		}

		// struct FATDataAssetMechaDevInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetMechaDevInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetMechaDevInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetMechaDevInfo, AssetType, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetMechaDevInfo, 0x0030);
		}

		// struct FLoadingMechaDevAsset
		TEST_METHOD(ScriptStruct__AT__LoadingMechaDevAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingMechaDevAsset, Object, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingMechaDevAsset, 0x0028);
		}

		// struct FReferenceToMechaDevAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToMechaDevAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToMechaDevAssetInstance, Object, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToMechaDevAssetInstance, 0x0008);
		}

		// struct FATDataAssetMiniGameInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetMiniGameInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetMiniGameInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetMiniGameInfo, UserWidgetClass, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetMiniGameInfo, 0x0030);
		}

		// struct FLoadingMiniGameAsset
		TEST_METHOD(ScriptStruct__AT__LoadingMiniGameAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingMiniGameAsset, UserWidgetClass, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingMiniGameAsset, 0x0028);
		}

		// struct FReferenceToMiniGameAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToMiniGameAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToMiniGameAssetInstance, UserWidgetClass, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToMiniGameAssetInstance, 0x0008);
		}

		// struct FATDataAssetMiniGameMobAnimationInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetMiniGameMobAnimationInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetMiniGameMobAnimationInfo, MobTypeId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetMiniGameMobAnimationInfo, UnknownData_ASAQ, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetMiniGameMobAnimationInfo, AnimationBP, 0x0001);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetMiniGameMobAnimationInfo, 0x0030);
		}

		// struct FLoadingMiniGameMobAnimBP
		TEST_METHOD(ScriptStruct__AT__LoadingMiniGameMobAnimBP)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingMiniGameMobAnimBP, AnimBP, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingMiniGameMobAnimBP, 0x0028);
		}

		// struct FLoadingMiniGameMobMesh
		TEST_METHOD(ScriptStruct__AT__LoadingMiniGameMobMesh)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingMiniGameMobMesh, Mesh, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingMiniGameMobMesh, 0x0028);
		}

		// struct FReferenceToMiniGameMobAnimBPInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToMiniGameMobAnimBPInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToMiniGameMobAnimBPInstance, AnimBP, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToMiniGameMobAnimBPInstance, 0x0008);
		}

		// struct FReferenceToMiniGameMobMeshInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToMiniGameMobMeshInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToMiniGameMobMeshInstance, Mesh, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToMiniGameMobMeshInstance, 0x0008);
		}

		// struct FATDataAssetNpcMobAnimationInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetNpcMobAnimationInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetNpcMobAnimationInfo, MobTypeId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetNpcMobAnimationInfo, UnknownData_BWMI, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetNpcMobAnimationInfo, AnimationBP, 0x0001);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetNpcMobAnimationInfo, 0x0030);
		}

		// struct FLoadingNpcAnimBP
		TEST_METHOD(ScriptStruct__AT__LoadingNpcAnimBP)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingNpcAnimBP, AnimBP, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingNpcAnimBP, 0x0028);
		}

		// struct FLoadingNpcMesh
		TEST_METHOD(ScriptStruct__AT__LoadingNpcMesh)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingNpcMesh, Mesh, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingNpcMesh, 0x0028);
		}

		// struct FReferenceToNpcAnimBPInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToNpcAnimBPInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToNpcAnimBPInstance, AnimBP, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToNpcAnimBPInstance, 0x0008);
		}

		// struct FReferenceToNpcMeshInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToNpcMeshInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToNpcMeshInstance, Mesh, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToNpcMeshInstance, 0x0008);
		}

		// struct FATDataAssetParticleInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetParticleInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetParticleInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetParticleInfo, ParticleClass, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetParticleInfo, 0x0030);
		}

		// struct FLoadingParticleAsset
		TEST_METHOD(ScriptStruct__AT__LoadingParticleAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingParticleAsset, ParticleSystem, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingParticleAsset, 0x0028);
		}

		// struct FReferenceToParticleAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToParticleAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToParticleAssetInstance, ParticleSystem, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToParticleAssetInstance, 0x0008);
		}

		// struct FLoadingQuestAsset
		TEST_METHOD(ScriptStruct__AT__LoadingQuestAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingQuestAsset, DataTable, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingQuestAsset, 0x0028);
		}

		// struct FReferenceToQuestAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToQuestAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToQuestAssetInstance, DataTable, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToQuestAssetInstance, 0x0008);
		}

		// struct FATDataAssetRaceGameInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetRaceGameInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetRaceGameInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetRaceGameInfo, Result_Montage, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetRaceGameInfo, 0x0030);
		}

		// struct FATDataAssetRaceGameCommonInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetRaceGameCommonInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetRaceGameCommonInfo, RaceGameDataTable, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetRaceGameCommonInfo, 0x0028);
		}

		// struct FATDataAssetRaceGameAssistantInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetRaceGameAssistantInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetRaceGameAssistantInfo, AssistantMobActor, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetRaceGameAssistantInfo, 0x0028);
		}

		// struct FLoadingRaceGameAsset
		TEST_METHOD(ScriptStruct__AT__LoadingRaceGameAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingRaceGameAsset, UnknownData_8ATI, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingRaceGameAsset, 0x0028);
		}

		// struct FLoadingRaceGameCommonAsset
		TEST_METHOD(ScriptStruct__AT__LoadingRaceGameCommonAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingRaceGameCommonAsset, UnknownData_76RH, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingRaceGameCommonAsset, 0x0028);
		}

		// struct FLoadingRaceGameAssistantAsset
		TEST_METHOD(ScriptStruct__AT__LoadingRaceGameAssistantAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingRaceGameAssistantAsset, UnknownData_Z1I5, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingRaceGameAssistantAsset, 0x0028);
		}

		// struct FReferenceToRaceGameAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToRaceGameAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToRaceGameAssetInstance, Result_Montage, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToRaceGameAssetInstance, 0x0008);
		}

		// struct FReferenceToRaceGameCommonAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToRaceGameCommonAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToRaceGameCommonAssetInstance, RaceGameDataTable, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToRaceGameCommonAssetInstance, 0x0008);
		}

		// struct FReferenceToRaceGameAssistantAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToRaceGameAssistantAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToRaceGameAssistantAssetInstance, AssistantMobActor, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToRaceGameAssistantAssetInstance, 0x0008);
		}

		// struct FATDataAssetSoundInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetSoundInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetSoundInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetSoundInfo, SheetClass_ja, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetSoundInfo, SheetClass_en, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetSoundInfo, 0x0058);
		}

		// struct FLoadingSoundAsset
		TEST_METHOD(ScriptStruct__AT__LoadingSoundAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingSoundAsset, SheetClass, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingSoundAsset, 0x0028);
		}

		// struct FReferenceToSoundAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToSoundAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToSoundAssetInstance, Sheet, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToSoundAssetInstance, 0x0008);
		}

		// struct FATDataAssetStarScaleFinishInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetStarScaleFinishInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetStarScaleFinishInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetStarScaleFinishInfo, Sequencer, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetStarScaleFinishInfo, 0x0030);
		}

		// struct FLoadingStarScaleFinishAsset
		TEST_METHOD(ScriptStruct__AT__LoadingStarScaleFinishAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingStarScaleFinishAsset, Sequencer, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingStarScaleFinishAsset, 0x0028);
		}

		// struct FReferenceToStarScaleFinishAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToStarScaleFinishAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToStarScaleFinishAssetInstance, Sequencer, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToStarScaleFinishAssetInstance, 0x0008);
		}

		// struct FATDataAssetSupportCharacterTalkInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetSupportCharacterTalkInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetSupportCharacterTalkInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetSupportCharacterTalkInfo, TalkDataTable, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetSupportCharacterTalkInfo, 0x0030);
		}

		// struct FLoadingSupportCharacterTalkAsset
		TEST_METHOD(ScriptStruct__AT__LoadingSupportCharacterTalkAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingSupportCharacterTalkAsset, TalkDataTable, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingSupportCharacterTalkAsset, 0x0028);
		}

		// struct FReferenceToSupportCharacterTalkAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToSupportCharacterTalkAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToSupportCharacterTalkAssetInstance, TalkDataTable, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToSupportCharacterTalkAssetInstance, 0x0008);
		}

		// struct FATDataAssetTPSSkillViewCancelInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetTPSSkillViewCancelInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetTPSSkillViewCancelInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetTPSSkillViewCancelInfo, TPSSkillViewCancelDataTable, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetTPSSkillViewCancelInfo, 0x0030);
		}

		// struct FLoadingTPSSkillViewCancelAsset
		TEST_METHOD(ScriptStruct__AT__LoadingTPSSkillViewCancelAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingTPSSkillViewCancelAsset, TPSSkillViewCancelDataTable, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingTPSSkillViewCancelAsset, 0x0028);
		}

		// struct FReferenceToTPSSkillViewCancelAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToTPSSkillViewCancelAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToTPSSkillViewCancelAssetInstance, TPSSkillViewCancelDataTable, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToTPSSkillViewCancelAssetInstance, 0x0008);
		}

		// struct FATDataAssetUiInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetUiInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetUiInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetUiInfo, UserWidgetClass, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetUiInfo, 0x0030);
		}

		// struct FATDataTableUiInfo
		TEST_METHOD(ScriptStruct__AT__ATDataTableUiInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataTableUiInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataTableUiInfo, DataTableAsset, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataTableUiInfo, IsAlwaysLoad, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataTableUiInfo, UnknownData_EY92, 0x0031);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataTableUiInfo, 0x0038);
		}

		// struct FLoadingAsset
		TEST_METHOD(ScriptStruct__AT__LoadingAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingAsset, UserWidgetClass, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingAsset, DataTableAsset, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingAsset, 0x0050);
		}

		// struct FReferenceToAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToAssetInstance, UserWidgetClass, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToAssetInstance, DataTablePtr, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToAssetInstance, 0x0010);
		}

		// struct FATDataAssetUiCaptureInfo
		TEST_METHOD(ScriptStruct__AT__ATDataAssetUiCaptureInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetUiCaptureInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetUiCaptureInfo, StaticMesh, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetUiCaptureInfo, SkelMesh, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetUiCaptureInfo, AnimBP, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetUiCaptureInfo, Animations, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetUiCaptureInfo, Particle, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetUiCaptureInfo, ActorClass, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetUiCaptureInfo, Montage, 0x00E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetUiCaptureInfo, 0x0108);
		}

		// struct FLoadingUiCaptureAsset
		TEST_METHOD(ScriptStruct__AT__LoadingUiCaptureAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingUiCaptureAsset, StaticMesh, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingUiCaptureAsset, SkelMesh, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingUiCaptureAsset, AnimBP, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingUiCaptureAsset, Animations, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingUiCaptureAsset, Particle, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingUiCaptureAsset, ActorClass, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingUiCaptureAsset, Montage, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingUiCaptureAsset, 0x0100);
		}

		// struct FReferenceToUiCaptureAssetInstance
		TEST_METHOD(ScriptStruct__AT__ReferenceToUiCaptureAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToUiCaptureAssetInstance, StaticMesh, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToUiCaptureAssetInstance, SkelMesh, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToUiCaptureAssetInstance, AnimBP, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToUiCaptureAssetInstance, Animations, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToUiCaptureAssetInstance, Particle, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToUiCaptureAssetInstance, ActorClass, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToUiCaptureAssetInstance, Montage, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToUiCaptureAssetInstance, 0x0040);
		}

		// struct FDiffLevelInfoParameter
		TEST_METHOD(ScriptStruct__AT__DiffLevelInfoParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDiffLevelInfoParameter, DiffLevel, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDiffLevelInfoParameter, CriticalAddValue, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDiffLevelInfoParameter, 0x0008);
		}

		// struct FDirectionParameter
		TEST_METHOD(ScriptStruct__AT__DirectionParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDirectionParameter, UnknownData_BGAZ, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDirectionParameter, 0x0040);
		}

		// struct FDirectionRequest
		TEST_METHOD(ScriptStruct__AT__DirectionRequest)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDirectionRequest, UnknownData_SG04, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDirectionRequest, 0x0018);
		}

		// struct FShadowData
		TEST_METHOD(ScriptStruct__AT__ShadowData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FShadowData, UnknownData_QVBL, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FShadowData, 0x0018);
		}

		// struct FFetchingTalkParameter
		TEST_METHOD(ScriptStruct__AT__FetchingTalkParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFetchingTalkParameter, ExistTalkId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFetchingTalkParameter, NotExistTalkId, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFetchingTalkParameter, HaveMoneyTalkId, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFetchingTalkParameter, NotHaveMoneyTalkId, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFetchingTalkParameter, FinishedTalkId, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFetchingTalkParameter, 0x0028);
		}

		// struct FATParticleDataBase
		TEST_METHOD(ScriptStruct__AT__ATParticleDataBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATParticleDataBase, Particle, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATParticleDataBase, LifeSpan, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATParticleDataBase, UnknownData_G0ZR, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATParticleDataBase, Sound, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATParticleDataBase, 0x0018);
		}

		// struct FATGameModeActorComponentSettings
		TEST_METHOD(ScriptStruct__AT__ATGameModeActorComponentSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATGameModeActorComponentSettings, Class, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATGameModeActorComponentSettings, Component, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATGameModeActorComponentSettings, UnknownData_S14W, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATGameModeActorComponentSettings, 0x0018);
		}

		// struct FJostleBeamDiffLevelInfoParameter
		TEST_METHOD(ScriptStruct__AT__JostleBeamDiffLevelInfoParameter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FJostleBeamDiffLevelInfoParameter, DiffLevel, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FJostleBeamDiffLevelInfoParameter, LevelRate, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FJostleBeamDiffLevelInfoParameter, 0x0008);
		}

		// struct FATLevelEventParam
		TEST_METHOD(ScriptStruct__AT__ATLevelEventParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLevelEventParam, SendMessage, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLevelEventParam, SendValue, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATLevelEventParam, 0x0020);
		}

		// struct FATLevelProgressPair : public FTableRowBase
		TEST_METHOD(ScriptStruct__AT__ATLevelProgressPair)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLevelProgressPair, Level, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLevelProgressPair, ProgressBegin, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLevelProgressPair, ProgressBeginCondition, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLevelProgressPair, ProgressEnd, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLevelProgressPair, ProgressEndCondition, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLevelProgressPair, VisibleBegin, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLevelProgressPair, TimingType, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLevelProgressPair, UnknownData_SQG5, 0x0059);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLevelProgressPair, TimingValue, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLevelProgressPair, DeactivateValue, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLevelProgressPair, UnknownData_AK6A, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATLevelProgressPair, 0x0088);
		}

		// struct FATPersistentLevelInfo : public FTableRowBase
		TEST_METHOD(ScriptStruct__AT__ATPersistentLevelInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATPersistentLevelInfo, LevelName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATPersistentLevelInfo, LevelPath, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATPersistentLevelInfo, Direction, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATPersistentLevelInfo, 0x0028);
		}

		// struct FATLongBlowoffObject
		TEST_METHOD(ScriptStruct__AT__ATLongBlowoffObject)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLongBlowoffObject, ObjectClass, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLongBlowoffObject, ObjectScale, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATLongBlowoffObject, ObjectType, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATLongBlowoffObject, 0x0010);
		}

		// struct FPlaceObjectPatternTableRow : public FTableRowBase
		TEST_METHOD(ScriptStruct__AT__PlaceObjectPatternTableRow)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlaceObjectPatternTableRow, PlaceObjectType, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlaceObjectPatternTableRow, UnknownData_GAK1, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlaceObjectPatternTableRow, ItemDropTabl, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlaceObjectPatternTableRow, ItemTableId, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlaceObjectPatternTableRow, Arrangement, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlaceObjectPatternTableRow, UnknownData_TX9R, 0x0021);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlaceObjectPatternTableRow, Offset, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlaceObjectPatternTableRow, PlaceNum, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlaceObjectPatternTableRow, Radius, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlaceObjectPatternTableRow, PlaceInterval, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlaceObjectPatternTableRow, PlaceNumPerCircle, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPlaceObjectPatternTableRow, 0x0040);
		}

		// struct FATParticleSystemData
		TEST_METHOD(ScriptStruct__AT__ATParticleSystemData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATParticleSystemData, PSC, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATParticleSystemData, UnknownData_TJNQ, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATParticleSystemData, 0x0018);
		}

		// struct FPhaseTalkParam
		TEST_METHOD(ScriptStruct__AT__PhaseTalkParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPhaseTalkParam, StartNo, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPhaseTalkParam, EndNo, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPhaseTalkParam, TalkEventID, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPhaseTalkParam, 0x0018);
		}

		// struct FPhaseCollisionParam
		TEST_METHOD(ScriptStruct__AT__PhaseCollisionParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPhaseCollisionParam, StartNo, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPhaseCollisionParam, EndNo, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPhaseCollisionParam, 0x0008);
		}

		// struct FATWindRoadEnterParam
		TEST_METHOD(ScriptStruct__AT__ATWindRoadEnterParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATWindRoadEnterParam, UnknownData_J3D5, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATWindRoadEnterParam, 0x0001);
		}

		// struct FATWindRoadCameraParam
		TEST_METHOD(ScriptStruct__AT__ATWindRoadCameraParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATWindRoadCameraParam, UnknownData_6CWT, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATWindRoadCameraParam, 0x0001);
		}

		// struct FDirectionRequests
		TEST_METHOD(ScriptStruct__AT__DirectionRequests)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDirectionRequests, Element, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDirectionRequests, 0x0010);
		}

		// struct FATParticleData : public FATParticleDataBase
		TEST_METHOD(ScriptStruct__AT__ATParticleData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATParticleData, SocketName, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATParticleData, bSpawnLocationRoot, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATParticleData, SpawnLocationType, 0x0021);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATParticleData, UnknownData_UNCI, 0x0022);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATParticleData, LocationOffset, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATParticleData, RotationOffset, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATParticleData, RandomAngle, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATParticleData, 0x0040);
		}

		// struct FOverrideAnimation
		TEST_METHOD(ScriptStruct__AT__OverrideAnimation)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FOverrideAnimation, Timing, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOverrideAnimation, UnknownData_491L, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOverrideAnimation, Sequence, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOverrideAnimation, IsLoop, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOverrideAnimation, UnknownData_A6MS, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOverrideAnimation, AttachedMesh, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOverrideAnimation, TargetPoint, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOverrideAnimation, UnknownData_HXKH, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FOverrideAnimation, 0x0070);
		}

		// struct FNPCPoseSet
		TEST_METHOD(ScriptStruct__AT__NPCPoseSet)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNPCPoseSet, m_Animation, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNPCPoseSet, m_AttachObjects, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNPCPoseSet, 0x0018);
		}

		// struct FImageWriteOptions
		TEST_METHOD(ScriptStruct__ImageWriteQueue__ImageWriteOptions)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FImageWriteOptions, Format, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FImageWriteOptions, UnknownData_GOEM, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FImageWriteOptions, OnComplete, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FImageWriteOptions, CompressionQuality, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FImageWriteOptions, bOverwriteFile, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FImageWriteOptions, bAsync, 0x001D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FImageWriteOptions, UnknownData_RRW9, 0x001E);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FImageWriteOptions, 0x0060);
		}

		// struct FMaterialQualityOverrides
		TEST_METHOD(ScriptStruct__MaterialShaderQualitySettings__MaterialQualityOverrides)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialQualityOverrides, bDiscardQualityDuringCook, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialQualityOverrides, bEnableOverride, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialQualityOverrides, bForceFullyRough, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialQualityOverrides, bForceNonMetal, 0x0003);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialQualityOverrides, bForceDisableLMDirectionality, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialQualityOverrides, bForceLQReflections, 0x0005);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialQualityOverrides, bDisableMaterialNormalCalculation, 0x0006);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMaterialQualityOverrides, MobileCSMQuality, 0x0007);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMaterialQualityOverrides, 0x0008);
		}

		// struct FCompositionGraphCapturePasses
		TEST_METHOD(ScriptStruct__MovieSceneCapture__CompositionGraphCapturePasses)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompositionGraphCapturePasses, Value, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCompositionGraphCapturePasses, 0x0010);
		}

		// struct FCaptureResolution
		TEST_METHOD(ScriptStruct__MovieSceneCapture__CaptureResolution)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCaptureResolution, ResX, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCaptureResolution, ResY, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCaptureResolution, 0x0008);
		}

		// struct FMovieSceneCaptureSettings
		TEST_METHOD(ScriptStruct__MovieSceneCapture__MovieSceneCaptureSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCaptureSettings, OutputDirectory, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCaptureSettings, GameModeOverride, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCaptureSettings, OutputFormat, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCaptureSettings, bOverwriteExisting, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCaptureSettings, bUseRelativeFrameNumbers, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCaptureSettings, UnknownData_RUKI, 0x002A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCaptureSettings, HandleFrames, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCaptureSettings, ZeroPadFrameNumbers, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCaptureSettings, UnknownData_FBMW, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCaptureSettings, FrameRate, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCaptureSettings, Resolution, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCaptureSettings, bEnableTextureStreaming, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCaptureSettings, bCinematicEngineScalability, 0x0045);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCaptureSettings, bCinematicMode, 0x0046);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCaptureSettings, bAllowMovement, 0x0047);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCaptureSettings, bAllowTurning, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCaptureSettings, bShowPlayer, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCaptureSettings, bShowHUD, 0x004A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCaptureSettings, UnknownData_KXO8, 0x004B);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneCaptureSettings, 0x0050);
		}

		// struct FFrameMetrics
		TEST_METHOD(ScriptStruct__MovieSceneCapture__FrameMetrics)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFrameMetrics, TotalElapsedTime, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFrameMetrics, FrameDelta, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFrameMetrics, FrameNumber, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFrameMetrics, NumDroppedFrames, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFrameMetrics, 0x0010);
		}

		// struct FCapturedPixels
		TEST_METHOD(ScriptStruct__MovieSceneCapture__CapturedPixels)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCapturedPixels, UnknownData_ZXK3, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCapturedPixels, 0x0010);
		}

		// struct FCFLevelLoadingPack
		TEST_METHOD(ScriptStruct__CFramework__CFLevelLoadingPack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFLevelLoadingPack, UnknownData_HP4M, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFLevelLoadingPack, 0x0010);
		}

		// struct FDebugMenuNumericParam
		TEST_METHOD(ScriptStruct__CFramework__DebugMenuNumericParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDebugMenuNumericParam, UnknownData_XRZ2, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDebugMenuNumericParam, 0x0010);
		}

		// struct FCFKeyConfigAssign
		TEST_METHOD(ScriptStruct__CFramework__CFKeyConfigAssign)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFKeyConfigAssign, ConfigName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFKeyConfigAssign, IconName, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFKeyConfigAssign, DynamicAssignInputId, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFKeyConfigAssign, UnknownData_XORF, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFKeyConfigAssign, 0x0038);
		}

		// struct FCFIconArt
		TEST_METHOD(ScriptStruct__CFramework__CFIconArt)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFIconArt, Key, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFIconArt, PLAT_P_Icon, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFIconArt, PLAT_X_Icon, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFIconArt, PLAT_W_Icon, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFIconArt, UnknownData_TYBW, 0x01A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFIconArt, 0x01B0);
		}

		// struct FCFGameSpeedApplyActorInfo
		TEST_METHOD(ScriptStruct__CFramework__CFGameSpeedApplyActorInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFGameSpeedApplyActorInfo, Actor, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFGameSpeedApplyActorInfo, Pawn, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFGameSpeedApplyActorInfo, ParticleComp, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFGameSpeedApplyActorInfo, TickObject, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFGameSpeedApplyActorInfo, UnknownData_935P, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFGameSpeedApplyActorInfo, 0x0024);
		}

		// struct FCFGameSpeedExec
		TEST_METHOD(ScriptStruct__CFramework__CFGameSpeedExec)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFGameSpeedExec, UnknownData_3GWB, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFGameSpeedExec, 0x0010);
		}

		// struct FCFNounParamTableRow : public FTableRowBase
		TEST_METHOD(ScriptStruct__CFramework__CFNounParamTableRow)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFNounParamTableRow, SingleNoun, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFNounParamTableRow, PluralNoun, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFNounParamTableRow, ZeroNoun, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFNounParamTableRow, Unique, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFNounParamTableRow, Gender, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFNounParamTableRow, Vowel, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFNounParamTableRow, UnknownData_L1VX, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFNounParamTableRow, SingleIndef, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFNounParamTableRow, PluralIndef, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFNounParamTableRow, SingleDef, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFNounParamTableRow, PluralDef, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFNounParamTableRow, 0x0088);
		}

		// struct FCFMessageTableRow : public FTableRowBase
		TEST_METHOD(ScriptStruct__CFramework__CFMessageTableRow)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFMessageTableRow, VoiceGroupID, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFMessageTableRow, VoiceID, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFMessageTableRow, speakerID, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFMessageTableRow, Message, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFMessageTableRow, 0x0048);
		}

		// struct FCFParticleDataBase
		TEST_METHOD(ScriptStruct__CFramework__CFParticleDataBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFParticleDataBase, Particle, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFParticleDataBase, LifeSpan, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFParticleDataBase, UnknownData_BYCF, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFParticleDataBase, Sound, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFParticleDataBase, 0x0018);
		}

		// struct FCFParticleSystemData
		TEST_METHOD(ScriptStruct__CFramework__CFParticleSystemData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFParticleSystemData, PSC, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFParticleSystemData, UnknownData_0HQY, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFParticleSystemData, 0x0018);
		}

		// struct FCFParticleData : public FCFParticleDataBase
		TEST_METHOD(ScriptStruct__CFramework__CFParticleData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFParticleData, SocketName, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFParticleData, bSpawnLocationRoot, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFParticleData, SpawnLocationType, 0x0021);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFParticleData, UnknownData_8NPV, 0x0022);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFParticleData, LocationOffset, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFParticleData, RotationOffset, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFParticleData, RandomAngle, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFParticleData, 0x0040);
		}

		// struct FCFPauseApplyActorInfo
		TEST_METHOD(ScriptStruct__CFramework__CFPauseApplyActorInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFPauseApplyActorInfo, Actor, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFPauseApplyActorInfo, Pawn, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFPauseApplyActorInfo, Comp, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFPauseApplyActorInfo, TickObject, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFPauseApplyActorInfo, PlayerController, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFPauseApplyActorInfo, UnknownData_KK6Q, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFPauseApplyActorInfo, 0x002C);
		}

		// struct FCFPauseExec
		TEST_METHOD(ScriptStruct__CFramework__CFPauseExec)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFPauseExec, UnknownData_WQUG, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFPauseExec, 0x0008);
		}

		// struct FCFMoveSolverData
		TEST_METHOD(ScriptStruct__CFramework__CFMoveSolverData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFMoveSolverData, SceneComp, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFMoveSolverData, cmc, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFMoveSolverData, UnknownData_6IT6, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFMoveSolverData, 0x0018);
		}

		// struct FTestAcbHnWork
		TEST_METHOD(ScriptStruct__CFramework__TestAcbHnWork)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTestAcbHnWork, cueNum, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTestAcbHnWork, padFlag, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTestAcbHnWork, UnknownData_PR8P, 0x0005);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTestAcbHnWork, 0x0008);
		}

		// struct FCFKeyResourceMapping
		TEST_METHOD(ScriptStruct__CFramework__CFKeyResourceMapping)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFKeyResourceMapping, Resource, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFKeyResourceMapping, 0x0008);
		}

		// struct FCFUIWidgetPathAnimationController
		TEST_METHOD(ScriptStruct__CFramework__CFUIWidgetPathAnimationController)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFUIWidgetPathAnimationController, UnknownData_RC1Y, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFUIWidgetPathAnimationController, 0x0040);
		}

		// struct FCFUIWidgetPathAnimationParam
		TEST_METHOD(ScriptStruct__CFramework__CFUIWidgetPathAnimationParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFUIWidgetPathAnimationParam, pathAsset, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFUIWidgetPathAnimationParam, TransOffset, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFUIWidgetPathAnimationParam, useRotation, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFUIWidgetPathAnimationParam, UnknownData_WW4I, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFUIWidgetPathAnimationParam, angleOffset, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFUIWidgetPathAnimationParam, pathRangeStart, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFUIWidgetPathAnimationParam, pathRangeEnd, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFUIWidgetPathAnimationParam, loopCount, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFUIWidgetPathAnimationParam, playSpeed, 0x0024);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFUIWidgetPathAnimationParam, 0x0028);
		}

		// struct FCFUITagReplaceInfo
		TEST_METHOD(ScriptStruct__CFramework__CFUITagReplaceInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFUITagReplaceInfo, TargetWord, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFUITagReplaceInfo, ReplaceWord, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFUITagReplaceInfo, 0x0020);
		}

		// struct FCFUIRubyInfo
		TEST_METHOD(ScriptStruct__CFramework__CFUIRubyInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFUIRubyInfo, UnknownData_523C, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFUIRubyInfo, WL_RubyText, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFUIRubyInfo, 0x0040);
		}

		// struct FCFCtrlSubLevelInfoBySceneDataRow : public FTableRowBase
		TEST_METHOD(ScriptStruct__CFramework__CFCtrlSubLevelInfoBySceneDataRow)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFCtrlSubLevelInfoBySceneDataRow, SceneKeyFrom, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFCtrlSubLevelInfoBySceneDataRow, SceneKeyTo, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFCtrlSubLevelInfoBySceneDataRow, SceneKeyUnload, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFCtrlSubLevelInfoBySceneDataRow, 0x0020);
		}

		// struct FCFExtendRichTextSpanClassTableRow : public FTableRowBase
		TEST_METHOD(ScriptStruct__CFramework__CFExtendRichTextSpanClassTableRow)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFExtendRichTextSpanClassTableRow, DialougeTextStyle, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFExtendRichTextSpanClassTableRow, 0x0030);
		}

		// struct FCFRegionDependenceLangTableRow : public FTableRowBase
		TEST_METHOD(ScriptStruct__CFramework__CFRegionDependenceLangTableRow)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFRegionDependenceLangTableRow, LangCode, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFRegionDependenceLangTableRow, DefaultLang, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFRegionDependenceLangTableRow, 0x0028);
		}

		// struct FCFGameSpeedKindParam
		TEST_METHOD(ScriptStruct__CFramework__CFGameSpeedKindParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFGameSpeedKindParam, UnknownData_W1UB, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFGameSpeedKindParam, 0x000C);
		}

		// struct FCFReplaceItemTextInfo
		TEST_METHOD(ScriptStruct__CFramework__CFReplaceItemTextInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFReplaceItemTextInfo, ReplaceType, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFReplaceItemTextInfo, UnknownData_77MG, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFReplaceItemTextInfo, ReplaceMessageID, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFReplaceItemTextInfo, UnknownData_SZZ3, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFReplaceItemTextInfo, ReplaceNounID, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFReplaceItemTextInfo, ReplaceText, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFReplaceItemTextInfo, IntegerNo, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFReplaceItemTextInfo, FloatNo, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFReplaceItemTextInfo, OutputOption, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFReplaceItemTextInfo, 0x0060);
		}

		// struct FCFPausePresetHeader
		TEST_METHOD(ScriptStruct__CFramework__CFPausePresetHeader)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFPausePresetHeader, UnknownData_GRZ4, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFPausePresetHeader, 0x0004);
		}

		// struct FCFPauseKindParam
		TEST_METHOD(ScriptStruct__CFramework__CFPauseKindParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFPauseKindParam, UnknownData_BV1M, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFPauseKindParam, 0x0008);
		}

		// struct FCFRegistFontTextData : public FTableRowBase
		TEST_METHOD(ScriptStruct__CFramework__CFRegistFontTextData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFRegistFontTextData, Text, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFRegistFontTextData, 0x0020);
		}

		// struct FCFRangedFloat
		TEST_METHOD(ScriptStruct__CFramework__CFRangedFloat)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFRangedFloat, Min, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFRangedFloat, Max, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFRangedFloat, 0x0008);
		}

		// struct FCFDataTableFloat : public FTableRowBase
		TEST_METHOD(ScriptStruct__CFramework__CFDataTableFloat)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFDataTableFloat, Value, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFDataTableFloat, UnknownData_2SYK, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFDataTableFloat, 0x0010);
		}

		// struct FCFInputAssignMappingParam : public FTableRowBase
		TEST_METHOD(ScriptStruct__CFramework__CFInputAssignMappingParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFInputAssignMappingParam, QWERTZ, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFInputAssignMappingParam, AZERTY, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFInputAssignMappingParam, 0x0038);
		}

		// struct FCFKeyboardMappingParam : public FTableRowBase
		TEST_METHOD(ScriptStruct__CFramework__CFKeyboardMappingParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFKeyboardMappingParam, DefaultKey, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFKeyboardMappingParam, MappingKey, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFKeyboardMappingParam, 0x0028);
		}

		// struct FCFUIUserWidgetAnimationCacheControlData
		TEST_METHOD(ScriptStruct__CFramework__CFUIUserWidgetAnimationCacheControlData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFUIUserWidgetAnimationCacheControlData, UnknownData_IDR4, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFUIUserWidgetAnimationCacheControlData, 0x0020);
		}

		// struct FCFPunctuationTableRow : public FTableRowBase
		TEST_METHOD(ScriptStruct__CFramework__CFPunctuationTableRow)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFPunctuationTableRow, LangCode, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFPunctuationTableRow, NumberOfDigits, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFPunctuationTableRow, DecimalPointTxt, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFPunctuationTableRow, isEnableSpaceBetweenUnit, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCFPunctuationTableRow, UnknownData_AQ3A, 0x0039);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCFPunctuationTableRow, 0x0040);
		}

		// struct FGeometryCacheMeshData
		TEST_METHOD(ScriptStruct__GeometryCache__GeometryCacheMeshData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGeometryCacheMeshData, UnknownData_RUMM, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGeometryCacheMeshData, 0x00A8);
		}

		// struct FTrackRenderData
		TEST_METHOD(ScriptStruct__GeometryCache__TrackRenderData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTrackRenderData, UnknownData_P8W8, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTrackRenderData, 0x0070);
		}

		// struct FGeometryCacheVertexInfo
		TEST_METHOD(ScriptStruct__GeometryCache__GeometryCacheVertexInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGeometryCacheVertexInfo, UnknownData_4G85, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGeometryCacheVertexInfo, 0x0008);
		}

		// struct FGeometryCacheMeshBatchInfo
		TEST_METHOD(ScriptStruct__GeometryCache__GeometryCacheMeshBatchInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGeometryCacheMeshBatchInfo, UnknownData_1AD8, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGeometryCacheMeshBatchInfo, 0x000C);
		}

		// struct FAssetData
		TEST_METHOD(ScriptStruct__AssetRegistry__AssetData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAssetData, ObjectPath, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAssetData, PackageName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAssetData, PackagePath, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAssetData, AssetName, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAssetData, AssetClass, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAssetData, UnknownData_IHIS, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAssetData, 0x0050);
		}

		// struct FARFilter
		TEST_METHOD(ScriptStruct__AssetRegistry__ARFilter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FARFilter, PackageNames, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FARFilter, PackagePaths, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FARFilter, ObjectPaths, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FARFilter, ClassNames, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FARFilter, UnknownData_Y1RA, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FARFilter, RecursiveClassesExclusionSet, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FARFilter, bRecursivePaths, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FARFilter, bRecursiveClasses, 0x00E1);
			CHEAT_GEAR_CHECK_OFFSET(CG::FARFilter, bIncludeOnlyOnDiskAssets, 0x00E2);
			CHEAT_GEAR_CHECK_OFFSET(CG::FARFilter, UnknownData_EEE4, 0x00E3);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FARFilter, 0x00E8);
		}

		// struct FTagAndValue
		TEST_METHOD(ScriptStruct__AssetRegistry__TagAndValue)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTagAndValue, Tag, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTagAndValue, Value, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTagAndValue, 0x0018);
		}

		// struct FAssetBundleEntry
		TEST_METHOD(ScriptStruct__AssetRegistry__AssetBundleEntry)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAssetBundleEntry, BundleScope, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAssetBundleEntry, BundleName, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAssetBundleEntry, BundleAssets, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAssetBundleEntry, 0x0028);
		}

		// struct FAssetBundleData
		TEST_METHOD(ScriptStruct__AssetRegistry__AssetBundleData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAssetBundleData, Bundles, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAssetBundleData, 0x0010);
		}

		// struct FMRMeshConfiguration
		TEST_METHOD(ScriptStruct__MRMesh__MRMeshConfiguration)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMRMeshConfiguration, UnknownData_V66C, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMRMeshConfiguration, 0x0001);
		}

		// struct FGameplayResourceSet
		TEST_METHOD(ScriptStruct__GameplayTasks__GameplayResourceSet)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameplayResourceSet, UnknownData_0IO0, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameplayResourceSet, 0x0002);
		}

		// struct FSHAHashData
		TEST_METHOD(ScriptStruct__BuildPatchServices__SHAHashData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSHAHashData, Hash, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSHAHashData, 0x0014);
		}

		// struct FCustomFieldData
		TEST_METHOD(ScriptStruct__BuildPatchServices__CustomFieldData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCustomFieldData, Key, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCustomFieldData, Value, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCustomFieldData, 0x0020);
		}

		// struct FChunkInfoData
		TEST_METHOD(ScriptStruct__BuildPatchServices__ChunkInfoData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FChunkInfoData, Guid, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FChunkInfoData, Hash, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FChunkInfoData, ShaHash, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FChunkInfoData, UnknownData_DGRV, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FChunkInfoData, FileSize, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FChunkInfoData, GroupNumber, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FChunkInfoData, UnknownData_OTIS, 0x0039);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FChunkInfoData, 0x0040);
		}

		// struct FChunkPartData
		TEST_METHOD(ScriptStruct__BuildPatchServices__ChunkPartData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FChunkPartData, Guid, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FChunkPartData, Offset, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FChunkPartData, Size, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FChunkPartData, 0x0018);
		}

		// struct FFileManifestData
		TEST_METHOD(ScriptStruct__BuildPatchServices__FileManifestData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFileManifestData, Filename, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFileManifestData, FileHash, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFileManifestData, UnknownData_4ZK6, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFileManifestData, FileChunkParts, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFileManifestData, InstallTags, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFileManifestData, bIsUnixExecutable, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFileManifestData, UnknownData_Q4QI, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFileManifestData, SymlinkTarget, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFileManifestData, bIsReadOnly, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFileManifestData, bIsCompressed, 0x0061);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFileManifestData, UnknownData_7809, 0x0062);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFileManifestData, 0x0068);
		}

		// struct FDestructibleChunkParameters
		TEST_METHOD(ScriptStruct__ApexDestruction__DestructibleChunkParameters)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleChunkParameters, bIsSupportChunk, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleChunkParameters, bDoNotFracture, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleChunkParameters, bDoNotDamage, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleChunkParameters, bDoNotCrumble, 0x0003);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDestructibleChunkParameters, 0x0004);
		}

		// struct FFractureMaterial
		TEST_METHOD(ScriptStruct__ApexDestruction__FractureMaterial)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFractureMaterial, UVScale, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFractureMaterial, UVOffset, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFractureMaterial, Tangent, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFractureMaterial, UAngle, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFractureMaterial, InteriorElementIndex, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFractureMaterial, 0x0024);
		}

		// struct FDestructibleDamageParameters
		TEST_METHOD(ScriptStruct__ApexDestruction__DestructibleDamageParameters)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleDamageParameters, DamageThreshold, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleDamageParameters, DamageSpread, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleDamageParameters, bEnableImpactDamage, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleDamageParameters, UnknownData_2SMT, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleDamageParameters, ImpactDamage, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleDamageParameters, DefaultImpactDamageDepth, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleDamageParameters, bCustomImpactResistance, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleDamageParameters, UnknownData_P97Q, 0x0015);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleDamageParameters, ImpactResistance, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDestructibleDamageParameters, 0x001C);
		}

		// struct FDestructibleAdvancedParameters
		TEST_METHOD(ScriptStruct__ApexDestruction__DestructibleAdvancedParameters)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleAdvancedParameters, DamageCap, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleAdvancedParameters, ImpactVelocityThreshold, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleAdvancedParameters, MaxChunkSpeed, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleAdvancedParameters, FractureImpulseScale, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDestructibleAdvancedParameters, 0x0010);
		}

		// struct FDestructibleSpecialHierarchyDepths
		TEST_METHOD(ScriptStruct__ApexDestruction__DestructibleSpecialHierarchyDepths)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleSpecialHierarchyDepths, SupportDepth, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleSpecialHierarchyDepths, MinimumFractureDepth, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleSpecialHierarchyDepths, bEnableDebris, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleSpecialHierarchyDepths, UnknownData_4TPH, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleSpecialHierarchyDepths, DebrisDepth, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleSpecialHierarchyDepths, EssentialDepth, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDestructibleSpecialHierarchyDepths, 0x0014);
		}

		// struct FDestructibleDepthParameters
		TEST_METHOD(ScriptStruct__ApexDestruction__DestructibleDepthParameters)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleDepthParameters, ImpactDamageOverride, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDestructibleDepthParameters, 0x0001);
		}

		// struct FDestructibleParametersFlag
		TEST_METHOD(ScriptStruct__ApexDestruction__DestructibleParametersFlag)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleParametersFlag, UnknownData_VOS3, 0x0002);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDestructibleParametersFlag, 0x0004);
		}

		// struct FDestructibleDebrisParameters
		TEST_METHOD(ScriptStruct__ApexDestruction__DestructibleDebrisParameters)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleDebrisParameters, DebrisLifetimeMin, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleDebrisParameters, DebrisLifetimeMax, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleDebrisParameters, DebrisMaxSeparationMin, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleDebrisParameters, DebrisMaxSeparationMax, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleDebrisParameters, ValidBounds, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDestructibleDebrisParameters, 0x002C);
		}

		// struct FDestructibleParameters
		TEST_METHOD(ScriptStruct__ApexDestruction__DestructibleParameters)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleParameters, DamageParameters, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleParameters, DebrisParameters, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleParameters, AdvancedParameters, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleParameters, SpecialHierarchyDepths, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleParameters, UnknownData_KZ85, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleParameters, DepthParameters, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleParameters, Flags, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDestructibleParameters, UnknownData_K5BR, 0x0084);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDestructibleParameters, 0x0088);
		}

		// struct FMovieSceneMediaSectionParams
		TEST_METHOD(ScriptStruct__MediaCompositing__MovieSceneMediaSectionParams)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneMediaSectionParams, MediaSoundComponent, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneMediaSectionParams, MediaSource, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneMediaSectionParams, MediaTexture, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneMediaSectionParams, MediaPlayer, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneMediaSectionParams, SectionStartFrame, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneMediaSectionParams, SectionEndFrame, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneMediaSectionParams, bLooping, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneMediaSectionParams, UnknownData_4A1D, 0x0029);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneMediaSectionParams, 0x0030);
		}

		// struct FMovieSceneMediaSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MediaCompositing__MovieSceneMediaSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneMediaSectionTemplate, Params, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneMediaSectionTemplate, 0x0050);
		}

		// struct FAtomAisacInfo
		TEST_METHOD(ScriptStruct__CriWareRuntime__AtomAisacInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomAisacInfo, Name, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomAisacInfo, DefaultControlFlag, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomAisacInfo, UnknownData_RM8Z, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomAisacInfo, DefaultControlValue, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomAisacInfo, ControlId, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomAisacInfo, UnknownData_M5QE, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomAisacInfo, ControlName, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAtomAisacInfo, 0x0030);
		}

		// struct FAtomAisacControlParam
		TEST_METHOD(ScriptStruct__CriWareRuntime__AtomAisacControlParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomAisacControlParam, Name, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomAisacControlParam, Value, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomAisacControlParam, UnknownData_74QY, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAtomAisacControlParam, 0x0018);
		}

		// struct FAtomSelectorParam
		TEST_METHOD(ScriptStruct__CriWareRuntime__AtomSelectorParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomSelectorParam, Selector, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomSelectorParam, Label, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAtomSelectorParam, 0x0020);
		}

		// struct FAtomProfileItem
		TEST_METHOD(ScriptStruct__CriWareRuntime__AtomProfileItem)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomProfileItem, AtomComponentID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomProfileItem, UnknownData_O5JJ, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomProfileItem, AtomCueName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomProfileItem, AtomComponentLocation, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomProfileItem, DistanceFromListener, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomProfileItem, PlayingTime, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomProfileItem, UnknownData_AX7W, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomProfileItem, PlayerState, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomProfileItem, NumSounds, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomProfileItem, UnknownData_88QZ, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomProfileItem, ConcurrencyName, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomProfileItem, UnknownData_ZNKT, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAtomProfileItem, 0x0078);
		}

		// struct FAtomTriggerRow : public FTableRowBase
		TEST_METHOD(ScriptStruct__CriWareRuntime__AtomTriggerRow)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomTriggerRow, Time, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomTriggerRow, UnknownData_XL0W, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomTriggerRow, Bone, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomTriggerRow, Cue, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAtomTriggerRow, 0x0020);
		}

		// struct FAtomAsrRackConfigUI
		TEST_METHOD(ScriptStruct__CriWareRuntime__AtomAsrRackConfigUI)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomAsrRackConfigUI, SoundRendererTypeUI, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomAsrRackConfigUI, UnknownData_BGNN, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomAsrRackConfigUI, ElementID, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAtomAsrRackConfigUI, 0x0008);
		}

		// struct FAtomAsrRackConfig
		TEST_METHOD(ScriptStruct__CriWareRuntime__AtomAsrRackConfig)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomAsrRackConfig, SoundRendererType, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAtomAsrRackConfig, 0x0004);
		}

		// struct FManaEventPointInfo
		TEST_METHOD(ScriptStruct__CriWareRuntime__ManaEventPointInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FManaEventPointInfo, Name, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FManaEventPointInfo, Time, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FManaEventPointInfo, Type, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FManaEventPointInfo, Parameter, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FManaEventPointInfo, 0x0028);
		}

		// struct FManaAudioTrackInfo
		TEST_METHOD(ScriptStruct__CriWareRuntime__ManaAudioTrackInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FManaAudioTrackInfo, NumChannels, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FManaAudioTrackInfo, SamplingRate, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FManaAudioTrackInfo, TotalSamples, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FManaAudioTrackInfo, bIsAmbisonics, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FManaAudioTrackInfo, Type, 0x000D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FManaAudioTrackInfo, UnknownData_QUV9, 0x000E);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FManaAudioTrackInfo, 0x0010);
		}

		// struct FManaVideoTrackInfo
		TEST_METHOD(ScriptStruct__CriWareRuntime__ManaVideoTrackInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FManaVideoTrackInfo, TextureDimensions, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FManaVideoTrackInfo, DisplayDimensions, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FManaVideoTrackInfo, FrameRate, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FManaVideoTrackInfo, TotalFrames, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FManaVideoTrackInfo, bIsAlpha, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FManaVideoTrackInfo, Type, 0x0019);
			CHEAT_GEAR_CHECK_OFFSET(CG::FManaVideoTrackInfo, UnknownData_CN24, 0x001A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FManaVideoTrackInfo, 0x001C);
		}

		// struct FAtomTrackKeyframe
		TEST_METHOD(ScriptStruct__CriWareRuntime__AtomTrackKeyframe)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomTrackKeyframe, Time, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomTrackKeyframe, UnknownData_ZRQU, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomTrackKeyframe, Cue, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAtomTrackKeyframe, 0x0010);
		}

		// struct FAtomCueIdTrackKeyframe
		TEST_METHOD(ScriptStruct__CriWareRuntime__AtomCueIdTrackKeyframe)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomCueIdTrackKeyframe, Time, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomCueIdTrackKeyframe, CueId, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAtomCueIdTrackKeyframe, 0x0008);
		}

		// struct FAtomCueNameTrackKeyframe
		TEST_METHOD(ScriptStruct__CriWareRuntime__AtomCueNameTrackKeyframe)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomCueNameTrackKeyframe, Time, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomCueNameTrackKeyframe, UnknownData_SCAV, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomCueNameTrackKeyframe, CueName, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAtomCueNameTrackKeyframe, 0x0018);
		}

		// struct FAtomSelectorTrackKeyframe
		TEST_METHOD(ScriptStruct__CriWareRuntime__AtomSelectorTrackKeyframe)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomSelectorTrackKeyframe, Time, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomSelectorTrackKeyframe, UnknownData_6P38, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomSelectorTrackKeyframe, SelectorLabel, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAtomSelectorTrackKeyframe, 0x0018);
		}

		// struct FAtomSoundManager
		TEST_METHOD(ScriptStruct__CriWareRuntime__AtomSoundManager)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAtomSoundManager, UnknownData_9YA2, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAtomSoundManager, 0x0001);
		}

		// struct FMovieSceneAtomSectionTemplateData
		TEST_METHOD(ScriptStruct__CriWareRuntime__MovieSceneAtomSectionTemplateData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneAtomSectionTemplateData, Sound, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneAtomSectionTemplateData, AtomStartOffset, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneAtomSectionTemplateData, UnknownData_TI9H, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneAtomSectionTemplateData, SectionStartTimeSeconds, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneAtomSectionTemplateData, AtomPitchMultiplierCurve, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneAtomSectionTemplateData, AtomVolumeCurve, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneAtomSectionTemplateData, RowIndex, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneAtomSectionTemplateData, UnknownData_JPGX, 0x015C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneAtomSectionTemplateData, 0x0160);
		}

		// struct FMovieSceneAtomSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__CriWareRuntime__MovieSceneAtomSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneAtomSectionTemplate, AtomData, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneAtomSectionTemplate, 0x0180);
		}

		// struct FCustomMeshTriangle
		TEST_METHOD(ScriptStruct__CustomMeshComponent__CustomMeshTriangle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCustomMeshTriangle, Vertex0, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCustomMeshTriangle, Vertex1, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCustomMeshTriangle, Vertex2, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCustomMeshTriangle, 0x0024);
		}

		// struct FJoinabilitySettings
		TEST_METHOD(ScriptStruct__CoreUObject__JoinabilitySettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FJoinabilitySettings, SessionName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FJoinabilitySettings, bPublicSearchable, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FJoinabilitySettings, bAllowInvites, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FJoinabilitySettings, bJoinViaPresence, 0x000A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FJoinabilitySettings, bJoinViaPresenceFriendsOnly, 0x000B);
			CHEAT_GEAR_CHECK_OFFSET(CG::FJoinabilitySettings, MaxPlayers, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FJoinabilitySettings, MaxPartySize, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FJoinabilitySettings, UnknownData_OOD6, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FJoinabilitySettings, 0x0018);
		}

		// struct FUniqueNetIdWrapper
		TEST_METHOD(ScriptStruct__CoreUObject__UniqueNetIdWrapper)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FUniqueNetIdWrapper, UnknownData_3W67, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FUniqueNetIdWrapper, 0x0001);
		}

		// struct FGuid
		TEST_METHOD(ScriptStruct__CoreUObject__Guid)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGuid, A, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGuid, B, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGuid, C, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGuid, D, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGuid, 0x0010);
		}

		// struct FVector
		TEST_METHOD(ScriptStruct__CoreUObject__Vector)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVector, X, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVector, Y, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVector, Z, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVector, 0x000C);
		}

		// struct FVector4
		TEST_METHOD(ScriptStruct__CoreUObject__Vector4)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVector4, X, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVector4, Y, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVector4, Z, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVector4, W, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVector4, 0x0010);
		}

		// struct FVector2D
		TEST_METHOD(ScriptStruct__CoreUObject__Vector2D)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVector2D, X, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVector2D, Y, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVector2D, 0x0008);
		}

		// struct FTwoVectors
		TEST_METHOD(ScriptStruct__CoreUObject__TwoVectors)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTwoVectors, v1, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTwoVectors, v2, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTwoVectors, 0x0018);
		}

		// struct FPlane : public FVector
		TEST_METHOD(ScriptStruct__CoreUObject__Plane)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlane, W, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPlane, 0x0010);
		}

		// struct FRotator
		TEST_METHOD(ScriptStruct__CoreUObject__Rotator)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRotator, Pitch, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRotator, Yaw, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRotator, Roll, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRotator, 0x000C);
		}

		// struct FQuat
		TEST_METHOD(ScriptStruct__CoreUObject__Quat)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FQuat, X, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FQuat, Y, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FQuat, Z, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FQuat, W, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FQuat, 0x0010);
		}

		// struct FPackedNormal
		TEST_METHOD(ScriptStruct__CoreUObject__PackedNormal)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPackedNormal, X, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPackedNormal, Y, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPackedNormal, Z, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPackedNormal, W, 0x0003);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPackedNormal, 0x0004);
		}

		// struct FPackedRGB10A2N
		TEST_METHOD(ScriptStruct__CoreUObject__PackedRGB10A2N)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPackedRGB10A2N, Packed, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPackedRGB10A2N, 0x0004);
		}

		// struct FPackedRGBA16N
		TEST_METHOD(ScriptStruct__CoreUObject__PackedRGBA16N)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPackedRGBA16N, XY, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPackedRGBA16N, ZW, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPackedRGBA16N, 0x0008);
		}

		// struct FIntPoint
		TEST_METHOD(ScriptStruct__CoreUObject__IntPoint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FIntPoint, X, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FIntPoint, Y, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FIntPoint, 0x0008);
		}

		// struct FIntVector
		TEST_METHOD(ScriptStruct__CoreUObject__IntVector)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FIntVector, X, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FIntVector, Y, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FIntVector, Z, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FIntVector, 0x000C);
		}

		// struct FColor
		TEST_METHOD(ScriptStruct__CoreUObject__Color)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FColor, B, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FColor, G, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FColor, R, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FColor, A, 0x0003);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FColor, 0x0004);
		}

		// struct FLinearColor
		TEST_METHOD(ScriptStruct__CoreUObject__LinearColor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLinearColor, R, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLinearColor, G, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLinearColor, B, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLinearColor, A, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLinearColor, 0x0010);
		}

		// struct FBox
		TEST_METHOD(ScriptStruct__CoreUObject__Box)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBox, Min, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBox, Max, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBox, IsValid, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBox, UnknownData_P6XF, 0x0019);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBox, 0x001C);
		}

		// struct FBox2D
		TEST_METHOD(ScriptStruct__CoreUObject__Box2D)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBox2D, Min, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBox2D, Max, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBox2D, bIsValid, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBox2D, UnknownData_AF60, 0x0011);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBox2D, 0x0014);
		}

		// struct FBoxSphereBounds
		TEST_METHOD(ScriptStruct__CoreUObject__BoxSphereBounds)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoxSphereBounds, Origin, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoxSphereBounds, BoxExtent, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoxSphereBounds, SphereRadius, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBoxSphereBounds, 0x001C);
		}

		// struct FOrientedBox
		TEST_METHOD(ScriptStruct__CoreUObject__OrientedBox)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FOrientedBox, Center, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOrientedBox, AxisX, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOrientedBox, AxisY, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOrientedBox, AxisZ, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOrientedBox, ExtentX, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOrientedBox, ExtentY, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOrientedBox, ExtentZ, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FOrientedBox, 0x003C);
		}

		// struct FMatrix
		TEST_METHOD(ScriptStruct__CoreUObject__Matrix)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMatrix, XPlane, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMatrix, YPlane, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMatrix, ZPlane, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMatrix, WPlane, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMatrix, 0x0040);
		}

		// struct FInterpCurvePointFloat
		TEST_METHOD(ScriptStruct__CoreUObject__InterpCurvePointFloat)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointFloat, InVal, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointFloat, OutVal, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointFloat, ArriveTangent, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointFloat, LeaveTangent, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointFloat, InterpMode, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointFloat, UnknownData_57N8, 0x0011);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpCurvePointFloat, 0x0014);
		}

		// struct FInterpCurveFloat
		TEST_METHOD(ScriptStruct__CoreUObject__InterpCurveFloat)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurveFloat, Points, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurveFloat, bIsLooped, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurveFloat, UnknownData_LZF3, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurveFloat, LoopKeyOffset, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpCurveFloat, 0x0018);
		}

		// struct FInterpCurvePointVector2D
		TEST_METHOD(ScriptStruct__CoreUObject__InterpCurvePointVector2D)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointVector2D, InVal, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointVector2D, OutVal, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointVector2D, ArriveTangent, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointVector2D, LeaveTangent, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointVector2D, InterpMode, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointVector2D, UnknownData_G97B, 0x001D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpCurvePointVector2D, 0x0020);
		}

		// struct FInterpCurveVector2D
		TEST_METHOD(ScriptStruct__CoreUObject__InterpCurveVector2D)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurveVector2D, Points, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurveVector2D, bIsLooped, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurveVector2D, UnknownData_35ML, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurveVector2D, LoopKeyOffset, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpCurveVector2D, 0x0018);
		}

		// struct FInterpCurvePointVector
		TEST_METHOD(ScriptStruct__CoreUObject__InterpCurvePointVector)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointVector, InVal, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointVector, OutVal, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointVector, ArriveTangent, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointVector, LeaveTangent, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointVector, InterpMode, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointVector, UnknownData_053D, 0x0029);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpCurvePointVector, 0x002C);
		}

		// struct FInterpCurveVector
		TEST_METHOD(ScriptStruct__CoreUObject__InterpCurveVector)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurveVector, Points, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurveVector, bIsLooped, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurveVector, UnknownData_Q3L8, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurveVector, LoopKeyOffset, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpCurveVector, 0x0018);
		}

		// struct FInterpCurvePointQuat
		TEST_METHOD(ScriptStruct__CoreUObject__InterpCurvePointQuat)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointQuat, InVal, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointQuat, UnknownData_822M, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointQuat, OutVal, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointQuat, ArriveTangent, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointQuat, LeaveTangent, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointQuat, InterpMode, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointQuat, UnknownData_SBO2, 0x0041);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpCurvePointQuat, 0x0050);
		}

		// struct FInterpCurveQuat
		TEST_METHOD(ScriptStruct__CoreUObject__InterpCurveQuat)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurveQuat, Points, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurveQuat, bIsLooped, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurveQuat, UnknownData_IKV9, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurveQuat, LoopKeyOffset, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpCurveQuat, 0x0018);
		}

		// struct FInterpCurvePointTwoVectors
		TEST_METHOD(ScriptStruct__CoreUObject__InterpCurvePointTwoVectors)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointTwoVectors, InVal, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointTwoVectors, OutVal, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointTwoVectors, ArriveTangent, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointTwoVectors, LeaveTangent, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointTwoVectors, InterpMode, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointTwoVectors, UnknownData_EJH0, 0x004D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpCurvePointTwoVectors, 0x0050);
		}

		// struct FInterpCurveTwoVectors
		TEST_METHOD(ScriptStruct__CoreUObject__InterpCurveTwoVectors)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurveTwoVectors, Points, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurveTwoVectors, bIsLooped, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurveTwoVectors, UnknownData_2PBA, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurveTwoVectors, LoopKeyOffset, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpCurveTwoVectors, 0x0018);
		}

		// struct FInterpCurvePointLinearColor
		TEST_METHOD(ScriptStruct__CoreUObject__InterpCurvePointLinearColor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointLinearColor, InVal, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointLinearColor, OutVal, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointLinearColor, ArriveTangent, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointLinearColor, LeaveTangent, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointLinearColor, InterpMode, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurvePointLinearColor, UnknownData_QOI4, 0x0035);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpCurvePointLinearColor, 0x0038);
		}

		// struct FInterpCurveLinearColor
		TEST_METHOD(ScriptStruct__CoreUObject__InterpCurveLinearColor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurveLinearColor, Points, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurveLinearColor, bIsLooped, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurveLinearColor, UnknownData_7AN3, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInterpCurveLinearColor, LoopKeyOffset, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInterpCurveLinearColor, 0x0018);
		}

		// struct FTransform
		TEST_METHOD(ScriptStruct__CoreUObject__Transform)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTransform, Rotation, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTransform, Translation, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTransform, UnknownData_PB0P, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTransform, Scale3D, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTransform, UnknownData_4O7M, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTransform, 0x0030);
		}

		// struct FRandomStream
		TEST_METHOD(ScriptStruct__CoreUObject__RandomStream)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRandomStream, InitialSeed, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRandomStream, Seed, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRandomStream, 0x0008);
		}

		// struct FDateTime
		TEST_METHOD(ScriptStruct__CoreUObject__DateTime)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDateTime, UnknownData_RYAA, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDateTime, 0x0008);
		}

		// struct FFrameNumber
		TEST_METHOD(ScriptStruct__CoreUObject__FrameNumber)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFrameNumber, Value, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFrameNumber, 0x0004);
		}

		// struct FFrameRate
		TEST_METHOD(ScriptStruct__CoreUObject__FrameRate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFrameRate, Numerator, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFrameRate, Denominator, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFrameRate, 0x0008);
		}

		// struct FFrameTime
		TEST_METHOD(ScriptStruct__CoreUObject__FrameTime)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFrameTime, FrameNumber, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFrameTime, SubFrame, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFrameTime, 0x0008);
		}

		// struct FQualifiedFrameTime
		TEST_METHOD(ScriptStruct__CoreUObject__QualifiedFrameTime)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FQualifiedFrameTime, Time, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FQualifiedFrameTime, Rate, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FQualifiedFrameTime, 0x0010);
		}

		// struct FTimecode
		TEST_METHOD(ScriptStruct__CoreUObject__Timecode)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimecode, Hours, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimecode, Minutes, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimecode, Seconds, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimecode, Frames, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimecode, bDropFrameFormat, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimecode, UnknownData_PCX2, 0x0011);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTimecode, 0x0014);
		}

		// struct FTimespan
		TEST_METHOD(ScriptStruct__CoreUObject__Timespan)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTimespan, UnknownData_08IT, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTimespan, 0x0008);
		}

		// struct FSoftObjectPath
		TEST_METHOD(ScriptStruct__CoreUObject__SoftObjectPath)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoftObjectPath, AssetPathName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoftObjectPath, SubPathString, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoftObjectPath, 0x0018);
		}

		// struct FSoftClassPath : public FSoftObjectPath
		TEST_METHOD(ScriptStruct__CoreUObject__SoftClassPath)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoftClassPath, 0x0018);
		}

		// struct FPrimaryAssetType
		TEST_METHOD(ScriptStruct__CoreUObject__PrimaryAssetType)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimaryAssetType, Name, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPrimaryAssetType, 0x0008);
		}

		// struct FPrimaryAssetId
		TEST_METHOD(ScriptStruct__CoreUObject__PrimaryAssetId)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimaryAssetId, PrimaryAssetType, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPrimaryAssetId, PrimaryAssetName, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPrimaryAssetId, 0x0010);
		}

		// struct FFallbackStruct
		TEST_METHOD(ScriptStruct__CoreUObject__FallbackStruct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFallbackStruct, UnknownData_6TK9, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFallbackStruct, 0x0001);
		}

		// struct FFloatRangeBound
		TEST_METHOD(ScriptStruct__CoreUObject__FloatRangeBound)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFloatRangeBound, Type, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFloatRangeBound, UnknownData_CBJ4, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFloatRangeBound, Value, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFloatRangeBound, 0x0008);
		}

		// struct FFloatRange
		TEST_METHOD(ScriptStruct__CoreUObject__FloatRange)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFloatRange, LowerBound, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFloatRange, UpperBound, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFloatRange, 0x0010);
		}

		// struct FInt32RangeBound
		TEST_METHOD(ScriptStruct__CoreUObject__Int32RangeBound)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInt32RangeBound, Type, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInt32RangeBound, UnknownData_ON3V, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInt32RangeBound, Value, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInt32RangeBound, 0x0008);
		}

		// struct FInt32Range
		TEST_METHOD(ScriptStruct__CoreUObject__Int32Range)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInt32Range, LowerBound, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInt32Range, UpperBound, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInt32Range, 0x0010);
		}

		// struct FFloatInterval
		TEST_METHOD(ScriptStruct__CoreUObject__FloatInterval)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFloatInterval, Min, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFloatInterval, Max, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFloatInterval, 0x0008);
		}

		// struct FInt32Interval
		TEST_METHOD(ScriptStruct__CoreUObject__Int32Interval)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInt32Interval, Min, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInt32Interval, Max, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInt32Interval, 0x0008);
		}

		// struct FPolyglotTextData
		TEST_METHOD(ScriptStruct__CoreUObject__PolyglotTextData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPolyglotTextData, Category, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPolyglotTextData, UnknownData_LHRH, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPolyglotTextData, NativeCulture, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPolyglotTextData, Namespace, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPolyglotTextData, Key, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPolyglotTextData, NativeString, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPolyglotTextData, LocalizedStrings, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPolyglotTextData, CachedText, 0x0098);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPolyglotTextData, 0x00B0);
		}

		// struct FAutomationEvent
		TEST_METHOD(ScriptStruct__CoreUObject__AutomationEvent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAutomationEvent, Type, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAutomationEvent, UnknownData_3XFM, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAutomationEvent, Message, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAutomationEvent, Context, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAutomationEvent, Artifact, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAutomationEvent, 0x0038);
		}

		// struct FAutomationExecutionEntry
		TEST_METHOD(ScriptStruct__CoreUObject__AutomationExecutionEntry)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAutomationExecutionEntry, Event, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAutomationExecutionEntry, Filename, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAutomationExecutionEntry, LineNumber, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAutomationExecutionEntry, UnknownData_HDBO, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAutomationExecutionEntry, Timestamp, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAutomationExecutionEntry, 0x0058);
		}

		// struct FGeometry
		TEST_METHOD(ScriptStruct__SlateCore__Geometry)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGeometry, UnknownData_IEHU, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGeometry, 0x0038);
		}

		// struct FMargin
		TEST_METHOD(ScriptStruct__SlateCore__Margin)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMargin, Left, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMargin, Top, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMargin, Right, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMargin, Bottom, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMargin, 0x0010);
		}

		// struct FSlateColor
		TEST_METHOD(ScriptStruct__SlateCore__SlateColor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateColor, SpecifiedColor, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateColor, ColorUseRule, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateColor, UnknownData_2XB4, 0x0011);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSlateColor, 0x0028);
		}

		// struct FSlateBrush
		TEST_METHOD(ScriptStruct__SlateCore__SlateBrush)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateBrush, UnknownData_FQWC, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateBrush, ImageSize, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateBrush, Margin, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateBrush, TintColor, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateBrush, ResourceObject, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateBrush, ResourceName, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateBrush, UVRegion, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateBrush, DrawAs, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateBrush, Tiling, 0x006D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateBrush, Mirroring, 0x006E);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateBrush, ImageType, 0x006F);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateBrush, UnknownData_QMB9, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateBrush, UnknownData_ETVB, 0x0081);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSlateBrush, 0x0088);
		}

		// struct FInputEvent
		TEST_METHOD(ScriptStruct__SlateCore__InputEvent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputEvent, UnknownData_LF7N, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInputEvent, 0x0018);
		}

		// struct FPointerEvent : public FInputEvent
		TEST_METHOD(ScriptStruct__SlateCore__PointerEvent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPointerEvent, UnknownData_SYJA, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPointerEvent, 0x0070);
		}

		// struct FCharacterEvent : public FInputEvent
		TEST_METHOD(ScriptStruct__SlateCore__CharacterEvent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCharacterEvent, UnknownData_XWFB, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCharacterEvent, 0x0020);
		}

		// struct FKeyEvent : public FInputEvent
		TEST_METHOD(ScriptStruct__SlateCore__KeyEvent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FKeyEvent, UnknownData_FN2I, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FKeyEvent, 0x0038);
		}

		// struct FNavigationEvent : public FInputEvent
		TEST_METHOD(ScriptStruct__SlateCore__NavigationEvent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavigationEvent, UnknownData_JNSQ, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavigationEvent, 0x0020);
		}

		// struct FAnalogInputEvent : public FKeyEvent
		TEST_METHOD(ScriptStruct__SlateCore__AnalogInputEvent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnalogInputEvent, UnknownData_XZOE, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnalogInputEvent, 0x0040);
		}

		// struct FFontOutlineSettings
		TEST_METHOD(ScriptStruct__SlateCore__FontOutlineSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontOutlineSettings, OutlineSize, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontOutlineSettings, UnknownData_ZZ3H, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontOutlineSettings, OutlineMaterial, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontOutlineSettings, OutlineColor, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontOutlineSettings, UnknownData_7K1X, 0x0021);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFontOutlineSettings, 0x0028);
		}

		// struct FSlateFontInfo
		TEST_METHOD(ScriptStruct__SlateCore__SlateFontInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateFontInfo, FontObject, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateFontInfo, FontMaterial, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateFontInfo, OutlineSettings, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateFontInfo, UnknownData_ZXL8, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateFontInfo, TypefaceFontName, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateFontInfo, Size, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateFontInfo, UnknownData_GIDZ, 0x0054);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSlateFontInfo, 0x0058);
		}

		// struct FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__SlateWidgetStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateWidgetStyle, UnknownData_Z1P4, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSlateWidgetStyle, 0x0008);
		}

		// struct FTableRowStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__TableRowStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTableRowStyle, SelectorFocusedBrush, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTableRowStyle, ActiveHoveredBrush, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTableRowStyle, ActiveBrush, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTableRowStyle, InactiveHoveredBrush, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTableRowStyle, InactiveBrush, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTableRowStyle, EvenRowBackgroundHoveredBrush, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTableRowStyle, EvenRowBackgroundBrush, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTableRowStyle, OddRowBackgroundHoveredBrush, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTableRowStyle, OddRowBackgroundBrush, 0x0448);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTableRowStyle, TextColor, 0x04D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTableRowStyle, SelectedTextColor, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTableRowStyle, DropIndicator_Above, 0x0520);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTableRowStyle, DropIndicator_Onto, 0x05A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTableRowStyle, DropIndicator_Below, 0x0630);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTableRowStyle, 0x06B8);
		}

		// struct FSlateSound
		TEST_METHOD(ScriptStruct__SlateCore__SlateSound)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateSound, ResourceObject, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateSound, UnknownData_HA40, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSlateSound, 0x0018);
		}

		// struct FButtonStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__ButtonStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FButtonStyle, Normal, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FButtonStyle, Hovered, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FButtonStyle, Pressed, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::FButtonStyle, Disabled, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FButtonStyle, NormalPadding, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::FButtonStyle, PressedPadding, 0x0238);
			CHEAT_GEAR_CHECK_OFFSET(CG::FButtonStyle, PressedSlateSound, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::FButtonStyle, HoveredSlateSound, 0x0260);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FButtonStyle, 0x0278);
		}

		// struct FComboButtonStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__ComboButtonStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FComboButtonStyle, ButtonStyle, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FComboButtonStyle, DownArrowImage, 0x0280);
			CHEAT_GEAR_CHECK_OFFSET(CG::FComboButtonStyle, MenuBorderBrush, 0x0308);
			CHEAT_GEAR_CHECK_OFFSET(CG::FComboButtonStyle, MenuBorderPadding, 0x0390);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FComboButtonStyle, 0x03A0);
		}

		// struct FComboBoxStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__ComboBoxStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FComboBoxStyle, ComboButtonStyle, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FComboBoxStyle, PressedSlateSound, 0x03A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FComboBoxStyle, SelectionChangeSlateSound, 0x03C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FComboBoxStyle, 0x03D8);
		}

		// struct FEditableTextStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__EditableTextStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditableTextStyle, Font, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditableTextStyle, ColorAndOpacity, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditableTextStyle, BackgroundImageSelected, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditableTextStyle, BackgroundImageComposing, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditableTextStyle, CaretImage, 0x0198);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEditableTextStyle, 0x0220);
		}

		// struct FScrollBarStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__ScrollBarStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FScrollBarStyle, HorizontalBackgroundImage, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FScrollBarStyle, VerticalBackgroundImage, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FScrollBarStyle, VerticalTopSlotImage, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::FScrollBarStyle, HorizontalTopSlotImage, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FScrollBarStyle, VerticalBottomSlotImage, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::FScrollBarStyle, HorizontalBottomSlotImage, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FScrollBarStyle, NormalThumbImage, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::FScrollBarStyle, HoveredThumbImage, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FScrollBarStyle, DraggedThumbImage, 0x0448);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FScrollBarStyle, 0x04D0);
		}

		// struct FEditableTextBoxStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__EditableTextBoxStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditableTextBoxStyle, BackgroundImageNormal, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditableTextBoxStyle, BackgroundImageHovered, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditableTextBoxStyle, BackgroundImageFocused, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditableTextBoxStyle, BackgroundImageReadOnly, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditableTextBoxStyle, Padding, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditableTextBoxStyle, Font, 0x0238);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditableTextBoxStyle, ForegroundColor, 0x0290);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditableTextBoxStyle, BackgroundColor, 0x02B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditableTextBoxStyle, ReadOnlyForegroundColor, 0x02E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditableTextBoxStyle, HScrollBarPadding, 0x0308);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditableTextBoxStyle, VScrollBarPadding, 0x0318);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEditableTextBoxStyle, ScrollBarStyle, 0x0328);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEditableTextBoxStyle, 0x07F8);
		}

		// struct FTextBlockStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__TextBlockStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextBlockStyle, Font, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextBlockStyle, ColorAndOpacity, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextBlockStyle, ShadowOffset, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextBlockStyle, ShadowColorAndOpacity, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextBlockStyle, SelectedBackgroundColor, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextBlockStyle, HighlightColor, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextBlockStyle, HighlightShape, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTextBlockStyle, UnderlineBrush, 0x0160);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTextBlockStyle, 0x01E8);
		}

		// struct FSpinBoxStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__SpinBoxStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpinBoxStyle, BackgroundBrush, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpinBoxStyle, HoveredBackgroundBrush, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpinBoxStyle, ActiveFillBrush, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpinBoxStyle, InactiveFillBrush, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpinBoxStyle, ArrowsImage, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpinBoxStyle, ForegroundColor, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpinBoxStyle, TextPadding, 0x02D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSpinBoxStyle, 0x02E8);
		}

		// struct FFocusEvent
		TEST_METHOD(ScriptStruct__SlateCore__FocusEvent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFocusEvent, UnknownData_KT6Z, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFocusEvent, 0x0008);
		}

		// struct FMotionEvent : public FInputEvent
		TEST_METHOD(ScriptStruct__SlateCore__MotionEvent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMotionEvent, UnknownData_4DQT, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMotionEvent, 0x0048);
		}

		// struct FFontData
		TEST_METHOD(ScriptStruct__SlateCore__FontData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontData, FontFilename, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontData, Hinting, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontData, LoadingPolicy, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontData, UnknownData_S29H, 0x0012);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontData, SubFaceIndex, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFontData, FontFaceAsset, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFontData, 0x0020);
		}

		// struct FTypefaceEntry
		TEST_METHOD(ScriptStruct__SlateCore__TypefaceEntry)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTypefaceEntry, Name, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTypefaceEntry, Font, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTypefaceEntry, 0x0028);
		}

		// struct FTypeface
		TEST_METHOD(ScriptStruct__SlateCore__Typeface)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTypeface, Fonts, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTypeface, 0x0010);
		}

		// struct FCompositeFallbackFont
		TEST_METHOD(ScriptStruct__SlateCore__CompositeFallbackFont)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompositeFallbackFont, Typeface, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompositeFallbackFont, ScalingFactor, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompositeFallbackFont, UnknownData_8TYA, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCompositeFallbackFont, 0x0018);
		}

		// struct FCompositeSubFont : public FCompositeFallbackFont
		TEST_METHOD(ScriptStruct__SlateCore__CompositeSubFont)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompositeSubFont, CharacterRanges, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompositeSubFont, Cultures, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCompositeSubFont, 0x0038);
		}

		// struct FCompositeFont
		TEST_METHOD(ScriptStruct__SlateCore__CompositeFont)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompositeFont, DefaultTypeface, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompositeFont, FallbackTypeface, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCompositeFont, SubTypefaces, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCompositeFont, 0x0038);
		}

		// struct FCaptureLostEvent
		TEST_METHOD(ScriptStruct__SlateCore__CaptureLostEvent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCaptureLostEvent, UnknownData_89EF, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCaptureLostEvent, 0x0008);
		}

		// struct FWindowStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__WindowStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FWindowStyle, MinimizeButtonStyle, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWindowStyle, MaximizeButtonStyle, 0x0280);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWindowStyle, RestoreButtonStyle, 0x04F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWindowStyle, CloseButtonStyle, 0x0770);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWindowStyle, TitleTextStyle, 0x09E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWindowStyle, ActiveTitleBrush, 0x0BD0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWindowStyle, InactiveTitleBrush, 0x0C58);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWindowStyle, FlashTitleBrush, 0x0CE0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWindowStyle, BackgroundColor, 0x0D68);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWindowStyle, OutlineBrush, 0x0D90);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWindowStyle, OutlineColor, 0x0E18);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWindowStyle, BorderBrush, 0x0E40);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWindowStyle, BackgroundBrush, 0x0EC8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWindowStyle, ChildBackgroundBrush, 0x0F50);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWindowStyle, 0x0FD8);
		}

		// struct FScrollBorderStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__ScrollBorderStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FScrollBorderStyle, TopShadowBrush, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FScrollBorderStyle, BottomShadowBrush, 0x0090);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FScrollBorderStyle, 0x0118);
		}

		// struct FScrollBoxStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__ScrollBoxStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FScrollBoxStyle, TopShadowBrush, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FScrollBoxStyle, BottomShadowBrush, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FScrollBoxStyle, LeftShadowBrush, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::FScrollBoxStyle, RightShadowBrush, 0x01A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FScrollBoxStyle, 0x0228);
		}

		// struct FDockTabStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__DockTabStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDockTabStyle, CloseButtonStyle, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDockTabStyle, NormalBrush, 0x0280);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDockTabStyle, ActiveBrush, 0x0308);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDockTabStyle, ColorOverlayTabBrush, 0x0390);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDockTabStyle, ColorOverlayIconBrush, 0x0418);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDockTabStyle, ForegroundBrush, 0x04A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDockTabStyle, HoveredBrush, 0x0528);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDockTabStyle, ContentAreaBrush, 0x05B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDockTabStyle, TabWellBrush, 0x0638);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDockTabStyle, TabPadding, 0x06C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDockTabStyle, OverlapWidth, 0x06D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDockTabStyle, UnknownData_SETS, 0x06D4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDockTabStyle, FlashColor, 0x06D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDockTabStyle, 0x0700);
		}

		// struct FSplitterStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__SplitterStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplitterStyle, HandleNormalBrush, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplitterStyle, HandleHighlightBrush, 0x0090);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSplitterStyle, 0x0118);
		}

		// struct FTableColumnHeaderStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__TableColumnHeaderStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTableColumnHeaderStyle, SortPrimaryAscendingImage, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTableColumnHeaderStyle, SortPrimaryDescendingImage, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTableColumnHeaderStyle, SortSecondaryAscendingImage, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTableColumnHeaderStyle, SortSecondaryDescendingImage, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTableColumnHeaderStyle, NormalBrush, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTableColumnHeaderStyle, HoveredBrush, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTableColumnHeaderStyle, MenuDropdownImage, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTableColumnHeaderStyle, MenuDropdownNormalBorderBrush, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTableColumnHeaderStyle, MenuDropdownHoveredBorderBrush, 0x0448);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTableColumnHeaderStyle, 0x04D0);
		}

		// struct FHeaderRowStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__HeaderRowStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FHeaderRowStyle, ColumnStyle, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHeaderRowStyle, LastColumnStyle, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHeaderRowStyle, ColumnSplitterStyle, 0x09A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHeaderRowStyle, BackgroundBrush, 0x0AC0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHeaderRowStyle, ForegroundColor, 0x0B48);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FHeaderRowStyle, 0x0B70);
		}

		// struct FInlineTextImageStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__InlineTextImageStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInlineTextImageStyle, Image, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInlineTextImageStyle, Baseline, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInlineTextImageStyle, UnknownData_B92N, 0x0092);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInlineTextImageStyle, 0x0098);
		}

		// struct FSliderStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__SliderStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSliderStyle, NormalBarImage, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSliderStyle, HoveredBarImage, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSliderStyle, DisabledBarImage, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSliderStyle, NormalThumbImage, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSliderStyle, HoveredThumbImage, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSliderStyle, DisabledThumbImage, 0x02B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSliderStyle, BarThickness, 0x0338);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSliderStyle, UnknownData_T2DU, 0x033C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSliderStyle, 0x0340);
		}

		// struct FVolumeControlStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__VolumeControlStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVolumeControlStyle, SliderStyle, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVolumeControlStyle, HighVolumeImage, 0x0348);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVolumeControlStyle, MidVolumeImage, 0x03D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVolumeControlStyle, LowVolumeImage, 0x0458);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVolumeControlStyle, NoVolumeImage, 0x04E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVolumeControlStyle, MutedImage, 0x0568);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVolumeControlStyle, 0x05F0);
		}

		// struct FSearchBoxStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__SearchBoxStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSearchBoxStyle, TextBoxStyle, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSearchBoxStyle, ActiveFontInfo, 0x0800);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSearchBoxStyle, UpArrowImage, 0x0858);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSearchBoxStyle, DownArrowImage, 0x08E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSearchBoxStyle, GlassImage, 0x0968);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSearchBoxStyle, ClearImage, 0x09F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSearchBoxStyle, ImagePadding, 0x0A78);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSearchBoxStyle, bLeftAlignButtons, 0x0A88);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSearchBoxStyle, UnknownData_JZUB, 0x0A89);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSearchBoxStyle, 0x0A90);
		}

		// struct FExpandableAreaStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__ExpandableAreaStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FExpandableAreaStyle, CollapsedImage, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExpandableAreaStyle, ExpandedImage, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExpandableAreaStyle, RolloutAnimationSeconds, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::FExpandableAreaStyle, UnknownData_9SWI, 0x011C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FExpandableAreaStyle, 0x0120);
		}

		// struct FProgressBarStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__ProgressBarStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FProgressBarStyle, BackgroundImage, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProgressBarStyle, FillImage, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProgressBarStyle, MarqueeImage, 0x0118);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FProgressBarStyle, 0x01A0);
		}

		// struct FInlineEditableTextBlockStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__InlineEditableTextBlockStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInlineEditableTextBlockStyle, EditableTextBoxStyle, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInlineEditableTextBlockStyle, TextStyle, 0x0800);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInlineEditableTextBlockStyle, 0x09E8);
		}

		// struct FHyperlinkStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__HyperlinkStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FHyperlinkStyle, UnderlineStyle, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHyperlinkStyle, TextStyle, 0x0280);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHyperlinkStyle, Padding, 0x0468);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FHyperlinkStyle, 0x0478);
		}

		// struct FCheckBoxStyle : public FSlateWidgetStyle
		TEST_METHOD(ScriptStruct__SlateCore__CheckBoxStyle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCheckBoxStyle, CheckBoxType, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCheckBoxStyle, UnknownData_SSJE, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCheckBoxStyle, UncheckedImage, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCheckBoxStyle, UncheckedHoveredImage, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCheckBoxStyle, UncheckedPressedImage, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCheckBoxStyle, CheckedImage, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCheckBoxStyle, CheckedHoveredImage, 0x0230);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCheckBoxStyle, CheckedPressedImage, 0x02B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCheckBoxStyle, UndeterminedImage, 0x0340);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCheckBoxStyle, UndeterminedHoveredImage, 0x03C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCheckBoxStyle, UndeterminedPressedImage, 0x0450);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCheckBoxStyle, Padding, 0x04D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCheckBoxStyle, ForegroundColor, 0x04E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCheckBoxStyle, BorderBackgroundColor, 0x0510);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCheckBoxStyle, CheckedSlateSound, 0x0538);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCheckBoxStyle, UncheckedSlateSound, 0x0550);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCheckBoxStyle, HoveredSlateSound, 0x0568);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCheckBoxStyle, 0x0580);
		}

		// struct FVirtualKeyboardOptions
		TEST_METHOD(ScriptStruct__Slate__VirtualKeyboardOptions)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVirtualKeyboardOptions, bEnableAutocorrect, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVirtualKeyboardOptions, 0x0001);
		}

		// struct FInputChord
		TEST_METHOD(ScriptStruct__Slate__InputChord)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputChord, Key, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInputChord, UnknownData_0SLC, 0x0019);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInputChord, 0x0020);
		}

		// struct FAnchors
		TEST_METHOD(ScriptStruct__Slate__Anchors)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnchors, Minimum, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnchors, Maximum, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnchors, 0x0010);
		}

		// struct FEyeTrackerGazeData
		TEST_METHOD(ScriptStruct__EyeTracker__EyeTrackerGazeData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEyeTrackerGazeData, GazeOrigin, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEyeTrackerGazeData, GazeDirection, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEyeTrackerGazeData, FixationPoint, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEyeTrackerGazeData, ConfidenceValue, 0x0024);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEyeTrackerGazeData, 0x0028);
		}

		// struct FEyeTrackerStereoGazeData
		TEST_METHOD(ScriptStruct__EyeTracker__EyeTrackerStereoGazeData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEyeTrackerStereoGazeData, LeftEyeOrigin, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEyeTrackerStereoGazeData, LeftEyeDirection, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEyeTrackerStereoGazeData, RightEyeOrigin, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEyeTrackerStereoGazeData, RightEyeDirection, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEyeTrackerStereoGazeData, FixationPoint, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEyeTrackerStereoGazeData, ConfidenceValue, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEyeTrackerStereoGazeData, 0x0040);
		}

		// struct FProcMeshTangent
		TEST_METHOD(ScriptStruct__ProceduralMeshComponent__ProcMeshTangent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FProcMeshTangent, TangentX, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProcMeshTangent, bFlipTangentY, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProcMeshTangent, UnknownData_7COS, 0x000D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FProcMeshTangent, 0x0010);
		}

		// struct FProcMeshVertex
		TEST_METHOD(ScriptStruct__ProceduralMeshComponent__ProcMeshVertex)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FProcMeshVertex, Position, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProcMeshVertex, Normal, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProcMeshVertex, Tangent, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProcMeshVertex, Color, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProcMeshVertex, UV0, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProcMeshVertex, UV1, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProcMeshVertex, UV2, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProcMeshVertex, UV3, 0x0044);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FProcMeshVertex, 0x004C);
		}

		// struct FProcMeshSection
		TEST_METHOD(ScriptStruct__ProceduralMeshComponent__ProcMeshSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FProcMeshSection, ProcVertexBuffer, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProcMeshSection, ProcIndexBuffer, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProcMeshSection, SectionLocalBox, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProcMeshSection, bEnableCollision, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProcMeshSection, bSectionVisible, 0x003D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProcMeshSection, UnknownData_QKZ4, 0x003E);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FProcMeshSection, 0x0040);
		}

		// struct FAutoCompleteCommand
		TEST_METHOD(ScriptStruct__EngineSettings__AutoCompleteCommand)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAutoCompleteCommand, Command, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAutoCompleteCommand, Desc, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAutoCompleteCommand, UnknownData_ONPN, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAutoCompleteCommand, 0x0028);
		}

		// struct FGameModeName
		TEST_METHOD(ScriptStruct__EngineSettings__GameModeName)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameModeName, Name, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameModeName, GameMode, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameModeName, 0x0028);
		}

		// struct FEngineServiceNotification
		TEST_METHOD(ScriptStruct__EngineMessages__EngineServiceNotification)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEngineServiceNotification, Text, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEngineServiceNotification, TimeSeconds, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEngineServiceNotification, 0x0018);
		}

		// struct FEngineServiceTerminate
		TEST_METHOD(ScriptStruct__EngineMessages__EngineServiceTerminate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEngineServiceTerminate, UserName, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEngineServiceTerminate, 0x0010);
		}

		// struct FEngineServiceExecuteCommand
		TEST_METHOD(ScriptStruct__EngineMessages__EngineServiceExecuteCommand)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEngineServiceExecuteCommand, Command, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEngineServiceExecuteCommand, UserName, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEngineServiceExecuteCommand, 0x0020);
		}

		// struct FEngineServiceAuthGrant
		TEST_METHOD(ScriptStruct__EngineMessages__EngineServiceAuthGrant)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEngineServiceAuthGrant, UserName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEngineServiceAuthGrant, UserToGrant, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEngineServiceAuthGrant, 0x0020);
		}

		// struct FEngineServiceAuthDeny
		TEST_METHOD(ScriptStruct__EngineMessages__EngineServiceAuthDeny)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEngineServiceAuthDeny, UserName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEngineServiceAuthDeny, UserToDeny, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEngineServiceAuthDeny, 0x0020);
		}

		// struct FEngineServicePong
		TEST_METHOD(ScriptStruct__EngineMessages__EngineServicePong)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEngineServicePong, CurrentLevel, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEngineServicePong, EngineVersion, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEngineServicePong, HasBegunPlay, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEngineServicePong, UnknownData_G5W3, 0x0015);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEngineServicePong, InstanceId, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEngineServicePong, InstanceType, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEngineServicePong, SessionId, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEngineServicePong, WorldTimeSeconds, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEngineServicePong, UnknownData_GJQD, 0x004C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEngineServicePong, 0x0050);
		}

		// struct FEngineServicePing
		TEST_METHOD(ScriptStruct__EngineMessages__EngineServicePing)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEngineServicePing, UnknownData_B3KY, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEngineServicePing, 0x0001);
		}

		// struct FLevelSequenceObjectReferenceMap
		TEST_METHOD(ScriptStruct__LevelSequence__LevelSequenceObjectReferenceMap)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSequenceObjectReferenceMap, UnknownData_SD3L, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelSequenceObjectReferenceMap, 0x0050);
		}

		// struct FLevelSequenceObject
		TEST_METHOD(ScriptStruct__LevelSequence__LevelSequenceObject)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSequenceObject, ObjectOrOwner, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSequenceObject, UnknownData_HT0T, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSequenceObject, ComponentName, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSequenceObject, CachedComponent, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelSequenceObject, 0x0038);
		}

		// struct FLevelSequenceBindingReference
		TEST_METHOD(ScriptStruct__LevelSequence__LevelSequenceBindingReference)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSequenceBindingReference, PackageName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSequenceBindingReference, ExternalObjectPath, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSequenceBindingReference, ObjectPath, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelSequenceBindingReference, 0x0038);
		}

		// struct FLevelSequenceBindingReferenceArray
		TEST_METHOD(ScriptStruct__LevelSequence__LevelSequenceBindingReferenceArray)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSequenceBindingReferenceArray, References, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelSequenceBindingReferenceArray, 0x0010);
		}

		// struct FLevelSequenceBindingReferences
		TEST_METHOD(ScriptStruct__LevelSequence__LevelSequenceBindingReferences)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSequenceBindingReferences, BindingIdToReferences, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSequenceBindingReferences, AnimSequenceInstances, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelSequenceBindingReferences, 0x00A0);
		}

		// struct FLevelSequenceSnapshotSettings
		TEST_METHOD(ScriptStruct__LevelSequence__LevelSequenceSnapshotSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSequenceSnapshotSettings, ZeroPadAmount, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSequenceSnapshotSettings, UnknownData_J2E9, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSequenceSnapshotSettings, FrameRate, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelSequenceSnapshotSettings, 0x000C);
		}

		// struct FLevelSequencePlayerSnapshot
		TEST_METHOD(ScriptStruct__LevelSequence__LevelSequencePlayerSnapshot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSequencePlayerSnapshot, MasterName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSequencePlayerSnapshot, MasterTime, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSequencePlayerSnapshot, SourceTime, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSequencePlayerSnapshot, CurrentShotName, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSequencePlayerSnapshot, CurrentShotLocalTime, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSequencePlayerSnapshot, CurrentShotSourceTime, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSequencePlayerSnapshot, SourceTimecode, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSequencePlayerSnapshot, CameraComponent, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSequencePlayerSnapshot, Settings, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSequencePlayerSnapshot, ShotID, 0x0084);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelSequencePlayerSnapshot, 0x0088);
		}

		// struct FBoundActorProxy
		TEST_METHOD(ScriptStruct__LevelSequence__BoundActorProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoundActorProxy, UnknownData_N5XJ, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBoundActorProxy, 0x0001);
		}

		// struct FLevelSequenceLegacyObjectReference
		TEST_METHOD(ScriptStruct__LevelSequence__LevelSequenceLegacyObjectReference)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLevelSequenceLegacyObjectReference, UnknownData_7RE7, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLevelSequenceLegacyObjectReference, 0x0020);
		}

		// struct FSessionServiceLogUnsubscribe
		TEST_METHOD(ScriptStruct__SessionMessages__SessionServiceLogUnsubscribe)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSessionServiceLogUnsubscribe, UnknownData_Q8X3, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSessionServiceLogUnsubscribe, 0x0001);
		}

		// struct FSessionServiceLogSubscribe
		TEST_METHOD(ScriptStruct__SessionMessages__SessionServiceLogSubscribe)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSessionServiceLogSubscribe, UnknownData_PU4D, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSessionServiceLogSubscribe, 0x0001);
		}

		// struct FSessionServiceLog
		TEST_METHOD(ScriptStruct__SessionMessages__SessionServiceLog)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSessionServiceLog, Category, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSessionServiceLog, Data, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSessionServiceLog, InstanceId, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSessionServiceLog, TimeSeconds, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSessionServiceLog, Verbosity, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSessionServiceLog, UnknownData_5129, 0x0031);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSessionServiceLog, 0x0038);
		}

		// struct FSessionServicePong
		TEST_METHOD(ScriptStruct__SessionMessages__SessionServicePong)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSessionServicePong, Authorized, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSessionServicePong, UnknownData_J0CK, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSessionServicePong, BuildDate, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSessionServicePong, DeviceName, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSessionServicePong, InstanceId, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSessionServicePong, InstanceName, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSessionServicePong, IsConsoleBuild, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSessionServicePong, UnknownData_OOHY, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSessionServicePong, PlatformName, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSessionServicePong, SessionId, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSessionServicePong, SessionName, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSessionServicePong, SessionOwner, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSessionServicePong, Standalone, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSessionServicePong, UnknownData_4XJ6, 0x0091);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSessionServicePong, 0x0098);
		}

		// struct FSessionServicePing
		TEST_METHOD(ScriptStruct__SessionMessages__SessionServicePing)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSessionServicePing, UserName, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSessionServicePing, 0x0010);
		}

		// struct FJsonObjectWrapper
		TEST_METHOD(ScriptStruct__JsonUtilities__JsonObjectWrapper)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FJsonObjectWrapper, JsonString, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FJsonObjectWrapper, UnknownData_VDBG, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FJsonObjectWrapper, 0x0020);
		}

		// struct FATABPChangerRequest
		TEST_METHOD(ScriptStruct__ATExt__ATABPChangerRequest)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATABPChangerRequest, UnknownData_EG3Y, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATABPChangerRequest, 0x0010);
		}

		// struct FLoopWearEffectInfo
		TEST_METHOD(ScriptStruct__ATExt__LoopWearEffectInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoopWearEffectInfo, UnknownData_7042, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoopWearEffectInfo, 0x0018);
		}

		// struct FSoulEmTableInfo
		TEST_METHOD(ScriptStruct__ATExt__SoulEmTableInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoulEmTableInfo, UnknownData_TBSD, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoulEmTableInfo, SoulEmIns, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoulEmTableInfo, 0x0010);
		}

		// struct FATDataAssetCarParameterAreaInfo
		TEST_METHOD(ScriptStruct__ATExt__ATDataAssetCarParameterAreaInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCarParameterAreaInfo, CarGroupName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCarParameterAreaInfo, DensityForSpawn, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCarParameterAreaInfo, CarSpeedMin, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCarParameterAreaInfo, CarSpeedMax, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetCarParameterAreaInfo, UnknownData_WC2S, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetCarParameterAreaInfo, 0x0018);
		}

		// struct FLoadingTalkAnimAsset
		TEST_METHOD(ScriptStruct__ATExt__LoadingTalkAnimAsset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLoadingTalkAnimAsset, UnknownData_KVOA, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLoadingTalkAnimAsset, 0x0028);
		}

		// struct FReferenceToTalkAnimAssetInstance
		TEST_METHOD(ScriptStruct__ATExt__ReferenceToTalkAnimAssetInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceToTalkAnimAssetInstance, TalkAnimBP, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceToTalkAnimAssetInstance, 0x0008);
		}

		// struct FATDataAssetTalkAnimationInfo
		TEST_METHOD(ScriptStruct__ATExt__ATDataAssetTalkAnimationInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetTalkAnimationInfo, MasterId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATDataAssetTalkAnimationInfo, TalkAnimBP, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATDataAssetTalkAnimationInfo, 0x0030);
		}

		// struct FMonitoringSlotSkill
		TEST_METHOD(ScriptStruct__ATExt__MonitoringSlotSkill)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringSlotSkill, SkillId, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMonitoringSlotSkill, 0x00A0);
		}

		// struct FATSaveCharacterBuff
		TEST_METHOD(ScriptStruct__ATExt__ATSaveCharacterBuff)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveCharacterBuff, BuffName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveCharacterBuff, Time, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveCharacterBuff, UnknownData_ZT33, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATSaveCharacterBuff, 0x0010);
		}

		// struct FATSaveCharacterStatus
		TEST_METHOD(ScriptStruct__ATExt__ATSaveCharacterStatus)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveCharacterStatus, Level, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveCharacterStatus, UnknownData_EKVV, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveCharacterStatus, Exp, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveCharacterStatus, HitPoint, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveCharacterStatus, MagicPoint, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveCharacterStatus, SparkingPoint, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveCharacterStatus, UnknownData_YKTO, 0x001C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATSaveCharacterStatus, 0x0020);
		}

		// struct FATSaveCharacterBoost
		TEST_METHOD(ScriptStruct__ATExt__ATSaveCharacterBoost)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveCharacterBoost, HitPoint, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveCharacterBoost, MagicPoint, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveCharacterBoost, ShortOffensivePow, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveCharacterBoost, ShortDefensivePow, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveCharacterBoost, LongOffensivePow, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveCharacterBoost, LongDefensivePow, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATSaveCharacterBoost, 0x0018);
		}

		// struct FMonitoringArea
		TEST_METHOD(ScriptStruct__ATExt__MonitoringArea)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringArea, CountZOrb, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringArea, CountLostItem, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringArea, CountCatchFruit, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringArea, CountOreDeposit, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringArea, CountHuntAnimal, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringArea, CountHuntDinosaur, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringArea, CountCatchFish, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringArea, CountBonfire, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringArea, UnknownData_KW3G, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringArea, CountFishing, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMonitoringArea, 0x0080);
		}

		// struct FATSaveGameIndividualCharacter
		TEST_METHOD(ScriptStruct__ATExt__ATSaveGameIndividualCharacter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveGameIndividualCharacter, SkillInfo, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveGameIndividualCharacter, VariationId, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveGameIndividualCharacter, FormId, 0x017C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveGameIndividualCharacter, SparkingID, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveGameIndividualCharacter, UnknownData_XGBG, 0x0184);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveGameIndividualCharacter, OtherBuffList, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveGameIndividualCharacter, Status, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveGameIndividualCharacter, Boost, 0x0268);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveGameIndividualCharacter, UnknownData_BH14, 0x0280);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATSaveGameIndividualCharacter, 0x0288);
		}

		// struct FMonitoringProgress
		TEST_METHOD(ScriptStruct__ATExt__MonitoringProgress)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringProgress, ClearStat, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringProgress, TotalGetMoney, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringProgress, TotalSubMoney, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringProgress, TotalGetDMedal, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringProgress, TotalUsedDMedal, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringProgress, TotalWinner, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringProgress, UnknownData_06SC, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringProgress, CountField, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMonitoringProgress, 0x00B8);
		}

		// struct FMonitoringCommon
		TEST_METHOD(ScriptStruct__ATExt__MonitoringCommon)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringCommon, CountMenu, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringCommon, CountDevelopShop, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringCommon, CountTrainingShop, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringCommon, CountTime, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringCommon, CountStartMiniGameAirCar, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringCommon, CountGoalMiniGameAirCar, 0x00FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringCommon, CountStartMiniGameTwinFoot, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringCommon, CountGoalMiniGameTwinFoot, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringCommon, CountStartMiniGameBaseBall, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringCommon, CountGoalMiniGameBaseBall, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringCommon, CountGoalMiniGameBaseBallHomeRun, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringCommon, UnknownData_OQPA, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringCommon, CountCooking, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringCommon, CountCookingCourse, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringCommon, CountDestroyedEnemiesBase, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringCommon, CountFieldMemories, 0x01BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringCommon, CountUseItemInBattle, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringCommon, UnknownData_B43R, 0x01C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringCommon, CountLandmark, 0x01C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringCommon, CountSkillInvocation, 0x0218);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringCommon, SkillOpen, 0x0268);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringCommon, TotalItem, 0x02B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringCommon, CountBoughtItemByShop, 0x0308);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringCommon, CountItemUsed, 0x0358);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringCommon, HasSkills, 0x03A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMonitoringCommon, 0x03F8);
		}

		// struct FMonitoringSavePack
		TEST_METHOD(ScriptStruct__ATExt__MonitoringSavePack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringSavePack, MonitoringCommon, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringSavePack, MonitoringProgress, 0x03F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMonitoringSavePack, MonitoringArea, 0x0448);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMonitoringSavePack, 0x0498);
		}

		// struct FATSaveSystemUser
		TEST_METHOD(ScriptStruct__ATExt__ATSaveSystemUser)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemUser, Version, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemUser, LastSaveSlot, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemUser, MostEpisodeNum, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemUser, MostChapterNum, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemUser, MostPartNum, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemUser, IsEulaAgree, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemUser, IsPrivacyPolicy, 0x0015);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemUser, IsKpiNotice, 0x0016);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemUser, UnknownData_H1CL, 0x0017);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemUser, DlcNoticeMap, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATSaveSystemUser, 0x0068);
		}

		// struct FATSaveSystemOption
		TEST_METHOD(ScriptStruct__ATExt__ATSaveSystemOption)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemOption, SkillPaletteWait, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemOption, HiddenMinimap, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemOption, PadVibration, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemOption, CameraSpeed, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemOption, CameraControlHorizontal, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemOption, CameraControlVertical, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemOption, LanguageVoice, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemOption, EnableSubtitle, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemOption, VolumeBgm, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemOption, VolumeSe, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemOption, VolumeVoice, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemOption, VolumeMovie, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemOption, IconDesign, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemOption, DisplaySize, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemOption, DisplayWidth, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemOption, DisplayHeight, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemOption, AantiAliasing, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemOption, ShadowQuality, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemOption, VSYNC, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemOption, WindowMode, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemOption, RenderRate, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemOption, KpiAgree, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemOption, Reserve, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATSaveSystemOption, 0x00AC);
		}

		// struct FATSaveSystemInputAssign
		TEST_METHOD(ScriptStruct__ATExt__ATSaveSystemInputAssign)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Walk, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Move_Up, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Move_Left, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Move_Down, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Move_Right, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Boost, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, BoostUp, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Jump, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Fly_Rolling, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Fly_Ascend, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Fly_Descend, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, KiSearch, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, TargetCursor, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, KiBlust, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, MapChange, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Ride, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Ride_Off, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, RideChange_Left, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, RideChange_Right, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, MineralRadar, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Car_Forward, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Car_Reverse, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Car_ChangeView, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Car_Sound_Left, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Car_Sound_Right, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, BaseBall_Swing, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, FastForward, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Battle_Boost, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Battle_HighBoost, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Battle_TargetChange_Left, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Battle_TargetChange_Right, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Battle_TargetCancel, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Battle_MeleeAtk, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Battle_KiAtk, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Battle_KiRecover, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Battle_MoveMode, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Battle_Guard, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Battle_Zcombo, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Battle_FormChange_Palette, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Battle_Support_Palette, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Battle_ActiveSkill_Palette, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Battle_Item_Palette, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Battle_Palette_Up, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Battle_Palette_Left, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Battle_Palette_Down, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Battle_Palette_Right, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, Keyboard_Type, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATSaveSystemInputAssign, UnknownData_DTZO, 0x0171);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATSaveSystemInputAssign, 0x0178);
		}

		// struct FMovieSceneTransformMask
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneTransformMask)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneTransformMask, Mask, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneTransformMask, 0x0004);
		}

		// struct FMovieSceneActorReferenceKey
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneActorReferenceKey)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneActorReferenceKey, Object, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneActorReferenceKey, 0x0018);
		}

		// struct FMovieSceneActorReferenceData : public FMovieSceneChannel
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneActorReferenceData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneActorReferenceData, KeyTimes, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneActorReferenceData, UnknownData_Y9EM, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneActorReferenceData, KeyValues, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneActorReferenceData, UnknownData_ILZP, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneActorReferenceData, 0x00A0);
		}

		// struct FMovieSceneCameraAnimSectionData
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneCameraAnimSectionData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCameraAnimSectionData, CameraAnim, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCameraAnimSectionData, PlayRate, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCameraAnimSectionData, PlayScale, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCameraAnimSectionData, BlendInTime, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCameraAnimSectionData, BlendOutTime, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCameraAnimSectionData, bLooping, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCameraAnimSectionData, UnknownData_UL19, 0x0019);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneCameraAnimSectionData, 0x0020);
		}

		// struct FMovieSceneCameraShakeSectionData
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneCameraShakeSectionData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCameraShakeSectionData, ShakeClass, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCameraShakeSectionData, PlayScale, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCameraShakeSectionData, PlaySpace, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCameraShakeSectionData, UnknownData_GM3M, 0x000D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCameraShakeSectionData, UserDefinedPlaySpace, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCameraShakeSectionData, UnknownData_ELQU, 0x001C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneCameraShakeSectionData, 0x0020);
		}

		// struct FMovieSceneEvent
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneEvent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvent, FunctionName, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvent, 0x0008);
		}

		// struct FMovieSceneEventParameters
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneEventParameters)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEventParameters, UnknownData_7GZB, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEventParameters, 0x0028);
		}

		// struct FEventPayload
		TEST_METHOD(ScriptStruct__MovieSceneTracks__EventPayload)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEventPayload, EventName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEventPayload, Parameters, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEventPayload, 0x0030);
		}

		// struct FMovieSceneEventSectionData : public FMovieSceneChannel
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneEventSectionData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEventSectionData, Times, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEventSectionData, KeyValues, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEventSectionData, UnknownData_X7HN, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEventSectionData, 0x0088);
		}

		// struct FMovieSceneEventChannel : public FMovieSceneChannel
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneEventChannel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEventChannel, KeyTimes, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEventChannel, KeyValues, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEventChannel, UnknownData_CSQW, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEventChannel, 0x0088);
		}

		// struct FColorParameterNameAndCurves
		TEST_METHOD(ScriptStruct__MovieSceneTracks__ColorParameterNameAndCurves)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FColorParameterNameAndCurves, ParameterName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FColorParameterNameAndCurves, RedCurve, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FColorParameterNameAndCurves, GreenCurve, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FColorParameterNameAndCurves, BlueCurve, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::FColorParameterNameAndCurves, AlphaCurve, 0x01E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FColorParameterNameAndCurves, 0x0288);
		}

		// struct FVectorParameterNameAndCurves
		TEST_METHOD(ScriptStruct__MovieSceneTracks__VectorParameterNameAndCurves)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVectorParameterNameAndCurves, ParameterName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVectorParameterNameAndCurves, XCurve, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVectorParameterNameAndCurves, YCurve, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVectorParameterNameAndCurves, ZCurve, 0x0148);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVectorParameterNameAndCurves, 0x01E8);
		}

		// struct FScalarParameterNameAndCurve
		TEST_METHOD(ScriptStruct__MovieSceneTracks__ScalarParameterNameAndCurve)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FScalarParameterNameAndCurve, ParameterName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FScalarParameterNameAndCurve, ParameterCurve, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FScalarParameterNameAndCurve, 0x00A8);
		}

		// struct FMovieSceneParticleChannel : public FMovieSceneByteChannel
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneParticleChannel)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneParticleChannel, 0x0098);
		}

		// struct FMovieSceneSkeletalAnimationParams
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneSkeletalAnimationParams)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSkeletalAnimationParams, Animation, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSkeletalAnimationParams, StartOffset, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSkeletalAnimationParams, EndOffset, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSkeletalAnimationParams, PlayRate, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSkeletalAnimationParams, UnknownData_HVPX, 0x0015);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSkeletalAnimationParams, SlotName, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSkeletalAnimationParams, Weight, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSkeletalAnimationParams, bSkipAnimNotifiers, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSkeletalAnimationParams, UnknownData_WUYO, 0x00C1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSkeletalAnimationParams, 0x00C8);
		}

		// struct FMovieSceneStringChannel : public FMovieSceneChannel
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneStringChannel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneStringChannel, Times, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneStringChannel, Values, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneStringChannel, DefaultValue, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneStringChannel, bHasDefaultValue, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneStringChannel, UnknownData_8VUM, 0x0039);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneStringChannel, 0x00A0);
		}

		// struct FMovieScene3DAttachSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieScene3DAttachSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DAttachSectionTemplate, AttachBindingID, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DAttachSectionTemplate, AttachSocketName, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DAttachSectionTemplate, AttachComponentName, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DAttachSectionTemplate, AttachmentLocationRule, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DAttachSectionTemplate, AttachmentRotationRule, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DAttachSectionTemplate, AttachmentScaleRule, 0x004A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DAttachSectionTemplate, DetachmentLocationRule, 0x004B);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DAttachSectionTemplate, DetachmentRotationRule, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DAttachSectionTemplate, DetachmentScaleRule, 0x004D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DAttachSectionTemplate, UnknownData_MJ0B, 0x004E);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieScene3DAttachSectionTemplate, 0x0050);
		}

		// struct FMovieScene3DPathSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieScene3DPathSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DPathSectionTemplate, PathBindingID, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DPathSectionTemplate, TimingCurve, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DPathSectionTemplate, FrontAxisEnum, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DPathSectionTemplate, UpAxisEnum, 0x00D9);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DPathSectionTemplate, UnknownData_96ED, 0x00DA);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DPathSectionTemplate, UnknownData_EQGV, 0x00DD);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieScene3DPathSectionTemplate, 0x00E0);
		}

		// struct FMovieScene3DTransformKeyStruct : public FMovieSceneKeyStruct
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieScene3DTransformKeyStruct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DTransformKeyStruct, Location, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DTransformKeyStruct, Rotation, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DTransformKeyStruct, Scale, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DTransformKeyStruct, Time, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DTransformKeyStruct, UnknownData_HVLW, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieScene3DTransformKeyStruct, 0x0048);
		}

		// struct FMovieScene3DScaleKeyStruct : public FMovieSceneKeyStruct
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieScene3DScaleKeyStruct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DScaleKeyStruct, Scale, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DScaleKeyStruct, Time, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DScaleKeyStruct, UnknownData_6FJN, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieScene3DScaleKeyStruct, 0x0030);
		}

		// struct FMovieScene3DRotationKeyStruct : public FMovieSceneKeyStruct
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieScene3DRotationKeyStruct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DRotationKeyStruct, Rotation, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DRotationKeyStruct, Time, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DRotationKeyStruct, UnknownData_9CET, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieScene3DRotationKeyStruct, 0x0030);
		}

		// struct FMovieScene3DLocationKeyStruct : public FMovieSceneKeyStruct
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieScene3DLocationKeyStruct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DLocationKeyStruct, Location, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DLocationKeyStruct, Time, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DLocationKeyStruct, UnknownData_I36V, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieScene3DLocationKeyStruct, 0x0030);
		}

		// struct FMovieScene3DTransformTemplateData
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieScene3DTransformTemplateData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DTransformTemplateData, TranslationCurve, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DTransformTemplateData, RotationCurve, 0x01E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DTransformTemplateData, ScaleCurve, 0x03C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DTransformTemplateData, ManualWeight, 0x05A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DTransformTemplateData, BlendType, 0x0640);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DTransformTemplateData, UnknownData_SZN9, 0x0641);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DTransformTemplateData, Mask, 0x0644);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DTransformTemplateData, bUseQuaternionInterpolation, 0x0648);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene3DTransformTemplateData, UnknownData_1G6T, 0x0649);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieScene3DTransformTemplateData, 0x0650);
		}

		// struct FMovieSceneComponentTransformSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneComponentTransformSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneComponentTransformSectionTemplate, TemplateData, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneComponentTransformSectionTemplate, 0x0670);
		}

		// struct FMovieSceneActorReferenceSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneActorReferenceSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneActorReferenceSectionTemplate, PropertyData, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneActorReferenceSectionTemplate, ActorReferenceData, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneActorReferenceSectionTemplate, 0x00E8);
		}

		// struct FMovieSceneAudioSectionTemplateData
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneAudioSectionTemplateData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneAudioSectionTemplateData, Sound, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneAudioSectionTemplateData, AudioStartOffset, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneAudioSectionTemplateData, UnknownData_YVPI, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneAudioSectionTemplateData, SectionStartTimeSeconds, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneAudioSectionTemplateData, AudioPitchMultiplierCurve, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneAudioSectionTemplateData, AudioVolumeCurve, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneAudioSectionTemplateData, RowIndex, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneAudioSectionTemplateData, bOverrideAttenuation, 0x015C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneAudioSectionTemplateData, UnknownData_1GK1, 0x015D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneAudioSectionTemplateData, AttenuationSettings, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneAudioSectionTemplateData, OnQueueSubtitles, 0x0168);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneAudioSectionTemplateData, OnAudioFinished, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneAudioSectionTemplateData, OnAudioPlaybackPercent, 0x0188);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneAudioSectionTemplateData, 0x0198);
		}

		// struct FMovieSceneAudioSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneAudioSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneAudioSectionTemplate, AudioData, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneAudioSectionTemplate, 0x01B8);
		}

		// struct FMovieSceneAdditiveCameraAnimationTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneAdditiveCameraAnimationTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneAdditiveCameraAnimationTemplate, 0x0020);
		}

		// struct FMovieSceneCameraShakeSectionTemplate : public FMovieSceneAdditiveCameraAnimationTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneCameraShakeSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCameraShakeSectionTemplate, SourceData, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCameraShakeSectionTemplate, SectionStartTime, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCameraShakeSectionTemplate, UnknownData_2V4R, 0x0044);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneCameraShakeSectionTemplate, 0x0048);
		}

		// struct FMovieSceneCameraAnimSectionTemplate : public FMovieSceneAdditiveCameraAnimationTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneCameraAnimSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCameraAnimSectionTemplate, SourceData, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCameraAnimSectionTemplate, SectionStartTime, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCameraAnimSectionTemplate, UnknownData_JATW, 0x0044);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneCameraAnimSectionTemplate, 0x0048);
		}

		// struct FMovieSceneCameraCutSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneCameraCutSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCameraCutSectionTemplate, CameraBindingID, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCameraCutSectionTemplate, UnknownData_IL5Z, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCameraCutSectionTemplate, CutTransform, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCameraCutSectionTemplate, bHasCutTransform, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneCameraCutSectionTemplate, UnknownData_I0W5, 0x0071);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneCameraCutSectionTemplate, 0x0080);
		}

		// struct FMovieSceneColorKeyStruct : public FMovieSceneKeyStruct
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneColorKeyStruct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneColorKeyStruct, Color, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneColorKeyStruct, Time, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneColorKeyStruct, UnknownData_0W4X, 0x001C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneColorKeyStruct, 0x0038);
		}

		// struct FMovieSceneColorSectionTemplate : public FMovieScenePropertySectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneColorSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneColorSectionTemplate, Curves, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneColorSectionTemplate, BlendType, 0x02C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneColorSectionTemplate, UnknownData_NX4I, 0x02C9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneColorSectionTemplate, 0x02D0);
		}

		// struct FMovieSceneEventTemplateBase : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneEventTemplateBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEventTemplateBase, EventReceivers, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEventTemplateBase, UnknownData_I92U, 0x0031);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEventTemplateBase, 0x0038);
		}

		// struct FMovieSceneEventRepeaterTemplate : public FMovieSceneEventTemplateBase
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneEventRepeaterTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEventRepeaterTemplate, EventToTrigger, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEventRepeaterTemplate, 0x0040);
		}

		// struct FMovieSceneEventTriggerTemplate : public FMovieSceneEventTemplateBase
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneEventTriggerTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEventTriggerTemplate, EventTimes, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEventTriggerTemplate, EventFunctions, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEventTriggerTemplate, 0x0058);
		}

		// struct FMovieSceneEventSectionTemplate : public FMovieSceneEventTemplateBase
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneEventSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEventSectionTemplate, EventData, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEventSectionTemplate, 0x00C0);
		}

		// struct FMovieSceneFadeSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneFadeSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneFadeSectionTemplate, FadeCurve, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneFadeSectionTemplate, FadeColor, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneFadeSectionTemplate, UnknownData_S7AP, 0x00D1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneFadeSectionTemplate, 0x00D8);
		}

		// struct FMovieSceneLevelVisibilitySectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneLevelVisibilitySectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneLevelVisibilitySectionTemplate, Visibility, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneLevelVisibilitySectionTemplate, UnknownData_LUS1, 0x0021);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneLevelVisibilitySectionTemplate, LevelNames, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneLevelVisibilitySectionTemplate, 0x0038);
		}

		// struct FMovieSceneParameterSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneParameterSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneParameterSectionTemplate, Scalars, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneParameterSectionTemplate, Vectors, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneParameterSectionTemplate, Colors, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneParameterSectionTemplate, 0x0050);
		}

		// struct FMovieSceneMaterialParameterCollectionTemplate : public FMovieSceneParameterSectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneMaterialParameterCollectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneMaterialParameterCollectionTemplate, MPC, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneMaterialParameterCollectionTemplate, 0x0058);
		}

		// struct FMovieSceneComponentMaterialSectionTemplate : public FMovieSceneParameterSectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneComponentMaterialSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneComponentMaterialSectionTemplate, MaterialIndex, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneComponentMaterialSectionTemplate, UnknownData_QAHC, 0x0054);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneComponentMaterialSectionTemplate, 0x0058);
		}

		// struct FMovieSceneParticleParameterSectionTemplate : public FMovieSceneParameterSectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneParticleParameterSectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneParticleParameterSectionTemplate, 0x0050);
		}

		// struct FMovieSceneParticleSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneParticleSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneParticleSectionTemplate, ParticleKeys, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneParticleSectionTemplate, 0x00B8);
		}

		// struct FMovieSceneEulerTransformPropertySectionTemplate : public FMovieScenePropertySectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneEulerTransformPropertySectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEulerTransformPropertySectionTemplate, TemplateData, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEulerTransformPropertySectionTemplate, 0x0698);
		}

		// struct FMovieSceneTransformPropertySectionTemplate : public FMovieScenePropertySectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneTransformPropertySectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneTransformPropertySectionTemplate, TemplateData, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneTransformPropertySectionTemplate, 0x0698);
		}

		// struct FMovieSceneVectorPropertySectionTemplate : public FMovieScenePropertySectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneVectorPropertySectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneVectorPropertySectionTemplate, ComponentCurves, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneVectorPropertySectionTemplate, NumChannelsUsed, 0x02C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneVectorPropertySectionTemplate, BlendType, 0x02CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneVectorPropertySectionTemplate, UnknownData_LAZ9, 0x02CD);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneVectorPropertySectionTemplate, 0x02D0);
		}

		// struct FMovieSceneStringPropertySectionTemplate : public FMovieScenePropertySectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneStringPropertySectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneStringPropertySectionTemplate, StringCurve, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneStringPropertySectionTemplate, 0x00E8);
		}

		// struct FMovieSceneIntegerPropertySectionTemplate : public FMovieScenePropertySectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneIntegerPropertySectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneIntegerPropertySectionTemplate, IntegerCurve, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneIntegerPropertySectionTemplate, BlendType, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneIntegerPropertySectionTemplate, UnknownData_OILW, 0x00D9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneIntegerPropertySectionTemplate, 0x00E0);
		}

		// struct FMovieSceneEnumPropertySectionTemplate : public FMovieScenePropertySectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneEnumPropertySectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEnumPropertySectionTemplate, EnumCurve, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEnumPropertySectionTemplate, 0x00E0);
		}

		// struct FMovieSceneBytePropertySectionTemplate : public FMovieScenePropertySectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneBytePropertySectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneBytePropertySectionTemplate, ByteCurve, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneBytePropertySectionTemplate, 0x00E0);
		}

		// struct FMovieSceneFloatPropertySectionTemplate : public FMovieScenePropertySectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneFloatPropertySectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneFloatPropertySectionTemplate, FloatFunction, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneFloatPropertySectionTemplate, BlendType, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneFloatPropertySectionTemplate, UnknownData_HZLR, 0x00E9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneFloatPropertySectionTemplate, 0x00F0);
		}

		// struct FMovieSceneBoolPropertySectionTemplate : public FMovieScenePropertySectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneBoolPropertySectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneBoolPropertySectionTemplate, BoolCurve, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneBoolPropertySectionTemplate, 0x00D8);
		}

		// struct FMovieSceneSkeletalAnimationSectionTemplateParameters : public FMovieSceneSkeletalAnimationParams
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneSkeletalAnimationSectionTemplateParameters)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSkeletalAnimationSectionTemplateParameters, SectionStartTime, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSkeletalAnimationSectionTemplateParameters, SectionEndTime, 0x00CC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSkeletalAnimationSectionTemplateParameters, 0x00D0);
		}

		// struct FMovieSceneSkeletalAnimationSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneSkeletalAnimationSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSkeletalAnimationSectionTemplate, Params, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSkeletalAnimationSectionTemplate, 0x00F0);
		}

		// struct FMovieSceneSlomoSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneSlomoSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSlomoSectionTemplate, SlomoCurve, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSlomoSectionTemplate, 0x00C0);
		}

		// struct FMovieSceneSpawnSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneSpawnSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSpawnSectionTemplate, Curve, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSpawnSectionTemplate, 0x00B0);
		}

		// struct FMovieSceneVectorKeyStructBase : public FMovieSceneKeyStruct
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneVectorKeyStructBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneVectorKeyStructBase, Time, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneVectorKeyStructBase, UnknownData_TEKZ, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneVectorKeyStructBase, 0x0028);
		}

		// struct FMovieSceneVector4KeyStruct : public FMovieSceneVectorKeyStructBase
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneVector4KeyStruct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneVector4KeyStruct, UnknownData_BY91, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneVector4KeyStruct, Vector, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneVector4KeyStruct, 0x0040);
		}

		// struct FMovieSceneVectorKeyStruct : public FMovieSceneVectorKeyStructBase
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneVectorKeyStruct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneVectorKeyStruct, Vector, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneVectorKeyStruct, UnknownData_N0JD, 0x0034);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneVectorKeyStruct, 0x0038);
		}

		// struct FMovieSceneVector2DKeyStruct : public FMovieSceneVectorKeyStructBase
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneVector2DKeyStruct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneVector2DKeyStruct, Vector, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneVector2DKeyStruct, 0x0030);
		}

		// struct FMovieSceneVisibilitySectionTemplate : public FMovieSceneBoolPropertySectionTemplate
		TEST_METHOD(ScriptStruct__MovieSceneTracks__MovieSceneVisibilitySectionTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneVisibilitySectionTemplate, 0x00D8);
		}

		// struct FFoliageVertexColorChannelMask
		TEST_METHOD(ScriptStruct__Foliage__FoliageVertexColorChannelMask)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFoliageVertexColorChannelMask, UnknownData_STUP, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFoliageVertexColorChannelMask, MaskThreshold, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFoliageVertexColorChannelMask, UnknownData_F4UV, 0x0009);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFoliageVertexColorChannelMask, 0x000C);
		}

		// struct FFoliageTypeObject
		TEST_METHOD(ScriptStruct__Foliage__FoliageTypeObject)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFoliageTypeObject, FoliageTypeObject, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFoliageTypeObject, TypeInstance, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFoliageTypeObject, bIsAsset, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFoliageTypeObject, UnknownData_3I8E, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFoliageTypeObject, Type, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFoliageTypeObject, 0x0020);
		}

		// struct FProceduralFoliageInstance
		TEST_METHOD(ScriptStruct__Foliage__ProceduralFoliageInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FProceduralFoliageInstance, Location, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProceduralFoliageInstance, UnknownData_A5K2, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProceduralFoliageInstance, Rotation, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProceduralFoliageInstance, Normal, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProceduralFoliageInstance, Age, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProceduralFoliageInstance, Scale, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProceduralFoliageInstance, UnknownData_9YDL, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProceduralFoliageInstance, Type, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FProceduralFoliageInstance, UnknownData_PNPE, 0x0040);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FProceduralFoliageInstance, 0x0060);
		}

		// struct FClothCollisionPrim_SphereConnection
		TEST_METHOD(ScriptStruct__ClothingSystemRuntimeInterface__ClothCollisionPrim_SphereConnection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothCollisionPrim_SphereConnection, SphereIndices, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClothCollisionPrim_SphereConnection, 0x0008);
		}

		// struct FClothCollisionPrim_Convex
		TEST_METHOD(ScriptStruct__ClothingSystemRuntimeInterface__ClothCollisionPrim_Convex)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothCollisionPrim_Convex, Planes, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothCollisionPrim_Convex, BoneIndex, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothCollisionPrim_Convex, UnknownData_APML, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClothCollisionPrim_Convex, 0x0018);
		}

		// struct FClothCollisionPrim_Sphere
		TEST_METHOD(ScriptStruct__ClothingSystemRuntimeInterface__ClothCollisionPrim_Sphere)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothCollisionPrim_Sphere, BoneIndex, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothCollisionPrim_Sphere, Radius, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothCollisionPrim_Sphere, LocalPosition, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClothCollisionPrim_Sphere, 0x0014);
		}

		// struct FClothCollisionData
		TEST_METHOD(ScriptStruct__ClothingSystemRuntimeInterface__ClothCollisionData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothCollisionData, Spheres, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothCollisionData, SphereConnections, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothCollisionData, Convexes, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClothCollisionData, 0x0030);
		}

		// struct FSubmixEffectDynamicsProcessorSettings
		TEST_METHOD(ScriptStruct__AudioMixer__SubmixEffectDynamicsProcessorSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectDynamicsProcessorSettings, DynamicsProcessorType, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectDynamicsProcessorSettings, PeakMode, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectDynamicsProcessorSettings, UnknownData_8F1E, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectDynamicsProcessorSettings, LookAheadMsec, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectDynamicsProcessorSettings, AttackTimeMsec, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectDynamicsProcessorSettings, ReleaseTimeMsec, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectDynamicsProcessorSettings, ThresholdDb, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectDynamicsProcessorSettings, Ratio, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectDynamicsProcessorSettings, KneeBandwidthDb, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectDynamicsProcessorSettings, InputGainDb, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectDynamicsProcessorSettings, OutputGainDb, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectDynamicsProcessorSettings, UnknownData_B716, 0x0025);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSubmixEffectDynamicsProcessorSettings, 0x0028);
		}

		// struct FSubmixEffectEQBand
		TEST_METHOD(ScriptStruct__AudioMixer__SubmixEffectEQBand)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectEQBand, Frequency, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectEQBand, Bandwidth, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectEQBand, GainDb, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectEQBand, UnknownData_MSYT, 0x000D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSubmixEffectEQBand, 0x0010);
		}

		// struct FSubmixEffectSubmixEQSettings
		TEST_METHOD(ScriptStruct__AudioMixer__SubmixEffectSubmixEQSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectSubmixEQSettings, EQBands, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSubmixEffectSubmixEQSettings, 0x0010);
		}

		// struct FSubmixEffectReverbSettings
		TEST_METHOD(ScriptStruct__AudioMixer__SubmixEffectReverbSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectReverbSettings, Density, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectReverbSettings, Diffusion, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectReverbSettings, Gain, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectReverbSettings, GainHF, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectReverbSettings, DecayTime, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectReverbSettings, DecayHFRatio, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectReverbSettings, ReflectionsGain, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectReverbSettings, ReflectionsDelay, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectReverbSettings, LateGain, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectReverbSettings, LateDelay, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectReverbSettings, AirAbsorptionGainHF, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectReverbSettings, WetLevel, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubmixEffectReverbSettings, DryLevel, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSubmixEffectReverbSettings, 0x0034);
		}

		// struct FDirectionKey
		TEST_METHOD(ScriptStruct__ATSpecialTrack__DirectionKey)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDirectionKey, EventName, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDirectionKey, 0x0008);
		}

		// struct FMovieSceneDirectionSectionData : public FMovieSceneChannel
		TEST_METHOD(ScriptStruct__ATSpecialTrack__MovieSceneDirectionSectionData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneDirectionSectionData, Times, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneDirectionSectionData, KeyValues, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneDirectionSectionData, UnknownData_18ZL, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneDirectionSectionData, 0x0090);
		}

		// struct FDemoLocationInfo
		TEST_METHOD(ScriptStruct__ATSpecialTrack__DemoLocationInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDemoLocationInfo, LocationID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDemoLocationInfo, Position, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDemoLocationInfo, UnknownData_2CX6, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDemoLocationInfo, 0x0018);
		}

		// struct FATMovieSceneNextPreviewTitleData
		TEST_METHOD(ScriptStruct__ATSpecialTrack__ATMovieSceneNextPreviewTitleData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneNextPreviewTitleData, TitleMessageId, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATMovieSceneNextPreviewTitleData, 0x0010);
		}

		// struct FATMovieSceneNextPreviewDetailData
		TEST_METHOD(ScriptStruct__ATSpecialTrack__ATMovieSceneNextPreviewDetailData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneNextPreviewDetailData, HeaderMessageId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneNextPreviewDetailData, SubjectMessageId, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATMovieSceneNextPreviewDetailData, 0x0020);
		}

		// struct FSoundSeOptionData
		TEST_METHOD(ScriptStruct__ATSpecialTrack__SoundSeOptionData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundSeOptionData, SeType, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundSeOptionData, commonCode, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundSeOptionData, fieldCode, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundSeOptionData, battleCode, 0x0003);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundSeOptionData, minigameCode, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundSeOptionData, ambientCode, 0x0005);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundSeOptionData, UnknownData_WXQB, 0x0006);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundSeOptionData, Pitch, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundSeOptionData, 0x000C);
		}

		// struct FSoundBgmOptionData
		TEST_METHOD(ScriptStruct__ATSpecialTrack__SoundBgmOptionData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundBgmOptionData, bgmID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundBgmOptionData, UnknownData_QT94, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundBgmOptionData, Channel, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundBgmOptionData, 0x0008);
		}

		// struct FSoundVoiceOptionData
		TEST_METHOD(ScriptStruct__ATSpecialTrack__SoundVoiceOptionData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundVoiceOptionData, code, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSoundVoiceOptionData, charatype, 0x0001);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSoundVoiceOptionData, 0x0002);
		}

		// struct FATMovieSceneCharaIntroductionSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__ATSpecialTrack__ATMovieSceneCharaIntroductionSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneCharaIntroductionSectionTemplate, SectionStartFrame, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneCharaIntroductionSectionTemplate, SectionEndFrame, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneCharaIntroductionSectionTemplate, CharacterID, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneCharaIntroductionSectionTemplate, PopularNameID, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneCharaIntroductionSectionTemplate, DispPos, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATMovieSceneCharaIntroductionSectionTemplate, 0x0040);
		}

		// struct FATMovieSceneDirectionSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__ATSpecialTrack__ATMovieSceneDirectionSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneDirectionSectionTemplate, DirectionsData, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATMovieSceneDirectionSectionTemplate, 0x00B0);
		}

		// struct FATMovieSceneFadeSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__ATSpecialTrack__ATMovieSceneFadeSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneFadeSectionTemplate, SectionStartTime, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneFadeSectionTemplate, SectionEndTime, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneFadeSectionTemplate, FadeType, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneFadeSectionTemplate, FadeColor, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneFadeSectionTemplate, bImmidiate, 0x002A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneFadeSectionTemplate, IsFirstSection, 0x002B);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneFadeSectionTemplate, IsNeedFirstTickEvaluate, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneFadeSectionTemplate, UnknownData_AMYL, 0x002D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATMovieSceneFadeSectionTemplate, 0x0030);
		}

		// struct FATMovieSceneForcedLodSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__ATSpecialTrack__ATMovieSceneForcedLodSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneForcedLodSectionTemplate, SectionStartFrame, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneForcedLodSectionTemplate, SectionEndFrame, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneForcedLodSectionTemplate, ForcedLodModel, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneForcedLodSectionTemplate, TargetType, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATMovieSceneForcedLodSectionTemplate, 0x0030);
		}

		// struct FATMovieSceneLipSyncSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__ATSpecialTrack__ATMovieSceneLipSyncSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneLipSyncSectionTemplate, SectionStartFrame, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneLipSyncSectionTemplate, SectionEndFrame, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneLipSyncSectionTemplate, SubtitleID, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneLipSyncSectionTemplate, BlendSpaceAsset, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATMovieSceneLipSyncSectionTemplate, 0x0038);
		}

		// struct FATMovieSceneLocationSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__ATSpecialTrack__ATMovieSceneLocationSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneLocationSectionTemplate, SectionStartFrame, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneLocationSectionTemplate, SectionEndFrame, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneLocationSectionTemplate, AreaID, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneLocationSectionTemplate, DemoType, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneLocationSectionTemplate, UnknownData_5ACR, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneLocationSectionTemplate, LocationInfo, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATMovieSceneLocationSectionTemplate, 0x0048);
		}

		// struct FATMovieSceneMovieSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__ATSpecialTrack__ATMovieSceneMovieSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneMovieSectionTemplate, SectionStartTime, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneMovieSectionTemplate, SectionEndTime, 0x0024);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATMovieSceneMovieSectionTemplate, 0x0028);
		}

		// struct FATMovieSceneNearClipSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__ATSpecialTrack__ATMovieSceneNearClipSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneNearClipSectionTemplate, FloatCurve, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATMovieSceneNearClipSectionTemplate, 0x00C0);
		}

		// struct FATMovieSceneNextPreviewSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__ATSpecialTrack__ATMovieSceneNextPreviewSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneNextPreviewSectionTemplate, SectionStartFrame, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneNextPreviewSectionTemplate, SectionEndFrame, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneNextPreviewSectionTemplate, bTitle, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneNextPreviewSectionTemplate, UnknownData_ADJY, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneNextPreviewSectionTemplate, TitleMessageId, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneNextPreviewSectionTemplate, bDetail, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneNextPreviewSectionTemplate, UnknownData_GT1J, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneNextPreviewSectionTemplate, DetailHeaderMessageId, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneNextPreviewSectionTemplate, DetailSubjectMessageId, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATMovieSceneNextPreviewSectionTemplate, 0x0068);
		}

		// struct FATMovieSceneQuestMainLogoSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__ATSpecialTrack__ATMovieSceneQuestMainLogoSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneQuestMainLogoSectionTemplate, SectionStartFrame, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneQuestMainLogoSectionTemplate, SectionEndFrame, 0x0024);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATMovieSceneQuestMainLogoSectionTemplate, 0x0028);
		}

		// struct FDemoSoundInfo
		TEST_METHOD(ScriptStruct__ATSpecialTrack__DemoSoundInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDemoSoundInfo, LocationID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDemoSoundInfo, Position, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDemoSoundInfo, UnknownData_VNMX, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDemoSoundInfo, 0x0018);
		}

		// struct FATMovieSceneSoundSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__ATSpecialTrack__ATMovieSceneSoundSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneSoundSectionTemplate, SectionStartTime, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneSoundSectionTemplate, SectionEndTime, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneSoundSectionTemplate, FuncType, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneSoundSectionTemplate, UnknownData_SF5A, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneSoundSectionTemplate, AreaID, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneSoundSectionTemplate, MovSection, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATMovieSceneSoundSectionTemplate, 0x0040);
		}

		// struct FATMovieSceneSubtitleSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__ATSpecialTrack__ATMovieSceneSubtitleSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneSubtitleSectionTemplate, SectionStartFrame, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneSubtitleSectionTemplate, SectionEndFrame, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneSubtitleSectionTemplate, bEnableSubtitle, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneSubtitleSectionTemplate, UnknownData_7NPE, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneSubtitleSectionTemplate, SubtitleID, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneSubtitleSectionTemplate, bContinue, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneSubtitleSectionTemplate, bOnlyVoice, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneSubtitleSectionTemplate, UnknownData_K8WO, 0x003A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneSubtitleSectionTemplate, TargetCh, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATMovieSceneSubtitleSectionTemplate, 0x0040);
		}

		// struct FATMovieSceneTelopSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__ATSpecialTrack__ATMovieSceneTelopSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneTelopSectionTemplate, SectionStartFrame, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneTelopSectionTemplate, SectionEndFrame, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneTelopSectionTemplate, TelopInfo, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FATMovieSceneTelopSectionTemplate, TelopInfo2, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FATMovieSceneTelopSectionTemplate, 0x0078);
		}

		// struct FMeshElementAttributeValue
		TEST_METHOD(ScriptStruct__EditableMesh__MeshElementAttributeValue)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshElementAttributeValue, UnknownData_P1ZN, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMeshElementAttributeValue, 0x0050);
		}

		// struct FSubdividedWireEdge
		TEST_METHOD(ScriptStruct__EditableMesh__SubdividedWireEdge)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubdividedWireEdge, EdgeVertex0PositionIndex, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubdividedWireEdge, EdgeVertex1PositionIndex, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubdividedWireEdge, UnknownData_XHK9, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSubdividedWireEdge, 0x000C);
		}

		// struct FPolygonGroupForPolygon
		TEST_METHOD(ScriptStruct__EditableMesh__PolygonGroupForPolygon)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPolygonGroupForPolygon, PolygonID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPolygonGroupForPolygon, PolygonGroupID, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPolygonGroupForPolygon, 0x0008);
		}

		// struct FVertexIndexAndInstanceID
		TEST_METHOD(ScriptStruct__EditableMesh__VertexIndexAndInstanceID)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVertexIndexAndInstanceID, ContourIndex, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVertexIndexAndInstanceID, VertexInstanceID, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVertexIndexAndInstanceID, 0x0008);
		}

		// struct FVertexInstancesForPolygonHole
		TEST_METHOD(ScriptStruct__EditableMesh__VertexInstancesForPolygonHole)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVertexInstancesForPolygonHole, VertexIndicesAndInstanceIDs, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVertexInstancesForPolygonHole, 0x0010);
		}

		// struct FChangeVertexInstancesForPolygon
		TEST_METHOD(ScriptStruct__EditableMesh__ChangeVertexInstancesForPolygon)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FChangeVertexInstancesForPolygon, PolygonID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FChangeVertexInstancesForPolygon, UnknownData_PO0P, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FChangeVertexInstancesForPolygon, PerimeterVertexIndicesAndInstanceIDs, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FChangeVertexInstancesForPolygon, VertexIndicesAndInstanceIDsForEachHole, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FChangeVertexInstancesForPolygon, 0x0028);
		}

		// struct FMeshElementAttributeData
		TEST_METHOD(ScriptStruct__EditableMesh__MeshElementAttributeData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshElementAttributeData, AttributeName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshElementAttributeData, AttributeIndex, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshElementAttributeData, UnknownData_DZTM, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshElementAttributeData, AttributeValue, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMeshElementAttributeData, 0x0060);
		}

		// struct FMeshElementAttributeList
		TEST_METHOD(ScriptStruct__EditableMesh__MeshElementAttributeList)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshElementAttributeList, Attributes, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMeshElementAttributeList, 0x0010);
		}

		// struct FEdgeToCreate
		TEST_METHOD(ScriptStruct__EditableMesh__EdgeToCreate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdgeToCreate, VertexID0, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdgeToCreate, VertexID1, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdgeToCreate, ConnectedPolygons, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdgeToCreate, EdgeAttributes, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdgeToCreate, OriginalEdgeID, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEdgeToCreate, UnknownData_0D5P, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEdgeToCreate, 0x0030);
		}

		// struct FPolygonGroupToCreate
		TEST_METHOD(ScriptStruct__EditableMesh__PolygonGroupToCreate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPolygonGroupToCreate, PolygonGroupAttributes, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPolygonGroupToCreate, OriginalPolygonGroupID, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPolygonGroupToCreate, UnknownData_TXWF, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPolygonGroupToCreate, 0x0018);
		}

		// struct FVertexAndAttributes
		TEST_METHOD(ScriptStruct__EditableMesh__VertexAndAttributes)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVertexAndAttributes, VertexInstanceID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVertexAndAttributes, VertexID, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVertexAndAttributes, PolygonVertexAttributes, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVertexAndAttributes, 0x0018);
		}

		// struct FPolygonHoleVertices
		TEST_METHOD(ScriptStruct__EditableMesh__PolygonHoleVertices)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPolygonHoleVertices, HoleVertices, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPolygonHoleVertices, 0x0010);
		}

		// struct FPolygonToCreate
		TEST_METHOD(ScriptStruct__EditableMesh__PolygonToCreate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPolygonToCreate, PolygonGroupID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPolygonToCreate, UnknownData_92TM, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPolygonToCreate, PerimeterVertices, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPolygonToCreate, PolygonHoles, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPolygonToCreate, OriginalPolygonID, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPolygonToCreate, PolygonEdgeHardness, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPolygonToCreate, UnknownData_4XFA, 0x002D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPolygonToCreate, 0x0030);
		}

		// struct FVertexInstanceToCreate
		TEST_METHOD(ScriptStruct__EditableMesh__VertexInstanceToCreate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVertexInstanceToCreate, VertexID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVertexInstanceToCreate, UnknownData_AXBA, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVertexInstanceToCreate, VertexInstanceAttributes, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVertexInstanceToCreate, OriginalVertexInstanceID, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVertexInstanceToCreate, UnknownData_YEU6, 0x001C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVertexInstanceToCreate, 0x0020);
		}

		// struct FVertexToCreate
		TEST_METHOD(ScriptStruct__EditableMesh__VertexToCreate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVertexToCreate, VertexAttributes, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVertexToCreate, OriginalVertexID, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVertexToCreate, UnknownData_VWDM, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVertexToCreate, 0x0018);
		}

		// struct FSubdividedQuadVertex
		TEST_METHOD(ScriptStruct__EditableMesh__SubdividedQuadVertex)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubdividedQuadVertex, VertexPositionIndex, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubdividedQuadVertex, TextureCoordinate0, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubdividedQuadVertex, TextureCoordinate1, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubdividedQuadVertex, VertexColor, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubdividedQuadVertex, VertexNormal, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubdividedQuadVertex, VertexTangent, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubdividedQuadVertex, VertexBinormalSign, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSubdividedQuadVertex, 0x0034);
		}

		// struct FSubdividedQuad
		TEST_METHOD(ScriptStruct__EditableMesh__SubdividedQuad)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubdividedQuad, QuadVertex0, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubdividedQuad, QuadVertex1, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubdividedQuad, QuadVertex2, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubdividedQuad, QuadVertex3, 0x009C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSubdividedQuad, 0x00D0);
		}

		// struct FSubdivisionLimitSection
		TEST_METHOD(ScriptStruct__EditableMesh__SubdivisionLimitSection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubdivisionLimitSection, SubdividedQuads, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSubdivisionLimitSection, 0x0010);
		}

		// struct FSubdivisionLimitData
		TEST_METHOD(ScriptStruct__EditableMesh__SubdivisionLimitData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubdivisionLimitData, VertexPositions, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubdivisionLimitData, Sections, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSubdivisionLimitData, SubdividedWireEdges, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSubdivisionLimitData, 0x0030);
		}

		// struct FVertexToMove
		TEST_METHOD(ScriptStruct__EditableMesh__VertexToMove)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVertexToMove, VertexID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVertexToMove, NewVertexPosition, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVertexToMove, 0x0010);
		}

		// struct FAttributesForEdge
		TEST_METHOD(ScriptStruct__EditableMesh__AttributesForEdge)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAttributesForEdge, EdgeID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAttributesForEdge, UnknownData_OQD2, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAttributesForEdge, EdgeAttributes, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAttributesForEdge, 0x0018);
		}

		// struct FVerticesForEdge
		TEST_METHOD(ScriptStruct__EditableMesh__VerticesForEdge)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVerticesForEdge, EdgeID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVerticesForEdge, NewVertexID0, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVerticesForEdge, NewVertexID1, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVerticesForEdge, 0x000C);
		}

		// struct FVertexAttributesForPolygonHole
		TEST_METHOD(ScriptStruct__EditableMesh__VertexAttributesForPolygonHole)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVertexAttributesForPolygonHole, VertexAttributeList, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVertexAttributesForPolygonHole, 0x0010);
		}

		// struct FVertexAttributesForPolygon
		TEST_METHOD(ScriptStruct__EditableMesh__VertexAttributesForPolygon)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVertexAttributesForPolygon, PolygonID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVertexAttributesForPolygon, UnknownData_ZXOT, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVertexAttributesForPolygon, PerimeterVertexAttributeLists, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVertexAttributesForPolygon, VertexAttributeListsForEachHole, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVertexAttributesForPolygon, 0x0028);
		}

		// struct FAttributesForVertexInstance
		TEST_METHOD(ScriptStruct__EditableMesh__AttributesForVertexInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAttributesForVertexInstance, VertexInstanceID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAttributesForVertexInstance, UnknownData_A45P, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAttributesForVertexInstance, VertexInstanceAttributes, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAttributesForVertexInstance, 0x0018);
		}

		// struct FAttributesForVertex
		TEST_METHOD(ScriptStruct__EditableMesh__AttributesForVertex)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAttributesForVertex, VertexID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAttributesForVertex, UnknownData_QDV0, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAttributesForVertex, VertexAttributes, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAttributesForVertex, 0x0018);
		}

		// struct FVertexPair
		TEST_METHOD(ScriptStruct__EditableMesh__VertexPair)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FVertexPair, VertexID0, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FVertexPair, VertexID1, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVertexPair, 0x0008);
		}

		// struct FPolygonToSplit
		TEST_METHOD(ScriptStruct__EditableMesh__PolygonToSplit)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPolygonToSplit, PolygonID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPolygonToSplit, UnknownData_LRIA, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPolygonToSplit, VertexPairsToSplitAt, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPolygonToSplit, 0x0018);
		}

		// struct FRenderingPolygonGroup
		TEST_METHOD(ScriptStruct__EditableMesh__RenderingPolygonGroup)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRenderingPolygonGroup, RenderingSectionIndex, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRenderingPolygonGroup, MaterialIndex, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRenderingPolygonGroup, MaxTriangles, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRenderingPolygonGroup, UnknownData_841B, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRenderingPolygonGroup, 0x0048);
		}

		// struct FTriangleID : public FElementID
		TEST_METHOD(ScriptStruct__EditableMesh__TriangleID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTriangleID, 0x0004);
		}

		// struct FRenderingPolygon
		TEST_METHOD(ScriptStruct__EditableMesh__RenderingPolygon)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRenderingPolygon, PolygonGroupID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRenderingPolygon, UnknownData_10B6, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRenderingPolygon, TriangulatedPolygonTriangleIndices, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRenderingPolygon, 0x0018);
		}

		// struct FKey
		TEST_METHOD(ScriptStruct__InputCore__Key)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FKey, KeyName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FKey, UnknownData_QRK0, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FKey, 0x0018);
		}

		// struct FCameraLookatTrackingSettings
		TEST_METHOD(ScriptStruct__CinematicCamera__CameraLookatTrackingSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraLookatTrackingSettings, UnknownData_CHNR, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraLookatTrackingSettings, LookAtTrackingInterpSpeed, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraLookatTrackingSettings, UnknownData_1SQB, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraLookatTrackingSettings, ActorToTrack, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraLookatTrackingSettings, RelativeOffset, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraLookatTrackingSettings, UnknownData_BJDO, 0x002D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCameraLookatTrackingSettings, 0x0030);
		}

		// struct FCameraFilmbackSettings
		TEST_METHOD(ScriptStruct__CinematicCamera__CameraFilmbackSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraFilmbackSettings, SensorWidth, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraFilmbackSettings, SensorHeight, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraFilmbackSettings, SensorAspectRatio, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCameraFilmbackSettings, 0x000C);
		}

		// struct FCameraLensSettings
		TEST_METHOD(ScriptStruct__CinematicCamera__CameraLensSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraLensSettings, MinFocalLength, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraLensSettings, MaxFocalLength, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraLensSettings, MinFStop, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraLensSettings, MaxFStop, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraLensSettings, MinimumFocusDistance, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraLensSettings, DiaphragmBladeCount, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCameraLensSettings, 0x0018);
		}

		// struct FNamedLensPreset
		TEST_METHOD(ScriptStruct__CinematicCamera__NamedLensPreset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedLensPreset, Name, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedLensPreset, LensSettings, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNamedLensPreset, 0x0028);
		}

		// struct FNamedFilmbackPreset
		TEST_METHOD(ScriptStruct__CinematicCamera__NamedFilmbackPreset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedFilmbackPreset, Name, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedFilmbackPreset, FilmbackSettings, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedFilmbackPreset, UnknownData_QUSB, 0x001C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNamedFilmbackPreset, 0x0020);
		}

		// struct FCameraTrackingFocusSettings
		TEST_METHOD(ScriptStruct__CinematicCamera__CameraTrackingFocusSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraTrackingFocusSettings, ActorToTrack, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraTrackingFocusSettings, RelativeOffset, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraTrackingFocusSettings, UnknownData_MNWY, 0x0015);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCameraTrackingFocusSettings, 0x0018);
		}

		// struct FCameraFocusSettings
		TEST_METHOD(ScriptStruct__CinematicCamera__CameraFocusSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraFocusSettings, FocusMethod, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraFocusSettings, UnknownData_EW2V, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraFocusSettings, ManualFocusDistance, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraFocusSettings, TrackingFocusSettings, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraFocusSettings, UnknownData_NXPK, 0x0021);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraFocusSettings, DebugFocusPlaneColor, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraFocusSettings, UnknownData_3MSH, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraFocusSettings, FocusSmoothingInterpSpeed, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraFocusSettings, FocusOffset, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCameraFocusSettings, UnknownData_PNXB, 0x0034);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCameraFocusSettings, 0x0038);
		}

		// struct FGameplayTag
		TEST_METHOD(ScriptStruct__GameplayTags__GameplayTag)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameplayTag, TagName, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameplayTag, 0x0008);
		}

		// struct FGameplayTagQuery
		TEST_METHOD(ScriptStruct__GameplayTags__GameplayTagQuery)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameplayTagQuery, TokenStreamVersion, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameplayTagQuery, UnknownData_5VVT, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameplayTagQuery, TagDictionary, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameplayTagQuery, QueryTokenStream, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameplayTagQuery, UserDescription, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameplayTagQuery, AutoDescription, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameplayTagQuery, 0x0048);
		}

		// struct FGameplayTagContainer
		TEST_METHOD(ScriptStruct__GameplayTags__GameplayTagContainer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameplayTagContainer, GameplayTags, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameplayTagContainer, ParentTags, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameplayTagContainer, 0x0020);
		}

		// struct FGameplayTagSource
		TEST_METHOD(ScriptStruct__GameplayTags__GameplayTagSource)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameplayTagSource, SourceName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameplayTagSource, SourceType, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameplayTagSource, UnknownData_AMWI, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameplayTagSource, SourceTagList, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameplayTagSource, SourceRestrictedTagList, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameplayTagSource, 0x0020);
		}

		// struct FGameplayTagTableRow : public FTableRowBase
		TEST_METHOD(ScriptStruct__GameplayTags__GameplayTagTableRow)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameplayTagTableRow, Tag, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameplayTagTableRow, DevComment, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameplayTagTableRow, 0x0020);
		}

		// struct FRestrictedGameplayTagTableRow : public FGameplayTagTableRow
		TEST_METHOD(ScriptStruct__GameplayTags__RestrictedGameplayTagTableRow)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRestrictedGameplayTagTableRow, bAllowNonRestrictedChildren, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRestrictedGameplayTagTableRow, UnknownData_901U, 0x0021);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRestrictedGameplayTagTableRow, 0x0028);
		}

		// struct FGameplayTagCategoryRemap
		TEST_METHOD(ScriptStruct__GameplayTags__GameplayTagCategoryRemap)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameplayTagCategoryRemap, BaseCategory, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameplayTagCategoryRemap, RemapCategories, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameplayTagCategoryRemap, 0x0020);
		}

		// struct FGameplayTagRedirect
		TEST_METHOD(ScriptStruct__GameplayTags__GameplayTagRedirect)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameplayTagRedirect, OldTagName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameplayTagRedirect, NewTagName, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameplayTagRedirect, 0x0010);
		}

		// struct FRestrictedConfigInfo
		TEST_METHOD(ScriptStruct__GameplayTags__RestrictedConfigInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRestrictedConfigInfo, RestrictedConfigName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRestrictedConfigInfo, Owners, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRestrictedConfigInfo, 0x0020);
		}

		// struct FGameplayTagCreationWidgetHelper
		TEST_METHOD(ScriptStruct__GameplayTags__GameplayTagCreationWidgetHelper)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameplayTagCreationWidgetHelper, UnknownData_QH6X, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameplayTagCreationWidgetHelper, 0x0001);
		}

		// struct FGameplayTagReferenceHelper
		TEST_METHOD(ScriptStruct__GameplayTags__GameplayTagReferenceHelper)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameplayTagReferenceHelper, UnknownData_I7GA, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameplayTagReferenceHelper, 0x0010);
		}

		// struct FGameplayTagNode
		TEST_METHOD(ScriptStruct__GameplayTags__GameplayTagNode)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGameplayTagNode, UnknownData_OA0N, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGameplayTagNode, 0x0050);
		}

		// struct FPlatformRuntimeAudioCompressionOverrides
		TEST_METHOD(ScriptStruct__AudioPlatformConfiguration__PlatformRuntimeAudioCompressionOverrides)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlatformRuntimeAudioCompressionOverrides, bOverrideCompressionTimes, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlatformRuntimeAudioCompressionOverrides, UnknownData_KGSD, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlatformRuntimeAudioCompressionOverrides, DurationThreshold, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlatformRuntimeAudioCompressionOverrides, MaxNumRandomBranches, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPlatformRuntimeAudioCompressionOverrides, SoundCueQualityIndex, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPlatformRuntimeAudioCompressionOverrides, 0x0010);
		}

		// struct FMovieSceneTrackEvalOptions
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneTrackEvalOptions)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneTrackEvalOptions, UnknownData_L9O6, 0x0001);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneTrackEvalOptions, 0x0004);
		}

		// struct FMovieSceneSectionEvalOptions
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSectionEvalOptions)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSectionEvalOptions, bCanEditCompletionMode, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSectionEvalOptions, CompletionMode, 0x0001);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSectionEvalOptions, 0x0002);
		}

		// struct FMovieSceneEasingSettings
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEasingSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEasingSettings, AutoEaseInDuration, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEasingSettings, AutoEaseOutDuration, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEasingSettings, EaseIn, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEasingSettings, bManualEaseIn, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEasingSettings, UnknownData_HRU5, 0x0019);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEasingSettings, ManualEaseInDuration, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEasingSettings, EaseOut, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEasingSettings, bManualEaseOut, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEasingSettings, UnknownData_ROBP, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEasingSettings, ManualEaseOutDuration, 0x0034);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEasingSettings, 0x0038);
		}

		// struct FMovieSceneFrameRange
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneFrameRange)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneFrameRange, UnknownData_Y4JX, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneFrameRange, 0x0010);
		}

		// struct FOptionalMovieSceneBlendType
		TEST_METHOD(ScriptStruct__MovieScene__OptionalMovieSceneBlendType)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FOptionalMovieSceneBlendType, BlendType, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOptionalMovieSceneBlendType, bIsValid, 0x0001);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FOptionalMovieSceneBlendType, 0x0002);
		}

		// struct FMovieSceneTrackIdentifier
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneTrackIdentifier)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneTrackIdentifier, Value, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneTrackIdentifier, 0x0004);
		}

		// struct FMovieSceneSegment
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSegment)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSegment, UnknownData_UEXI, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSegment, 0x0058);
		}

		// struct FSectionEvaluationDataTree
		TEST_METHOD(ScriptStruct__MovieScene__SectionEvaluationDataTree)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSectionEvaluationDataTree, UnknownData_FJDQ, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSectionEvaluationDataTree, 0x0060);
		}

		// struct FMovieSceneEvalTemplatePtr
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvalTemplatePtr)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvalTemplatePtr, UnknownData_LTLC, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvalTemplatePtr, 0x0038);
		}

		// struct FMovieSceneTrackImplementationPtr
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneTrackImplementationPtr)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneTrackImplementationPtr, UnknownData_WJBS, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneTrackImplementationPtr, 0x0038);
		}

		// struct FMovieSceneEvaluationGroupLUTIndex
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvaluationGroupLUTIndex)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationGroupLUTIndex, LUTOffset, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationGroupLUTIndex, NumInitPtrs, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationGroupLUTIndex, NumEvalPtrs, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvaluationGroupLUTIndex, 0x000C);
		}

		// struct FMovieSceneSequenceID
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSequenceID)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSequenceID, Value, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSequenceID, 0x0004);
		}

		// struct FMovieSceneSequenceInstanceDataPtr
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSequenceInstanceDataPtr)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSequenceInstanceDataPtr, UnknownData_EFHM, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSequenceInstanceDataPtr, 0x0018);
		}

		// struct FMovieSceneEvaluationTemplateSerialNumber
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvaluationTemplateSerialNumber)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationTemplateSerialNumber, Value, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvaluationTemplateSerialNumber, 0x0004);
		}

		// struct FMovieSceneTrackFieldData
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneTrackFieldData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneTrackFieldData, UnknownData_CZI9, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneTrackFieldData, 0x0060);
		}

		// struct FMovieSceneSubSectionFieldData
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSubSectionFieldData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSubSectionFieldData, UnknownData_2ZIR, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSubSectionFieldData, 0x0060);
		}

		// struct FMovieSceneTemplateGenerationLedger
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneTemplateGenerationLedger)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneTemplateGenerationLedger, LastTrackIdentifier, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneTemplateGenerationLedger, UnknownData_HYZD, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneTemplateGenerationLedger, TrackSignatureToTrackIdentifier, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneTemplateGenerationLedger, SubSectionRanges, 0x0058);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneTemplateGenerationLedger, 0x00A8);
		}

		// struct FMovieSceneSequenceHierarchyNode
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSequenceHierarchyNode)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSequenceHierarchyNode, ParentID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSequenceHierarchyNode, UnknownData_MN7P, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSequenceHierarchyNode, Children, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSequenceHierarchyNode, 0x0018);
		}

		// struct FMovieSceneSequenceTransform
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSequenceTransform)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSequenceTransform, TimeScale, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSequenceTransform, Offset, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSequenceTransform, 0x000C);
		}

		// struct FMovieSceneSubSequenceData
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSubSequenceData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSubSequenceData, Sequence, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSubSequenceData, RootToSequenceTransform, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSubSequenceData, TickResolution, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSubSequenceData, DeterministicSequenceID, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSubSequenceData, PlayRange, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSubSequenceData, PreRollRange, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSubSequenceData, PostRollRange, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSubSequenceData, HierarchicalBias, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSubSequenceData, UnknownData_J8PC, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSubSequenceData, InstanceData, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSubSequenceData, UnknownData_CZVA, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSubSequenceData, SubSectionSignature, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSubSequenceData, OuterToInnerTransform, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSubSequenceData, UnknownData_XE2N, 0x00A4);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSubSequenceData, 0x00A8);
		}

		// struct FMovieSceneSequenceHierarchy
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSequenceHierarchy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSequenceHierarchy, SubSequences, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSequenceHierarchy, Hierarchy, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSequenceHierarchy, 0x00A0);
		}

		// struct FMovieSceneEvaluationKey
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvaluationKey)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationKey, SequenceID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationKey, TrackIdentifier, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationKey, SectionIndex, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvaluationKey, 0x000C);
		}

		// struct FMovieSceneOrderedEvaluationKey
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneOrderedEvaluationKey)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneOrderedEvaluationKey, Key, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneOrderedEvaluationKey, EvaluationIndex, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneOrderedEvaluationKey, 0x0010);
		}

		// struct FMovieSceneEvaluationMetaData
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvaluationMetaData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationMetaData, ActiveSequences, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationMetaData, ActiveEntities, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationMetaData, SubTemplateSerialNumbers, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvaluationMetaData, 0x0070);
		}

		// struct FMovieSceneEvaluationFieldTrackPtr
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvaluationFieldTrackPtr)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationFieldTrackPtr, SequenceID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationFieldTrackPtr, TrackIdentifier, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvaluationFieldTrackPtr, 0x0008);
		}

		// struct FMovieSceneSegmentIdentifier
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSegmentIdentifier)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSegmentIdentifier, IdentifierIndex, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSegmentIdentifier, 0x0004);
		}

		// struct FMovieSceneEvaluationFieldSegmentPtr : public FMovieSceneEvaluationFieldTrackPtr
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvaluationFieldSegmentPtr)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationFieldSegmentPtr, SegmentID, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvaluationFieldSegmentPtr, 0x000C);
		}

		// struct FMovieSceneEvaluationGroup
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvaluationGroup)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationGroup, LUTIndices, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationGroup, SegmentPtrLUT, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvaluationGroup, 0x0020);
		}

		// struct FMovieSceneEvaluationField
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvaluationField)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationField, Ranges, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationField, Groups, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationField, MetaData, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvaluationField, 0x0030);
		}

		// struct FMovieSceneEvaluationTrackSegments
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvaluationTrackSegments)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationTrackSegments, SegmentIdentifierToIndex, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationTrackSegments, SortedSegments, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvaluationTrackSegments, 0x0020);
		}

		// struct FMovieSceneEvaluationTrack
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvaluationTrack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationTrack, ObjectBindingId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationTrack, EvaluationPriority, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationTrack, EvaluationMethod, 0x0012);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationTrack, UnknownData_JGPR, 0x0013);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationTrack, Segments, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationTrack, SourceTrack, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationTrack, EvaluationTree, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationTrack, ChildTemplates, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationTrack, TrackTemplate, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationTrack, EvaluationGroup, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationTrack, UnknownData_DYQH, 0x00F1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvaluationTrack, 0x00F8);
		}

		// struct FMovieSceneEvaluationTemplate
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvaluationTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationTemplate, Tracks, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationTemplate, UnknownData_VU2U, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationTemplate, EvaluationField, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationTemplate, Hierarchy, 0x00D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationTemplate, SequenceSignature, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationTemplate, TemplateSerialNumber, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationTemplate, UnknownData_FEFP, 0x0184);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationTemplate, TemplateLedger, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationTemplate, TrackFieldData, 0x0230);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationTemplate, SubSectionFieldData, 0x0290);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvaluationTemplate, 0x02F0);
		}

		// struct FMovieSceneSequencePlaybackSettings
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSequencePlaybackSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSequencePlaybackSettings, loopCount, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSequencePlaybackSettings, PlayRate, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSequencePlaybackSettings, bRandomStartTime, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSequencePlaybackSettings, UnknownData_LIOG, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSequencePlaybackSettings, StartTime, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSequencePlaybackSettings, bRestoreState, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSequencePlaybackSettings, bDisableMovementInput, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSequencePlaybackSettings, bDisableLookAtInput, 0x0012);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSequencePlaybackSettings, bHidePlayer, 0x0013);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSequencePlaybackSettings, bHideHud, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSequencePlaybackSettings, bDisableCameraCuts, 0x0015);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSequencePlaybackSettings, bPauseAtEnd, 0x0016);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSequencePlaybackSettings, UnknownData_RGB4, 0x0017);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSequencePlaybackSettings, InstanceData, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSequencePlaybackSettings, BindingOverrides, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSequencePlaybackSettings, UnknownData_JSPN, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSequencePlaybackSettings, 0x0040);
		}

		// struct FMovieSceneObjectBindingID
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneObjectBindingID)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneObjectBindingID, SequenceID, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneObjectBindingID, Space, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneObjectBindingID, UnknownData_73D7, 0x0005);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneObjectBindingID, Guid, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneObjectBindingID, 0x0018);
		}

		// struct FMovieSceneRootEvaluationTemplateInstance
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneRootEvaluationTemplateInstance)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneRootEvaluationTemplateInstance, UnknownData_MMGY, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneRootEvaluationTemplateInstance, DirectorInstances, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneRootEvaluationTemplateInstance, UnknownData_R9EI, 0x0068);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneRootEvaluationTemplateInstance, 0x0300);
		}

		// struct FMovieSceneBinding
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneBinding)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneBinding, ObjectGuid, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneBinding, BindingName, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneBinding, Tracks, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneBinding, 0x0030);
		}

		// struct FMovieScenePossessable
		TEST_METHOD(ScriptStruct__MovieScene__MovieScenePossessable)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScenePossessable, Tags, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScenePossessable, Guid, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScenePossessable, Name, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScenePossessable, PossessedObjectClass, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScenePossessable, ParentGuid, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieScenePossessable, 0x0048);
		}

		// struct FMovieSceneSpawnable
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSpawnable)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSpawnable, SpawnTransform, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSpawnable, Tags, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSpawnable, Guid, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSpawnable, Name, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSpawnable, ObjectTemplate, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSpawnable, ChildPossessables, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSpawnable, Ownership, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSpawnable, UnknownData_SMFA, 0x0079);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSpawnable, LevelName, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSpawnable, UnknownData_LRID, 0x0088);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSpawnable, 0x0090);
		}

		// struct FMovieSceneBindingOverrideData
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneBindingOverrideData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneBindingOverrideData, ObjectBindingId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneBindingOverrideData, Object, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneBindingOverrideData, bOverridesDefault, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneBindingOverrideData, UnknownData_7MCX, 0x0021);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneBindingOverrideData, 0x0024);
		}

		// struct FMovieSceneSectionParameters
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSectionParameters)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSectionParameters, StartFrameOffset, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSectionParameters, TimeScale, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSectionParameters, HierarchicalBias, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSectionParameters, StartOffset, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSectionParameters, PrerollTime, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSectionParameters, PostrollTime, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSectionParameters, 0x0018);
		}

		// struct FMovieSceneEvalTemplateBase
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvalTemplateBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvalTemplateBase, UnknownData_VPVS, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvalTemplateBase, 0x0010);
		}

		// struct FMovieSceneEvalTemplate : public FMovieSceneEvalTemplateBase
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvalTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvalTemplate, CompletionMode, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvalTemplate, UnknownData_KN6U, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvalTemplate, SourceSection, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvalTemplate, 0x0020);
		}

		// struct FMovieSceneChannel
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneChannel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneChannel, UnknownData_B5UY, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneChannel, 0x0008);
		}

		// struct FMovieSceneTangentData
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneTangentData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneTangentData, ArriveTangent, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneTangentData, LeaveTangent, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneTangentData, TangentWeightMode, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneTangentData, UnknownData_J9EQ, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneTangentData, ArriveTangentWeight, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneTangentData, LeaveTangentWeight, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneTangentData, 0x0014);
		}

		// struct FMovieSceneKeyHandleMap : public FKeyHandleLookupTable
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneKeyHandleMap)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneKeyHandleMap, 0x0060);
		}

		// struct FMovieSceneFloatValue
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneFloatValue)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneFloatValue, Value, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneFloatValue, InterpMode, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneFloatValue, TangentMode, 0x0005);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneFloatValue, UnknownData_HCM3, 0x0006);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneFloatValue, Tangent, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneFloatValue, 0x001C);
		}

		// struct FMovieSceneFloatChannel : public FMovieSceneChannel
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneFloatChannel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneFloatChannel, PreInfinityExtrap, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneFloatChannel, PostInfinityExtrap, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneFloatChannel, UnknownData_Q7I3, 0x000A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneFloatChannel, Times, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneFloatChannel, Values, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneFloatChannel, DefaultValue, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneFloatChannel, bHasDefaultValue, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneFloatChannel, UnknownData_DVYB, 0x0035);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneFloatChannel, KeyHandles, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneFloatChannel, TickResolution, 0x0098);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneFloatChannel, 0x00A0);
		}

		// struct FMovieSceneTrackLabels
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneTrackLabels)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneTrackLabels, Strings, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneTrackLabels, 0x0010);
		}

		// struct FMovieSceneExpansionState
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneExpansionState)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneExpansionState, bExpanded, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneExpansionState, 0x0001);
		}

		// struct FMovieSceneEditorData
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEditorData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEditorData, ExpansionStates, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEditorData, ViewStart, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEditorData, ViewEnd, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEditorData, WorkStart, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEditorData, WorkEnd, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEditorData, MarkedFrames, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEditorData, WorkingRange, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEditorData, ViewRange, 0x00D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEditorData, 0x00E0);
		}

		// struct FMovieSceneTimecodeSource
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneTimecodeSource)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneTimecodeSource, Timecode, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneTimecodeSource, DeltaFrame, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneTimecodeSource, 0x0018);
		}

		// struct FMovieSceneBoolChannel : public FMovieSceneChannel
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneBoolChannel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneBoolChannel, Times, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneBoolChannel, DefaultValue, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneBoolChannel, bHasDefaultValue, 0x0019);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneBoolChannel, UnknownData_5XXE, 0x001A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneBoolChannel, Values, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneBoolChannel, UnknownData_5EYG, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneBoolChannel, 0x0090);
		}

		// struct FMovieSceneByteChannel : public FMovieSceneChannel
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneByteChannel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneByteChannel, Times, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneByteChannel, DefaultValue, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneByteChannel, bHasDefaultValue, 0x0019);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneByteChannel, UnknownData_KEPP, 0x001A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneByteChannel, Values, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneByteChannel, Enum, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneByteChannel, UnknownData_0PM9, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneByteChannel, 0x0098);
		}

		// struct FMovieSceneEmptyStruct
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEmptyStruct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEmptyStruct, UnknownData_S0HW, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEmptyStruct, 0x0001);
		}

		// struct FMovieSceneEvaluationOperand
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneEvaluationOperand)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationOperand, ObjectBindingId, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneEvaluationOperand, SequenceID, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneEvaluationOperand, 0x0014);
		}

		// struct FMovieSceneSubSectionData
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSubSectionData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSubSectionData, Section, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSubSectionData, ObjectBindingId, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSubSectionData, Flags, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSubSectionData, UnknownData_HSVD, 0x0019);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSubSectionData, 0x001C);
		}

		// struct FMovieSceneIntegerChannel : public FMovieSceneChannel
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneIntegerChannel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneIntegerChannel, Times, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneIntegerChannel, DefaultValue, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneIntegerChannel, bHasDefaultValue, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneIntegerChannel, UnknownData_3XS8, 0x001D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneIntegerChannel, Values, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneIntegerChannel, UnknownData_FIKJ, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneIntegerChannel, 0x0090);
		}

		// struct FMovieSceneKeyStruct
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneKeyStruct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneKeyStruct, UnknownData_PAOL, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneKeyStruct, 0x0008);
		}

		// struct FMovieSceneKeyTimeStruct : public FMovieSceneKeyStruct
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneKeyTimeStruct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneKeyTimeStruct, Time, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneKeyTimeStruct, UnknownData_6JX2, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneKeyTimeStruct, 0x0028);
		}

		// struct FMovieScenePropertySectionData
		TEST_METHOD(ScriptStruct__MovieScene__MovieScenePropertySectionData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScenePropertySectionData, PropertyName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScenePropertySectionData, PropertyPath, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScenePropertySectionData, FunctionName, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScenePropertySectionData, NotifyFunctionName, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieScenePropertySectionData, 0x0028);
		}

		// struct FMovieScenePropertySectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieScene__MovieScenePropertySectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScenePropertySectionTemplate, PropertyData, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieScenePropertySectionTemplate, 0x0048);
		}

		// struct FSectionEvaluationData
		TEST_METHOD(ScriptStruct__MovieScene__SectionEvaluationData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSectionEvaluationData, ImplIndex, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSectionEvaluationData, ForcedTime, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSectionEvaluationData, Flags, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSectionEvaluationData, UnknownData_BG1X, 0x0009);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSectionEvaluationData, 0x000C);
		}

		// struct FMovieSceneSequenceInstanceData
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneSequenceInstanceData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneSequenceInstanceData, UnknownData_0115, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneSequenceInstanceData, 0x0008);
		}

		// struct FTestMovieSceneEvalTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__MovieScene__TestMovieSceneEvalTemplate)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTestMovieSceneEvalTemplate, 0x0020);
		}

		// struct FMovieSceneTrackImplementation : public FMovieSceneEvalTemplateBase
		TEST_METHOD(ScriptStruct__MovieScene__MovieSceneTrackImplementation)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneTrackImplementation, 0x0010);
		}

		// struct FStructSerializerNumericTestStruct
		TEST_METHOD(ScriptStruct__Serialization__StructSerializerNumericTestStruct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerNumericTestStruct, Int8, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerNumericTestStruct, UnknownData_EYPK, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerNumericTestStruct, Int16, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerNumericTestStruct, Int32, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerNumericTestStruct, Int64, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerNumericTestStruct, UInt8, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerNumericTestStruct, UnknownData_Q2PI, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerNumericTestStruct, UInt16, 0x0012);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerNumericTestStruct, UInt32, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerNumericTestStruct, UInt64, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerNumericTestStruct, Float, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerNumericTestStruct, UnknownData_ZWZI, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerNumericTestStruct, Double, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStructSerializerNumericTestStruct, 0x0030);
		}

		// struct FStructSerializerBooleanTestStruct
		TEST_METHOD(ScriptStruct__Serialization__StructSerializerBooleanTestStruct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerBooleanTestStruct, BoolFalse, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerBooleanTestStruct, BoolTrue, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerBooleanTestStruct, UnknownData_QTWS, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerBooleanTestStruct, Bitfield, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStructSerializerBooleanTestStruct, 0x0008);
		}

		// struct FStructSerializerObjectTestStruct
		TEST_METHOD(ScriptStruct__Serialization__StructSerializerObjectTestStruct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerObjectTestStruct, Class, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerObjectTestStruct, ObjectPtr, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStructSerializerObjectTestStruct, 0x0010);
		}

		// struct FStructSerializerMapTestStruct
		TEST_METHOD(ScriptStruct__Serialization__StructSerializerMapTestStruct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerMapTestStruct, IntToStr, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerMapTestStruct, StrToStr, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerMapTestStruct, StrToVec, 0x00A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStructSerializerMapTestStruct, 0x00F0);
		}

		// struct FStructSerializerArrayTestStruct
		TEST_METHOD(ScriptStruct__Serialization__StructSerializerArrayTestStruct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerArrayTestStruct, Int32Array, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerArrayTestStruct, StaticSingleElement, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerArrayTestStruct, StaticInt32Array, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerArrayTestStruct, StaticFloatArray, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerArrayTestStruct, UnknownData_K16L, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerArrayTestStruct, VectorArray, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStructSerializerArrayTestStruct, 0x0040);
		}

		// struct FStructSerializerBuiltinTestStruct
		TEST_METHOD(ScriptStruct__Serialization__StructSerializerBuiltinTestStruct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerBuiltinTestStruct, Guid, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerBuiltinTestStruct, Name, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerBuiltinTestStruct, String, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerBuiltinTestStruct, Rotator, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerBuiltinTestStruct, UnknownData_22CZ, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerBuiltinTestStruct, Text, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerBuiltinTestStruct, Vector, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerBuiltinTestStruct, UnknownData_0U3H, 0x005C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStructSerializerBuiltinTestStruct, 0x0060);
		}

		// struct FStructSerializerTestStruct
		TEST_METHOD(ScriptStruct__Serialization__StructSerializerTestStruct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerTestStruct, Numerics, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerTestStruct, Booleans, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerTestStruct, Objects, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerTestStruct, Builtins, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerTestStruct, Arrays, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FStructSerializerTestStruct, Maps, 0x00E8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FStructSerializerTestStruct, 0x01D8);
		}

		// struct FHmdUserProfileField
		TEST_METHOD(ScriptStruct__OculusHMD__HmdUserProfileField)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FHmdUserProfileField, FieldName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHmdUserProfileField, FieldValue, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FHmdUserProfileField, 0x0020);
		}

		// struct FGuardianTestResult
		TEST_METHOD(ScriptStruct__OculusHMD__GuardianTestResult)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGuardianTestResult, IsTriggering, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGuardianTestResult, DeviceType, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGuardianTestResult, UnknownData_Z8I7, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGuardianTestResult, ClosestDistance, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGuardianTestResult, ClosestPoint, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGuardianTestResult, ClosestPointNormal, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGuardianTestResult, 0x0020);
		}

		// struct FHmdUserProfile
		TEST_METHOD(ScriptStruct__OculusHMD__HmdUserProfile)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FHmdUserProfile, Name, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHmdUserProfile, Gender, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHmdUserProfile, PlayerHeight, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHmdUserProfile, EyeHeight, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHmdUserProfile, IPD, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHmdUserProfile, NeckToEyeDistance, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHmdUserProfile, UnknownData_G5E7, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FHmdUserProfile, ExtraFields, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FHmdUserProfile, 0x0048);
		}

		// struct FOculusSplashDesc
		TEST_METHOD(ScriptStruct__OculusHMD__OculusSplashDesc)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FOculusSplashDesc, TexturePath, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOculusSplashDesc, UnknownData_52W8, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOculusSplashDesc, TransformInMeters, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOculusSplashDesc, QuadSizeInMeters, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOculusSplashDesc, UnknownData_BYR0, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOculusSplashDesc, DeltaRotation, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOculusSplashDesc, TextureOffset, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOculusSplashDesc, TextureScale, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOculusSplashDesc, bNoAlphaChannel, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOculusSplashDesc, UnknownData_CO9B, 0x0081);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FOculusSplashDesc, 0x00A0);
		}

		// struct FMediaCaptureDevice
		TEST_METHOD(ScriptStruct__MediaAssets__MediaCaptureDevice)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMediaCaptureDevice, DisplayName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMediaCaptureDevice, URL, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMediaCaptureDevice, 0x0028);
		}

		// struct FPropertyPathSegment
		TEST_METHOD(ScriptStruct__PropertyPath__PropertyPathSegment)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPropertyPathSegment, Name, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPropertyPathSegment, ArrayIndex, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPropertyPathSegment, UnknownData_YPOF, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPropertyPathSegment, Struct, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPropertyPathSegment, Field, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPropertyPathSegment, 0x0020);
		}

		// struct FCachedPropertyPath
		TEST_METHOD(ScriptStruct__PropertyPath__CachedPropertyPath)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCachedPropertyPath, Segments, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCachedPropertyPath, UnknownData_AQJN, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCachedPropertyPath, CachedFunction, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCachedPropertyPath, UnknownData_163G, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCachedPropertyPath, 0x0028);
		}

		// struct FNetAnalyticsDataConfig
		TEST_METHOD(ScriptStruct__PacketHandler__NetAnalyticsDataConfig)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNetAnalyticsDataConfig, DataName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNetAnalyticsDataConfig, bEnabled, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNetAnalyticsDataConfig, UnknownData_RXOR, 0x0009);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNetAnalyticsDataConfig, 0x0010);
		}

		// struct FNamedInterface
		TEST_METHOD(ScriptStruct__OnlineSubsystem__NamedInterface)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedInterface, InterfaceName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedInterface, InterfaceObject, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNamedInterface, 0x0010);
		}

		// struct FNamedInterfaceDef
		TEST_METHOD(ScriptStruct__OnlineSubsystem__NamedInterfaceDef)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedInterfaceDef, InterfaceName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedInterfaceDef, InterfaceClassName, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNamedInterfaceDef, 0x0018);
		}

		// struct FInAppPurchaseProductInfo
		TEST_METHOD(ScriptStruct__OnlineSubsystem__InAppPurchaseProductInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInAppPurchaseProductInfo, Identifier, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInAppPurchaseProductInfo, TransactionIdentifier, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInAppPurchaseProductInfo, DisplayName, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInAppPurchaseProductInfo, DisplayDescription, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInAppPurchaseProductInfo, DisplayPrice, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInAppPurchaseProductInfo, RawPrice, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInAppPurchaseProductInfo, UnknownData_QU0R, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInAppPurchaseProductInfo, CurrencyCode, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInAppPurchaseProductInfo, CurrencySymbol, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInAppPurchaseProductInfo, DecimalSeparator, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInAppPurchaseProductInfo, GroupingSeparator, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInAppPurchaseProductInfo, ReceiptData, 0x0098);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInAppPurchaseProductInfo, 0x00A8);
		}

		// struct FInAppPurchaseRestoreInfo
		TEST_METHOD(ScriptStruct__OnlineSubsystem__InAppPurchaseRestoreInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInAppPurchaseRestoreInfo, Identifier, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInAppPurchaseRestoreInfo, ReceiptData, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInAppPurchaseRestoreInfo, TransactionIdentifier, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInAppPurchaseRestoreInfo, 0x0030);
		}

		// struct FInAppPurchaseProductRequest
		TEST_METHOD(ScriptStruct__OnlineSubsystem__InAppPurchaseProductRequest)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FInAppPurchaseProductRequest, ProductIdentifier, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInAppPurchaseProductRequest, bIsConsumable, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FInAppPurchaseProductRequest, UnknownData_U2RT, 0x0011);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FInAppPurchaseProductRequest, 0x0018);
		}

		// struct FPaperFlipbookKeyFrame
		TEST_METHOD(ScriptStruct__Paper2D__PaperFlipbookKeyFrame)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperFlipbookKeyFrame, Sprite, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperFlipbookKeyFrame, FrameRun, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperFlipbookKeyFrame, UnknownData_AOIF, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPaperFlipbookKeyFrame, 0x0010);
		}

		// struct FSpriteInstanceData
		TEST_METHOD(ScriptStruct__Paper2D__SpriteInstanceData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteInstanceData, Transform, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteInstanceData, SourceSprite, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteInstanceData, VertexColor, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteInstanceData, MaterialIndex, 0x004C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSpriteInstanceData, 0x0050);
		}

		// struct FPaperSpriteSocket
		TEST_METHOD(ScriptStruct__Paper2D__PaperSpriteSocket)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperSpriteSocket, LocalTransform, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperSpriteSocket, SocketName, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperSpriteSocket, UnknownData_FQOW, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPaperSpriteSocket, 0x0040);
		}

		// struct FPaperTerrainMaterialRule
		TEST_METHOD(ScriptStruct__Paper2D__PaperTerrainMaterialRule)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperTerrainMaterialRule, StartCap, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperTerrainMaterialRule, Body, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperTerrainMaterialRule, EndCap, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperTerrainMaterialRule, MinimumAngle, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperTerrainMaterialRule, MaximumAngle, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperTerrainMaterialRule, bEnableCollision, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperTerrainMaterialRule, UnknownData_E08C, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperTerrainMaterialRule, CollisionOffset, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperTerrainMaterialRule, DrawOrder, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperTerrainMaterialRule, UnknownData_JWX9, 0x0034);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPaperTerrainMaterialRule, 0x0038);
		}

		// struct FPaperTileInfo
		TEST_METHOD(ScriptStruct__Paper2D__PaperTileInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperTileInfo, TileSet, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperTileInfo, PackedTileIndex, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperTileInfo, UnknownData_7T2A, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPaperTileInfo, 0x0010);
		}

		// struct FIntMargin
		TEST_METHOD(ScriptStruct__Paper2D__IntMargin)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FIntMargin, Left, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FIntMargin, Top, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FIntMargin, Right, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FIntMargin, Bottom, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FIntMargin, 0x0010);
		}

		// struct FPaperTileSetTerrain
		TEST_METHOD(ScriptStruct__Paper2D__PaperTileSetTerrain)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperTileSetTerrain, TerrainName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperTileSetTerrain, CenterTileIndex, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperTileSetTerrain, UnknownData_NZEU, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPaperTileSetTerrain, 0x0018);
		}

		// struct FSpriteGeometryShape
		TEST_METHOD(ScriptStruct__Paper2D__SpriteGeometryShape)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteGeometryShape, ShapeType, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteGeometryShape, UnknownData_PX6O, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteGeometryShape, Vertices, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteGeometryShape, BoxSize, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteGeometryShape, BoxPosition, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteGeometryShape, Rotation, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteGeometryShape, bNegativeWinding, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteGeometryShape, UnknownData_N6M6, 0x002D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSpriteGeometryShape, 0x0030);
		}

		// struct FSpriteGeometryCollection
		TEST_METHOD(ScriptStruct__Paper2D__SpriteGeometryCollection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteGeometryCollection, Shapes, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteGeometryCollection, GeometryType, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteGeometryCollection, UnknownData_122R, 0x0011);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteGeometryCollection, PixelsPerSubdivisionX, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteGeometryCollection, PixelsPerSubdivisionY, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteGeometryCollection, bAvoidVertexMerging, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteGeometryCollection, UnknownData_TY3X, 0x001D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteGeometryCollection, AlphaThreshold, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteGeometryCollection, DetailAmount, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteGeometryCollection, SimplifyEpsilon, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteGeometryCollection, UnknownData_7HHB, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSpriteGeometryCollection, 0x0030);
		}

		// struct FPaperTileMetadata
		TEST_METHOD(ScriptStruct__Paper2D__PaperTileMetadata)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperTileMetadata, UserDataName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperTileMetadata, CollisionData, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperTileMetadata, TerrainMembership, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperTileMetadata, UnknownData_B6JI, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPaperTileMetadata, 0x0040);
		}

		// struct FPaperSpriteAtlasSlot
		TEST_METHOD(ScriptStruct__Paper2D__PaperSpriteAtlasSlot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperSpriteAtlasSlot, SpriteRef, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperSpriteAtlasSlot, AtlasIndex, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperSpriteAtlasSlot, X, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperSpriteAtlasSlot, Y, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperSpriteAtlasSlot, Width, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperSpriteAtlasSlot, Height, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaperSpriteAtlasSlot, UnknownData_FJRZ, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPaperSpriteAtlasSlot, 0x0040);
		}

		// struct FSpriteDrawCallRecord
		TEST_METHOD(ScriptStruct__Paper2D__SpriteDrawCallRecord)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteDrawCallRecord, Destination, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteDrawCallRecord, UnknownData_5QWN, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteDrawCallRecord, BaseTexture, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteDrawCallRecord, UnknownData_H005, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteDrawCallRecord, Color, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteDrawCallRecord, UnknownData_B6MR, 0x004C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSpriteDrawCallRecord, 0x00D0);
		}

		// struct FSpriteAssetInitParameters
		TEST_METHOD(ScriptStruct__Paper2D__SpriteAssetInitParameters)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSpriteAssetInitParameters, UnknownData_XE4O, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSpriteAssetInitParameters, 0x0040);
		}

		// struct FDatasmithCameraFilmbackSettingsTemplate
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithCameraFilmbackSettingsTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithCameraFilmbackSettingsTemplate, SensorWidth, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithCameraFilmbackSettingsTemplate, SensorHeight, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithCameraFilmbackSettingsTemplate, 0x0008);
		}

		// struct FDatasmithCameraLensSettingsTemplate
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithCameraLensSettingsTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithCameraLensSettingsTemplate, MaxFStop, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithCameraLensSettingsTemplate, 0x0004);
		}

		// struct FDatasmithCameraFocusSettingsTemplate
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithCameraFocusSettingsTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithCameraFocusSettingsTemplate, FocusMethod, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithCameraFocusSettingsTemplate, UnknownData_AYKO, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithCameraFocusSettingsTemplate, ManualFocusDistance, 0x0004);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithCameraFocusSettingsTemplate, 0x0008);
		}

		// struct FDatasmithPostProcessSettingsTemplate
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithPostProcessSettingsTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithPostProcessSettingsTemplate, UnknownData_TEV1, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithPostProcessSettingsTemplate, WhiteTemp, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithPostProcessSettingsTemplate, VignetteIntensity, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithPostProcessSettingsTemplate, FilmWhitePoint, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithPostProcessSettingsTemplate, UnknownData_ELJR, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithPostProcessSettingsTemplate, ColorSaturation, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithPostProcessSettingsTemplate, AutoExposureMethod, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithPostProcessSettingsTemplate, UnknownData_DLFS, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithPostProcessSettingsTemplate, CameraISO, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithPostProcessSettingsTemplate, UnknownData_YHJY, 0x0038);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithPostProcessSettingsTemplate, 0x0040);
		}

		// struct FDatasmithAssetImportOptions
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithAssetImportOptions)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithAssetImportOptions, PackagePath, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithAssetImportOptions, 0x0008);
		}

		// struct FDatasmithStaticMeshImportOptions
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithStaticMeshImportOptions)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithStaticMeshImportOptions, MinLightmapResolution, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithStaticMeshImportOptions, MaxLightmapResolution, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithStaticMeshImportOptions, bGenerateLightmapUVs, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithStaticMeshImportOptions, bRemoveDegenerates, 0x0003);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithStaticMeshImportOptions, 0x0004);
		}

		// struct FDatasmithTessellationOptions
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithTessellationOptions)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithTessellationOptions, ChordTolerance, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithTessellationOptions, MaxEdgeLength, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithTessellationOptions, NormalTolerance, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithTessellationOptions, 0x000C);
		}

		// struct FDatasmithReimportOptions
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithReimportOptions)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithReimportOptions, bUpdateActors, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithReimportOptions, bRespawnDeletedActors, 0x0001);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithReimportOptions, 0x0002);
		}

		// struct FDatasmithImportBaseOptions
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithImportBaseOptions)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithImportBaseOptions, SceneHandling, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithImportBaseOptions, bIncludeGeometry, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithImportBaseOptions, bIncludeMaterial, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithImportBaseOptions, bIncludeLight, 0x0003);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithImportBaseOptions, bIncludeCamera, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithImportBaseOptions, UnknownData_05LK, 0x0005);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithImportBaseOptions, AssetOptions, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithImportBaseOptions, StaticMeshOptions, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithImportBaseOptions, UnknownData_UB8M, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithImportBaseOptions, 0x0018);
		}

		// struct FDatasmithMeshSectionInfoTemplate
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithMeshSectionInfoTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithMeshSectionInfoTemplate, MaterialIndex, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithMeshSectionInfoTemplate, 0x0004);
		}

		// struct FDatasmithMeshBuildSettingsTemplate
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithMeshBuildSettingsTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithMeshBuildSettingsTemplate, UnknownData_KSHG, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithMeshBuildSettingsTemplate, MinLightmapResolution, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithMeshBuildSettingsTemplate, SrcLightmapIndex, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithMeshBuildSettingsTemplate, DstLightmapIndex, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithMeshBuildSettingsTemplate, 0x0010);
		}

		// struct FDatasmithStaticMaterialTemplate
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithStaticMaterialTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithStaticMaterialTemplate, MaterialSlotName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithStaticMaterialTemplate, MaterialInterface, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithStaticMaterialTemplate, 0x0010);
		}

		// struct FDatasmithMeshSectionInfoMapTemplate
		TEST_METHOD(ScriptStruct__DatasmithContent__DatasmithMeshSectionInfoMapTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDatasmithMeshSectionInfoMapTemplate, Map, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDatasmithMeshSectionInfoMapTemplate, 0x0050);
		}

		// struct FMovieSceneGeometryCacheParams
		TEST_METHOD(ScriptStruct__GeometryCacheTracks__MovieSceneGeometryCacheParams)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneGeometryCacheParams, GeometryCache, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneGeometryCacheParams, StartOffset, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneGeometryCacheParams, EndOffset, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneGeometryCacheParams, PlayRate, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneGeometryCacheParams, UnknownData_N1V8, 0x0025);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneGeometryCacheParams, 0x0028);
		}

		// struct FMovieSceneGeometryCacheSectionTemplateParameters : public FMovieSceneGeometryCacheParams
		TEST_METHOD(ScriptStruct__GeometryCacheTracks__MovieSceneGeometryCacheSectionTemplateParameters)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneGeometryCacheSectionTemplateParameters, UnknownData_TE76, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneGeometryCacheSectionTemplateParameters, SectionStartTime, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneGeometryCacheSectionTemplateParameters, SectionEndTime, 0x0034);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneGeometryCacheSectionTemplateParameters, 0x0038);
		}

		// struct FMovieSceneGeometryCacheSectionTemplate : public FMovieSceneEvalTemplate
		TEST_METHOD(ScriptStruct__GeometryCacheTracks__MovieSceneGeometryCacheSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneGeometryCacheSectionTemplate, Params, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneGeometryCacheSectionTemplate, 0x0058);
		}

		// struct FActorSequenceObjectReference
		TEST_METHOD(ScriptStruct__ActorSequence__ActorSequenceObjectReference)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FActorSequenceObjectReference, Type, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FActorSequenceObjectReference, UnknownData_1XX5, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FActorSequenceObjectReference, ActorId, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FActorSequenceObjectReference, UnknownData_IA3H, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FActorSequenceObjectReference, PathToComponent, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActorSequenceObjectReference, 0x0028);
		}

		// struct FActorSequenceObjectReferences
		TEST_METHOD(ScriptStruct__ActorSequence__ActorSequenceObjectReferences)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FActorSequenceObjectReferences, Array, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActorSequenceObjectReferences, 0x0010);
		}

		// struct FActorSequenceObjectReferenceMap
		TEST_METHOD(ScriptStruct__ActorSequence__ActorSequenceObjectReferenceMap)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FActorSequenceObjectReferenceMap, BindingIds, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FActorSequenceObjectReferenceMap, References, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActorSequenceObjectReferenceMap, 0x0020);
		}

		// struct FEventReply
		TEST_METHOD(ScriptStruct__UMG__EventReply)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEventReply, UnknownData_B3TA, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEventReply, 0x00B8);
		}

		// struct FWidgetTransform
		TEST_METHOD(ScriptStruct__UMG__WidgetTransform)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FWidgetTransform, Translation, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWidgetTransform, Scale, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWidgetTransform, Shear, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWidgetTransform, Angle, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWidgetTransform, 0x001C);
		}

		// struct FNamedSlotBinding
		TEST_METHOD(ScriptStruct__UMG__NamedSlotBinding)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedSlotBinding, Name, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNamedSlotBinding, Content, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNamedSlotBinding, 0x0010);
		}

		// struct FPaintContext
		TEST_METHOD(ScriptStruct__UMG__PaintContext)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPaintContext, UnknownData_CBTM, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPaintContext, 0x0030);
		}

		// struct FShapedTextOptions
		TEST_METHOD(ScriptStruct__UMG__ShapedTextOptions)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FShapedTextOptions, TextShapingMethod, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FShapedTextOptions, TextFlowDirection, 0x0002);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FShapedTextOptions, 0x0003);
		}

		// struct FDynamicPropertyPath : public FCachedPropertyPath
		TEST_METHOD(ScriptStruct__UMG__DynamicPropertyPath)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDynamicPropertyPath, 0x0028);
		}

		// struct FAnchorData
		TEST_METHOD(ScriptStruct__UMG__AnchorData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnchorData, Offsets, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnchorData, Anchors, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnchorData, Alignment, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnchorData, 0x0028);
		}

		// struct FSlateChildSize
		TEST_METHOD(ScriptStruct__UMG__SlateChildSize)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateChildSize, Value, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateChildSize, SizeRule, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateChildSize, UnknownData_QAQH, 0x0005);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSlateChildSize, 0x0008);
		}

		// struct FMovieScene2DTransformMask
		TEST_METHOD(ScriptStruct__UMG__MovieScene2DTransformMask)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene2DTransformMask, Mask, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieScene2DTransformMask, 0x0004);
		}

		// struct FSlateMeshVertex
		TEST_METHOD(ScriptStruct__UMG__SlateMeshVertex)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateMeshVertex, Position, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateMeshVertex, Color, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateMeshVertex, UV0, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateMeshVertex, UV1, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateMeshVertex, UV2, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateMeshVertex, UV3, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateMeshVertex, UV4, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSlateMeshVertex, UV5, 0x0034);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSlateMeshVertex, 0x003C);
		}

		// struct FWidgetAnimationBinding
		TEST_METHOD(ScriptStruct__UMG__WidgetAnimationBinding)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FWidgetAnimationBinding, WidgetName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWidgetAnimationBinding, SlotWidgetName, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWidgetAnimationBinding, AnimationGuid, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWidgetAnimationBinding, bIsRootWidget, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWidgetAnimationBinding, UnknownData_RUDH, 0x0021);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWidgetAnimationBinding, 0x0028);
		}

		// struct FDelegateRuntimeBinding
		TEST_METHOD(ScriptStruct__UMG__DelegateRuntimeBinding)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FDelegateRuntimeBinding, ObjectName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDelegateRuntimeBinding, PropertyName, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDelegateRuntimeBinding, FunctionName, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDelegateRuntimeBinding, SourcePath, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDelegateRuntimeBinding, kind, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FDelegateRuntimeBinding, UnknownData_BQOW, 0x0049);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FDelegateRuntimeBinding, 0x0050);
		}

		// struct FWidgetNavigationData
		TEST_METHOD(ScriptStruct__UMG__WidgetNavigationData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FWidgetNavigationData, Rule, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWidgetNavigationData, UnknownData_IS9R, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWidgetNavigationData, WidgetToFocus, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWidgetNavigationData, Widget, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWidgetNavigationData, CustomDelegate, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWidgetNavigationData, 0x0028);
		}

		// struct FMovieScene2DTransformSectionTemplate : public FMovieScenePropertySectionTemplate
		TEST_METHOD(ScriptStruct__UMG__MovieScene2DTransformSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene2DTransformSectionTemplate, Translation, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene2DTransformSectionTemplate, Rotation, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene2DTransformSectionTemplate, Scale, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene2DTransformSectionTemplate, Shear, 0x0368);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene2DTransformSectionTemplate, BlendType, 0x04A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene2DTransformSectionTemplate, UnknownData_8RE9, 0x04A9);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieScene2DTransformSectionTemplate, Mask, 0x04AC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieScene2DTransformSectionTemplate, 0x04B0);
		}

		// struct FMovieSceneMarginSectionTemplate : public FMovieScenePropertySectionTemplate
		TEST_METHOD(ScriptStruct__UMG__MovieSceneMarginSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneMarginSectionTemplate, TopCurve, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneMarginSectionTemplate, LeftCurve, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneMarginSectionTemplate, RightCurve, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneMarginSectionTemplate, BottomCurve, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneMarginSectionTemplate, BlendType, 0x02C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneMarginSectionTemplate, UnknownData_3UH4, 0x02C9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneMarginSectionTemplate, 0x02D0);
		}

		// struct FMovieSceneWidgetMaterialSectionTemplate : public FMovieSceneParameterSectionTemplate
		TEST_METHOD(ScriptStruct__UMG__MovieSceneWidgetMaterialSectionTemplate)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMovieSceneWidgetMaterialSectionTemplate, BrushPropertyNamePath, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMovieSceneWidgetMaterialSectionTemplate, 0x0060);
		}

		// struct FRichTextStyleRow : public FTableRowBase
		TEST_METHOD(ScriptStruct__UMG__RichTextStyleRow)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRichTextStyleRow, TextStyle, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRichTextStyleRow, 0x01F0);
		}

		// struct FRichImageRow : public FTableRowBase
		TEST_METHOD(ScriptStruct__UMG__RichImageRow)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRichImageRow, Brush, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRichImageRow, 0x0090);
		}

		// struct FXRDeviceId
		TEST_METHOD(ScriptStruct__HeadMountedDisplay__XRDeviceId)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FXRDeviceId, SystemName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FXRDeviceId, DeviceID, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FXRDeviceId, UnknownData_2DHJ, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FXRDeviceId, 0x0010);
		}

		// struct FLandscapeProxyMaterialOverride
		TEST_METHOD(ScriptStruct__Landscape__LandscapeProxyMaterialOverride)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeProxyMaterialOverride, LODIndex, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeProxyMaterialOverride, UnknownData_GEUL, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeProxyMaterialOverride, Material, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandscapeProxyMaterialOverride, 0x0010);
		}

		// struct FWeightmapLayerAllocationInfo
		TEST_METHOD(ScriptStruct__Landscape__WeightmapLayerAllocationInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FWeightmapLayerAllocationInfo, LayerInfo, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWeightmapLayerAllocationInfo, WeightmapTextureIndex, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWeightmapLayerAllocationInfo, WeightmapTextureChannel, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FWeightmapLayerAllocationInfo, UnknownData_4TLY, 0x000A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FWeightmapLayerAllocationInfo, 0x0010);
		}

		// struct FLandscapeComponentMaterialOverride
		TEST_METHOD(ScriptStruct__Landscape__LandscapeComponentMaterialOverride)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeComponentMaterialOverride, LODIndex, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeComponentMaterialOverride, UnknownData_OTYW, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeComponentMaterialOverride, Material, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandscapeComponentMaterialOverride, 0x0010);
		}

		// struct FGrassVariety
		TEST_METHOD(ScriptStruct__Landscape__GrassVariety)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGrassVariety, GrassMesh, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGrassVariety, GrassDensity, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGrassVariety, bUseGrid, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGrassVariety, UnknownData_E78L, 0x000D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGrassVariety, PlacementJitter, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGrassVariety, StartCullDistance, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGrassVariety, EndCullDistance, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGrassVariety, MinLOD, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGrassVariety, Scaling, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGrassVariety, UnknownData_SNJ4, 0x0021);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGrassVariety, ScaleX, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGrassVariety, ScaleY, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGrassVariety, ScaleZ, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGrassVariety, RandomRotation, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGrassVariety, AlignToSurface, 0x003D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGrassVariety, bUseLandscapeLightmap, 0x003E);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGrassVariety, LightingChannels, 0x003F);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGrassVariety, bReceivesDecals, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGrassVariety, bCastDynamicShadow, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGrassVariety, bKeepInstanceBufferCPUCopy, 0x0042);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGrassVariety, UnknownData_FQD3, 0x0043);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGrassVariety, 0x0048);
		}

		// struct FLandscapeSplineConnection
		TEST_METHOD(ScriptStruct__Landscape__LandscapeSplineConnection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeSplineConnection, Segment, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeSplineConnection, UnknownData_Z5DR, 0x0009);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandscapeSplineConnection, 0x0010);
		}

		// struct FLandscapeSplineInterpPoint
		TEST_METHOD(ScriptStruct__Landscape__LandscapeSplineInterpPoint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeSplineInterpPoint, Center, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeSplineInterpPoint, Left, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeSplineInterpPoint, Right, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeSplineInterpPoint, FalloffLeft, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeSplineInterpPoint, FalloffRight, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeSplineInterpPoint, StartEndFalloff, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandscapeSplineInterpPoint, 0x0040);
		}

		// struct FLandscapeSplineSegmentConnection
		TEST_METHOD(ScriptStruct__Landscape__LandscapeSplineSegmentConnection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeSplineSegmentConnection, ControlPoint, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeSplineSegmentConnection, TangentLen, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeSplineSegmentConnection, UnknownData_UZ12, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeSplineSegmentConnection, SocketName, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandscapeSplineSegmentConnection, 0x0018);
		}

		// struct FGrassInput
		TEST_METHOD(ScriptStruct__Landscape__GrassInput)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGrassInput, Name, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGrassInput, GrassType, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGrassInput, Input, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FGrassInput, UnknownData_FKN0, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGrassInput, 0x0028);
		}

		// struct FLayerBlendInput
		TEST_METHOD(ScriptStruct__Landscape__LayerBlendInput)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLayerBlendInput, LayerName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLayerBlendInput, BlendType, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLayerBlendInput, UnknownData_DST1, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLayerBlendInput, LayerInput, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLayerBlendInput, UnknownData_Q5LB, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLayerBlendInput, HeightInput, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLayerBlendInput, UnknownData_5BFP, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLayerBlendInput, PreviewWeight, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLayerBlendInput, ConstLayerInput, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLayerBlendInput, ConstHeightInput, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLayerBlendInput, UnknownData_WO7X, 0x0054);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLayerBlendInput, 0x0058);
		}

		// struct FLandscapeEditToolRenderData
		TEST_METHOD(ScriptStruct__Landscape__LandscapeEditToolRenderData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeEditToolRenderData, ToolMaterial, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeEditToolRenderData, GizmoMaterial, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeEditToolRenderData, SelectedType, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeEditToolRenderData, DebugChannelR, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeEditToolRenderData, DebugChannelG, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeEditToolRenderData, DebugChannelB, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeEditToolRenderData, DataTexture, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandscapeEditToolRenderData, 0x0028);
		}

		// struct FGizmoSelectData
		TEST_METHOD(ScriptStruct__Landscape__GizmoSelectData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGizmoSelectData, UnknownData_9AGP, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGizmoSelectData, 0x0050);
		}

		// struct FLandscapeInfoLayerSettings
		TEST_METHOD(ScriptStruct__Landscape__LandscapeInfoLayerSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeInfoLayerSettings, LayerInfoObj, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeInfoLayerSettings, LayerName, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandscapeInfoLayerSettings, 0x0010);
		}

		// struct FLandscapeImportLayerInfo
		TEST_METHOD(ScriptStruct__Landscape__LandscapeImportLayerInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeImportLayerInfo, UnknownData_YM5S, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandscapeImportLayerInfo, 0x0001);
		}

		// struct FLandscapeLayerStruct
		TEST_METHOD(ScriptStruct__Landscape__LandscapeLayerStruct)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeLayerStruct, LayerInfoObj, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandscapeLayerStruct, 0x0008);
		}

		// struct FLandscapeEditorLayerSettings
		TEST_METHOD(ScriptStruct__Landscape__LandscapeEditorLayerSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeEditorLayerSettings, UnknownData_WRFP, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandscapeEditorLayerSettings, 0x0001);
		}

		// struct FLandscapeWeightmapUsage
		TEST_METHOD(ScriptStruct__Landscape__LandscapeWeightmapUsage)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeWeightmapUsage, ChannelUsage, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandscapeWeightmapUsage, 0x0020);
		}

		// struct FForeignWorldSplineData
		TEST_METHOD(ScriptStruct__Landscape__ForeignWorldSplineData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FForeignWorldSplineData, UnknownData_5J4L, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FForeignWorldSplineData, 0x0001);
		}

		// struct FForeignSplineSegmentData
		TEST_METHOD(ScriptStruct__Landscape__ForeignSplineSegmentData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FForeignSplineSegmentData, UnknownData_XI9C, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FForeignSplineSegmentData, 0x0001);
		}

		// struct FForeignControlPointData
		TEST_METHOD(ScriptStruct__Landscape__ForeignControlPointData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FForeignControlPointData, UnknownData_2DO6, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FForeignControlPointData, 0x0001);
		}

		// struct FLandscapeSplineMeshEntry
		TEST_METHOD(ScriptStruct__Landscape__LandscapeSplineMeshEntry)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeSplineMeshEntry, Mesh, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeSplineMeshEntry, MaterialOverrides, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeSplineMeshEntry, UnknownData_GGTS, 0x0019);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeSplineMeshEntry, CenterAdjust, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeSplineMeshEntry, UnknownData_QMYF, 0x0025);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeSplineMeshEntry, Scale, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeSplineMeshEntry, Orientation, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeSplineMeshEntry, ForwardAxis, 0x0035);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeSplineMeshEntry, UpAxis, 0x0036);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLandscapeSplineMeshEntry, UnknownData_1EBL, 0x0037);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLandscapeSplineMeshEntry, 0x0038);
		}

		// struct FOverlayItem
		TEST_METHOD(ScriptStruct__Overlay__OverlayItem)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FOverlayItem, StartTime, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOverlayItem, EndTime, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOverlayItem, Text, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FOverlayItem, Position, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FOverlayItem, 0x0028);
		}

		// struct FClothConstraintSetup
		TEST_METHOD(ScriptStruct__ClothingSystemRuntime__ClothConstraintSetup)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConstraintSetup, Stiffness, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConstraintSetup, StiffnessMultiplier, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConstraintSetup, StretchLimit, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConstraintSetup, CompressionLimit, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClothConstraintSetup, 0x0010);
		}

		// struct FClothVertBoneData
		TEST_METHOD(ScriptStruct__ClothingSystemRuntime__ClothVertBoneData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothVertBoneData, NumInfluences, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothVertBoneData, boneIndices, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothVertBoneData, BoneWeights, 0x0014);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClothVertBoneData, 0x0034);
		}

		// struct FClothPhysicalMeshData
		TEST_METHOD(ScriptStruct__ClothingSystemRuntime__ClothPhysicalMeshData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicalMeshData, Vertices, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicalMeshData, Normals, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicalMeshData, Indices, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicalMeshData, MaxDistances, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicalMeshData, BackstopDistances, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicalMeshData, BackstopRadiuses, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicalMeshData, AnimDriveMultipliers, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicalMeshData, InverseMasses, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicalMeshData, BoneData, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicalMeshData, MaxBoneWeights, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicalMeshData, NumFixedVerts, 0x0094);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothPhysicalMeshData, SelfCollisionIndices, 0x0098);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClothPhysicalMeshData, 0x00A8);
		}

		// struct FClothLODData
		TEST_METHOD(ScriptStruct__ClothingSystemRuntime__ClothLODData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothLODData, PhysicalMeshData, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothLODData, CollisionData, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothLODData, UnknownData_Q1MD, 0x00D8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClothLODData, 0x00F8);
		}

		// struct FClothConfig
		TEST_METHOD(ScriptStruct__ClothingSystemRuntime__ClothConfig)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, WindMethod, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, UnknownData_86E4, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, VerticalConstraintConfig, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, HorizontalConstraintConfig, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, BendConstraintConfig, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, ShearConstraintConfig, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, SelfCollisionRadius, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, SelfCollisionStiffness, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, SelfCollisionCullScale, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, Damping, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, Friction, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, WindDragCoefficient, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, WindLiftCoefficient, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, LinearDrag, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, AngularDrag, 0x0074);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, LinearInertiaScale, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, AngularInertiaScale, 0x008C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, CentrifugalInertiaScale, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, SolverFrequency, 0x00A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, StiffnessFrequency, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, GravityScale, 0x00AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, GravityOverride, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, bUseGravityOverride, 0x00BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, UnknownData_4JN0, 0x00BD);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, TetherStiffness, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, TetherLimit, 0x00C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, CollisionThickness, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, AnimDriveSpringStiffness, 0x00CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothConfig, AnimDriveDamperStiffness, 0x00D0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClothConfig, 0x00D4);
		}

		// struct FClothParameterMask_PhysMesh
		TEST_METHOD(ScriptStruct__ClothingSystemRuntime__ClothParameterMask_PhysMesh)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothParameterMask_PhysMesh, MaskName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothParameterMask_PhysMesh, CurrentTarget, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothParameterMask_PhysMesh, UnknownData_JSSF, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothParameterMask_PhysMesh, MaxValue, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothParameterMask_PhysMesh, MinValue, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothParameterMask_PhysMesh, UnknownData_L0IH, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothParameterMask_PhysMesh, Values, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothParameterMask_PhysMesh, bEnabled, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FClothParameterMask_PhysMesh, UnknownData_CK2A, 0x0029);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FClothParameterMask_PhysMesh, 0x0030);
		}

		// struct FSupportedAreaData
		TEST_METHOD(ScriptStruct__NavigationSystem__SupportedAreaData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSupportedAreaData, AreaClassName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSupportedAreaData, AreaID, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSupportedAreaData, UnknownData_2SXQ, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSupportedAreaData, AreaClass, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSupportedAreaData, 0x0020);
		}

		// struct FNavCollisionBox
		TEST_METHOD(ScriptStruct__NavigationSystem__NavCollisionBox)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavCollisionBox, Offset, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavCollisionBox, Extent, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavCollisionBox, 0x0018);
		}

		// struct FNavCollisionCylinder
		TEST_METHOD(ScriptStruct__NavigationSystem__NavCollisionCylinder)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavCollisionCylinder, Offset, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavCollisionCylinder, Radius, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavCollisionCylinder, Height, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavCollisionCylinder, 0x0014);
		}

		// struct FNavGraphNode
		TEST_METHOD(ScriptStruct__NavigationSystem__NavGraphNode)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavGraphNode, Owner, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavGraphNode, UnknownData_7Z50, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavGraphNode, 0x0018);
		}

		// struct FNavigationFilterArea
		TEST_METHOD(ScriptStruct__NavigationSystem__NavigationFilterArea)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavigationFilterArea, AreaClass, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavigationFilterArea, TravelCostOverride, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavigationFilterArea, EnteringCostOverride, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavigationFilterArea, UnknownData_WEMG, 0x0011);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavigationFilterArea, 0x0018);
		}

		// struct FNavigationFilterFlags
		TEST_METHOD(ScriptStruct__NavigationSystem__NavigationFilterFlags)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavigationFilterFlags, UnknownData_PRW5, 0x0002);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavigationFilterFlags, 0x0004);
		}

		// struct FNavGraphEdge
		TEST_METHOD(ScriptStruct__NavigationSystem__NavGraphEdge)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNavGraphEdge, UnknownData_992X, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNavGraphEdge, 0x0018);
		}

		// struct FAIRequestID
		TEST_METHOD(ScriptStruct__AIModule__AIRequestID)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIRequestID, RequestID, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAIRequestID, 0x0004);
		}

		// struct FAIStimulus
		TEST_METHOD(ScriptStruct__AIModule__AIStimulus)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIStimulus, Age, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIStimulus, ExpirationAge, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIStimulus, Strength, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIStimulus, StimulusLocation, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIStimulus, ReceiverLocation, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIStimulus, UnknownData_KFC5, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIStimulus, Tag, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIStimulus, UnknownData_T7PS, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIStimulus, UnknownData_845Z, 0x0041);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAIStimulus, 0x0048);
		}

		// struct FActorPerceptionBlueprintInfo
		TEST_METHOD(ScriptStruct__AIModule__ActorPerceptionBlueprintInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FActorPerceptionBlueprintInfo, Target, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FActorPerceptionBlueprintInfo, LastSensedStimuli, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FActorPerceptionBlueprintInfo, UnknownData_REAX, 0x0019);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FActorPerceptionBlueprintInfo, 0x0020);
		}

		// struct FAIDamageEvent
		TEST_METHOD(ScriptStruct__AIModule__AIDamageEvent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIDamageEvent, Amount, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIDamageEvent, Location, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIDamageEvent, HitLocation, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIDamageEvent, UnknownData_DUZL, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIDamageEvent, DamagedActor, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIDamageEvent, Instigator, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAIDamageEvent, 0x0030);
		}

		// struct FAINoiseEvent
		TEST_METHOD(ScriptStruct__AIModule__AINoiseEvent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAINoiseEvent, UnknownData_7XBU, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAINoiseEvent, NoiseLocation, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAINoiseEvent, Loudness, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAINoiseEvent, MaxRange, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAINoiseEvent, Instigator, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAINoiseEvent, Tag, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAINoiseEvent, UnknownData_VYZ2, 0x0028);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAINoiseEvent, 0x0030);
		}

		// struct FAIPredictionEvent
		TEST_METHOD(ScriptStruct__AIModule__AIPredictionEvent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIPredictionEvent, Requestor, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIPredictionEvent, PredictedActor, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIPredictionEvent, UnknownData_Z1QE, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAIPredictionEvent, 0x0018);
		}

		// struct FAITeamStimulusEvent
		TEST_METHOD(ScriptStruct__AIModule__AITeamStimulusEvent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAITeamStimulusEvent, UnknownData_2YKX, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAITeamStimulusEvent, Broadcaster, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAITeamStimulusEvent, Enemy, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAITeamStimulusEvent, 0x0038);
		}

		// struct FAITouchEvent
		TEST_METHOD(ScriptStruct__AIModule__AITouchEvent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAITouchEvent, UnknownData_0RKE, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAITouchEvent, TouchReceiver, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAITouchEvent, OtherActor, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAITouchEvent, 0x0020);
		}

		// struct FAISenseAffiliationFilter
		TEST_METHOD(ScriptStruct__AIModule__AISenseAffiliationFilter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAISenseAffiliationFilter, UnknownData_380B, 0x0001);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAISenseAffiliationFilter, 0x0004);
		}

		// struct FAIMoveRequest
		TEST_METHOD(ScriptStruct__AIModule__AIMoveRequest)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIMoveRequest, GoalActor, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIMoveRequest, UnknownData_PBY7, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAIMoveRequest, 0x0040);
		}

		// struct FBTDecoratorLogic
		TEST_METHOD(ScriptStruct__AIModule__BTDecoratorLogic)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBTDecoratorLogic, Operation, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBTDecoratorLogic, UnknownData_OT9X, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBTDecoratorLogic, Number, 0x0002);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBTDecoratorLogic, 0x0004);
		}

		// struct FBehaviorTreeTemplateInfo
		TEST_METHOD(ScriptStruct__AIModule__BehaviorTreeTemplateInfo)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBehaviorTreeTemplateInfo, Asset, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBehaviorTreeTemplateInfo, Template, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBehaviorTreeTemplateInfo, UnknownData_SN7T, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBehaviorTreeTemplateInfo, 0x0018);
		}

		// struct FBlackboardEntry
		TEST_METHOD(ScriptStruct__AIModule__BlackboardEntry)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlackboardEntry, EntryName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlackboardEntry, KeyType, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlackboardEntry, UnknownData_1ZJQ, 0x0011);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlackboardEntry, 0x0018);
		}

		// struct FBTCompositeChild
		TEST_METHOD(ScriptStruct__AIModule__BTCompositeChild)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBTCompositeChild, ChildComposite, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBTCompositeChild, ChildTask, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBTCompositeChild, Decorators, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBTCompositeChild, DecoratorOps, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBTCompositeChild, 0x0030);
		}

		// struct FBlackboardKeySelector
		TEST_METHOD(ScriptStruct__AIModule__BlackboardKeySelector)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlackboardKeySelector, AllowedTypes, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlackboardKeySelector, SelectedKeyName, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlackboardKeySelector, SelectedKeyType, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlackboardKeySelector, SelectedKeyID, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlackboardKeySelector, UnknownData_0MGO, 0x0021);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlackboardKeySelector, UnknownData_3K7A, 0x0025);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlackboardKeySelector, 0x0028);
		}

		// struct FAIDataProviderValue
		TEST_METHOD(ScriptStruct__AIModule__AIDataProviderValue)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIDataProviderValue, UnknownData_PRQY, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIDataProviderValue, CachedProperty, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIDataProviderValue, DataBinding, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIDataProviderValue, DataField, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAIDataProviderValue, 0x0020);
		}

		// struct FAIDataProviderTypedValue : public FAIDataProviderValue
		TEST_METHOD(ScriptStruct__AIModule__AIDataProviderTypedValue)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIDataProviderTypedValue, PropertyType, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAIDataProviderTypedValue, 0x0028);
		}

		// struct FAIDataProviderFloatValue : public FAIDataProviderTypedValue
		TEST_METHOD(ScriptStruct__AIModule__AIDataProviderFloatValue)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIDataProviderFloatValue, DefaultValue, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIDataProviderFloatValue, UnknownData_58E7, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAIDataProviderFloatValue, 0x0030);
		}

		// struct FAIDynamicParam
		TEST_METHOD(ScriptStruct__AIModule__AIDynamicParam)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIDynamicParam, ParamName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIDynamicParam, ParamType, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIDynamicParam, UnknownData_QD8K, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIDynamicParam, Value, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIDynamicParam, BBKey, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAIDynamicParam, 0x0038);
		}

		// struct FEQSParametrizedQueryExecutionRequest
		TEST_METHOD(ScriptStruct__AIModule__EQSParametrizedQueryExecutionRequest)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEQSParametrizedQueryExecutionRequest, QueryTemplate, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEQSParametrizedQueryExecutionRequest, QueryConfig, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEQSParametrizedQueryExecutionRequest, EQSQueryBlackboardKey, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEQSParametrizedQueryExecutionRequest, RunMode, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEQSParametrizedQueryExecutionRequest, UnknownData_4CQ2, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEQSParametrizedQueryExecutionRequest, UnknownData_6MKS, 0x0045);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEQSParametrizedQueryExecutionRequest, 0x0048);
		}

		// struct FEnvNamedValue
		TEST_METHOD(ScriptStruct__AIModule__EnvNamedValue)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvNamedValue, ParamName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvNamedValue, ParamType, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvNamedValue, UnknownData_GMPJ, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvNamedValue, Value, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEnvNamedValue, 0x0010);
		}

		// struct FCrowdAvoidanceConfig
		TEST_METHOD(ScriptStruct__AIModule__CrowdAvoidanceConfig)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCrowdAvoidanceConfig, VelocityBias, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCrowdAvoidanceConfig, DesiredVelocityWeight, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCrowdAvoidanceConfig, CurrentVelocityWeight, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCrowdAvoidanceConfig, SideBiasWeight, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCrowdAvoidanceConfig, ImpactTimeWeight, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCrowdAvoidanceConfig, ImpactTimeRange, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCrowdAvoidanceConfig, CustomPatternIdx, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCrowdAvoidanceConfig, AdaptiveDivisions, 0x0019);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCrowdAvoidanceConfig, AdaptiveRings, 0x001A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCrowdAvoidanceConfig, AdaptiveDepth, 0x001B);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCrowdAvoidanceConfig, 0x001C);
		}

		// struct FCrowdAvoidanceSamplingPattern
		TEST_METHOD(ScriptStruct__AIModule__CrowdAvoidanceSamplingPattern)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FCrowdAvoidanceSamplingPattern, Angles, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FCrowdAvoidanceSamplingPattern, Radii, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FCrowdAvoidanceSamplingPattern, 0x0020);
		}

		// struct FAIDataProviderBoolValue : public FAIDataProviderTypedValue
		TEST_METHOD(ScriptStruct__AIModule__AIDataProviderBoolValue)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIDataProviderBoolValue, DefaultValue, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIDataProviderBoolValue, UnknownData_B330, 0x0029);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAIDataProviderBoolValue, 0x0030);
		}

		// struct FEnvTraceData
		TEST_METHOD(ScriptStruct__AIModule__EnvTraceData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvTraceData, VersionNum, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvTraceData, UnknownData_FFOV, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvTraceData, NavigationFilter, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvTraceData, ProjectDown, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvTraceData, ProjectUp, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvTraceData, ExtentX, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvTraceData, ExtentY, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvTraceData, ExtentZ, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvTraceData, PostProjectionVerticalOffset, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvTraceData, TraceChannel, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvTraceData, SerializedChannel, 0x0029);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvTraceData, TraceShape, 0x002A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvTraceData, TraceMode, 0x002B);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvTraceData, UnknownData_BNLK, 0x002D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEnvTraceData, 0x0030);
		}

		// struct FAIDataProviderIntValue : public FAIDataProviderTypedValue
		TEST_METHOD(ScriptStruct__AIModule__AIDataProviderIntValue)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIDataProviderIntValue, DefaultValue, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIDataProviderIntValue, UnknownData_8C6G, 0x002C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAIDataProviderIntValue, 0x0030);
		}

		// struct FEnvDirection
		TEST_METHOD(ScriptStruct__AIModule__EnvDirection)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvDirection, LineFrom, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvDirection, LineTo, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvDirection, Rotation, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvDirection, DirMode, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvDirection, UnknownData_FR1F, 0x0019);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEnvDirection, 0x0020);
		}

		// struct FEnvQueryInstanceCache
		TEST_METHOD(ScriptStruct__AIModule__EnvQueryInstanceCache)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvQueryInstanceCache, Template, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvQueryInstanceCache, UnknownData_REPA, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEnvQueryInstanceCache, 0x0178);
		}

		// struct FEnvOverlapData
		TEST_METHOD(ScriptStruct__AIModule__EnvOverlapData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvOverlapData, ExtentX, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvOverlapData, ExtentY, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvOverlapData, ExtentZ, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvOverlapData, ShapeOffset, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvOverlapData, OverlapChannel, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvOverlapData, OverlapShape, 0x0019);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvOverlapData, UnknownData_G5DX, 0x001A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvOverlapData, UnknownData_YBC8, 0x001D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEnvOverlapData, 0x0020);
		}

		// struct FPawnActionStack
		TEST_METHOD(ScriptStruct__AIModule__PawnActionStack)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPawnActionStack, TopAction, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPawnActionStack, 0x0008);
		}

		// struct FPawnActionEvent
		TEST_METHOD(ScriptStruct__AIModule__PawnActionEvent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPawnActionEvent, Action, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPawnActionEvent, UnknownData_J4OX, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPawnActionEvent, 0x0018);
		}

		// struct FAIDataProviderStructValue : public FAIDataProviderValue
		TEST_METHOD(ScriptStruct__AIModule__AIDataProviderStructValue)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAIDataProviderStructValue, UnknownData_J5FR, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAIDataProviderStructValue, 0x0030);
		}

		// struct FAISightEvent
		TEST_METHOD(ScriptStruct__AIModule__AISightEvent)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAISightEvent, UnknownData_YAIU, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAISightEvent, SeenActor, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAISightEvent, Observer, 0x0010);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAISightEvent, 0x0018);
		}

		// struct FEnvQueryRequest
		TEST_METHOD(ScriptStruct__AIModule__EnvQueryRequest)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvQueryRequest, QueryTemplate, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvQueryRequest, Owner, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvQueryRequest, World, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvQueryRequest, UnknownData_ZZ8S, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEnvQueryRequest, 0x0068);
		}

		// struct FEnvQueryResult
		TEST_METHOD(ScriptStruct__AIModule__EnvQueryResult)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvQueryResult, UnknownData_KRCW, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvQueryResult, ItemType, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvQueryResult, UnknownData_RK7P, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvQueryResult, OptionIndex, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvQueryResult, QueryID, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEnvQueryResult, UnknownData_9SU2, 0x0034);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEnvQueryResult, 0x0040);
		}

		// struct FGenericTeamId
		TEST_METHOD(ScriptStruct__AIModule__GenericTeamId)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FGenericTeamId, TeamID, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FGenericTeamId, 0x0001);
		}

		// struct FAxis
		TEST_METHOD(ScriptStruct__AnimationCore__Axis)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAxis, Axis, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAxis, bInLocalSpace, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAxis, UnknownData_WGFL, 0x000D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAxis, 0x0010);
		}

		// struct FConstraintDescriptor
		TEST_METHOD(ScriptStruct__AnimationCore__ConstraintDescriptor)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintDescriptor, Type, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintDescriptor, UnknownData_EZQF, 0x0001);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConstraintDescriptor, 0x0010);
		}

		// struct FConstraintData
		TEST_METHOD(ScriptStruct__AnimationCore__ConstraintData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintData, Constraint, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintData, Weight, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintData, bMaintainOffset, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintData, UnknownData_QGEA, 0x0015);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintData, Offset, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintData, CurrentTransform, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConstraintData, 0x0080);
		}

		// struct FFilterOptionPerAxis
		TEST_METHOD(ScriptStruct__AnimationCore__FilterOptionPerAxis)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FFilterOptionPerAxis, bX, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFilterOptionPerAxis, bY, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FFilterOptionPerAxis, bZ, 0x0002);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FFilterOptionPerAxis, 0x0003);
		}

		// struct FConstraintDescriptionEx
		TEST_METHOD(ScriptStruct__AnimationCore__ConstraintDescriptionEx)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintDescriptionEx, UnknownData_CKSA, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintDescriptionEx, AxesFilterOption, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintDescriptionEx, UnknownData_T8O4, 0x000B);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConstraintDescriptionEx, 0x0010);
		}

		// struct FAimConstraintDescription : public FConstraintDescriptionEx
		TEST_METHOD(ScriptStruct__AnimationCore__AimConstraintDescription)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAimConstraintDescription, LookAt_Axis, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAimConstraintDescription, LookUp_Axis, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAimConstraintDescription, bUseLookUp, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAimConstraintDescription, UnknownData_NX6M, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAimConstraintDescription, LookUpTarget, 0x0034);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAimConstraintDescription, 0x0040);
		}

		// struct FTransformConstraintDescription : public FConstraintDescriptionEx
		TEST_METHOD(ScriptStruct__AnimationCore__TransformConstraintDescription)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTransformConstraintDescription, TransformType, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTransformConstraintDescription, UnknownData_CZMZ, 0x0011);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTransformConstraintDescription, 0x0018);
		}

		// struct FConstraintDescription
		TEST_METHOD(ScriptStruct__AnimationCore__ConstraintDescription)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintDescription, bTranslation, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintDescription, bRotation, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintDescription, bScale, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintDescription, bParent, 0x0003);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintDescription, TranslationAxes, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintDescription, RotationAxes, 0x0007);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintDescription, ScaleAxes, 0x000A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConstraintDescription, 0x000D);
		}

		// struct FTransformConstraint
		TEST_METHOD(ScriptStruct__AnimationCore__TransformConstraint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTransformConstraint, Operator, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTransformConstraint, UnknownData_6VWC, 0x000D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTransformConstraint, SourceNode, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTransformConstraint, TargetNode, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTransformConstraint, Weight, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTransformConstraint, bMaintainOffset, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTransformConstraint, UnknownData_BEJQ, 0x0025);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTransformConstraint, 0x0028);
		}

		// struct FConstraintOffset
		TEST_METHOD(ScriptStruct__AnimationCore__ConstraintOffset)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintOffset, Translation, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintOffset, UnknownData_7WVT, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintOffset, Rotation, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintOffset, Scale, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintOffset, UnknownData_Q1DT, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraintOffset, Parent, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConstraintOffset, 0x0060);
		}

		// struct FTransformFilter
		TEST_METHOD(ScriptStruct__AnimationCore__TransformFilter)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FTransformFilter, TranslationFilter, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTransformFilter, RotationFilter, 0x0003);
			CHEAT_GEAR_CHECK_OFFSET(CG::FTransformFilter, ScaleFilter, 0x0006);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FTransformFilter, 0x0009);
		}

		// struct FEulerTransform
		TEST_METHOD(ScriptStruct__AnimationCore__EulerTransform)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FEulerTransform, Location, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEulerTransform, Rotation, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FEulerTransform, Scale, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEulerTransform, 0x0024);
		}

		// struct FNodeChain
		TEST_METHOD(ScriptStruct__AnimationCore__NodeChain)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNodeChain, Nodes, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNodeChain, 0x0010);
		}

		// struct FNodeObject
		TEST_METHOD(ScriptStruct__AnimationCore__NodeObject)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNodeObject, Name, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNodeObject, ParentName, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNodeObject, 0x0010);
		}

		// struct FNodeHierarchyData
		TEST_METHOD(ScriptStruct__AnimationCore__NodeHierarchyData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNodeHierarchyData, Nodes, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNodeHierarchyData, Transforms, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNodeHierarchyData, NodeNameToIndexMapping, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNodeHierarchyData, 0x0070);
		}

		// struct FNodeHierarchyWithUserData
		TEST_METHOD(ScriptStruct__AnimationCore__NodeHierarchyWithUserData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FNodeHierarchyWithUserData, UnknownData_OPPV, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FNodeHierarchyWithUserData, Hierarchy, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FNodeHierarchyWithUserData, 0x0078);
		}

		// struct FLightPropagationVolumeSettings
		TEST_METHOD(ScriptStruct__Renderer__LightPropagationVolumeSettings)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightPropagationVolumeSettings, UnknownData_0VWA, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightPropagationVolumeSettings, LPVIntensity, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightPropagationVolumeSettings, LPVVplInjectionBias, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightPropagationVolumeSettings, LPVSize, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightPropagationVolumeSettings, LPVSecondaryOcclusionIntensity, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightPropagationVolumeSettings, LPVSecondaryBounceIntensity, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightPropagationVolumeSettings, LPVGeometryVolumeBias, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightPropagationVolumeSettings, LPVEmissiveInjectionIntensity, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightPropagationVolumeSettings, LPVDirectionalOcclusionIntensity, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightPropagationVolumeSettings, LPVDirectionalOcclusionRadius, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightPropagationVolumeSettings, LPVDiffuseOcclusionExponent, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightPropagationVolumeSettings, LPVSpecularOcclusionExponent, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightPropagationVolumeSettings, LPVDiffuseOcclusionIntensity, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightPropagationVolumeSettings, LPVSpecularOcclusionIntensity, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightPropagationVolumeSettings, LPVFadeRange, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FLightPropagationVolumeSettings, LPVDirectionalOcclusionFadeRange, 0x003C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FLightPropagationVolumeSettings, 0x0040);
		}

		// struct FAnimationPlayInSequence
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimationPlayInSequence)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationPlayInSequence, Animation, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationPlayInSequence, Offset, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimationPlayInSequence, BlendWeight, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimationPlayInSequence, 0x0010);
		}

		// struct FAnimNode_SkeletalControlBase : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_SkeletalControlBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SkeletalControlBase, ComponentPose, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SkeletalControlBase, LODThreshold, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SkeletalControlBase, ActualAlpha, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SkeletalControlBase, AlphaInputType, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SkeletalControlBase, bAlphaBoolEnabled, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SkeletalControlBase, UnknownData_ABNK, 0x004A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SkeletalControlBase, Alpha, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SkeletalControlBase, AlphaScaleBias, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SkeletalControlBase, AlphaBoolBlend, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SkeletalControlBase, AlphaCurveName, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SkeletalControlBase, AlphaScaleBiasClamp, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SkeletalControlBase, UnknownData_X2AU, 0x00E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_SkeletalControlBase, 0x00F0);
		}

		// struct FSocketReference
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__SocketReference)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSocketReference, SocketName, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSocketReference, UnknownData_YK8S, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSocketReference, 0x0040);
		}

		// struct FBoneSocketTarget
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__BoneSocketTarget)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoneSocketTarget, bUseSocket, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoneSocketTarget, UnknownData_9MYB, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoneSocketTarget, BoneReference, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBoneSocketTarget, SocketReference, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBoneSocketTarget, 0x0060);
		}

		// struct FAnimNode_LookAt : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_LookAt)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LookAt, BoneToModify, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LookAt, LookAtBone, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LookAt, LookAtSocket, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LookAt, UnknownData_XQ8R, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LookAt, LookAtTarget, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LookAt, LookAtLocation, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LookAt, LookAtAxis, 0x019C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LookAt, UnknownData_I1LY, 0x019D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LookAt, CustomLookAtAxis, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LookAt, LookAt_Axis, 0x01AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LookAt, bUseLookUpAxis, 0x01BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LookAt, LookUpAxis, 0x01BD);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LookAt, UnknownData_WVI6, 0x01BE);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LookAt, CustomLookUpAxis, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LookAt, LookUp_Axis, 0x01CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LookAt, LookAtClamp, 0x01DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LookAt, InterpolationType, 0x01E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LookAt, UnknownData_6WXM, 0x01E1);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LookAt, InterpolationTime, 0x01E4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LookAt, InterpolationTriggerThreashold, 0x01E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LookAt, UnknownData_WPVL, 0x01EC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_LookAt, 0x0220);
		}

		// struct FAnimNode_BlendSpacePlayer : public FAnimNode_AssetPlayerBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_BlendSpacePlayer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendSpacePlayer, X, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendSpacePlayer, Y, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendSpacePlayer, Z, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendSpacePlayer, PlayRate, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendSpacePlayer, bLoop, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendSpacePlayer, UnknownData_H6S3, 0x0069);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendSpacePlayer, StartPosition, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendSpacePlayer, BlendSpace, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendSpacePlayer, bResetPlayTimeWhenBlendSpaceChanges, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendSpacePlayer, UnknownData_6544, 0x0079);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendSpacePlayer, BlendFilter, 0x0080);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendSpacePlayer, BlendSampleDataCache, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendSpacePlayer, PreviousBlendSpace, 0x0120);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_BlendSpacePlayer, 0x0128);
		}

		// struct FAnimNode_AimOffsetLookAt : public FAnimNode_BlendSpacePlayer
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_AimOffsetLookAt)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AimOffsetLookAt, BasePose, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AimOffsetLookAt, LODThreshold, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AimOffsetLookAt, bIsLODEnabled, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AimOffsetLookAt, UnknownData_Z708, 0x013D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AimOffsetLookAt, LookAtLocation, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AimOffsetLookAt, UnknownData_AXOO, 0x014C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AimOffsetLookAt, SourceSocketName, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AimOffsetLookAt, PivotSocketName, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AimOffsetLookAt, SocketAxis, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AimOffsetLookAt, Alpha, 0x016C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AimOffsetLookAt, SocketBoneReference, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AimOffsetLookAt, UnknownData_D2E6, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AimOffsetLookAt, SocketLocalTransform, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AimOffsetLookAt, PivotSocketBoneReference, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AimOffsetLookAt, UnknownData_5R3Z, 0x01D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AimOffsetLookAt, PivotSocketLocalTransform, 0x01E0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_AimOffsetLookAt, 0x0210);
		}

		// struct FAnimPhysSphericalLimit
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimPhysSphericalLimit)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysSphericalLimit, DrivingBone, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysSphericalLimit, SphereLocalOffset, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysSphericalLimit, LimitRadius, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysSphericalLimit, LimitType, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysSphericalLimit, UnknownData_JH87, 0x0029);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimPhysSphericalLimit, 0x0030);
		}

		// struct FAnimPhysPlanarLimit
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimPhysPlanarLimit)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysPlanarLimit, DrivingBone, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysPlanarLimit, UnknownData_GYLZ, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysPlanarLimit, PlaneTransform, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimPhysPlanarLimit, 0x0050);
		}

		// struct FAnimPhysConstraintSetup
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimPhysConstraintSetup)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysConstraintSetup, LinearXLimitType, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysConstraintSetup, LinearYLimitType, 0x0001);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysConstraintSetup, LinearZLimitType, 0x0002);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysConstraintSetup, UnknownData_4G2T, 0x0003);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysConstraintSetup, LinearAxesMin, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysConstraintSetup, LinearAxesMax, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysConstraintSetup, AngularConstraintType, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysConstraintSetup, TwistAxis, 0x001D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysConstraintSetup, UnknownData_3ZO7, 0x001E);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysConstraintSetup, ConeAngle, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysConstraintSetup, AngularXAngle, 0x0024);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysConstraintSetup, AngularYAngle, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysConstraintSetup, AngularZAngle, 0x002C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysConstraintSetup, AngularLimitsMin, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysConstraintSetup, AngularLimitsMax, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysConstraintSetup, AngularTargetAxis, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysConstraintSetup, UnknownData_08W7, 0x0049);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysConstraintSetup, AngularTarget, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysConstraintSetup, bLinearFullyLocked, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimPhysConstraintSetup, UnknownData_4MJB, 0x0059);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimPhysConstraintSetup, 0x005C);
		}

		// struct FAnimNode_AnimDynamics : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_AnimDynamics)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, SimulationSpace, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, UnknownData_37BQ, 0x00F1);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, RelativeSpaceBone, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, bChain, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, UnknownData_FJG0, 0x0111);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, BoundBone, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, ChainEnd, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, BoxExtents, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, LocalJointOffset, 0x0154);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, GravityScale, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, GravityOverride, 0x0164);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, bUseGravityOverride, 0x0170);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, bLinearSpring, 0x0171);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, bAngularSpring, 0x0172);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, UnknownData_7ZOO, 0x0173);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, LinearSpringConstant, 0x0174);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, AngularSpringConstant, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, bEnableWind, 0x017C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, bWindWasEnabled, 0x017D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, UnknownData_BC4W, 0x017E);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, WindScale, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, ComponentLinearAccScale, 0x0184);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, ComponentLinearVelScale, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, ComponentAppliedLinearAccClamp, 0x019C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, bOverrideLinearDamping, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, UnknownData_FE4O, 0x01A9);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, LinearDampingOverride, 0x01AC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, bOverrideAngularDamping, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, UnknownData_8XQ6, 0x01B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, AngularDampingOverride, 0x01B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, bOverrideAngularBias, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, UnknownData_ELOT, 0x01B9);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, AngularBiasOverride, 0x01BC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, bDoUpdate, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, bDoEval, 0x01C1);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, UnknownData_TY9B, 0x01C2);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, NumSolverIterationsPreUpdate, 0x01C4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, NumSolverIterationsPostUpdate, 0x01C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, ConstraintSetup, 0x01CC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, bUsePlanarLimit, 0x0228);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, UnknownData_TI62, 0x0229);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, PlanarLimits, 0x0230);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, bUseSphericalLimits, 0x0240);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, UnknownData_SW1D, 0x0241);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, SphericalLimits, 0x0248);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, CollisionType, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, UnknownData_BHKA, 0x0259);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, SphereCollisionRadius, 0x025C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, ExternalForce, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_AnimDynamics, UnknownData_P2PG, 0x026C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_AnimDynamics, 0x03A0);
		}

		// struct FAnimNode_ApplyAdditive : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_ApplyAdditive)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ApplyAdditive, Base, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ApplyAdditive, Additive, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ApplyAdditive, Alpha, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ApplyAdditive, AlphaScaleBias, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ApplyAdditive, LODThreshold, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ApplyAdditive, ActualAlpha, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ApplyAdditive, bIgnoreAdditiveCurve, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ApplyAdditive, AlphaInputType, 0x0065);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ApplyAdditive, bAlphaBoolEnabled, 0x0066);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ApplyAdditive, UnknownData_GYWA, 0x0067);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ApplyAdditive, AlphaBoolBlend, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ApplyAdditive, AlphaCurveName, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ApplyAdditive, AlphaScaleBiasClamp, 0x00C0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_ApplyAdditive, 0x00F0);
		}

		// struct FAngularRangeLimit
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AngularRangeLimit)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAngularRangeLimit, LimitMin, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAngularRangeLimit, LimitMax, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAngularRangeLimit, Bone, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAngularRangeLimit, 0x0030);
		}

		// struct FAnimNode_ApplyLimits : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_ApplyLimits)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ApplyLimits, AngularRangeLimits, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ApplyLimits, AngularOffsets, 0x0100);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_ApplyLimits, 0x0110);
		}

		// struct FBlendBoneByChannelEntry
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__BlendBoneByChannelEntry)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlendBoneByChannelEntry, SourceBone, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlendBoneByChannelEntry, TargetBone, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlendBoneByChannelEntry, bBlendTranslation, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlendBoneByChannelEntry, bBlendRotation, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlendBoneByChannelEntry, bBlendScale, 0x0032);
			CHEAT_GEAR_CHECK_OFFSET(CG::FBlendBoneByChannelEntry, UnknownData_BOE1, 0x0033);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FBlendBoneByChannelEntry, 0x0038);
		}

		// struct FAnimNode_BlendBoneByChannel : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_BlendBoneByChannel)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendBoneByChannel, A, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendBoneByChannel, B, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendBoneByChannel, Alpha, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendBoneByChannel, AlphaScaleBias, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendBoneByChannel, UnknownData_I35M, 0x005C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendBoneByChannel, BoneDefinitions, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendBoneByChannel, TransformsSpace, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendBoneByChannel, UnknownData_E172, 0x0071);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendBoneByChannel, InternalBlendAlpha, 0x0074);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendBoneByChannel, bBIsRelevant, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendBoneByChannel, UnknownData_CKYG, 0x0079);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendBoneByChannel, ValidBoneEntries, 0x0080);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_BlendBoneByChannel, 0x0090);
		}

		// struct FAnimNode_BlendListBase : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_BlendListBase)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendListBase, BlendPose, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendListBase, BlendTime, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendListBase, BlendType, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendListBase, UnknownData_96F0, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendListBase, CustomBlendCurve, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendListBase, BlendProfile, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendListBase, Blends, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendListBase, BlendWeights, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendListBase, RemainingBlendTimes, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendListBase, LastActiveChildIndex, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendListBase, UnknownData_5LTI, 0x009C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendListBase, PerBoneSampleData, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendListBase, UnknownData_S8HC, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendListBase, bResetChildOnActivation, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendListBase, UnknownData_AZ8Y, 0x00C1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_BlendListBase, 0x00D8);
		}

		// struct FAnimNode_BlendListByBool : public FAnimNode_BlendListBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_BlendListByBool)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendListByBool, bActiveValue, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendListByBool, UnknownData_W15R, 0x00D9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_BlendListByBool, 0x00E0);
		}

		// struct FAnimNode_BlendListByEnum : public FAnimNode_BlendListBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_BlendListByEnum)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendListByEnum, EnumToPoseIndex, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendListByEnum, ActiveEnumValue, 0x00E8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendListByEnum, UnknownData_XE6V, 0x00E9);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_BlendListByEnum, 0x00F0);
		}

		// struct FAnimNode_BlendListByInt : public FAnimNode_BlendListBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_BlendListByInt)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendListByInt, ActiveChildIndex, 0x00D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendListByInt, UnknownData_3FIH, 0x00DC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_BlendListByInt, 0x00E0);
		}

		// struct FAnimNode_BlendSpaceEvaluator : public FAnimNode_BlendSpacePlayer
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_BlendSpaceEvaluator)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendSpaceEvaluator, NormalizedTime, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BlendSpaceEvaluator, UnknownData_SPGB, 0x012C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_BlendSpaceEvaluator, 0x0130);
		}

		// struct FAnimNode_BoneDrivenController : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_BoneDrivenController)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BoneDrivenController, SourceBone, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BoneDrivenController, SourceComponent, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BoneDrivenController, UnknownData_I7IQ, 0x0109);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BoneDrivenController, DrivingCurve, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BoneDrivenController, Multiplier, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BoneDrivenController, bUseRange, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BoneDrivenController, UnknownData_896N, 0x011D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BoneDrivenController, RangeMin, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BoneDrivenController, RangeMax, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BoneDrivenController, RemappedMin, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BoneDrivenController, RemappedMax, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BoneDrivenController, DestinationMode, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BoneDrivenController, UnknownData_WJF1, 0x0131);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BoneDrivenController, ParameterName, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BoneDrivenController, TargetBone, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BoneDrivenController, TargetComponent, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BoneDrivenController, UnknownData_9KV5, 0x0159);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BoneDrivenController, UnknownData_9TJW, 0x015E);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BoneDrivenController, ModificationMode, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_BoneDrivenController, UnknownData_29ON, 0x0161);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_BoneDrivenController, 0x0168);
		}

		// struct FAnimNode_CCDIK : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_CCDIK)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CCDIK, EffectorLocation, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CCDIK, EffectorLocationSpace, 0x00FC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CCDIK, UnknownData_0ATU, 0x00FD);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CCDIK, EffectorTarget, 0x0100);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CCDIK, TipBone, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CCDIK, RootBone, 0x0178);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CCDIK, Precision, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CCDIK, MaxIterations, 0x0194);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CCDIK, bStartFromTail, 0x0198);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CCDIK, bEnableRotationLimit, 0x0199);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CCDIK, UnknownData_S7QV, 0x019A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CCDIK, RotationLimitPerJoints, 0x01A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_CCDIK, 0x01B0);
		}

		// struct FConstraint
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__Constraint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraint, TargetBone, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraint, OffsetOption, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraint, TransformType, 0x0019);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraint, PerAxis, 0x001A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FConstraint, UnknownData_MF7T, 0x001D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FConstraint, 0x0028);
		}

		// struct FAnimNode_Constraint : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_Constraint)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Constraint, BoneToModify, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Constraint, ConstraintSetup, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Constraint, ConstraintWeights, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Constraint, UnknownData_142I, 0x0128);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_Constraint, 0x0138);
		}

		// struct FAnimNode_CopyBone : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_CopyBone)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CopyBone, SourceBone, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CopyBone, TargetBone, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CopyBone, bCopyTranslation, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CopyBone, bCopyRotation, 0x0121);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CopyBone, bCopyScale, 0x0122);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CopyBone, ControlSpace, 0x0123);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CopyBone, UnknownData_S508, 0x0124);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_CopyBone, 0x0128);
		}

		// struct FAnimNode_CopyBoneDelta : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_CopyBoneDelta)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CopyBoneDelta, SourceBone, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CopyBoneDelta, TargetBone, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CopyBoneDelta, bCopyTranslation, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CopyBoneDelta, bCopyRotation, 0x0121);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CopyBoneDelta, bCopyScale, 0x0122);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CopyBoneDelta, CopyMode, 0x0123);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CopyBoneDelta, TranslationMultiplier, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CopyBoneDelta, RotationMultiplier, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CopyBoneDelta, ScaleMultiplier, 0x012C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_CopyBoneDelta, 0x0130);
		}

		// struct FAnimNode_CopyPoseFromMesh : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_CopyPoseFromMesh)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CopyPoseFromMesh, SourceMeshComponent, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CopyPoseFromMesh, bUseAttachedParent, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CopyPoseFromMesh, bCopyCurves, 0x0039);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CopyPoseFromMesh, UnknownData_PM4Z, 0x003A);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_CopyPoseFromMesh, 0x00E8);
		}

		// struct FAnimNode_CurveSource : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_CurveSource)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CurveSource, SourcePose, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CurveSource, SourceBinding, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CurveSource, Alpha, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CurveSource, UnknownData_B4AT, 0x004C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_CurveSource, CurveSource, 0x0050);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_CurveSource, 0x0060);
		}

		// struct FAnimNode_Fabrik : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_Fabrik)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Fabrik, EffectorTransform, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Fabrik, EffectorTransformSpace, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Fabrik, UnknownData_62KX, 0x0121);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Fabrik, EffectorTransformBone, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Fabrik, EffectorTarget, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Fabrik, EffectorRotationSource, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Fabrik, UnknownData_513Q, 0x01A1);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Fabrik, TipBone, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Fabrik, RootBone, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Fabrik, Precision, 0x01D8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Fabrik, MaxIterations, 0x01DC);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Fabrik, bEnableDebugDraw, 0x01E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Fabrik, UnknownData_ZYCA, 0x01E1);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_Fabrik, 0x01F0);
		}

		// struct FAnimNode_HandIKRetargeting : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_HandIKRetargeting)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_HandIKRetargeting, RightHandFK, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_HandIKRetargeting, LeftHandFK, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_HandIKRetargeting, RightHandIK, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_HandIKRetargeting, LeftHandIK, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_HandIKRetargeting, IKBonesToMove, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_HandIKRetargeting, HandFKWeight, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_HandIKRetargeting, UnknownData_KI0P, 0x0164);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_HandIKRetargeting, 0x0168);
		}

		// struct FAnimNode_LayeredBoneBlend : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_LayeredBoneBlend)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LayeredBoneBlend, BasePose, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LayeredBoneBlend, BlendPoses, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LayeredBoneBlend, LayerSetup, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LayeredBoneBlend, BlendWeights, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LayeredBoneBlend, bMeshSpaceRotationBlend, 0x0070);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LayeredBoneBlend, CurveBlendOption, 0x0071);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LayeredBoneBlend, bBlendRootMotionBasedOnRootBone, 0x0072);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LayeredBoneBlend, bHasRelevantPoses, 0x0073);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LayeredBoneBlend, LODThreshold, 0x0074);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LayeredBoneBlend, PerBoneBlendWeights, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LayeredBoneBlend, SkeletonGuid, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LayeredBoneBlend, VirtualBoneGuid, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LayeredBoneBlend, UnknownData_9RG9, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_LayeredBoneBlend, 0x00D8);
		}

		// struct FAnimLegIKData
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimLegIKData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimLegIKData, UnknownData_UFGW, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimLegIKData, 0x00B0);
		}

		// struct FAnimLegIKDefinition
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimLegIKDefinition)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimLegIKDefinition, IKFootBone, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimLegIKDefinition, FKFootBone, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimLegIKDefinition, NumBonesInLimb, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimLegIKDefinition, FootBoneForwardAxis, 0x0034);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimLegIKDefinition, HingeRotationAxis, 0x0035);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimLegIKDefinition, bEnableRotationLimit, 0x0036);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimLegIKDefinition, UnknownData_SQFD, 0x0037);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimLegIKDefinition, MinRotationAngle, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimLegIKDefinition, bEnableKneeTwistCorrection, 0x003C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimLegIKDefinition, UnknownData_WX3C, 0x003D);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimLegIKDefinition, 0x0040);
		}

		// struct FAnimNode_LegIK : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_LegIK)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LegIK, ReachPrecision, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LegIK, MaxIterations, 0x00F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LegIK, LegsDefinition, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LegIK, LegsData, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_LegIK, UnknownData_WA4I, 0x0118);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_LegIK, 0x0120);
		}

		// struct FIKChain
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__IKChain)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FIKChain, UnknownData_0JM3, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FIKChain, 0x0040);
		}

		// struct FIKChainLink
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__IKChainLink)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FIKChainLink, UnknownData_F7KL, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FIKChainLink, 0x0040);
		}

		// struct FAnimNode_MakeDynamicAdditive : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_MakeDynamicAdditive)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_MakeDynamicAdditive, Base, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_MakeDynamicAdditive, Additive, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_MakeDynamicAdditive, bMeshSpaceAdditive, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_MakeDynamicAdditive, UnknownData_956M, 0x0051);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_MakeDynamicAdditive, 0x0058);
		}

		// struct FAnimNode_ModifyBone : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_ModifyBone)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ModifyBone, BoneToModify, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ModifyBone, Translation, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ModifyBone, Rotation, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ModifyBone, Scale, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ModifyBone, TranslationMode, 0x012C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ModifyBone, RotationMode, 0x012D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ModifyBone, ScaleMode, 0x012E);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ModifyBone, TranslationSpace, 0x012F);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ModifyBone, RotationSpace, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ModifyBone, ScaleSpace, 0x0131);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ModifyBone, UnknownData_4VRJ, 0x0132);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_ModifyBone, 0x0138);
		}

		// struct FAnimNode_ModifyCurve : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_ModifyCurve)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ModifyCurve, SourcePose, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ModifyCurve, ApplyMode, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ModifyCurve, UnknownData_S8NW, 0x0041);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ModifyCurve, CurveValues, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ModifyCurve, LastCurveValues, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ModifyCurve, CurveNames, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ModifyCurve, Alpha, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ModifyCurve, UnknownData_PXZ8, 0x007C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_ModifyCurve, 0x0080);
		}

		// struct FAnimNode_MultiWayBlend : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_MultiWayBlend)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_MultiWayBlend, Poses, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_MultiWayBlend, DesiredAlphas, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_MultiWayBlend, bAdditiveNode, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_MultiWayBlend, bNormalizeAlpha, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_MultiWayBlend, UnknownData_JFNK, 0x0052);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_MultiWayBlend, AlphaScaleBias, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_MultiWayBlend, UnknownData_XTIK, 0x005C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_MultiWayBlend, 0x0070);
		}

		// struct FAnimNode_ObserveBone : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_ObserveBone)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ObserveBone, BoneToObserve, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ObserveBone, DisplaySpace, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ObserveBone, bRelativeToRefPose, 0x0109);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ObserveBone, UnknownData_2MRV, 0x010A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ObserveBone, Translation, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ObserveBone, Rotation, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ObserveBone, Scale, 0x0124);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_ObserveBone, 0x0130);
		}

		// struct FAnimNode_PoseHandler : public FAnimNode_AssetPlayerBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_PoseHandler)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseHandler, PoseAsset, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseHandler, UnknownData_F476, 0x0060);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_PoseHandler, 0x0090);
		}

		// struct FAnimNode_PoseBlendNode : public FAnimNode_PoseHandler
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_PoseBlendNode)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseBlendNode, SourcePose, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseBlendNode, BlendOption, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseBlendNode, UnknownData_1OD4, 0x00A1);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseBlendNode, CustomCurve, 0x00A8);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_PoseBlendNode, 0x00B0);
		}

		// struct FAnimNode_PoseByName : public FAnimNode_PoseHandler
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_PoseByName)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseByName, PoseName, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseByName, PoseWeight, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseByName, UnknownData_E5GA, 0x009C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_PoseByName, 0x00A0);
		}

		// struct FRBFParams
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__RBFParams)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRBFParams, TargetDimensions, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRBFParams, Radius, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRBFParams, Function, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRBFParams, DistanceMethod, 0x0009);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRBFParams, TwistAxis, 0x000A);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRBFParams, UnknownData_TUZ1, 0x000B);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRBFParams, WeightThreshold, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRBFParams, 0x0010);
		}

		// struct FPoseDriverTransform
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__PoseDriverTransform)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPoseDriverTransform, TargetTranslation, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPoseDriverTransform, TargetRotation, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPoseDriverTransform, 0x0018);
		}

		// struct FPoseDriverTarget
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__PoseDriverTarget)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FPoseDriverTarget, BoneTransforms, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPoseDriverTarget, TargetRotation, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPoseDriverTarget, TargetScale, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPoseDriverTarget, bApplyCustomCurve, 0x0020);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPoseDriverTarget, UnknownData_6ZOR, 0x0021);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPoseDriverTarget, CustomCurve, 0x0028);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPoseDriverTarget, DrivenName, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::FPoseDriverTarget, UnknownData_HLC9, 0x00A0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPoseDriverTarget, 0x00A8);
		}

		// struct FAnimNode_PoseDriver : public FAnimNode_PoseHandler
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_PoseDriver)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseDriver, SourcePose, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseDriver, SourceBones, 0x00A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseDriver, bOnlyDriveSelectedBones, 0x00B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseDriver, UnknownData_MV1P, 0x00B1);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseDriver, OnlyDriveBones, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseDriver, EvalSpaceBone, 0x00C8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseDriver, RBFParams, 0x00E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseDriver, DriveSource, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseDriver, DriveOutput, 0x00F1);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseDriver, UnknownData_D5EY, 0x00F2);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseDriver, PoseTargets, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseDriver, SourceBone, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseDriver, TwistAxis, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseDriver, Type, 0x0121);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseDriver, UnknownData_U44N, 0x0122);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseDriver, RadialScaling, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseDriver, UnknownData_9M0D, 0x0128);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_PoseDriver, 0x0160);
		}

		// struct FAnimNode_PoseSnapshot : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_PoseSnapshot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseSnapshot, Mode, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseSnapshot, UnknownData_3QNC, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseSnapshot, SnapshotName, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseSnapshot, Snapshot, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_PoseSnapshot, UnknownData_27TF, 0x0078);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_PoseSnapshot, 0x00B0);
		}

		// struct FRandomPlayerSequenceEntry
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__RandomPlayerSequenceEntry)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRandomPlayerSequenceEntry, Sequence, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRandomPlayerSequenceEntry, ChanceToPlay, 0x0008);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRandomPlayerSequenceEntry, MinLoopCount, 0x000C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRandomPlayerSequenceEntry, MaxLoopCount, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRandomPlayerSequenceEntry, MinPlayRate, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRandomPlayerSequenceEntry, MaxPlayRate, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRandomPlayerSequenceEntry, UnknownData_5XVG, 0x001C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRandomPlayerSequenceEntry, BlendIn, 0x0020);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRandomPlayerSequenceEntry, 0x0058);
		}

		// struct FAnimNode_RandomPlayer : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_RandomPlayer)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RandomPlayer, bShuffleMode, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RandomPlayer, UnknownData_IRUD, 0x0031);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RandomPlayer, Entries, 0x0038);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RandomPlayer, UnknownData_SL6D, 0x0048);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_RandomPlayer, 0x0090);
		}

		// struct FAnimNode_MeshSpaceRefPose : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_MeshSpaceRefPose)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_MeshSpaceRefPose, 0x0030);
		}

		// struct FAnimNode_RefPose : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_RefPose)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RefPose, RefPoseType, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RefPose, UnknownData_7ZM6, 0x0031);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_RefPose, 0x0038);
		}

		// struct FAnimNode_ResetRoot : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_ResetRoot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ResetRoot, UnknownData_XMCK, 0x00F0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_ResetRoot, 0x0100);
		}

		// struct FAnimNode_RigidBody : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_RigidBody)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RigidBody, OverridePhysicsAsset, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RigidBody, OverrideWorldGravity, 0x00F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RigidBody, ExternalForce, 0x0104);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RigidBody, ComponentLinearAccScale, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RigidBody, ComponentLinearVelScale, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RigidBody, ComponentAppliedLinearAccClamp, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RigidBody, OverlapChannel, 0x0134);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RigidBody, bEnableWorldGeometry, 0x0135);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RigidBody, UnknownData_WZU2, 0x0136);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RigidBody, SimulationSpace, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RigidBody, UnknownData_A3PJ, 0x0136);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RigidBody, UnknownData_IAAR, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RigidBody, BaseBoneRef, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RigidBody, bOverrideWorldGravity, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RigidBody, UnknownData_82GO, 0x0159);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RigidBody, CachedBoundsScale, 0x015C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RigidBody, bTransferBoneVelocities, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RigidBody, bFreezeIncomingPoseOnStart, 0x0161);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RigidBody, bComponentSpaceSimulation, 0x0162);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RigidBody, UnknownData_CHGV, 0x0163);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_RigidBody, 0x0570);
		}

		// struct FAnimNode_Root : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_Root)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Root, Result, 0x0030);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_Root, 0x0040);
		}

		// struct FAnimNode_RotateRootBone : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_RotateRootBone)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotateRootBone, BasePose, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotateRootBone, Pitch, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotateRootBone, Yaw, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotateRootBone, PitchScaleBiasClamp, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotateRootBone, YawScaleBiasClamp, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotateRootBone, MeshToComponent, 0x00A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotateRootBone, ActualPitch, 0x00B4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotateRootBone, ActualYaw, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotateRootBone, UnknownData_QDSB, 0x00BC);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_RotateRootBone, 0x00C0);
		}

		// struct FAnimNode_RotationMultiplier : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_RotationMultiplier)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotationMultiplier, TargetBone, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotationMultiplier, SourceBone, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotationMultiplier, Multiplier, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotationMultiplier, RotationAxisToRefer, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotationMultiplier, bIsAdditive, 0x0125);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotationMultiplier, UnknownData_PD0X, 0x0126);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_RotationMultiplier, 0x0128);
		}

		// struct FAnimNode_RotationOffsetBlendSpace : public FAnimNode_BlendSpacePlayer
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_RotationOffsetBlendSpace)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotationOffsetBlendSpace, BasePose, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotationOffsetBlendSpace, LODThreshold, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotationOffsetBlendSpace, bIsLODEnabled, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotationOffsetBlendSpace, AlphaInputType, 0x013D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotationOffsetBlendSpace, UnknownData_FL2E, 0x013E);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotationOffsetBlendSpace, Alpha, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotationOffsetBlendSpace, AlphaScaleBias, 0x0144);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotationOffsetBlendSpace, ActualAlpha, 0x014C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotationOffsetBlendSpace, bAlphaBoolEnabled, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotationOffsetBlendSpace, UnknownData_S8G1, 0x0151);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotationOffsetBlendSpace, AlphaBoolBlend, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotationOffsetBlendSpace, AlphaCurveName, 0x01A8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_RotationOffsetBlendSpace, AlphaScaleBiasClamp, 0x01B0);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_RotationOffsetBlendSpace, 0x01E0);
		}

		// struct FAnimNode_ScaleChainLength : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_ScaleChainLength)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ScaleChainLength, InputPose, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ScaleChainLength, DefaultChainLength, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ScaleChainLength, UnknownData_VD1J, 0x0044);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ScaleChainLength, ChainStartBone, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ScaleChainLength, ChainEndBone, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ScaleChainLength, ChainInitialLength, 0x0078);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ScaleChainLength, UnknownData_MKYN, 0x0079);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ScaleChainLength, TargetLocation, 0x007C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ScaleChainLength, Alpha, 0x0088);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ScaleChainLength, ActualAlpha, 0x008C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ScaleChainLength, AlphaScaleBias, 0x0090);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ScaleChainLength, bBoneIndicesCached, 0x0098);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_ScaleChainLength, UnknownData_N43H, 0x0099);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_ScaleChainLength, 0x00B0);
		}

		// struct FAnimNode_SequenceEvaluator : public FAnimNode_AssetPlayerBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_SequenceEvaluator)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SequenceEvaluator, Sequence, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SequenceEvaluator, ExplicitTime, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SequenceEvaluator, bShouldLoop, 0x0064);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SequenceEvaluator, bTeleportToExplicitTime, 0x0065);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SequenceEvaluator, UnknownData_GCXA, 0x0066);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SequenceEvaluator, StartPosition, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SequenceEvaluator, ReinitializationBehavior, 0x006C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SequenceEvaluator, bReinitialized, 0x006D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SequenceEvaluator, UnknownData_YQDJ, 0x006E);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_SequenceEvaluator, 0x0070);
		}

		// struct FAnimNode_Slot : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_Slot)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Slot, Source, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Slot, SlotName, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Slot, bAlwaysUpdateSourcePose, 0x0048);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Slot, UnknownData_C82P, 0x0049);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_Slot, 0x0068);
		}

		// struct FSplineIKCachedBoneData
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__SplineIKCachedBoneData)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplineIKCachedBoneData, Bone, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplineIKCachedBoneData, RefSkeletonIndex, 0x0018);
			CHEAT_GEAR_CHECK_OFFSET(CG::FSplineIKCachedBoneData, UnknownData_T627, 0x001C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FSplineIKCachedBoneData, 0x0020);
		}

		// struct FAnimNode_SplineIK : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_SplineIK)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SplineIK, StartBone, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SplineIK, EndBone, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SplineIK, BoneAxis, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SplineIK, bAutoCalculateSpline, 0x0121);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SplineIK, UnknownData_KIW1, 0x0122);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SplineIK, PointCount, 0x0124);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SplineIK, ControlPoints, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SplineIK, Roll, 0x0138);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SplineIK, TwistStart, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SplineIK, TwistEnd, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SplineIK, UnknownData_43DK, 0x0144);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SplineIK, TwistBlend, 0x0148);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SplineIK, Stretch, 0x0180);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SplineIK, Offset, 0x0184);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SplineIK, UnknownData_WLGL, 0x0188);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SplineIK, BoneSpline, 0x01F8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SplineIK, OriginalSplineLength, 0x0258);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SplineIK, UnknownData_CY6K, 0x025C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SplineIK, CachedBoneReferences, 0x0260);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SplineIK, CachedBoneLengths, 0x0270);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SplineIK, CachedOffsetRotations, 0x0280);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_SplineIK, 0x0290);
		}

		// struct FAnimNode_SpringBone : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_SpringBone)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SpringBone, SpringBone, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SpringBone, bLimitDisplacement, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SpringBone, UnknownData_EDOW, 0x0109);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SpringBone, MaxDisplacement, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SpringBone, SpringStiffness, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SpringBone, SpringDamping, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SpringBone, ErrorResetThresh, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SpringBone, bNoZSpring, 0x011C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SpringBone, bTranslateX, 0x011D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SpringBone, bTranslateY, 0x011E);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SpringBone, bTranslateZ, 0x011F);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SpringBone, bRotateX, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SpringBone, bRotateY, 0x0121);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SpringBone, bRotateZ, 0x0122);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_SpringBone, UnknownData_GO7J, 0x0123);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_SpringBone, 0x0158);
		}

		// struct FAnimNode_StateResult : public FAnimNode_Root
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_StateResult)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_StateResult, 0x0040);
		}

		// struct FRotationLimit
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__RotationLimit)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRotationLimit, LimitMin, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRotationLimit, LimitMax, 0x000C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRotationLimit, 0x0018);
		}

		// struct FAnimNode_Trail : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_Trail)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Trail, TrailBone, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Trail, ChainLength, 0x0108);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Trail, ChainBoneAxis, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Trail, UnknownData_32ZR, 0x010E);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Trail, UnwindingSize, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Trail, RelaxationSpeedScale, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Trail, TrailRelaxationSpeed, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Trail, RelaxationSpeedScaleInputProcessor, 0x0190);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Trail, RotationLimits, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Trail, RotationOffsets, 0x01D0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Trail, PlanarLimits, 0x01E0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Trail, StretchLimit, 0x01F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Trail, FakeVelocity, 0x01F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Trail, BaseJoint, 0x0200);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Trail, LastBoneRotationAnimAlphaBlend, 0x0218);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_Trail, UnknownData_49ZS, 0x021C);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_Trail, 0x0280);
		}

		// struct FReferenceBoneFrame
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__ReferenceBoneFrame)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceBoneFrame, Bone, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FReferenceBoneFrame, Axis, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FReferenceBoneFrame, 0x0028);
		}

		// struct FAnimNode_TwistCorrectiveNode : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_TwistCorrectiveNode)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwistCorrectiveNode, BaseFrame, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwistCorrectiveNode, TwistFrame, 0x0118);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwistCorrectiveNode, TwistPlaneNormalAxis, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwistCorrectiveNode, RangeMax, 0x0150);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwistCorrectiveNode, RemappedMin, 0x0154);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwistCorrectiveNode, RemappedMax, 0x0158);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwistCorrectiveNode, UnknownData_Y8H9, 0x015C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwistCorrectiveNode, Curve, 0x0160);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwistCorrectiveNode, UnknownData_KJES, 0x0170);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_TwistCorrectiveNode, 0x0178);
		}

		// struct FAnimNode_TwoBoneIK : public FAnimNode_SkeletalControlBase
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_TwoBoneIK)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoBoneIK, IKBone, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoBoneIK, UnknownData_K49A, 0x0109);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoBoneIK, StartStretchRatio, 0x010C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoBoneIK, MaxStretchScale, 0x0110);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoBoneIK, StretchLimits, 0x0114);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoBoneIK, UnknownData_IM2A, 0x011D);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoBoneIK, EffectorLocationSpace, 0x0120);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoBoneIK, UnknownData_2UV4, 0x0121);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoBoneIK, EffectorSpaceBoneName, 0x0128);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoBoneIK, EffectorLocation, 0x0130);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoBoneIK, UnknownData_C53N, 0x013C);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoBoneIK, EffectorTarget, 0x0140);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoBoneIK, JointTargetLocationSpace, 0x01A0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoBoneIK, UnknownData_TWVG, 0x01A1);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoBoneIK, JointTargetLocation, 0x01A4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoBoneIK, JointTargetSpaceBoneName, 0x01B0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoBoneIK, UnknownData_YPUA, 0x01B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoBoneIK, JointTarget, 0x01C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoBoneIK, bAllowTwist, 0x0220);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoBoneIK, UnknownData_VFKC, 0x0221);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoBoneIK, TwistAxis, 0x0224);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoBoneIK, bNoTwist, 0x0234);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoBoneIK, UnknownData_P27R, 0x0235);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_TwoBoneIK, 0x0240);
		}

		// struct FAnimNode_TwoWayBlend : public FAnimNode_Base
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimNode_TwoWayBlend)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoWayBlend, A, 0x0030);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoWayBlend, B, 0x0040);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoWayBlend, AlphaInputType, 0x0050);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoWayBlend, UnknownData_P09S, 0x0051);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoWayBlend, Alpha, 0x0054);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoWayBlend, AlphaScaleBias, 0x0058);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoWayBlend, bAlphaBoolEnabled, 0x0060);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoWayBlend, UnknownData_TAX5, 0x0061);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoWayBlend, AlphaBoolBlend, 0x0068);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoWayBlend, AlphaCurveName, 0x00B8);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoWayBlend, AlphaScaleBiasClamp, 0x00C0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoWayBlend, InternalBlendAlpha, 0x00F0);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoWayBlend, bAIsRelevant, 0x00F4);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoWayBlend, bBIsRelevant, 0x00F5);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoWayBlend, bResetChildOnActivation, 0x00F6);
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimNode_TwoWayBlend, UnknownData_W4V4, 0x00F7);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimNode_TwoWayBlend, 0x00F8);
		}

		// struct FAnimSequencerInstanceProxy : public FAnimInstanceProxy
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__AnimSequencerInstanceProxy)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FAnimSequencerInstanceProxy, UnknownData_ND89, 0x0590);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FAnimSequencerInstanceProxy, 0x07B0);
		}

		// struct FRBFEntry
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__RBFEntry)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRBFEntry, Values, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRBFEntry, 0x0010);
		}

		// struct FRBFTarget : public FRBFEntry
		TEST_METHOD(ScriptStruct__AnimGraphRuntime__RBFTarget)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FRBFTarget, ScaleFactor, 0x0010);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRBFTarget, bApplyCustomCurve, 0x0014);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRBFTarget, UnknownData_0QYH, 0x0015);
			CHEAT_GEAR_CHECK_OFFSET(CG::FRBFTarget, CustomCurve, 0x0018);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FRBFTarget, 0x0088);
		}

		// struct FElementID
		TEST_METHOD(ScriptStruct__MeshDescription__ElementID)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FElementID, IDValue, 0x0000);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FElementID, 0x0004);
		}

		// struct FPolygonGroupID : public FElementID
		TEST_METHOD(ScriptStruct__MeshDescription__PolygonGroupID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPolygonGroupID, 0x0004);
		}

		// struct FPolygonID : public FElementID
		TEST_METHOD(ScriptStruct__MeshDescription__PolygonID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FPolygonID, 0x0004);
		}

		// struct FVertexID : public FElementID
		TEST_METHOD(ScriptStruct__MeshDescription__VertexID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVertexID, 0x0004);
		}

		// struct FEdgeID : public FElementID
		TEST_METHOD(ScriptStruct__MeshDescription__EdgeID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FEdgeID, 0x0004);
		}

		// struct FVertexInstanceID : public FElementID
		TEST_METHOD(ScriptStruct__MeshDescription__VertexInstanceID)
		{
			// Members

			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FVertexInstanceID, 0x0004);
		}

		// struct FMeshTriangle
		TEST_METHOD(ScriptStruct__MeshDescription__MeshTriangle)
		{
			// Members
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshTriangle, VertexInstanceID0, 0x0000);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshTriangle, VertexInstanceID1, 0x0004);
			CHEAT_GEAR_CHECK_OFFSET(CG::FMeshTriangle, VertexInstanceID2, 0x0008);
			// Size
			CHEAT_GEAR_CHECK_SIZE(CG::FMeshTriangle, 0x000C);
		}
	};
}
